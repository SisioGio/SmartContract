{
	"id": "63ef2de90ff5e0ef44ae98f03a7286f6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TokenPreSale is ERC20, Ownable {\r\n    bool public presaleIsActive;\r\n    uint256 public preSaleStartTime;\r\n    uint256 public preSaleEndTime;\r\n    uint256 public initialPrice;\r\n    uint256 public regularSalePrice;\r\n    uint256 public weeklyIncreaseRate;\r\n    uint256 public tokensSold;\r\n    uint256 public preSaleWeeksInWeeks;\r\n    uint256 public stakingRewardRate;\r\n    mapping(address => uint256) public stakedAmount;\r\n    mapping(address => uint256) public stakingTimestamp;\r\n    mapping(address => bool) public whitelist;\r\n    mapping(address => address) public referrals;\r\n    mapping(address => uint256) public referralCounts;\r\n    mapping(address => uint256) public balances;\r\n\r\n    event UserWhitelisted(address indexed user, address indexed referral);\r\n    event ReferralRewardMinted(address indexed referrer, uint256 rewardAmount);\r\n\r\n\r\n    event TokensStaked(address indexed user, uint256 amount);\r\n    event TokensUnstaked(address indexed user, uint256 amount, uint256 reward);\r\n    event TokensPurchased(address indexed buyer, uint256 amount, uint256 cost);\r\n    event PreSaleStarted(uint256 startTime, uint256 endTime);\r\n    event PreSaleEnded(uint256 endTime);\r\n\r\n    \r\n    constructor(address initialOwner, uint256 totalSupply, uint256 _initialPrice, uint256 _weeklyIncreaseRate, uint256 _regularSalePrice, uint256 _stakingRewardRate) \r\n        ERC20(\"NatureToken\", \"NTR\") \r\n        Ownable(initialOwner) \r\n    {\r\n        _mint(address(this), totalSupply * 10 ** decimals());\r\n        initialPrice = _initialPrice;\r\n        weeklyIncreaseRate = _weeklyIncreaseRate;\r\n        regularSalePrice = _regularSalePrice;\r\n        stakingRewardRate = _stakingRewardRate;\r\n        presaleIsActive = false;\r\n    }\r\n    \r\n\r\n     function signUpForWhitelist(address referral) external {\r\n        require(!whitelist[msg.sender], \"Already whitelisted\");\r\n        require(msg.sender != referral, \"Cannot refer yourself\");\r\n        \r\n        whitelist[msg.sender] = true;\r\n        \r\n        if (referral != address(0) && whitelist[referral]) {\r\n            referrals[msg.sender] = referral;\r\n            referralCounts[referral] += 1;\r\n        }\r\n        \r\n        emit UserWhitelisted(msg.sender, referral);\r\n    }\r\n    \r\n    function calculateReferralReward(address referrer) public view returns (uint256) {\r\n        return referralCounts[referrer] * 500 * 10 ** decimals();\r\n    }\r\n\r\n    function calculateWeeksElapsed(uint256 startTime, uint256 endTime) public pure returns (uint256) {\r\n        require(endTime >= startTime, \"End time must be after start time\");\r\n        uint256 weeksElapsed = (endTime - startTime) / 604800; // 604800 seconds in a week\r\n        return weeksElapsed;\r\n    }\r\n\r\n\r\n    function mintReferralReward() external {\r\n            require(presaleIsActive==true,\"Presale not started yet\");\r\n            uint256 rewardAmount = calculateReferralReward(msg.sender);\r\n            require(rewardAmount > 0, \"No rewards available\");\r\n            _mint(msg.sender, rewardAmount);\r\n            referralCounts[msg.sender] = 0;\r\n            emit ReferralRewardMinted(msg.sender, rewardAmount);\r\n        }\r\n\r\n    /**\r\n     * @notice Start the pre-sale\r\n     * @param _durationWeeks Duration of the pre-sale in weeks\r\n     */\r\n    function startPreSale(uint256 _startTime, uint256 _durationWeeks) external onlyOwner {\r\n        // require(_startTime >= block.timestamp, \"Start time must be in the future\");\r\n        preSaleStartTime = _startTime;\r\n        preSaleEndTime = preSaleStartTime + (_durationWeeks * 1 weeks);\r\n        preSaleWeeksInWeeks = _durationWeeks;\r\n        presaleIsActive = true;\r\n        emit PreSaleStarted(preSaleStartTime, preSaleEndTime);\r\n    } \r\n\r\n    function calculatePriceIncrease() public view returns (uint256){\r\n        uint256 weeksElapsed =calculateWeeksElapsed(preSaleStartTime, block.timestamp);\r\n        uint256 priceIncrease = ((regularSalePrice - initialPrice) * weeksElapsed) / preSaleWeeksInWeeks;\r\n        return priceIncrease;\r\n    }\r\n\r\n\r\n    \r\n    function calculatePrice() public view returns (uint256) {\r\n        require(presaleIsActive,\"Pre-sale not started yet\");\r\n        if ( block.timestamp > preSaleEndTime) {\r\n            return regularSalePrice;\r\n        }\r\n\r\n        uint256 priceIncrease = calculatePriceIncrease();\r\n        uint256 currentPrice = initialPrice+priceIncrease;\r\n        return currentPrice;\r\n    }\r\n\r\n    /**\r\n * @notice Buy tokens during the presale or regular sale.\r\n */\r\nfunction buyTokens() external payable {\r\n    require(presaleIsActive, \"Sale not active.\");\r\n    require(msg.value > 0, \"Must send ETH to buy tokens.\");\r\n\r\n    uint256 currentPrice = calculatePrice(); // Call the calculatePrice function\r\n\r\n    uint256 tokensToBuy = (msg.value * 10 ** uint256(decimals())) / currentPrice;\r\n    require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\");\r\n    balances[msg.sender] += tokensToBuy;\r\n    _transfer(address(this), msg.sender, tokensToBuy);\r\n    tokensSold += tokensToBuy;\r\n\r\n    emit Transfer(address(this), msg.sender, tokensToBuy); // Emit transfer event\r\n}\r\n\r\nfunction getWalletBalance() public view returns (uint256){\r\n    return balances[msg.sender];\r\n\r\n}\r\n\r\n\r\n    function stakeTokens(uint256 amount) external {\r\n        require(amount > 0, \"Amount must be greater than zero.\");\r\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\");\r\n\r\n        _transfer(msg.sender, address(this), amount);\r\n        stakedAmount[msg.sender] += amount;\r\n        stakingTimestamp[msg.sender] = block.timestamp;\r\n        emit TokensStaked(msg.sender, amount);\r\n    }\r\n\r\n    function unstakeTokens() external {\r\n        uint256 amount = stakedAmount[msg.sender];\r\n        require(amount > 0, \"No tokens staked.\");\r\n        require(block.timestamp >= stakingTimestamp[msg.sender] + 4 weeks, \"Unstake only after 4 weeks.\");\r\n        \r\n        uint256 reward = calculateStakingReward(msg.sender);\r\n        stakedAmount[msg.sender] = 0;\r\n        stakingTimestamp[msg.sender] = 0;\r\n\r\n        _transfer(address(this), msg.sender, amount + reward);\r\n        emit TokensUnstaked(msg.sender, amount, reward);\r\n    }\r\n\r\n    function calculateStakingReward(address user) public view returns (uint256) {\r\n        uint256 weeksStaked = (block.timestamp - stakingTimestamp[user]) / 1 weeks;\r\n        return (stakedAmount[user] * stakingRewardRate * weeksStaked) / 100;\r\n    }\r\n\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SimpleToken.sol": {
				"TokenPreSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_initialPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weeklyIncreaseRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_regularSalePrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakingRewardRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "PreSaleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "PreSaleStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "ReferralRewardMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "TokensUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referral",
									"type": "address"
								}
							],
							"name": "UserWhitelisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculatePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculatePriceIncrease",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "calculateReferralReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateStakingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "calculateWeeksElapsed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWalletBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintReferralReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleWeeksInWeeks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleIsActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referralCounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referrals",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "regularSalePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referral",
									"type": "address"
								}
							],
							"name": "signUpForWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_durationWeeks",
									"type": "uint256"
								}
							],
							"name": "startPreSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weeklyIncreaseRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"startPreSale(uint256,uint256)": {
								"params": {
									"_durationWeeks": "Duration of the pre-sale in weeks"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleToken.sol\":174:6582  contract TokenPreSale is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleToken.sol\":1371:1900  constructor(address initialOwner, uint256 totalSupply, uint256 _initialPrice, uint256 _weeklyIncreaseRate, uint256 _regularSalePrice, uint256 _stakingRewardRate) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SimpleToken.sol\":1589:1601  initialOwner */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x4e6174757265546f6b656e000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4e54520000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/SimpleToken.sol\":1620:1672  _mint(address(this), totalSupply * 10 ** decimals()) */\n  tag_18\n    /* \"contracts/SimpleToken.sol\":1634:1638  this */\n  address\n    /* \"contracts/SimpleToken.sol\":1661:1671  decimals() */\n  tag_19\n    /* \"contracts/SimpleToken.sol\":1661:1669  decimals */\n  shl(0x20, tag_20)\n    /* \"contracts/SimpleToken.sol\":1661:1671  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/SimpleToken.sol\":1655:1657  10 */\n  0x0a\n    /* \"contracts/SimpleToken.sol\":1655:1671  10 ** decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/SimpleToken.sol\":1641:1652  totalSupply */\n  dup8\n    /* \"contracts/SimpleToken.sol\":1641:1671  totalSupply * 10 ** decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/SimpleToken.sol\":1620:1625  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/SimpleToken.sol\":1620:1672  _mint(address(this), totalSupply * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/SimpleToken.sol\":1698:1711  _initialPrice */\n  dup4\n    /* \"contracts/SimpleToken.sol\":1683:1695  initialPrice */\n  0x08\n    /* \"contracts/SimpleToken.sol\":1683:1711  initialPrice = _initialPrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleToken.sol\":1743:1762  _weeklyIncreaseRate */\n  dup3\n    /* \"contracts/SimpleToken.sol\":1722:1740  weeklyIncreaseRate */\n  0x0a\n    /* \"contracts/SimpleToken.sol\":1722:1762  weeklyIncreaseRate = _weeklyIncreaseRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleToken.sol\":1792:1809  _regularSalePrice */\n  dup2\n    /* \"contracts/SimpleToken.sol\":1773:1789  regularSalePrice */\n  0x09\n    /* \"contracts/SimpleToken.sol\":1773:1809  regularSalePrice = _regularSalePrice */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleToken.sol\":1840:1858  _stakingRewardRate */\n  dup1\n    /* \"contracts/SimpleToken.sol\":1820:1837  stakingRewardRate */\n  0x0d\n    /* \"contracts/SimpleToken.sol\":1820:1858  stakingRewardRate = _stakingRewardRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleToken.sol\":1887:1892  false */\n  0x00\n    /* \"contracts/SimpleToken.sol\":1869:1884  presaleIsActive */\n  0x05\n  0x14\n    /* \"contracts/SimpleToken.sol\":1869:1892  presaleIsActive = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SimpleToken.sol\":1371:1900  constructor(address initialOwner, uint256 totalSupply, uint256 _initialPrice, uint256 _weeklyIncreaseRate, uint256 _regularSalePrice, uint256 _stakingRewardRate) ... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/SimpleToken.sol\":174:6582  contract TokenPreSale is ERC20, Ownable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_33)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_38)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_47:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_49:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_50:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_88\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_49\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_51:\n    /* \"#utility.yul\":641:665   */\n  tag_90\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_50\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_91:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_52:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_93\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_51\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_53:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_54:\n    /* \"#utility.yul\":1001:1025   */\n  tag_96\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_53\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_97:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_55:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_99\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_54\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:2339   */\ntag_3:\n    /* \"#utility.yul\":1320:1326   */\n  0x00\n    /* \"#utility.yul\":1328:1334   */\n  dup1\n    /* \"#utility.yul\":1336:1342   */\n  0x00\n    /* \"#utility.yul\":1344:1350   */\n  dup1\n    /* \"#utility.yul\":1352:1358   */\n  0x00\n    /* \"#utility.yul\":1360:1366   */\n  dup1\n    /* \"#utility.yul\":1409:1412   */\n  0xc0\n    /* \"#utility.yul\":1397:1406   */\n  dup8\n    /* \"#utility.yul\":1388:1395   */\n  dup10\n    /* \"#utility.yul\":1384:1407   */\n  sub\n    /* \"#utility.yul\":1380:1413   */\n  slt\n    /* \"#utility.yul\":1377:1497   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":1416:1495   */\n  tag_102\n  tag_47\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":1377:1497   */\ntag_101:\n    /* \"#utility.yul\":1536:1537   */\n  0x00\n    /* \"#utility.yul\":1561:1625   */\n  tag_103\n    /* \"#utility.yul\":1617:1624   */\n  dup10\n    /* \"#utility.yul\":1608:1614   */\n  dup3\n    /* \"#utility.yul\":1597:1606   */\n  dup11\n    /* \"#utility.yul\":1593:1615   */\n  add\n    /* \"#utility.yul\":1561:1625   */\n  tag_52\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1551:1625   */\n  swap7\n  pop\n    /* \"#utility.yul\":1507:1635   */\n  pop\n    /* \"#utility.yul\":1674:1676   */\n  0x20\n    /* \"#utility.yul\":1700:1764   */\n  tag_104\n    /* \"#utility.yul\":1756:1763   */\n  dup10\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1736:1745   */\n  dup11\n    /* \"#utility.yul\":1732:1754   */\n  add\n    /* \"#utility.yul\":1700:1764   */\n  tag_55\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1690:1764   */\n  swap6\n  pop\n    /* \"#utility.yul\":1645:1774   */\n  pop\n    /* \"#utility.yul\":1813:1815   */\n  0x40\n    /* \"#utility.yul\":1839:1903   */\n  tag_105\n    /* \"#utility.yul\":1895:1902   */\n  dup10\n    /* \"#utility.yul\":1886:1892   */\n  dup3\n    /* \"#utility.yul\":1875:1884   */\n  dup11\n    /* \"#utility.yul\":1871:1893   */\n  add\n    /* \"#utility.yul\":1839:1903   */\n  tag_55\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1829:1903   */\n  swap5\n  pop\n    /* \"#utility.yul\":1784:1913   */\n  pop\n    /* \"#utility.yul\":1952:1954   */\n  0x60\n    /* \"#utility.yul\":1978:2042   */\n  tag_106\n    /* \"#utility.yul\":2034:2041   */\n  dup10\n    /* \"#utility.yul\":2025:2031   */\n  dup3\n    /* \"#utility.yul\":2014:2023   */\n  dup11\n    /* \"#utility.yul\":2010:2032   */\n  add\n    /* \"#utility.yul\":1978:2042   */\n  tag_55\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1968:2042   */\n  swap4\n  pop\n    /* \"#utility.yul\":1923:2052   */\n  pop\n    /* \"#utility.yul\":2091:2094   */\n  0x80\n    /* \"#utility.yul\":2118:2182   */\n  tag_107\n    /* \"#utility.yul\":2174:2181   */\n  dup10\n    /* \"#utility.yul\":2165:2171   */\n  dup3\n    /* \"#utility.yul\":2154:2163   */\n  dup11\n    /* \"#utility.yul\":2150:2172   */\n  add\n    /* \"#utility.yul\":2118:2182   */\n  tag_55\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":2108:2182   */\n  swap3\n  pop\n    /* \"#utility.yul\":2062:2192   */\n  pop\n    /* \"#utility.yul\":2231:2234   */\n  0xa0\n    /* \"#utility.yul\":2258:2322   */\n  tag_108\n    /* \"#utility.yul\":2314:2321   */\n  dup10\n    /* \"#utility.yul\":2305:2311   */\n  dup3\n    /* \"#utility.yul\":2294:2303   */\n  dup11\n    /* \"#utility.yul\":2290:2312   */\n  add\n    /* \"#utility.yul\":2258:2322   */\n  tag_55\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2248:2322   */\n  swap2\n  pop\n    /* \"#utility.yul\":2202:2332   */\n  pop\n    /* \"#utility.yul\":1205:2339   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  jump\t// out\n    /* \"#utility.yul\":2345:2444   */\ntag_56:\n    /* \"#utility.yul\":2397:2403   */\n  0x00\n    /* \"#utility.yul\":2431:2436   */\n  dup2\n    /* \"#utility.yul\":2425:2437   */\n  mload\n    /* \"#utility.yul\":2415:2437   */\n  swap1\n  pop\n    /* \"#utility.yul\":2345:2444   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2450:2630   */\ntag_57:\n    /* \"#utility.yul\":2498:2575   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2495:2496   */\n  0x00\n    /* \"#utility.yul\":2488:2576   */\n  mstore\n    /* \"#utility.yul\":2595:2599   */\n  0x41\n    /* \"#utility.yul\":2592:2593   */\n  0x04\n    /* \"#utility.yul\":2585:2600   */\n  mstore\n    /* \"#utility.yul\":2619:2623   */\n  0x24\n    /* \"#utility.yul\":2616:2617   */\n  0x00\n    /* \"#utility.yul\":2609:2624   */\n  revert\n    /* \"#utility.yul\":2636:2816   */\ntag_58:\n    /* \"#utility.yul\":2684:2761   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2681:2682   */\n  0x00\n    /* \"#utility.yul\":2674:2762   */\n  mstore\n    /* \"#utility.yul\":2781:2785   */\n  0x22\n    /* \"#utility.yul\":2778:2779   */\n  0x04\n    /* \"#utility.yul\":2771:2786   */\n  mstore\n    /* \"#utility.yul\":2805:2809   */\n  0x24\n    /* \"#utility.yul\":2802:2803   */\n  0x00\n    /* \"#utility.yul\":2795:2810   */\n  revert\n    /* \"#utility.yul\":2822:3142   */\ntag_59:\n    /* \"#utility.yul\":2866:2872   */\n  0x00\n    /* \"#utility.yul\":2903:2904   */\n  0x02\n    /* \"#utility.yul\":2897:2901   */\n  dup3\n    /* \"#utility.yul\":2893:2905   */\n  div\n    /* \"#utility.yul\":2883:2905   */\n  swap1\n  pop\n    /* \"#utility.yul\":2950:2951   */\n  0x01\n    /* \"#utility.yul\":2944:2948   */\n  dup3\n    /* \"#utility.yul\":2940:2952   */\n  and\n    /* \"#utility.yul\":2971:2989   */\n  dup1\n    /* \"#utility.yul\":2961:3042   */\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3027:3031   */\n  0x7f\n    /* \"#utility.yul\":3019:3025   */\n  dup3\n    /* \"#utility.yul\":3015:3032   */\n  and\n    /* \"#utility.yul\":3005:3032   */\n  swap2\n  pop\n    /* \"#utility.yul\":2961:3042   */\ntag_113:\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3081:3087   */\n  dup3\n    /* \"#utility.yul\":3078:3092   */\n  lt\n    /* \"#utility.yul\":3058:3076   */\n  dup2\n    /* \"#utility.yul\":3055:3093   */\n  sub\n    /* \"#utility.yul\":3052:3136   */\n  tag_114\n  jumpi\n    /* \"#utility.yul\":3108:3126   */\n  tag_115\n  tag_58\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3052:3136   */\ntag_114:\n    /* \"#utility.yul\":2873:3142   */\n  pop\n    /* \"#utility.yul\":2822:3142   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3148:3289   */\ntag_60:\n    /* \"#utility.yul\":3197:3201   */\n  0x00\n    /* \"#utility.yul\":3220:3223   */\n  dup2\n    /* \"#utility.yul\":3212:3223   */\n  swap1\n  pop\n    /* \"#utility.yul\":3243:3246   */\n  dup2\n    /* \"#utility.yul\":3240:3241   */\n  0x00\n    /* \"#utility.yul\":3233:3247   */\n  mstore\n    /* \"#utility.yul\":3277:3281   */\n  0x20\n    /* \"#utility.yul\":3274:3275   */\n  0x00\n    /* \"#utility.yul\":3264:3282   */\n  keccak256\n    /* \"#utility.yul\":3256:3282   */\n  swap1\n  pop\n    /* \"#utility.yul\":3148:3289   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3295:3388   */\ntag_61:\n    /* \"#utility.yul\":3332:3338   */\n  0x00\n    /* \"#utility.yul\":3379:3381   */\n  0x20\n    /* \"#utility.yul\":3374:3376   */\n  0x1f\n    /* \"#utility.yul\":3367:3372   */\n  dup4\n    /* \"#utility.yul\":3363:3377   */\n  add\n    /* \"#utility.yul\":3359:3382   */\n  div\n    /* \"#utility.yul\":3349:3382   */\n  swap1\n  pop\n    /* \"#utility.yul\":3295:3388   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3394:3501   */\ntag_62:\n    /* \"#utility.yul\":3438:3446   */\n  0x00\n    /* \"#utility.yul\":3488:3493   */\n  dup3\n    /* \"#utility.yul\":3482:3486   */\n  dup3\n    /* \"#utility.yul\":3478:3494   */\n  shl\n    /* \"#utility.yul\":3457:3494   */\n  swap1\n  pop\n    /* \"#utility.yul\":3394:3501   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3507:3900   */\ntag_63:\n    /* \"#utility.yul\":3576:3582   */\n  0x00\n    /* \"#utility.yul\":3626:3627   */\n  0x08\n    /* \"#utility.yul\":3614:3624   */\n  dup4\n    /* \"#utility.yul\":3610:3628   */\n  mul\n    /* \"#utility.yul\":3649:3746   */\n  tag_120\n    /* \"#utility.yul\":3679:3745   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3668:3677   */\n  dup3\n    /* \"#utility.yul\":3649:3746   */\n  tag_62\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3767:3806   */\n  tag_121\n    /* \"#utility.yul\":3797:3805   */\n  dup7\n    /* \"#utility.yul\":3786:3795   */\n  dup4\n    /* \"#utility.yul\":3767:3806   */\n  tag_62\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3755:3806   */\n  swap6\n  pop\n    /* \"#utility.yul\":3839:3843   */\n  dup1\n    /* \"#utility.yul\":3835:3844   */\n  not\n    /* \"#utility.yul\":3828:3833   */\n  dup5\n    /* \"#utility.yul\":3824:3845   */\n  and\n    /* \"#utility.yul\":3815:3845   */\n  swap4\n  pop\n    /* \"#utility.yul\":3888:3892   */\n  dup1\n    /* \"#utility.yul\":3878:3886   */\n  dup7\n    /* \"#utility.yul\":3874:3893   */\n  and\n    /* \"#utility.yul\":3867:3872   */\n  dup5\n    /* \"#utility.yul\":3864:3894   */\n  or\n    /* \"#utility.yul\":3854:3894   */\n  swap3\n  pop\n    /* \"#utility.yul\":3583:3900   */\n  pop\n  pop\n    /* \"#utility.yul\":3507:3900   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3906:3966   */\ntag_64:\n    /* \"#utility.yul\":3934:3937   */\n  0x00\n    /* \"#utility.yul\":3955:3960   */\n  dup2\n    /* \"#utility.yul\":3948:3960   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:3966   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3972:4114   */\ntag_65:\n    /* \"#utility.yul\":4022:4031   */\n  0x00\n    /* \"#utility.yul\":4055:4108   */\n  tag_124\n    /* \"#utility.yul\":4073:4107   */\n  tag_125\n    /* \"#utility.yul\":4082:4106   */\n  tag_126\n    /* \"#utility.yul\":4100:4105   */\n  dup5\n    /* \"#utility.yul\":4082:4106   */\n  tag_53\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4073:4107   */\n  tag_64\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4055:4108   */\n  tag_53\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4042:4108   */\n  swap1\n  pop\n    /* \"#utility.yul\":3972:4114   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4120:4195   */\ntag_66:\n    /* \"#utility.yul\":4163:4166   */\n  0x00\n    /* \"#utility.yul\":4184:4189   */\n  dup2\n    /* \"#utility.yul\":4177:4189   */\n  swap1\n  pop\n    /* \"#utility.yul\":4120:4195   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4201:4470   */\ntag_67:\n    /* \"#utility.yul\":4311:4350   */\n  tag_129\n    /* \"#utility.yul\":4342:4349   */\n  dup4\n    /* \"#utility.yul\":4311:4350   */\n  tag_65\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4372:4463   */\n  tag_130\n    /* \"#utility.yul\":4421:4462   */\n  tag_131\n    /* \"#utility.yul\":4445:4461   */\n  dup3\n    /* \"#utility.yul\":4421:4462   */\n  tag_66\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4413:4419   */\n  dup5\n    /* \"#utility.yul\":4406:4410   */\n  dup5\n    /* \"#utility.yul\":4400:4411   */\n  sload\n    /* \"#utility.yul\":4372:4463   */\n  tag_63\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4366:4370   */\n  dup3\n    /* \"#utility.yul\":4359:4464   */\n  sstore\n    /* \"#utility.yul\":4277:4470   */\n  pop\n    /* \"#utility.yul\":4201:4470   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4476:4549   */\ntag_68:\n    /* \"#utility.yul\":4521:4524   */\n  0x00\n    /* \"#utility.yul\":4476:4549   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":4555:4744   */\ntag_69:\n    /* \"#utility.yul\":4632:4664   */\n  tag_134\n  tag_68\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4673:4738   */\n  tag_135\n    /* \"#utility.yul\":4731:4737   */\n  dup2\n    /* \"#utility.yul\":4723:4729   */\n  dup5\n    /* \"#utility.yul\":4717:4721   */\n  dup5\n    /* \"#utility.yul\":4673:4738   */\n  tag_67\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4608:4744   */\n  pop\n    /* \"#utility.yul\":4555:4744   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4750:4936   */\ntag_70:\n    /* \"#utility.yul\":4810:4930   */\ntag_137:\n    /* \"#utility.yul\":4827:4830   */\n  dup2\n    /* \"#utility.yul\":4820:4825   */\n  dup2\n    /* \"#utility.yul\":4817:4831   */\n  lt\n    /* \"#utility.yul\":4810:4930   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":4881:4920   */\n  tag_140\n    /* \"#utility.yul\":4918:4919   */\n  0x00\n    /* \"#utility.yul\":4911:4916   */\n  dup3\n    /* \"#utility.yul\":4881:4920   */\n  tag_69\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4854:4855   */\n  0x01\n    /* \"#utility.yul\":4847:4852   */\n  dup2\n    /* \"#utility.yul\":4843:4856   */\n  add\n    /* \"#utility.yul\":4834:4856   */\n  swap1\n  pop\n    /* \"#utility.yul\":4810:4930   */\n  jump(tag_137)\ntag_139:\n    /* \"#utility.yul\":4750:4936   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4942:5485   */\ntag_71:\n    /* \"#utility.yul\":5043:5045   */\n  0x1f\n    /* \"#utility.yul\":5038:5041   */\n  dup3\n    /* \"#utility.yul\":5035:5046   */\n  gt\n    /* \"#utility.yul\":5032:5478   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":5077:5115   */\n  tag_143\n    /* \"#utility.yul\":5109:5114   */\n  dup2\n    /* \"#utility.yul\":5077:5115   */\n  tag_60\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5161:5190   */\n  tag_144\n    /* \"#utility.yul\":5179:5189   */\n  dup5\n    /* \"#utility.yul\":5161:5190   */\n  tag_61\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5151:5159   */\n  dup2\n    /* \"#utility.yul\":5147:5191   */\n  add\n    /* \"#utility.yul\":5344:5346   */\n  0x20\n    /* \"#utility.yul\":5332:5342   */\n  dup6\n    /* \"#utility.yul\":5329:5347   */\n  lt\n    /* \"#utility.yul\":5326:5375   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5365:5373   */\n  dup2\n    /* \"#utility.yul\":5350:5373   */\n  swap1\n  pop\n    /* \"#utility.yul\":5326:5375   */\ntag_145:\n    /* \"#utility.yul\":5388:5468   */\n  tag_146\n    /* \"#utility.yul\":5444:5466   */\n  tag_147\n    /* \"#utility.yul\":5462:5465   */\n  dup6\n    /* \"#utility.yul\":5444:5466   */\n  tag_61\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5434:5442   */\n  dup4\n    /* \"#utility.yul\":5430:5467   */\n  add\n    /* \"#utility.yul\":5417:5428   */\n  dup3\n    /* \"#utility.yul\":5388:5468   */\n  tag_70\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5047:5478   */\n  pop\n  pop\n    /* \"#utility.yul\":5032:5478   */\ntag_142:\n    /* \"#utility.yul\":4942:5485   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5491:5608   */\ntag_72:\n    /* \"#utility.yul\":5545:5553   */\n  0x00\n    /* \"#utility.yul\":5595:5600   */\n  dup3\n    /* \"#utility.yul\":5589:5593   */\n  dup3\n    /* \"#utility.yul\":5585:5601   */\n  shr\n    /* \"#utility.yul\":5564:5601   */\n  swap1\n  pop\n    /* \"#utility.yul\":5491:5608   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5614:5783   */\ntag_73:\n    /* \"#utility.yul\":5658:5664   */\n  0x00\n    /* \"#utility.yul\":5691:5742   */\n  tag_150\n    /* \"#utility.yul\":5739:5740   */\n  0x00\n    /* \"#utility.yul\":5735:5741   */\n  not\n    /* \"#utility.yul\":5727:5732   */\n  dup5\n    /* \"#utility.yul\":5724:5725   */\n  0x08\n    /* \"#utility.yul\":5720:5733   */\n  mul\n    /* \"#utility.yul\":5691:5742   */\n  tag_72\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":5687:5743   */\n  not\n    /* \"#utility.yul\":5772:5776   */\n  dup1\n    /* \"#utility.yul\":5766:5770   */\n  dup4\n    /* \"#utility.yul\":5762:5777   */\n  and\n    /* \"#utility.yul\":5752:5777   */\n  swap2\n  pop\n    /* \"#utility.yul\":5665:5783   */\n  pop\n    /* \"#utility.yul\":5614:5783   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5788:6083   */\ntag_74:\n    /* \"#utility.yul\":5864:5868   */\n  0x00\n    /* \"#utility.yul\":6010:6039   */\n  tag_152\n    /* \"#utility.yul\":6035:6038   */\n  dup4\n    /* \"#utility.yul\":6029:6033   */\n  dup4\n    /* \"#utility.yul\":6010:6039   */\n  tag_73\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6002:6039   */\n  swap2\n  pop\n    /* \"#utility.yul\":6072:6075   */\n  dup3\n    /* \"#utility.yul\":6069:6070   */\n  0x02\n    /* \"#utility.yul\":6065:6076   */\n  mul\n    /* \"#utility.yul\":6059:6063   */\n  dup3\n    /* \"#utility.yul\":6056:6077   */\n  or\n    /* \"#utility.yul\":6048:6077   */\n  swap1\n  pop\n    /* \"#utility.yul\":5788:6083   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6088:7483   */\ntag_9:\n    /* \"#utility.yul\":6205:6242   */\n  tag_154\n    /* \"#utility.yul\":6238:6241   */\n  dup3\n    /* \"#utility.yul\":6205:6242   */\n  tag_56\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6307:6325   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":6299:6305   */\n  dup2\n    /* \"#utility.yul\":6296:6326   */\n  gt\n    /* \"#utility.yul\":6293:6349   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6329:6347   */\n  tag_156\n  tag_57\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6293:6349   */\ntag_155:\n    /* \"#utility.yul\":6373:6411   */\n  tag_157\n    /* \"#utility.yul\":6405:6409   */\n  dup3\n    /* \"#utility.yul\":6399:6410   */\n  sload\n    /* \"#utility.yul\":6373:6411   */\n  tag_59\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":6458:6525   */\n  tag_158\n    /* \"#utility.yul\":6518:6524   */\n  dup3\n    /* \"#utility.yul\":6510:6516   */\n  dup3\n    /* \"#utility.yul\":6504:6508   */\n  dup6\n    /* \"#utility.yul\":6458:6525   */\n  tag_71\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6552:6553   */\n  0x00\n    /* \"#utility.yul\":6576:6580   */\n  0x20\n    /* \"#utility.yul\":6563:6580   */\n  swap1\n  pop\n    /* \"#utility.yul\":6608:6610   */\n  0x1f\n    /* \"#utility.yul\":6600:6606   */\n  dup4\n    /* \"#utility.yul\":6597:6611   */\n  gt\n    /* \"#utility.yul\":6625:6626   */\n  0x01\n    /* \"#utility.yul\":6620:7238   */\n  dup2\n  eq\n  tag_160\n  jumpi\n    /* \"#utility.yul\":7282:7283   */\n  0x00\n    /* \"#utility.yul\":7299:7305   */\n  dup5\n    /* \"#utility.yul\":7296:7373   */\n  iszero\n  tag_161\n  jumpi\n    /* \"#utility.yul\":7348:7357   */\n  dup3\n    /* \"#utility.yul\":7343:7346   */\n  dup8\n    /* \"#utility.yul\":7339:7358   */\n  add\n    /* \"#utility.yul\":7333:7359   */\n  mload\n    /* \"#utility.yul\":7324:7359   */\n  swap1\n  pop\n    /* \"#utility.yul\":7296:7373   */\ntag_161:\n    /* \"#utility.yul\":7399:7466   */\n  tag_162\n    /* \"#utility.yul\":7459:7465   */\n  dup6\n    /* \"#utility.yul\":7452:7457   */\n  dup3\n    /* \"#utility.yul\":7399:7466   */\n  tag_74\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7393:7397   */\n  dup7\n    /* \"#utility.yul\":7386:7467   */\n  sstore\n    /* \"#utility.yul\":7255:7477   */\n  pop\n    /* \"#utility.yul\":6590:7477   */\n  jump(tag_159)\n    /* \"#utility.yul\":6620:7238   */\ntag_160:\n    /* \"#utility.yul\":6672:6676   */\n  0x1f\n    /* \"#utility.yul\":6668:6677   */\n  not\n    /* \"#utility.yul\":6660:6666   */\n  dup5\n    /* \"#utility.yul\":6656:6678   */\n  and\n    /* \"#utility.yul\":6706:6743   */\n  tag_163\n    /* \"#utility.yul\":6738:6742   */\n  dup7\n    /* \"#utility.yul\":6706:6743   */\n  tag_60\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6779:6987   */\ntag_164:\n    /* \"#utility.yul\":6793:6800   */\n  dup3\n    /* \"#utility.yul\":6790:6791   */\n  dup2\n    /* \"#utility.yul\":6787:6801   */\n  lt\n    /* \"#utility.yul\":6779:6987   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":6872:6881   */\n  dup5\n    /* \"#utility.yul\":6867:6870   */\n  dup10\n    /* \"#utility.yul\":6863:6882   */\n  add\n    /* \"#utility.yul\":6857:6883   */\n  mload\n    /* \"#utility.yul\":6849:6855   */\n  dup3\n    /* \"#utility.yul\":6842:6884   */\n  sstore\n    /* \"#utility.yul\":6923:6924   */\n  0x01\n    /* \"#utility.yul\":6915:6921   */\n  dup3\n    /* \"#utility.yul\":6911:6925   */\n  add\n    /* \"#utility.yul\":6901:6925   */\n  swap2\n  pop\n    /* \"#utility.yul\":6970:6972   */\n  0x20\n    /* \"#utility.yul\":6959:6968   */\n  dup6\n    /* \"#utility.yul\":6955:6973   */\n  add\n    /* \"#utility.yul\":6942:6973   */\n  swap5\n  pop\n    /* \"#utility.yul\":6816:6820   */\n  0x20\n    /* \"#utility.yul\":6813:6814   */\n  dup2\n    /* \"#utility.yul\":6809:6821   */\n  add\n    /* \"#utility.yul\":6804:6821   */\n  swap1\n  pop\n    /* \"#utility.yul\":6779:6987   */\n  jump(tag_164)\ntag_166:\n    /* \"#utility.yul\":7015:7021   */\n  dup7\n    /* \"#utility.yul\":7006:7013   */\n  dup4\n    /* \"#utility.yul\":7003:7022   */\n  lt\n    /* \"#utility.yul\":7000:7179   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7073:7082   */\n  dup5\n    /* \"#utility.yul\":7068:7071   */\n  dup10\n    /* \"#utility.yul\":7064:7083   */\n  add\n    /* \"#utility.yul\":7058:7084   */\n  mload\n    /* \"#utility.yul\":7116:7164   */\n  tag_168\n    /* \"#utility.yul\":7158:7162   */\n  0x1f\n    /* \"#utility.yul\":7150:7156   */\n  dup10\n    /* \"#utility.yul\":7146:7163   */\n  and\n    /* \"#utility.yul\":7135:7144   */\n  dup3\n    /* \"#utility.yul\":7116:7164   */\n  tag_73\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7108:7114   */\n  dup4\n    /* \"#utility.yul\":7101:7165   */\n  sstore\n    /* \"#utility.yul\":7023:7179   */\n  pop\n    /* \"#utility.yul\":7000:7179   */\ntag_167:\n    /* \"#utility.yul\":7225:7226   */\n  0x01\n    /* \"#utility.yul\":7221:7222   */\n  0x02\n    /* \"#utility.yul\":7213:7219   */\n  dup9\n    /* \"#utility.yul\":7209:7223   */\n  mul\n    /* \"#utility.yul\":7205:7227   */\n  add\n    /* \"#utility.yul\":7199:7203   */\n  dup9\n    /* \"#utility.yul\":7192:7228   */\n  sstore\n    /* \"#utility.yul\":6627:7238   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6590:7477   */\ntag_159:\n  pop\n    /* \"#utility.yul\":6180:7483   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":6088:7483   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7489:7607   */\ntag_75:\n    /* \"#utility.yul\":7576:7600   */\n  tag_170\n    /* \"#utility.yul\":7594:7599   */\n  dup2\n    /* \"#utility.yul\":7576:7600   */\n  tag_50\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7571:7574   */\n  dup3\n    /* \"#utility.yul\":7564:7601   */\n  mstore\n    /* \"#utility.yul\":7489:7607   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7613:7835   */\ntag_14:\n    /* \"#utility.yul\":7706:7710   */\n  0x00\n    /* \"#utility.yul\":7744:7746   */\n  0x20\n    /* \"#utility.yul\":7733:7742   */\n  dup3\n    /* \"#utility.yul\":7729:7747   */\n  add\n    /* \"#utility.yul\":7721:7747   */\n  swap1\n  pop\n    /* \"#utility.yul\":7757:7828   */\n  tag_172\n    /* \"#utility.yul\":7825:7826   */\n  0x00\n    /* \"#utility.yul\":7814:7823   */\n  dup4\n    /* \"#utility.yul\":7810:7827   */\n  add\n    /* \"#utility.yul\":7801:7807   */\n  dup5\n    /* \"#utility.yul\":7757:7828   */\n  tag_75\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7613:7835   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7841:8021   */\ntag_76:\n    /* \"#utility.yul\":7889:7966   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7886:7887   */\n  0x00\n    /* \"#utility.yul\":7879:7967   */\n  mstore\n    /* \"#utility.yul\":7986:7990   */\n  0x11\n    /* \"#utility.yul\":7983:7984   */\n  0x04\n    /* \"#utility.yul\":7976:7991   */\n  mstore\n    /* \"#utility.yul\":8010:8014   */\n  0x24\n    /* \"#utility.yul\":8007:8008   */\n  0x00\n    /* \"#utility.yul\":8000:8015   */\n  revert\n    /* \"#utility.yul\":8027:8129   */\ntag_77:\n    /* \"#utility.yul\":8069:8077   */\n  0x00\n    /* \"#utility.yul\":8116:8121   */\n  dup2\n    /* \"#utility.yul\":8113:8114   */\n  0x01\n    /* \"#utility.yul\":8109:8122   */\n  shr\n    /* \"#utility.yul\":8088:8122   */\n  swap1\n  pop\n    /* \"#utility.yul\":8027:8129   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8135:8983   */\ntag_78:\n    /* \"#utility.yul\":8196:8201   */\n  0x00\n    /* \"#utility.yul\":8203:8207   */\n  dup1\n    /* \"#utility.yul\":8227:8233   */\n  dup3\n    /* \"#utility.yul\":8218:8233   */\n  swap2\n  pop\n    /* \"#utility.yul\":8251:8256   */\n  dup4\n    /* \"#utility.yul\":8242:8256   */\n  swap1\n  pop\n    /* \"#utility.yul\":8265:8977   */\ntag_176:\n    /* \"#utility.yul\":8286:8287   */\n  0x01\n    /* \"#utility.yul\":8276:8284   */\n  dup6\n    /* \"#utility.yul\":8273:8288   */\n  gt\n    /* \"#utility.yul\":8265:8977   */\n  iszero\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8381:8385   */\n  dup1\n    /* \"#utility.yul\":8376:8379   */\n  dup7\n    /* \"#utility.yul\":8372:8386   */\n  div\n    /* \"#utility.yul\":8366:8370   */\n  dup2\n    /* \"#utility.yul\":8363:8387   */\n  gt\n    /* \"#utility.yul\":8360:8410   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8390:8408   */\n  tag_180\n  tag_76\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8360:8410   */\ntag_179:\n    /* \"#utility.yul\":8440:8441   */\n  0x01\n    /* \"#utility.yul\":8430:8438   */\n  dup6\n    /* \"#utility.yul\":8426:8442   */\n  and\n    /* \"#utility.yul\":8423:8874   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8855:8859   */\n  dup1\n    /* \"#utility.yul\":8848:8853   */\n  dup3\n    /* \"#utility.yul\":8844:8860   */\n  mul\n    /* \"#utility.yul\":8835:8860   */\n  swap2\n  pop\n    /* \"#utility.yul\":8423:8874   */\ntag_181:\n    /* \"#utility.yul\":8905:8909   */\n  dup1\n    /* \"#utility.yul\":8899:8903   */\n  dup2\n    /* \"#utility.yul\":8895:8910   */\n  mul\n    /* \"#utility.yul\":8887:8910   */\n  swap1\n  pop\n    /* \"#utility.yul\":8935:8967   */\n  tag_182\n    /* \"#utility.yul\":8958:8966   */\n  dup6\n    /* \"#utility.yul\":8935:8967   */\n  tag_77\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8923:8967   */\n  swap5\n  pop\n    /* \"#utility.yul\":8265:8977   */\n  jump(tag_176)\ntag_178:\n    /* \"#utility.yul\":8135:8983   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8989:10062   */\ntag_79:\n    /* \"#utility.yul\":9043:9048   */\n  0x00\n    /* \"#utility.yul\":9234:9242   */\n  dup3\n    /* \"#utility.yul\":9224:9264   */\n  tag_184\n  jumpi\n    /* \"#utility.yul\":9255:9256   */\n  0x01\n    /* \"#utility.yul\":9246:9256   */\n  swap1\n  pop\n    /* \"#utility.yul\":9257:9262   */\n  jump(tag_183)\n    /* \"#utility.yul\":9224:9264   */\ntag_184:\n    /* \"#utility.yul\":9283:9287   */\n  dup2\n    /* \"#utility.yul\":9273:9309   */\n  tag_185\n  jumpi\n    /* \"#utility.yul\":9300:9301   */\n  0x00\n    /* \"#utility.yul\":9291:9301   */\n  swap1\n  pop\n    /* \"#utility.yul\":9302:9307   */\n  jump(tag_183)\n    /* \"#utility.yul\":9273:9309   */\ntag_185:\n    /* \"#utility.yul\":9369:9373   */\n  dup2\n    /* \"#utility.yul\":9417:9418   */\n  0x01\n    /* \"#utility.yul\":9412:9439   */\n  dup2\n  eq\n  tag_187\n  jumpi\n    /* \"#utility.yul\":9453:9454   */\n  0x02\n    /* \"#utility.yul\":9448:9639   */\n  dup2\n  eq\n  tag_188\n  jumpi\n    /* \"#utility.yul\":9362:9639   */\n  jump(tag_186)\n    /* \"#utility.yul\":9412:9439   */\ntag_187:\n    /* \"#utility.yul\":9430:9431   */\n  0x01\n    /* \"#utility.yul\":9421:9431   */\n  swap2\n  pop\n    /* \"#utility.yul\":9432:9437   */\n  pop\n  jump(tag_183)\n    /* \"#utility.yul\":9448:9639   */\ntag_188:\n    /* \"#utility.yul\":9493:9496   */\n  0xff\n    /* \"#utility.yul\":9483:9491   */\n  dup5\n    /* \"#utility.yul\":9480:9497   */\n  gt\n    /* \"#utility.yul\":9477:9520   */\n  iszero\n  tag_189\n  jumpi\n    /* \"#utility.yul\":9500:9518   */\n  tag_190\n  tag_76\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9477:9520   */\ntag_189:\n    /* \"#utility.yul\":9549:9557   */\n  dup4\n    /* \"#utility.yul\":9546:9547   */\n  0x02\n    /* \"#utility.yul\":9542:9558   */\n  exp\n    /* \"#utility.yul\":9533:9558   */\n  swap2\n  pop\n    /* \"#utility.yul\":9584:9587   */\n  dup5\n    /* \"#utility.yul\":9577:9582   */\n  dup3\n    /* \"#utility.yul\":9574:9588   */\n  gt\n    /* \"#utility.yul\":9571:9611   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":9591:9609   */\n  tag_192\n  tag_76\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9571:9611   */\ntag_191:\n    /* \"#utility.yul\":9624:9629   */\n  pop\n  jump(tag_183)\n    /* \"#utility.yul\":9362:9639   */\ntag_186:\n  pop\n    /* \"#utility.yul\":9748:9750   */\n  0x20\n    /* \"#utility.yul\":9738:9746   */\n  dup4\n    /* \"#utility.yul\":9735:9751   */\n  lt\n    /* \"#utility.yul\":9729:9732   */\n  0x0133\n    /* \"#utility.yul\":9723:9727   */\n  dup4\n    /* \"#utility.yul\":9720:9733   */\n  lt\n    /* \"#utility.yul\":9716:9752   */\n  and\n    /* \"#utility.yul\":9698:9700   */\n  0x4e\n    /* \"#utility.yul\":9688:9696   */\n  dup5\n    /* \"#utility.yul\":9685:9701   */\n  lt\n    /* \"#utility.yul\":9680:9682   */\n  0x0b\n    /* \"#utility.yul\":9674:9678   */\n  dup5\n    /* \"#utility.yul\":9671:9683   */\n  lt\n    /* \"#utility.yul\":9667:9702   */\n  and\n    /* \"#utility.yul\":9651:9762   */\n  or\n    /* \"#utility.yul\":9648:9894   */\n  iszero\n  tag_193\n  jumpi\n    /* \"#utility.yul\":9804:9812   */\n  dup3\n    /* \"#utility.yul\":9798:9802   */\n  dup3\n    /* \"#utility.yul\":9794:9813   */\n  exp\n    /* \"#utility.yul\":9785:9813   */\n  swap1\n  pop\n    /* \"#utility.yul\":9839:9842   */\n  dup4\n    /* \"#utility.yul\":9832:9837   */\n  dup2\n    /* \"#utility.yul\":9829:9843   */\n  gt\n    /* \"#utility.yul\":9826:9866   */\n  iszero\n  tag_194\n  jumpi\n    /* \"#utility.yul\":9846:9864   */\n  tag_195\n  tag_76\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9826:9866   */\ntag_194:\n    /* \"#utility.yul\":9879:9884   */\n  jump(tag_183)\n    /* \"#utility.yul\":9648:9894   */\ntag_193:\n    /* \"#utility.yul\":9919:9961   */\n  tag_196\n    /* \"#utility.yul\":9957:9960   */\n  dup5\n    /* \"#utility.yul\":9947:9955   */\n  dup5\n    /* \"#utility.yul\":9941:9945   */\n  dup5\n    /* \"#utility.yul\":9938:9939   */\n  0x01\n    /* \"#utility.yul\":9919:9961   */\n  tag_78\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9904:9961   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":9993:9997   */\n  dup2\n    /* \"#utility.yul\":9988:9991   */\n  dup5\n    /* \"#utility.yul\":9984:9998   */\n  div\n    /* \"#utility.yul\":9977:9982   */\n  dup2\n    /* \"#utility.yul\":9974:9999   */\n  gt\n    /* \"#utility.yul\":9971:10022   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":10002:10020   */\n  tag_198\n  tag_76\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":9971:10022   */\ntag_197:\n    /* \"#utility.yul\":10051:10055   */\n  dup2\n    /* \"#utility.yul\":10044:10049   */\n  dup2\n    /* \"#utility.yul\":10040:10056   */\n  mul\n    /* \"#utility.yul\":10031:10056   */\n  swap1\n  pop\n    /* \"#utility.yul\":8989:10062   */\ntag_183:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10068:10154   */\ntag_80:\n    /* \"#utility.yul\":10103:10110   */\n  0x00\n    /* \"#utility.yul\":10143:10147   */\n  0xff\n    /* \"#utility.yul\":10136:10141   */\n  dup3\n    /* \"#utility.yul\":10132:10148   */\n  and\n    /* \"#utility.yul\":10121:10148   */\n  swap1\n  pop\n    /* \"#utility.yul\":10068:10154   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10160:10441   */\ntag_22:\n    /* \"#utility.yul\":10218:10223   */\n  0x00\n    /* \"#utility.yul\":10242:10265   */\n  tag_201\n    /* \"#utility.yul\":10260:10264   */\n  dup3\n    /* \"#utility.yul\":10242:10265   */\n  tag_53\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":10234:10265   */\n  swap2\n  pop\n    /* \"#utility.yul\":10286:10311   */\n  tag_202\n    /* \"#utility.yul\":10302:10310   */\n  dup4\n    /* \"#utility.yul\":10286:10311   */\n  tag_80\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":10274:10311   */\n  swap3\n  pop\n    /* \"#utility.yul\":10330:10434   */\n  tag_203\n    /* \"#utility.yul\":10367:10433   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":10357:10365   */\n  dup5\n    /* \"#utility.yul\":10351:10355   */\n  dup5\n    /* \"#utility.yul\":10330:10434   */\n  tag_79\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10321:10434   */\n  swap1\n  pop\n    /* \"#utility.yul\":10160:10441   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10447:10857   */\ntag_24:\n    /* \"#utility.yul\":10487:10494   */\n  0x00\n    /* \"#utility.yul\":10510:10530   */\n  tag_205\n    /* \"#utility.yul\":10528:10529   */\n  dup3\n    /* \"#utility.yul\":10510:10530   */\n  tag_53\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":10505:10530   */\n  swap2\n  pop\n    /* \"#utility.yul\":10544:10564   */\n  tag_206\n    /* \"#utility.yul\":10562:10563   */\n  dup4\n    /* \"#utility.yul\":10544:10564   */\n  tag_53\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10539:10564   */\n  swap3\n  pop\n    /* \"#utility.yul\":10599:10600   */\n  dup3\n    /* \"#utility.yul\":10596:10597   */\n  dup3\n    /* \"#utility.yul\":10592:10601   */\n  mul\n    /* \"#utility.yul\":10621:10651   */\n  tag_207\n    /* \"#utility.yul\":10639:10650   */\n  dup2\n    /* \"#utility.yul\":10621:10651   */\n  tag_53\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10610:10651   */\n  swap2\n  pop\n    /* \"#utility.yul\":10800:10801   */\n  dup3\n    /* \"#utility.yul\":10791:10798   */\n  dup3\n    /* \"#utility.yul\":10787:10802   */\n  div\n    /* \"#utility.yul\":10784:10785   */\n  dup5\n    /* \"#utility.yul\":10781:10803   */\n  eq\n    /* \"#utility.yul\":10761:10762   */\n  dup4\n    /* \"#utility.yul\":10754:10763   */\n  iszero\n    /* \"#utility.yul\":10734:10817   */\n  or\n    /* \"#utility.yul\":10711:10850   */\n  tag_208\n  jumpi\n    /* \"#utility.yul\":10830:10848   */\n  tag_209\n  tag_76\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10711:10850   */\ntag_208:\n    /* \"#utility.yul\":10495:10857   */\n  pop\n    /* \"#utility.yul\":10447:10857   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10863:11054   */\ntag_37:\n    /* \"#utility.yul\":10903:10906   */\n  0x00\n    /* \"#utility.yul\":10922:10942   */\n  tag_211\n    /* \"#utility.yul\":10940:10941   */\n  dup3\n    /* \"#utility.yul\":10922:10942   */\n  tag_53\n  jump\t// in\ntag_211:\n    /* \"#utility.yul\":10917:10942   */\n  swap2\n  pop\n    /* \"#utility.yul\":10956:10976   */\n  tag_212\n    /* \"#utility.yul\":10974:10975   */\n  dup4\n    /* \"#utility.yul\":10956:10976   */\n  tag_53\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10951:10976   */\n  swap3\n  pop\n    /* \"#utility.yul\":10999:11000   */\n  dup3\n    /* \"#utility.yul\":10996:10997   */\n  dup3\n    /* \"#utility.yul\":10992:11001   */\n  add\n    /* \"#utility.yul\":10985:11001   */\n  swap1\n  pop\n    /* \"#utility.yul\":11020:11023   */\n  dup1\n    /* \"#utility.yul\":11017:11018   */\n  dup3\n    /* \"#utility.yul\":11014:11024   */\n  gt\n    /* \"#utility.yul\":11011:11047   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":11027:11045   */\n  tag_214\n  tag_76\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":11011:11047   */\ntag_213:\n    /* \"#utility.yul\":10863:11054   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11060:11178   */\ntag_81:\n    /* \"#utility.yul\":11147:11171   */\n  tag_216\n    /* \"#utility.yul\":11165:11170   */\n  dup2\n    /* \"#utility.yul\":11147:11171   */\n  tag_53\n  jump\t// in\ntag_216:\n    /* \"#utility.yul\":11142:11145   */\n  dup3\n    /* \"#utility.yul\":11135:11172   */\n  mstore\n    /* \"#utility.yul\":11060:11178   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11184:11626   */\ntag_41:\n    /* \"#utility.yul\":11333:11337   */\n  0x00\n    /* \"#utility.yul\":11371:11373   */\n  0x60\n    /* \"#utility.yul\":11360:11369   */\n  dup3\n    /* \"#utility.yul\":11356:11374   */\n  add\n    /* \"#utility.yul\":11348:11374   */\n  swap1\n  pop\n    /* \"#utility.yul\":11384:11455   */\n  tag_218\n    /* \"#utility.yul\":11452:11453   */\n  0x00\n    /* \"#utility.yul\":11441:11450   */\n  dup4\n    /* \"#utility.yul\":11437:11454   */\n  add\n    /* \"#utility.yul\":11428:11434   */\n  dup7\n    /* \"#utility.yul\":11384:11455   */\n  tag_75\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":11465:11537   */\n  tag_219\n    /* \"#utility.yul\":11533:11535   */\n  0x20\n    /* \"#utility.yul\":11522:11531   */\n  dup4\n    /* \"#utility.yul\":11518:11536   */\n  add\n    /* \"#utility.yul\":11509:11515   */\n  dup6\n    /* \"#utility.yul\":11465:11537   */\n  tag_81\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":11547:11619   */\n  tag_220\n    /* \"#utility.yul\":11615:11617   */\n  0x40\n    /* \"#utility.yul\":11604:11613   */\n  dup4\n    /* \"#utility.yul\":11600:11618   */\n  add\n    /* \"#utility.yul\":11591:11597   */\n  dup5\n    /* \"#utility.yul\":11547:11619   */\n  tag_81\n  jump\t// in\ntag_220:\n    /* \"#utility.yul\":11184:11626   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11632:11854   */\ntag_45:\n    /* \"#utility.yul\":11725:11729   */\n  0x00\n    /* \"#utility.yul\":11763:11765   */\n  0x20\n    /* \"#utility.yul\":11752:11761   */\n  dup3\n    /* \"#utility.yul\":11748:11766   */\n  add\n    /* \"#utility.yul\":11740:11766   */\n  swap1\n  pop\n    /* \"#utility.yul\":11776:11847   */\n  tag_222\n    /* \"#utility.yul\":11844:11845   */\n  0x00\n    /* \"#utility.yul\":11833:11842   */\n  dup4\n    /* \"#utility.yul\":11829:11846   */\n  add\n    /* \"#utility.yul\":11820:11826   */\n  dup5\n    /* \"#utility.yul\":11776:11847   */\n  tag_81\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":11632:11854   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SimpleToken.sol\":174:6582  contract TokenPreSale is ERC20, Ownable {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleToken.sol\":174:6582  contract TokenPreSale is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7547c7a3\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xf8102e68\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xf9931855\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf9a81af7\n      eq\n      tag_40\n      jumpi\n      jump(tag_1)\n    tag_43:\n      dup1\n      0xa9059cbb\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xcce29ea7\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xcec297a0\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xd348b409\n      eq\n      tag_35\n      jumpi\n      jump(tag_1)\n    tag_42:\n      dup1\n      0x95d89b41\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x9ca423b3\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa09c4cf4\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa5ce413b\n      eq\n      tag_30\n      jumpi\n      jump(tag_1)\n    tag_44:\n      dup1\n      0x7547c7a3\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7c613b2f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8265324d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x8f0794fe\n      eq\n      tag_25\n      jumpi\n      jump(tag_1)\n    tag_41:\n      dup1\n      0x2c663960\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x4f3fc2df\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x4f3fc2df\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x518ab2a8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7165d19b\n      eq\n      tag_20\n      jumpi\n      jump(tag_1)\n    tag_46:\n      dup1\n      0x2c663960\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x30f72cd4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x329a27e7\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4405df4a\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_45:\n      dup1\n      0x0d505541\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x0d505541\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1d0806ae\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_47:\n      dup1\n      0x03e293a3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06d65af3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SimpleToken.sol\":363:394  uint256 public regularSalePrice */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":255:286  uint256 public preSaleStartTime */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":6328:6575  function calculateStakingReward(address user) public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":329:356  uint256 public initialPrice */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":820:863  mapping(address => uint256) public balances */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":2572:2876  function calculateWeeksElapsed(uint256 startTime, uint256 endTime) public pure returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":221:248  bool public presaleIsActive */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      pop\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":5270:5367  function getWalletBalance() public view returns (uint256){... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":3874:4172  function calculatePriceIncrease() public view returns (uint256){... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":514:546  uint256 public stakingRewardRate */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":441:466  uint256 public tokensSold */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_124\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      stop\n        /* \"contracts/SimpleToken.sol\":401:434  uint256 public weeklyIncreaseRate */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":5377:5781  function stakeTokens(uint256 amount) external {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_138\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      tag_141\n      jump\t// in\n    tag_138:\n      stop\n        /* \"contracts/SimpleToken.sol\":2886:3302  function mintReferralReward() external {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      stop\n        /* \"contracts/SimpleToken.sol\":2408:2564  function calculateReferralReward(address referrer) public view returns (uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_146\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_147:\n      tag_148\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":607:658  mapping(address => uint256) public stakingTimestamp */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_156\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      tag_161\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":665:706  mapping(address => bool) public whitelist */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_165\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":713:757  mapping(address => address) public referrals */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_170\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_171:\n      tag_172\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      tag_173\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":1915:2396  function signUpForWhitelist(address referral) external {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_175\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n    tag_175:\n      stop\n        /* \"contracts/SimpleToken.sol\":5789:6320  function unstakeTokens() external {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_179\n      tag_180\n      jump\t// in\n    tag_179:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      tag_182\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_183:\n      tag_184\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":293:322  uint256 public preSaleEndTime */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_187\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":764:813  mapping(address => uint256) public referralCounts */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      tag_191\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_192:\n      tag_193\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      tag_194\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":4641:5266  function buyTokens() external payable {... */\n    tag_34:\n      tag_195\n      tag_196\n      jump\t// in\n    tag_195:\n      stop\n        /* \"contracts/SimpleToken.sol\":4188:4564  function calculatePrice() public view returns (uint256) {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      tag_200\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      tag_202\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      tag_205\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      tag_208\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_209:\n      tag_210\n      jump\t// in\n    tag_208:\n      stop\n        /* \"contracts/SimpleToken.sol\":473:507  uint256 public preSaleWeeksInWeeks */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      tag_214\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":553:600  mapping(address => uint256) public stakedAmount */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      tag_216\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_217:\n      tag_218\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      tag_219\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":3427:3865  function startPreSale(uint256 _startTime, uint256 _durationWeeks) external onlyOwner {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      tag_221\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_222\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_222:\n      tag_223\n      jump\t// in\n    tag_221:\n      stop\n        /* \"contracts/SimpleToken.sol\":363:394  uint256 public regularSalePrice */\n    tag_50:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":255:286  uint256 public preSaleStartTime */\n    tag_55:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_225\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_227\n      swap1\n      tag_226\n      jump\t// in\n    tag_227:\n      dup1\n      iszero\n      tag_228\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_229\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_228)\n    tag_229:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_230:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_230\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_232\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_234\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":6328:6575  function calculateStakingReward(address user) public view returns (uint256) {... */\n    tag_73:\n        /* \"contracts/SimpleToken.sol\":6395:6402  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6415:6434  uint256 weeksStaked */\n      dup1\n        /* \"contracts/SimpleToken.sol\":6482:6489  1 weeks */\n      0x093a80\n        /* \"contracts/SimpleToken.sol\":6456:6472  stakingTimestamp */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":6456:6478  stakingTimestamp[user] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6473:6477  user */\n      dup6\n        /* \"contracts/SimpleToken.sol\":6456:6478  stakingTimestamp[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":6438:6453  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":6438:6478  block.timestamp - stakingTimestamp[user] */\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"contracts/SimpleToken.sol\":6437:6489  (block.timestamp - stakingTimestamp[user]) / 1 weeks */\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts/SimpleToken.sol\":6415:6489  uint256 weeksStaked = (block.timestamp - stakingTimestamp[user]) / 1 weeks */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":6564:6567  100 */\n      0x64\n        /* \"contracts/SimpleToken.sol\":6549:6560  weeksStaked */\n      dup2\n        /* \"contracts/SimpleToken.sol\":6529:6546  stakingRewardRate */\n      sload(0x0d)\n        /* \"contracts/SimpleToken.sol\":6508:6520  stakedAmount */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":6508:6526  stakedAmount[user] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6521:6525  user */\n      dup8\n        /* \"contracts/SimpleToken.sol\":6508:6526  stakedAmount[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":6508:6546  stakedAmount[user] * stakingRewardRate */\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"contracts/SimpleToken.sol\":6508:6560  stakedAmount[user] * stakingRewardRate * weeksStaked */\n      tag_243\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_243:\n        /* \"contracts/SimpleToken.sol\":6507:6567  (stakedAmount[user] * stakingRewardRate * weeksStaked) / 100 */\n      tag_244\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_244:\n        /* \"contracts/SimpleToken.sol\":6500:6567  return (stakedAmount[user] * stakingRewardRate * weeksStaked) / 100 */\n      swap2\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":6328:6575  function calculateStakingReward(address user) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":329:356  uint256 public initialPrice */\n    tag_81:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_247\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_248\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":820:863  mapping(address => uint256) public balances */\n    tag_92:\n      mstore(0x20, 0x13)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":2572:2876  function calculateWeeksElapsed(uint256 startTime, uint256 endTime) public pure returns (uint256) {... */\n    tag_98:\n        /* \"contracts/SimpleToken.sol\":2660:2667  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2699:2708  startTime */\n      dup3\n        /* \"contracts/SimpleToken.sol\":2688:2695  endTime */\n      dup3\n        /* \"contracts/SimpleToken.sol\":2688:2708  endTime >= startTime */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":2680:2746  require(endTime >= startTime, \"End time must be after start time\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/SimpleToken.sol\":2757:2777  uint256 weeksElapsed */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2804:2810  604800 */\n      0x093a80\n        /* \"contracts/SimpleToken.sol\":2791:2800  startTime */\n      dup5\n        /* \"contracts/SimpleToken.sol\":2781:2788  endTime */\n      dup5\n        /* \"contracts/SimpleToken.sol\":2781:2800  endTime - startTime */\n      tag_256\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_256:\n        /* \"contracts/SimpleToken.sol\":2780:2810  (endTime - startTime) / 604800 */\n      tag_257\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_257:\n        /* \"contracts/SimpleToken.sol\":2757:2810  uint256 weeksElapsed = (endTime - startTime) / 604800 */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":2856:2868  weeksElapsed */\n      dup1\n        /* \"contracts/SimpleToken.sol\":2849:2868  return weeksElapsed */\n      swap2\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":2572:2876  function calculateWeeksElapsed(uint256 startTime, uint256 endTime) public pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":221:248  bool public presaleIsActive */\n    tag_102:\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":5270:5367  function getWalletBalance() public view returns (uint256){... */\n    tag_111:\n        /* \"contracts/SimpleToken.sol\":5319:5326  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5341:5349  balances */\n      0x13\n        /* \"contracts/SimpleToken.sol\":5341:5361  balances[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5350:5360  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5341:5361  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5334:5361  return balances[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":5270:5367  function getWalletBalance() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":3874:4172  function calculatePriceIncrease() public view returns (uint256){... */\n    tag_115:\n        /* \"contracts/SimpleToken.sol\":3929:3936  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3948:3968  uint256 weeksElapsed */\n      dup1\n        /* \"contracts/SimpleToken.sol\":3970:4026  calculateWeeksElapsed(preSaleStartTime, block.timestamp) */\n      tag_261\n        /* \"contracts/SimpleToken.sol\":3992:4008  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":4010:4025  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":3970:3991  calculateWeeksElapsed */\n      tag_98\n        /* \"contracts/SimpleToken.sol\":3970:4026  calculateWeeksElapsed(preSaleStartTime, block.timestamp) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/SimpleToken.sol\":3948:4026  uint256 weeksElapsed =calculateWeeksElapsed(preSaleStartTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4037:4058  uint256 priceIncrease */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4114:4133  preSaleWeeksInWeeks */\n      sload(0x0c)\n        /* \"contracts/SimpleToken.sol\":4098:4110  weeksElapsed */\n      dup3\n        /* \"contracts/SimpleToken.sol\":4082:4094  initialPrice */\n      sload(0x08)\n        /* \"contracts/SimpleToken.sol\":4063:4079  regularSalePrice */\n      sload(0x09)\n        /* \"contracts/SimpleToken.sol\":4063:4094  regularSalePrice - initialPrice */\n      tag_262\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_262:\n        /* \"contracts/SimpleToken.sol\":4062:4110  (regularSalePrice - initialPrice) * weeksElapsed */\n      tag_263\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_263:\n        /* \"contracts/SimpleToken.sol\":4061:4133  ((regularSalePrice - initialPrice) * weeksElapsed) / preSaleWeeksInWeeks */\n      tag_264\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_264:\n        /* \"contracts/SimpleToken.sol\":4037:4133  uint256 priceIncrease = ((regularSalePrice - initialPrice) * weeksElapsed) / preSaleWeeksInWeeks */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4151:4164  priceIncrease */\n      dup1\n        /* \"contracts/SimpleToken.sol\":4144:4164  return priceIncrease */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":3874:4172  function calculatePriceIncrease() public view returns (uint256){... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":514:546  uint256 public stakingRewardRate */\n    tag_119:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":441:466  uint256 public tokensSold */\n    tag_123:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_267\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_270\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":401:434  uint256 public weeklyIncreaseRate */\n    tag_135:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":5377:5781  function stakeTokens(uint256 amount) external {... */\n    tag_141:\n        /* \"contracts/SimpleToken.sol\":5451:5452  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5442:5448  amount */\n      dup2\n        /* \"contracts/SimpleToken.sol\":5442:5452  amount > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":5434:5490  require(amount > 0, \"Amount must be greater than zero.\") */\n      tag_273\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_274\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_273:\n        /* \"contracts/SimpleToken.sol\":5534:5540  amount */\n      dup1\n        /* \"contracts/SimpleToken.sol\":5509:5530  balanceOf(msg.sender) */\n      tag_276\n        /* \"contracts/SimpleToken.sol\":5519:5529  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5509:5518  balanceOf */\n      tag_128\n        /* \"contracts/SimpleToken.sol\":5509:5530  balanceOf(msg.sender) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/SimpleToken.sol\":5509:5540  balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":5501:5566  require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"contracts/SimpleToken.sol\":5579:5623  _transfer(msg.sender, address(this), amount) */\n      tag_280\n        /* \"contracts/SimpleToken.sol\":5589:5599  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5609:5613  this */\n      address\n        /* \"contracts/SimpleToken.sol\":5616:5622  amount */\n      dup4\n        /* \"contracts/SimpleToken.sol\":5579:5588  _transfer */\n      tag_251\n        /* \"contracts/SimpleToken.sol\":5579:5623  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_280:\n        /* \"contracts/SimpleToken.sol\":5662:5668  amount */\n      dup1\n        /* \"contracts/SimpleToken.sol\":5634:5646  stakedAmount */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":5634:5658  stakedAmount[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5647:5657  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5634:5658  stakedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleToken.sol\":5634:5668  stakedAmount[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_281\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":5710:5725  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":5679:5695  stakingTimestamp */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":5679:5707  stakingTimestamp[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5696:5706  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5679:5707  stakingTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleToken.sol\":5679:5725  stakingTimestamp[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":5754:5764  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5741:5773  TokensStaked(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef\n        /* \"contracts/SimpleToken.sol\":5766:5772  amount */\n      dup3\n        /* \"contracts/SimpleToken.sol\":5741:5773  TokensStaked(msg.sender, amount) */\n      mload(0x40)\n      tag_283\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SimpleToken.sol\":5377:5781  function stakeTokens(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":2886:3302  function mintReferralReward() external {... */\n    tag_144:\n        /* \"contracts/SimpleToken.sol\":2965:2969  true */\n      0x01\n        /* \"contracts/SimpleToken.sol\":2948:2969  presaleIsActive==true */\n      iszero\n      iszero\n        /* \"contracts/SimpleToken.sol\":2948:2963  presaleIsActive */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":2948:2969  presaleIsActive==true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/SimpleToken.sol\":2940:2996  require(presaleIsActive==true,\"Presale not started yet\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_286\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_285:\n        /* \"contracts/SimpleToken.sol\":3011:3031  uint256 rewardAmount */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3034:3069  calculateReferralReward(msg.sender) */\n      tag_288\n        /* \"contracts/SimpleToken.sol\":3058:3068  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":3034:3057  calculateReferralReward */\n      tag_148\n        /* \"contracts/SimpleToken.sol\":3034:3069  calculateReferralReward(msg.sender) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/SimpleToken.sol\":3011:3069  uint256 rewardAmount = calculateReferralReward(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":3107:3108  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3092:3104  rewardAmount */\n      dup2\n        /* \"contracts/SimpleToken.sol\":3092:3108  rewardAmount > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":3084:3133  require(rewardAmount > 0, \"No rewards available\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap1\n      tag_291\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_289:\n        /* \"contracts/SimpleToken.sol\":3148:3179  _mint(msg.sender, rewardAmount) */\n      tag_292\n        /* \"contracts/SimpleToken.sol\":3154:3164  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":3166:3178  rewardAmount */\n      dup3\n        /* \"contracts/SimpleToken.sol\":3148:3153  _mint */\n      tag_293\n        /* \"contracts/SimpleToken.sol\":3148:3179  _mint(msg.sender, rewardAmount) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/SimpleToken.sol\":3223:3224  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3194:3208  referralCounts */\n      0x12\n        /* \"contracts/SimpleToken.sol\":3194:3220  referralCounts[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3209:3219  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":3194:3220  referralCounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleToken.sol\":3194:3224  referralCounts[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":3265:3275  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":3244:3290  ReferralRewardMinted(msg.sender, rewardAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d\n        /* \"contracts/SimpleToken.sol\":3277:3289  rewardAmount */\n      dup3\n        /* \"contracts/SimpleToken.sol\":3244:3290  ReferralRewardMinted(msg.sender, rewardAmount) */\n      mload(0x40)\n      tag_294\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SimpleToken.sol\":2925:3302  {... */\n      pop\n        /* \"contracts/SimpleToken.sol\":2886:3302  function mintReferralReward() external {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":2408:2564  function calculateReferralReward(address referrer) public view returns (uint256) {... */\n    tag_148:\n        /* \"contracts/SimpleToken.sol\":2480:2487  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2546:2556  decimals() */\n      tag_296\n        /* \"contracts/SimpleToken.sol\":2546:2554  decimals */\n      tag_106\n        /* \"contracts/SimpleToken.sol\":2546:2556  decimals() */\n      jump\t// in\n    tag_296:\n        /* \"contracts/SimpleToken.sol\":2540:2542  10 */\n      0x0a\n        /* \"contracts/SimpleToken.sol\":2540:2556  10 ** decimals() */\n      tag_297\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"contracts/SimpleToken.sol\":2534:2537  500 */\n      0x01f4\n        /* \"contracts/SimpleToken.sol\":2507:2521  referralCounts */\n      0x12\n        /* \"contracts/SimpleToken.sol\":2507:2531  referralCounts[referrer] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2522:2530  referrer */\n      dup6\n        /* \"contracts/SimpleToken.sol\":2507:2531  referralCounts[referrer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":2507:2537  referralCounts[referrer] * 500 */\n      tag_299\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_299:\n        /* \"contracts/SimpleToken.sol\":2507:2556  referralCounts[referrer] * 500 * 10 ** decimals() */\n      tag_300\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_300:\n        /* \"contracts/SimpleToken.sol\":2500:2556  return referralCounts[referrer] * 500 * 10 ** decimals() */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":2408:2564  function calculateReferralReward(address referrer) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":607:658  mapping(address => uint256) public stakingTimestamp */\n    tag_158:\n      mstore(0x20, 0x0f)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_303\n      swap1\n      tag_226\n      jump\t// in\n    tag_303:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_304\n      swap1\n      tag_226\n      jump\t// in\n    tag_304:\n      dup1\n      iszero\n      tag_305\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_306\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_305)\n    tag_306:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_307:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_307\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":665:706  mapping(address => bool) public whitelist */\n    tag_167:\n      mstore(0x20, 0x10)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":713:757  mapping(address => address) public referrals */\n    tag_172:\n      mstore(0x20, 0x11)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":1915:2396  function signUpForWhitelist(address referral) external {... */\n    tag_177:\n        /* \"contracts/SimpleToken.sol\":1990:1999  whitelist */\n      0x10\n        /* \"contracts/SimpleToken.sol\":1990:2011  whitelist[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2000:2010  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":1990:2011  whitelist[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":1989:2011  !whitelist[msg.sender] */\n      iszero\n        /* \"contracts/SimpleToken.sol\":1981:2035  require(!whitelist[msg.sender], \"Already whitelisted\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_309:\n        /* \"contracts/SimpleToken.sol\":2068:2076  referral */\n      dup1\n        /* \"contracts/SimpleToken.sol\":2054:2076  msg.sender != referral */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleToken.sol\":2054:2064  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2054:2076  msg.sender != referral */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SimpleToken.sol\":2046:2102  require(msg.sender != referral, \"Cannot refer yourself\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_312:\n        /* \"contracts/SimpleToken.sol\":2147:2151  true */\n      0x01\n        /* \"contracts/SimpleToken.sol\":2123:2132  whitelist */\n      0x10\n        /* \"contracts/SimpleToken.sol\":2123:2144  whitelist[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2133:2143  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2123:2144  whitelist[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleToken.sol\":2123:2151  whitelist[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":2196:2197  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2176:2198  referral != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleToken.sol\":2176:2184  referral */\n      dup2\n        /* \"contracts/SimpleToken.sol\":2176:2198  referral != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/SimpleToken.sol\":2176:2221  referral != address(0) && whitelist[referral] */\n      dup1\n      iszero\n      tag_315\n      jumpi\n      pop\n        /* \"contracts/SimpleToken.sol\":2202:2211  whitelist */\n      0x10\n        /* \"contracts/SimpleToken.sol\":2202:2221  whitelist[referral] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2212:2220  referral */\n      dup3\n        /* \"contracts/SimpleToken.sol\":2202:2221  whitelist[referral] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":2176:2221  referral != address(0) && whitelist[referral] */\n    tag_315:\n        /* \"contracts/SimpleToken.sol\":2172:2326  if (referral != address(0) && whitelist[referral]) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"contracts/SimpleToken.sol\":2262:2270  referral */\n      dup1\n        /* \"contracts/SimpleToken.sol\":2238:2247  referrals */\n      0x11\n        /* \"contracts/SimpleToken.sol\":2238:2259  referrals[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2248:2258  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2238:2259  referrals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleToken.sol\":2238:2270  referrals[msg.sender] = referral */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":2313:2314  1 */\n      0x01\n        /* \"contracts/SimpleToken.sol\":2285:2299  referralCounts */\n      0x12\n        /* \"contracts/SimpleToken.sol\":2285:2309  referralCounts[referral] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2300:2308  referral */\n      dup4\n        /* \"contracts/SimpleToken.sol\":2285:2309  referralCounts[referral] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleToken.sol\":2285:2314  referralCounts[referral] += 1 */\n      dup3\n      dup3\n      sload\n      tag_317\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_317:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":2172:2326  if (referral != address(0) && whitelist[referral]) {... */\n    tag_316:\n        /* \"contracts/SimpleToken.sol\":2379:2387  referral */\n      dup1\n        /* \"contracts/SimpleToken.sol\":2351:2388  UserWhitelisted(msg.sender, referral) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleToken.sol\":2367:2377  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2351:2388  UserWhitelisted(msg.sender, referral) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SimpleToken.sol\":1915:2396  function signUpForWhitelist(address referral) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":5789:6320  function unstakeTokens() external {... */\n    tag_180:\n        /* \"contracts/SimpleToken.sol\":5834:5848  uint256 amount */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5851:5863  stakedAmount */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":5851:5875  stakedAmount[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5864:5874  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5851:5875  stakedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5834:5875  uint256 amount = stakedAmount[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":5903:5904  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5894:5900  amount */\n      dup2\n        /* \"contracts/SimpleToken.sol\":5894:5904  amount > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":5886:5926  require(amount > 0, \"No tokens staked.\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_320\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"contracts/SimpleToken.sol\":5995:6002  4 weeks */\n      0x24ea00\n        /* \"contracts/SimpleToken.sol\":5964:5980  stakingTimestamp */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":5964:5992  stakingTimestamp[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5981:5991  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5964:5992  stakingTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5964:6002  stakingTimestamp[msg.sender] + 4 weeks */\n      tag_322\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_322:\n        /* \"contracts/SimpleToken.sol\":5945:5960  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":5945:6002  block.timestamp >= stakingTimestamp[msg.sender] + 4 weeks */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":5937:6034  require(block.timestamp >= stakingTimestamp[msg.sender] + 4 weeks, \"Unstake only after 4 weeks.\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_324\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"contracts/SimpleToken.sol\":6055:6069  uint256 reward */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6072:6106  calculateStakingReward(msg.sender) */\n      tag_326\n        /* \"contracts/SimpleToken.sol\":6095:6105  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6072:6094  calculateStakingReward */\n      tag_73\n        /* \"contracts/SimpleToken.sol\":6072:6106  calculateStakingReward(msg.sender) */\n      jump\t// in\n    tag_326:\n        /* \"contracts/SimpleToken.sol\":6055:6106  uint256 reward = calculateStakingReward(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":6144:6145  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6117:6129  stakedAmount */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":6117:6141  stakedAmount[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6130:6140  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6117:6141  stakedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleToken.sol\":6117:6145  stakedAmount[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":6187:6188  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6156:6172  stakingTimestamp */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":6156:6184  stakingTimestamp[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6173:6183  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6156:6184  stakingTimestamp[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SimpleToken.sol\":6156:6188  stakingTimestamp[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":6201:6254  _transfer(address(this), msg.sender, amount + reward) */\n      tag_327\n        /* \"contracts/SimpleToken.sol\":6219:6223  this */\n      address\n        /* \"contracts/SimpleToken.sol\":6226:6236  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6247:6253  reward */\n      dup4\n        /* \"contracts/SimpleToken.sol\":6238:6244  amount */\n      dup6\n        /* \"contracts/SimpleToken.sol\":6238:6253  amount + reward */\n      tag_328\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_328:\n        /* \"contracts/SimpleToken.sol\":6201:6210  _transfer */\n      tag_251\n        /* \"contracts/SimpleToken.sol\":6201:6254  _transfer(address(this), msg.sender, amount + reward) */\n      jump\t// in\n    tag_327:\n        /* \"contracts/SimpleToken.sol\":6285:6295  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6270:6312  TokensUnstaked(msg.sender, amount, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336\n        /* \"contracts/SimpleToken.sol\":6297:6303  amount */\n      dup4\n        /* \"contracts/SimpleToken.sol\":6305:6311  reward */\n      dup4\n        /* \"contracts/SimpleToken.sol\":6270:6312  TokensUnstaked(msg.sender, amount, reward) */\n      mload(0x40)\n      tag_329\n      swap3\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SimpleToken.sol\":5823:6320  {... */\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":5789:6320  function unstakeTokens() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_233\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_333\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_251\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":293:322  uint256 public preSaleEndTime */\n    tag_188:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":764:813  mapping(address => uint256) public referralCounts */\n    tag_193:\n      mstore(0x20, 0x12)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":4641:5266  function buyTokens() external payable {... */\n    tag_196:\n        /* \"contracts/SimpleToken.sol\":4694:4709  presaleIsActive */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":4686:4730  require(presaleIsActive, \"Sale not active.\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_336\n      swap1\n      tag_337\n      jump\t// in\n    tag_336:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_335:\n        /* \"contracts/SimpleToken.sol\":4757:4758  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4745:4754  msg.value */\n      callvalue\n        /* \"contracts/SimpleToken.sol\":4745:4758  msg.value > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":4737:4791  require(msg.value > 0, \"Must send ETH to buy tokens.\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap1\n      tag_340\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_338:\n        /* \"contracts/SimpleToken.sol\":4800:4820  uint256 currentPrice */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4823:4839  calculatePrice() */\n      tag_341\n        /* \"contracts/SimpleToken.sol\":4823:4837  calculatePrice */\n      tag_199\n        /* \"contracts/SimpleToken.sol\":4823:4839  calculatePrice() */\n      jump\t// in\n    tag_341:\n        /* \"contracts/SimpleToken.sol\":4800:4839  uint256 currentPrice = calculatePrice() */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4884:4903  uint256 tokensToBuy */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4948:4960  currentPrice */\n      dup2\n        /* \"contracts/SimpleToken.sol\":4933:4943  decimals() */\n      tag_342\n        /* \"contracts/SimpleToken.sol\":4933:4941  decimals */\n      tag_106\n        /* \"contracts/SimpleToken.sol\":4933:4943  decimals() */\n      jump\t// in\n    tag_342:\n        /* \"contracts/SimpleToken.sol\":4925:4944  uint256(decimals()) */\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":4919:4921  10 */\n      0x0a\n        /* \"contracts/SimpleToken.sol\":4919:4944  10 ** uint256(decimals()) */\n      tag_343\n      swap2\n      swap1\n      tag_344\n      jump\t// in\n    tag_343:\n        /* \"contracts/SimpleToken.sol\":4907:4916  msg.value */\n      callvalue\n        /* \"contracts/SimpleToken.sol\":4907:4944  msg.value * 10 ** uint256(decimals()) */\n      tag_345\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_345:\n        /* \"contracts/SimpleToken.sol\":4906:4960  (msg.value * 10 ** uint256(decimals())) / currentPrice */\n      tag_346\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_346:\n        /* \"contracts/SimpleToken.sol\":4884:4960  uint256 tokensToBuy = (msg.value * 10 ** uint256(decimals())) / currentPrice */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":5003:5014  tokensToBuy */\n      dup1\n        /* \"contracts/SimpleToken.sol\":4975:4999  balanceOf(address(this)) */\n      tag_347\n        /* \"contracts/SimpleToken.sol\":4993:4997  this */\n      address\n        /* \"contracts/SimpleToken.sol\":4975:4984  balanceOf */\n      tag_128\n        /* \"contracts/SimpleToken.sol\":4975:4999  balanceOf(address(this)) */\n      jump\t// in\n    tag_347:\n        /* \"contracts/SimpleToken.sol\":4975:5014  balanceOf(address(this)) >= tokensToBuy */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":4967:5047  require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_349\n      swap1\n      tag_350\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_348:\n        /* \"contracts/SimpleToken.sol\":5078:5089  tokensToBuy */\n      dup1\n        /* \"contracts/SimpleToken.sol\":5054:5062  balances */\n      0x13\n        /* \"contracts/SimpleToken.sol\":5054:5074  balances[msg.sender] */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5063:5073  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5054:5074  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/SimpleToken.sol\":5054:5089  balances[msg.sender] += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_351\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_351:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":5096:5145  _transfer(address(this), msg.sender, tokensToBuy) */\n      tag_352\n        /* \"contracts/SimpleToken.sol\":5114:5118  this */\n      address\n        /* \"contracts/SimpleToken.sol\":5121:5131  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5133:5144  tokensToBuy */\n      dup4\n        /* \"contracts/SimpleToken.sol\":5096:5105  _transfer */\n      tag_251\n        /* \"contracts/SimpleToken.sol\":5096:5145  _transfer(address(this), msg.sender, tokensToBuy) */\n      jump\t// in\n    tag_352:\n        /* \"contracts/SimpleToken.sol\":5166:5177  tokensToBuy */\n      dup1\n        /* \"contracts/SimpleToken.sol\":5152:5162  tokensSold */\n      0x0b\n      0x00\n        /* \"contracts/SimpleToken.sol\":5152:5177  tokensSold += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_353\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_353:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":5215:5225  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5191:5239  Transfer(address(this), msg.sender, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SimpleToken.sol\":5208:5212  this */\n      address\n        /* \"contracts/SimpleToken.sol\":5191:5239  Transfer(address(this), msg.sender, tokensToBuy) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/SimpleToken.sol\":5227:5238  tokensToBuy */\n      dup4\n        /* \"contracts/SimpleToken.sol\":5191:5239  Transfer(address(this), msg.sender, tokensToBuy) */\n      mload(0x40)\n      tag_354\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SimpleToken.sol\":4679:5266  {... */\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":4641:5266  function buyTokens() external payable {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":4188:4564  function calculatePrice() public view returns (uint256) {... */\n    tag_199:\n        /* \"contracts/SimpleToken.sol\":4235:4242  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4263:4278  presaleIsActive */\n      0x05\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":4255:4306  require(presaleIsActive,\"Pre-sale not started yet\") */\n      tag_356\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_357\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_356:\n        /* \"contracts/SimpleToken.sol\":4340:4354  preSaleEndTime */\n      sload(0x07)\n        /* \"contracts/SimpleToken.sol\":4322:4337  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":4322:4354  block.timestamp > preSaleEndTime */\n      gt\n        /* \"contracts/SimpleToken.sol\":4317:4406  if ( block.timestamp > preSaleEndTime) {... */\n      iszero\n      tag_359\n      jumpi\n        /* \"contracts/SimpleToken.sol\":4378:4394  regularSalePrice */\n      sload(0x09)\n        /* \"contracts/SimpleToken.sol\":4371:4394  return regularSalePrice */\n      swap1\n      pop\n      jump(tag_355)\n        /* \"contracts/SimpleToken.sol\":4317:4406  if ( block.timestamp > preSaleEndTime) {... */\n    tag_359:\n        /* \"contracts/SimpleToken.sol\":4418:4439  uint256 priceIncrease */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4442:4466  calculatePriceIncrease() */\n      tag_360\n        /* \"contracts/SimpleToken.sol\":4442:4464  calculatePriceIncrease */\n      tag_115\n        /* \"contracts/SimpleToken.sol\":4442:4466  calculatePriceIncrease() */\n      jump\t// in\n    tag_360:\n        /* \"contracts/SimpleToken.sol\":4418:4466  uint256 priceIncrease = calculatePriceIncrease() */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4477:4497  uint256 currentPrice */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4513:4526  priceIncrease */\n      dup2\n        /* \"contracts/SimpleToken.sol\":4500:4512  initialPrice */\n      sload(0x08)\n        /* \"contracts/SimpleToken.sol\":4500:4526  initialPrice+priceIncrease */\n      tag_361\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_361:\n        /* \"contracts/SimpleToken.sol\":4477:4526  uint256 currentPrice = initialPrice+priceIncrease */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4544:4556  currentPrice */\n      dup1\n        /* \"contracts/SimpleToken.sol\":4537:4556  return currentPrice */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":4188:4564  function calculatePrice() public view returns (uint256) {... */\n    tag_355:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_364\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_368\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_271\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_368:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":473:507  uint256 public preSaleWeeksInWeeks */\n    tag_213:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":553:600  mapping(address => uint256) public stakedAmount */\n    tag_218:\n      mstore(0x20, 0x0e)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":3427:3865  function startPreSale(uint256 _startTime, uint256 _durationWeeks) external onlyOwner {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_370\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_268\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_370:\n        /* \"contracts/SimpleToken.sol\":3630:3640  _startTime */\n      dup2\n        /* \"contracts/SimpleToken.sol\":3611:3627  preSaleStartTime */\n      0x06\n        /* \"contracts/SimpleToken.sol\":3611:3640  preSaleStartTime = _startTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":3705:3712  1 weeks */\n      0x093a80\n        /* \"contracts/SimpleToken.sol\":3688:3702  _durationWeeks */\n      dup2\n        /* \"contracts/SimpleToken.sol\":3688:3712  _durationWeeks * 1 weeks */\n      tag_372\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_372:\n        /* \"contracts/SimpleToken.sol\":3668:3684  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":3668:3713  preSaleStartTime + (_durationWeeks * 1 weeks) */\n      tag_373\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_373:\n        /* \"contracts/SimpleToken.sol\":3651:3665  preSaleEndTime */\n      0x07\n        /* \"contracts/SimpleToken.sol\":3651:3713  preSaleEndTime = preSaleStartTime + (_durationWeeks * 1 weeks) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":3746:3760  _durationWeeks */\n      dup1\n        /* \"contracts/SimpleToken.sol\":3724:3743  preSaleWeeksInWeeks */\n      0x0c\n        /* \"contracts/SimpleToken.sol\":3724:3760  preSaleWeeksInWeeks = _durationWeeks */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":3789:3793  true */\n      0x01\n        /* \"contracts/SimpleToken.sol\":3771:3786  presaleIsActive */\n      0x05\n      0x14\n        /* \"contracts/SimpleToken.sol\":3771:3793  presaleIsActive = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":3809:3857  PreSaleStarted(preSaleStartTime, preSaleEndTime) */\n      0x3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d\n        /* \"contracts/SimpleToken.sol\":3824:3840  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":3842:3856  preSaleEndTime */\n      sload(0x07)\n        /* \"contracts/SimpleToken.sol\":3809:3857  PreSaleStarted(preSaleStartTime, preSaleEndTime) */\n      mload(0x40)\n      tag_374\n      swap3\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_374:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SimpleToken.sol\":3427:3865  function startPreSale(uint256 _startTime, uint256 _durationWeeks) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_377\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_378\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_380\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_378\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_381:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_387\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_388\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_388:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_387:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_391\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_392\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_394\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_395\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_152\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_395:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_396\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_397\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_397:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_398\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_398:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_396:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_401\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_402\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_402:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_401:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_403\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_392\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_378:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_406\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_406:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_408\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_408:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_407:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_409\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_410\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_410:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_409:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_413\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_413:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_414)\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_415\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_416\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_416:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_417\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_418)\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_418:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_419\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_419:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_420:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_421:\n        /* \"#utility.yul\":177:201   */\n      tag_476\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_420\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_52:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_478\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_421\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:541   */\n    tag_422:\n        /* \"#utility.yul\":494:500   */\n      0x00\n        /* \"#utility.yul\":528:533   */\n      dup2\n        /* \"#utility.yul\":522:534   */\n      mload\n        /* \"#utility.yul\":512:534   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":547:716   */\n    tag_423:\n        /* \"#utility.yul\":631:642   */\n      0x00\n        /* \"#utility.yul\":665:671   */\n      dup3\n        /* \"#utility.yul\":660:663   */\n      dup3\n        /* \"#utility.yul\":653:672   */\n      mstore\n        /* \"#utility.yul\":705:709   */\n      0x20\n        /* \"#utility.yul\":700:703   */\n      dup3\n        /* \"#utility.yul\":696:710   */\n      add\n        /* \"#utility.yul\":681:710   */\n      swap1\n      pop\n        /* \"#utility.yul\":547:716   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":722:861   */\n    tag_424:\n        /* \"#utility.yul\":811:817   */\n      dup3\n        /* \"#utility.yul\":806:809   */\n      dup2\n        /* \"#utility.yul\":801:804   */\n      dup4\n        /* \"#utility.yul\":795:818   */\n      mcopy\n        /* \"#utility.yul\":852:853   */\n      0x00\n        /* \"#utility.yul\":843:849   */\n      dup4\n        /* \"#utility.yul\":838:841   */\n      dup4\n        /* \"#utility.yul\":834:850   */\n      add\n        /* \"#utility.yul\":827:854   */\n      mstore\n        /* \"#utility.yul\":722:861   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":867:969   */\n    tag_425:\n        /* \"#utility.yul\":908:914   */\n      0x00\n        /* \"#utility.yul\":959:961   */\n      0x1f\n        /* \"#utility.yul\":955:962   */\n      not\n        /* \"#utility.yul\":950:952   */\n      0x1f\n        /* \"#utility.yul\":943:948   */\n      dup4\n        /* \"#utility.yul\":939:953   */\n      add\n        /* \"#utility.yul\":935:963   */\n      and\n        /* \"#utility.yul\":925:963   */\n      swap1\n      pop\n        /* \"#utility.yul\":867:969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":975:1352   */\n    tag_426:\n        /* \"#utility.yul\":1063:1066   */\n      0x00\n        /* \"#utility.yul\":1091:1130   */\n      tag_484\n        /* \"#utility.yul\":1124:1129   */\n      dup3\n        /* \"#utility.yul\":1091:1130   */\n      tag_422\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":1146:1217   */\n      tag_485\n        /* \"#utility.yul\":1210:1216   */\n      dup2\n        /* \"#utility.yul\":1205:1208   */\n      dup6\n        /* \"#utility.yul\":1146:1217   */\n      tag_423\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":1139:1217   */\n      swap4\n      pop\n        /* \"#utility.yul\":1226:1291   */\n      tag_486\n        /* \"#utility.yul\":1284:1290   */\n      dup2\n        /* \"#utility.yul\":1279:1282   */\n      dup6\n        /* \"#utility.yul\":1272:1276   */\n      0x20\n        /* \"#utility.yul\":1265:1270   */\n      dup7\n        /* \"#utility.yul\":1261:1277   */\n      add\n        /* \"#utility.yul\":1226:1291   */\n      tag_424\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":1316:1345   */\n      tag_487\n        /* \"#utility.yul\":1338:1344   */\n      dup2\n        /* \"#utility.yul\":1316:1345   */\n      tag_425\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":1311:1314   */\n      dup5\n        /* \"#utility.yul\":1307:1346   */\n      add\n        /* \"#utility.yul\":1300:1346   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1352   */\n      pop\n        /* \"#utility.yul\":975:1352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1358:1671   */\n    tag_61:\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1498:1507   */\n      dup3\n        /* \"#utility.yul\":1494:1512   */\n      add\n        /* \"#utility.yul\":1486:1512   */\n      swap1\n      pop\n        /* \"#utility.yul\":1558:1567   */\n      dup2\n        /* \"#utility.yul\":1552:1556   */\n      dup2\n        /* \"#utility.yul\":1548:1568   */\n      sub\n        /* \"#utility.yul\":1544:1545   */\n      0x00\n        /* \"#utility.yul\":1533:1542   */\n      dup4\n        /* \"#utility.yul\":1529:1546   */\n      add\n        /* \"#utility.yul\":1522:1569   */\n      mstore\n        /* \"#utility.yul\":1586:1664   */\n      tag_489\n        /* \"#utility.yul\":1659:1663   */\n      dup2\n        /* \"#utility.yul\":1650:1656   */\n      dup5\n        /* \"#utility.yul\":1586:1664   */\n      tag_426\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":1578:1664   */\n      swap1\n      pop\n        /* \"#utility.yul\":1358:1671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1758:1875   */\n    tag_428:\n        /* \"#utility.yul\":1867:1868   */\n      0x00\n        /* \"#utility.yul\":1864:1865   */\n      dup1\n        /* \"#utility.yul\":1857:1869   */\n      revert\n        /* \"#utility.yul\":2004:2130   */\n    tag_430:\n        /* \"#utility.yul\":2041:2048   */\n      0x00\n        /* \"#utility.yul\":2081:2123   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2074:2079   */\n      dup3\n        /* \"#utility.yul\":2070:2124   */\n      and\n        /* \"#utility.yul\":2059:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":2004:2130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2136:2232   */\n    tag_431:\n        /* \"#utility.yul\":2173:2180   */\n      0x00\n        /* \"#utility.yul\":2202:2226   */\n      tag_495\n        /* \"#utility.yul\":2220:2225   */\n      dup3\n        /* \"#utility.yul\":2202:2226   */\n      tag_430\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":2191:2226   */\n      swap1\n      pop\n        /* \"#utility.yul\":2136:2232   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2238:2360   */\n    tag_432:\n        /* \"#utility.yul\":2311:2335   */\n      tag_497\n        /* \"#utility.yul\":2329:2334   */\n      dup2\n        /* \"#utility.yul\":2311:2335   */\n      tag_431\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":2304:2309   */\n      dup2\n        /* \"#utility.yul\":2301:2336   */\n      eq\n        /* \"#utility.yul\":2291:2354   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":2350:2351   */\n      0x00\n        /* \"#utility.yul\":2347:2348   */\n      dup1\n        /* \"#utility.yul\":2340:2352   */\n      revert\n        /* \"#utility.yul\":2291:2354   */\n    tag_498:\n        /* \"#utility.yul\":2238:2360   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2505   */\n    tag_433:\n        /* \"#utility.yul\":2412:2417   */\n      0x00\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2437:2457   */\n      calldataload\n        /* \"#utility.yul\":2428:2457   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2499   */\n      tag_500\n        /* \"#utility.yul\":2493:2498   */\n      dup2\n        /* \"#utility.yul\":2466:2499   */\n      tag_432\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":2366:2505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2633   */\n    tag_434:\n        /* \"#utility.yul\":2584:2608   */\n      tag_502\n        /* \"#utility.yul\":2602:2607   */\n      dup2\n        /* \"#utility.yul\":2584:2608   */\n      tag_420\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":2577:2582   */\n      dup2\n        /* \"#utility.yul\":2574:2609   */\n      eq\n        /* \"#utility.yul\":2564:2627   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2620:2621   */\n      dup1\n        /* \"#utility.yul\":2613:2625   */\n      revert\n        /* \"#utility.yul\":2564:2627   */\n    tag_503:\n        /* \"#utility.yul\":2511:2633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2639:2778   */\n    tag_435:\n        /* \"#utility.yul\":2685:2690   */\n      0x00\n        /* \"#utility.yul\":2723:2729   */\n      dup2\n        /* \"#utility.yul\":2710:2730   */\n      calldataload\n        /* \"#utility.yul\":2701:2730   */\n      swap1\n      pop\n        /* \"#utility.yul\":2739:2772   */\n      tag_505\n        /* \"#utility.yul\":2766:2771   */\n      dup2\n        /* \"#utility.yul\":2739:2772   */\n      tag_434\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":2639:2778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2784:3258   */\n    tag_65:\n        /* \"#utility.yul\":2852:2858   */\n      0x00\n        /* \"#utility.yul\":2860:2866   */\n      dup1\n        /* \"#utility.yul\":2909:2911   */\n      0x40\n        /* \"#utility.yul\":2897:2906   */\n      dup4\n        /* \"#utility.yul\":2888:2895   */\n      dup6\n        /* \"#utility.yul\":2884:2907   */\n      sub\n        /* \"#utility.yul\":2880:2912   */\n      slt\n        /* \"#utility.yul\":2877:2996   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":2915:2994   */\n      tag_508\n      tag_428\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":2877:2996   */\n    tag_507:\n        /* \"#utility.yul\":3035:3036   */\n      0x00\n        /* \"#utility.yul\":3060:3113   */\n      tag_509\n        /* \"#utility.yul\":3105:3112   */\n      dup6\n        /* \"#utility.yul\":3096:3102   */\n      dup3\n        /* \"#utility.yul\":3085:3094   */\n      dup7\n        /* \"#utility.yul\":3081:3103   */\n      add\n        /* \"#utility.yul\":3060:3113   */\n      tag_433\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":3050:3113   */\n      swap3\n      pop\n        /* \"#utility.yul\":3006:3123   */\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x20\n        /* \"#utility.yul\":3188:3241   */\n      tag_510\n        /* \"#utility.yul\":3233:3240   */\n      dup6\n        /* \"#utility.yul\":3224:3230   */\n      dup3\n        /* \"#utility.yul\":3213:3222   */\n      dup7\n        /* \"#utility.yul\":3209:3231   */\n      add\n        /* \"#utility.yul\":3188:3241   */\n      tag_435\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":3178:3241   */\n      swap2\n      pop\n        /* \"#utility.yul\":3133:3251   */\n      pop\n        /* \"#utility.yul\":2784:3258   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3354   */\n    tag_436:\n        /* \"#utility.yul\":3298:3305   */\n      0x00\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3334:3347   */\n      iszero\n        /* \"#utility.yul\":3327:3348   */\n      iszero\n        /* \"#utility.yul\":3316:3348   */\n      swap1\n      pop\n        /* \"#utility.yul\":3264:3354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3360:3469   */\n    tag_437:\n        /* \"#utility.yul\":3441:3462   */\n      tag_513\n        /* \"#utility.yul\":3456:3461   */\n      dup2\n        /* \"#utility.yul\":3441:3462   */\n      tag_436\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":3436:3439   */\n      dup3\n        /* \"#utility.yul\":3429:3463   */\n      mstore\n        /* \"#utility.yul\":3360:3469   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:3685   */\n    tag_68:\n        /* \"#utility.yul\":3562:3566   */\n      0x00\n        /* \"#utility.yul\":3600:3602   */\n      0x20\n        /* \"#utility.yul\":3589:3598   */\n      dup3\n        /* \"#utility.yul\":3585:3603   */\n      add\n        /* \"#utility.yul\":3577:3603   */\n      swap1\n      pop\n        /* \"#utility.yul\":3613:3678   */\n      tag_515\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3613:3678   */\n      tag_437\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":3475:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_72:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_518\n      tag_428\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":3767:3886   */\n    tag_517:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_519\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_433\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4645   */\n    tag_86:\n        /* \"#utility.yul\":4103:4109   */\n      0x00\n        /* \"#utility.yul\":4111:4117   */\n      dup1\n        /* \"#utility.yul\":4119:4125   */\n      0x00\n        /* \"#utility.yul\":4168:4170   */\n      0x60\n        /* \"#utility.yul\":4156:4165   */\n      dup5\n        /* \"#utility.yul\":4147:4154   */\n      dup7\n        /* \"#utility.yul\":4143:4166   */\n      sub\n        /* \"#utility.yul\":4139:4171   */\n      slt\n        /* \"#utility.yul\":4136:4255   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":4174:4253   */\n      tag_522\n      tag_428\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":4136:4255   */\n    tag_521:\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4319:4372   */\n      tag_523\n        /* \"#utility.yul\":4364:4371   */\n      dup7\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4344:4353   */\n      dup8\n        /* \"#utility.yul\":4340:4362   */\n      add\n        /* \"#utility.yul\":4319:4372   */\n      tag_433\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":4309:4372   */\n      swap4\n      pop\n        /* \"#utility.yul\":4265:4382   */\n      pop\n        /* \"#utility.yul\":4421:4423   */\n      0x20\n        /* \"#utility.yul\":4447:4500   */\n      tag_524\n        /* \"#utility.yul\":4492:4499   */\n      dup7\n        /* \"#utility.yul\":4483:4489   */\n      dup3\n        /* \"#utility.yul\":4472:4481   */\n      dup8\n        /* \"#utility.yul\":4468:4490   */\n      add\n        /* \"#utility.yul\":4447:4500   */\n      tag_433\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":4437:4500   */\n      swap3\n      pop\n        /* \"#utility.yul\":4392:4510   */\n      pop\n        /* \"#utility.yul\":4549:4551   */\n      0x40\n        /* \"#utility.yul\":4575:4628   */\n      tag_525\n        /* \"#utility.yul\":4620:4627   */\n      dup7\n        /* \"#utility.yul\":4611:4617   */\n      dup3\n        /* \"#utility.yul\":4600:4609   */\n      dup8\n        /* \"#utility.yul\":4596:4618   */\n      add\n        /* \"#utility.yul\":4575:4628   */\n      tag_435\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":4565:4628   */\n      swap2\n      pop\n        /* \"#utility.yul\":4520:4638   */\n      pop\n        /* \"#utility.yul\":4026:4645   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4651:5125   */\n    tag_97:\n        /* \"#utility.yul\":4719:4725   */\n      0x00\n        /* \"#utility.yul\":4727:4733   */\n      dup1\n        /* \"#utility.yul\":4776:4778   */\n      0x40\n        /* \"#utility.yul\":4764:4773   */\n      dup4\n        /* \"#utility.yul\":4755:4762   */\n      dup6\n        /* \"#utility.yul\":4751:4774   */\n      sub\n        /* \"#utility.yul\":4747:4779   */\n      slt\n        /* \"#utility.yul\":4744:4863   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":4782:4861   */\n      tag_528\n      tag_428\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":4744:4863   */\n    tag_527:\n        /* \"#utility.yul\":4902:4903   */\n      0x00\n        /* \"#utility.yul\":4927:4980   */\n      tag_529\n        /* \"#utility.yul\":4972:4979   */\n      dup6\n        /* \"#utility.yul\":4963:4969   */\n      dup3\n        /* \"#utility.yul\":4952:4961   */\n      dup7\n        /* \"#utility.yul\":4948:4970   */\n      add\n        /* \"#utility.yul\":4927:4980   */\n      tag_435\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":4917:4980   */\n      swap3\n      pop\n        /* \"#utility.yul\":4873:4990   */\n      pop\n        /* \"#utility.yul\":5029:5031   */\n      0x20\n        /* \"#utility.yul\":5055:5108   */\n      tag_530\n        /* \"#utility.yul\":5100:5107   */\n      dup6\n        /* \"#utility.yul\":5091:5097   */\n      dup3\n        /* \"#utility.yul\":5080:5089   */\n      dup7\n        /* \"#utility.yul\":5076:5098   */\n      add\n        /* \"#utility.yul\":5055:5108   */\n      tag_435\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":5045:5108   */\n      swap2\n      pop\n        /* \"#utility.yul\":5000:5118   */\n      pop\n        /* \"#utility.yul\":4651:5125   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5131:5217   */\n    tag_438:\n        /* \"#utility.yul\":5166:5173   */\n      0x00\n        /* \"#utility.yul\":5206:5210   */\n      0xff\n        /* \"#utility.yul\":5199:5204   */\n      dup3\n        /* \"#utility.yul\":5195:5211   */\n      and\n        /* \"#utility.yul\":5184:5211   */\n      swap1\n      pop\n        /* \"#utility.yul\":5131:5217   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5223:5335   */\n    tag_439:\n        /* \"#utility.yul\":5306:5328   */\n      tag_533\n        /* \"#utility.yul\":5322:5327   */\n      dup2\n        /* \"#utility.yul\":5306:5328   */\n      tag_438\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":5301:5304   */\n      dup3\n        /* \"#utility.yul\":5294:5329   */\n      mstore\n        /* \"#utility.yul\":5223:5335   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5341:5555   */\n    tag_108:\n        /* \"#utility.yul\":5430:5434   */\n      0x00\n        /* \"#utility.yul\":5468:5470   */\n      0x20\n        /* \"#utility.yul\":5457:5466   */\n      dup3\n        /* \"#utility.yul\":5453:5471   */\n      add\n        /* \"#utility.yul\":5445:5471   */\n      swap1\n      pop\n        /* \"#utility.yul\":5481:5548   */\n      tag_535\n        /* \"#utility.yul\":5545:5546   */\n      0x00\n        /* \"#utility.yul\":5534:5543   */\n      dup4\n        /* \"#utility.yul\":5530:5547   */\n      add\n        /* \"#utility.yul\":5521:5527   */\n      dup5\n        /* \"#utility.yul\":5481:5548   */\n      tag_439\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":5341:5555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5890   */\n    tag_140:\n        /* \"#utility.yul\":5620:5626   */\n      0x00\n        /* \"#utility.yul\":5669:5671   */\n      0x20\n        /* \"#utility.yul\":5657:5666   */\n      dup3\n        /* \"#utility.yul\":5648:5655   */\n      dup5\n        /* \"#utility.yul\":5644:5667   */\n      sub\n        /* \"#utility.yul\":5640:5672   */\n      slt\n        /* \"#utility.yul\":5637:5756   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":5675:5754   */\n      tag_538\n      tag_428\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":5637:5756   */\n    tag_537:\n        /* \"#utility.yul\":5795:5796   */\n      0x00\n        /* \"#utility.yul\":5820:5873   */\n      tag_539\n        /* \"#utility.yul\":5865:5872   */\n      dup5\n        /* \"#utility.yul\":5856:5862   */\n      dup3\n        /* \"#utility.yul\":5845:5854   */\n      dup6\n        /* \"#utility.yul\":5841:5863   */\n      add\n        /* \"#utility.yul\":5820:5873   */\n      tag_435\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":5810:5873   */\n      swap2\n      pop\n        /* \"#utility.yul\":5766:5883   */\n      pop\n        /* \"#utility.yul\":5561:5890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5896:6014   */\n    tag_440:\n        /* \"#utility.yul\":5983:6007   */\n      tag_541\n        /* \"#utility.yul\":6001:6006   */\n      dup2\n        /* \"#utility.yul\":5983:6007   */\n      tag_431\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":5978:5981   */\n      dup3\n        /* \"#utility.yul\":5971:6008   */\n      mstore\n        /* \"#utility.yul\":5896:6014   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6020:6242   */\n    tag_154:\n        /* \"#utility.yul\":6113:6117   */\n      0x00\n        /* \"#utility.yul\":6151:6153   */\n      0x20\n        /* \"#utility.yul\":6140:6149   */\n      dup3\n        /* \"#utility.yul\":6136:6154   */\n      add\n        /* \"#utility.yul\":6128:6154   */\n      swap1\n      pop\n        /* \"#utility.yul\":6164:6235   */\n      tag_543\n        /* \"#utility.yul\":6232:6233   */\n      0x00\n        /* \"#utility.yul\":6221:6230   */\n      dup4\n        /* \"#utility.yul\":6217:6234   */\n      add\n        /* \"#utility.yul\":6208:6214   */\n      dup5\n        /* \"#utility.yul\":6164:6235   */\n      tag_440\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":6020:6242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6248:6722   */\n    tag_204:\n        /* \"#utility.yul\":6316:6322   */\n      0x00\n        /* \"#utility.yul\":6324:6330   */\n      dup1\n        /* \"#utility.yul\":6373:6375   */\n      0x40\n        /* \"#utility.yul\":6361:6370   */\n      dup4\n        /* \"#utility.yul\":6352:6359   */\n      dup6\n        /* \"#utility.yul\":6348:6371   */\n      sub\n        /* \"#utility.yul\":6344:6376   */\n      slt\n        /* \"#utility.yul\":6341:6460   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":6379:6458   */\n      tag_546\n      tag_428\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":6341:6460   */\n    tag_545:\n        /* \"#utility.yul\":6499:6500   */\n      0x00\n        /* \"#utility.yul\":6524:6577   */\n      tag_547\n        /* \"#utility.yul\":6569:6576   */\n      dup6\n        /* \"#utility.yul\":6560:6566   */\n      dup3\n        /* \"#utility.yul\":6549:6558   */\n      dup7\n        /* \"#utility.yul\":6545:6567   */\n      add\n        /* \"#utility.yul\":6524:6577   */\n      tag_433\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":6514:6577   */\n      swap3\n      pop\n        /* \"#utility.yul\":6470:6587   */\n      pop\n        /* \"#utility.yul\":6626:6628   */\n      0x20\n        /* \"#utility.yul\":6652:6705   */\n      tag_548\n        /* \"#utility.yul\":6697:6704   */\n      dup6\n        /* \"#utility.yul\":6688:6694   */\n      dup3\n        /* \"#utility.yul\":6677:6686   */\n      dup7\n        /* \"#utility.yul\":6673:6695   */\n      add\n        /* \"#utility.yul\":6652:6705   */\n      tag_433\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":6642:6705   */\n      swap2\n      pop\n        /* \"#utility.yul\":6597:6715   */\n      pop\n        /* \"#utility.yul\":6248:6722   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6728:6908   */\n    tag_441:\n        /* \"#utility.yul\":6776:6853   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6773:6774   */\n      0x00\n        /* \"#utility.yul\":6766:6854   */\n      mstore\n        /* \"#utility.yul\":6873:6877   */\n      0x22\n        /* \"#utility.yul\":6870:6871   */\n      0x04\n        /* \"#utility.yul\":6863:6878   */\n      mstore\n        /* \"#utility.yul\":6897:6901   */\n      0x24\n        /* \"#utility.yul\":6894:6895   */\n      0x00\n        /* \"#utility.yul\":6887:6902   */\n      revert\n        /* \"#utility.yul\":6914:7234   */\n    tag_226:\n        /* \"#utility.yul\":6958:6964   */\n      0x00\n        /* \"#utility.yul\":6995:6996   */\n      0x02\n        /* \"#utility.yul\":6989:6993   */\n      dup3\n        /* \"#utility.yul\":6985:6997   */\n      div\n        /* \"#utility.yul\":6975:6997   */\n      swap1\n      pop\n        /* \"#utility.yul\":7042:7043   */\n      0x01\n        /* \"#utility.yul\":7036:7040   */\n      dup3\n        /* \"#utility.yul\":7032:7044   */\n      and\n        /* \"#utility.yul\":7063:7081   */\n      dup1\n        /* \"#utility.yul\":7053:7134   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":7119:7123   */\n      0x7f\n        /* \"#utility.yul\":7111:7117   */\n      dup3\n        /* \"#utility.yul\":7107:7124   */\n      and\n        /* \"#utility.yul\":7097:7124   */\n      swap2\n      pop\n        /* \"#utility.yul\":7053:7134   */\n    tag_551:\n        /* \"#utility.yul\":7181:7183   */\n      0x20\n        /* \"#utility.yul\":7173:7179   */\n      dup3\n        /* \"#utility.yul\":7170:7184   */\n      lt\n        /* \"#utility.yul\":7150:7168   */\n      dup2\n        /* \"#utility.yul\":7147:7185   */\n      sub\n        /* \"#utility.yul\":7144:7228   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":7200:7218   */\n      tag_553\n      tag_441\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":7144:7228   */\n    tag_552:\n        /* \"#utility.yul\":6965:7234   */\n      pop\n        /* \"#utility.yul\":6914:7234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7240:7420   */\n    tag_442:\n        /* \"#utility.yul\":7288:7365   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7285:7286   */\n      0x00\n        /* \"#utility.yul\":7278:7366   */\n      mstore\n        /* \"#utility.yul\":7385:7389   */\n      0x11\n        /* \"#utility.yul\":7382:7383   */\n      0x04\n        /* \"#utility.yul\":7375:7390   */\n      mstore\n        /* \"#utility.yul\":7409:7413   */\n      0x24\n        /* \"#utility.yul\":7406:7407   */\n      0x00\n        /* \"#utility.yul\":7399:7414   */\n      revert\n        /* \"#utility.yul\":7426:7620   */\n    tag_238:\n        /* \"#utility.yul\":7466:7470   */\n      0x00\n        /* \"#utility.yul\":7486:7506   */\n      tag_556\n        /* \"#utility.yul\":7504:7505   */\n      dup3\n        /* \"#utility.yul\":7486:7506   */\n      tag_420\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":7481:7506   */\n      swap2\n      pop\n        /* \"#utility.yul\":7520:7540   */\n      tag_557\n        /* \"#utility.yul\":7538:7539   */\n      dup4\n        /* \"#utility.yul\":7520:7540   */\n      tag_420\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":7515:7540   */\n      swap3\n      pop\n        /* \"#utility.yul\":7564:7565   */\n      dup3\n        /* \"#utility.yul\":7561:7562   */\n      dup3\n        /* \"#utility.yul\":7557:7566   */\n      sub\n        /* \"#utility.yul\":7549:7566   */\n      swap1\n      pop\n        /* \"#utility.yul\":7588:7589   */\n      dup2\n        /* \"#utility.yul\":7582:7586   */\n      dup2\n        /* \"#utility.yul\":7579:7590   */\n      gt\n        /* \"#utility.yul\":7576:7613   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_559\n      tag_442\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":7576:7613   */\n    tag_558:\n        /* \"#utility.yul\":7426:7620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7626:7806   */\n    tag_443:\n        /* \"#utility.yul\":7674:7751   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7671:7672   */\n      0x00\n        /* \"#utility.yul\":7664:7752   */\n      mstore\n        /* \"#utility.yul\":7771:7775   */\n      0x12\n        /* \"#utility.yul\":7768:7769   */\n      0x04\n        /* \"#utility.yul\":7761:7776   */\n      mstore\n        /* \"#utility.yul\":7795:7799   */\n      0x24\n        /* \"#utility.yul\":7792:7793   */\n      0x00\n        /* \"#utility.yul\":7785:7800   */\n      revert\n        /* \"#utility.yul\":7812:7997   */\n    tag_240:\n        /* \"#utility.yul\":7852:7853   */\n      0x00\n        /* \"#utility.yul\":7869:7889   */\n      tag_562\n        /* \"#utility.yul\":7887:7888   */\n      dup3\n        /* \"#utility.yul\":7869:7889   */\n      tag_420\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":7864:7889   */\n      swap2\n      pop\n        /* \"#utility.yul\":7903:7923   */\n      tag_563\n        /* \"#utility.yul\":7921:7922   */\n      dup4\n        /* \"#utility.yul\":7903:7923   */\n      tag_420\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":7898:7923   */\n      swap3\n      pop\n        /* \"#utility.yul\":7942:7943   */\n      dup3\n        /* \"#utility.yul\":7932:7967   */\n      tag_564\n      jumpi\n        /* \"#utility.yul\":7947:7965   */\n      tag_565\n      tag_443\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":7932:7967   */\n    tag_564:\n        /* \"#utility.yul\":7989:7990   */\n      dup3\n        /* \"#utility.yul\":7986:7987   */\n      dup3\n        /* \"#utility.yul\":7982:7991   */\n      div\n        /* \"#utility.yul\":7977:7991   */\n      swap1\n      pop\n        /* \"#utility.yul\":7812:7997   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8003:8413   */\n    tag_242:\n        /* \"#utility.yul\":8043:8050   */\n      0x00\n        /* \"#utility.yul\":8066:8086   */\n      tag_567\n        /* \"#utility.yul\":8084:8085   */\n      dup3\n        /* \"#utility.yul\":8066:8086   */\n      tag_420\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":8061:8086   */\n      swap2\n      pop\n        /* \"#utility.yul\":8100:8120   */\n      tag_568\n        /* \"#utility.yul\":8118:8119   */\n      dup4\n        /* \"#utility.yul\":8100:8120   */\n      tag_420\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":8095:8120   */\n      swap3\n      pop\n        /* \"#utility.yul\":8155:8156   */\n      dup3\n        /* \"#utility.yul\":8152:8153   */\n      dup3\n        /* \"#utility.yul\":8148:8157   */\n      mul\n        /* \"#utility.yul\":8177:8207   */\n      tag_569\n        /* \"#utility.yul\":8195:8206   */\n      dup2\n        /* \"#utility.yul\":8177:8207   */\n      tag_420\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":8166:8207   */\n      swap2\n      pop\n        /* \"#utility.yul\":8356:8357   */\n      dup3\n        /* \"#utility.yul\":8347:8354   */\n      dup3\n        /* \"#utility.yul\":8343:8358   */\n      div\n        /* \"#utility.yul\":8340:8341   */\n      dup5\n        /* \"#utility.yul\":8337:8359   */\n      eq\n        /* \"#utility.yul\":8317:8318   */\n      dup4\n        /* \"#utility.yul\":8310:8319   */\n      iszero\n        /* \"#utility.yul\":8290:8373   */\n      or\n        /* \"#utility.yul\":8267:8406   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":8386:8404   */\n      tag_571\n      tag_442\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":8267:8406   */\n    tag_570:\n        /* \"#utility.yul\":8051:8413   */\n      pop\n        /* \"#utility.yul\":8003:8413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8419:8639   */\n    tag_444:\n        /* \"#utility.yul\":8559:8593   */\n      0x456e642074696d65206d7573742062652061667465722073746172742074696d\n        /* \"#utility.yul\":8555:8556   */\n      0x00\n        /* \"#utility.yul\":8547:8553   */\n      dup3\n        /* \"#utility.yul\":8543:8557   */\n      add\n        /* \"#utility.yul\":8536:8594   */\n      mstore\n        /* \"#utility.yul\":8628:8631   */\n      0x6500000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8623:8625   */\n      0x20\n        /* \"#utility.yul\":8615:8621   */\n      dup3\n        /* \"#utility.yul\":8611:8626   */\n      add\n        /* \"#utility.yul\":8604:8632   */\n      mstore\n        /* \"#utility.yul\":8419:8639   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8645:9011   */\n    tag_445:\n        /* \"#utility.yul\":8787:8790   */\n      0x00\n        /* \"#utility.yul\":8808:8875   */\n      tag_574\n        /* \"#utility.yul\":8872:8874   */\n      0x21\n        /* \"#utility.yul\":8867:8870   */\n      dup4\n        /* \"#utility.yul\":8808:8875   */\n      tag_423\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":8801:8875   */\n      swap2\n      pop\n        /* \"#utility.yul\":8884:8977   */\n      tag_575\n        /* \"#utility.yul\":8973:8976   */\n      dup3\n        /* \"#utility.yul\":8884:8977   */\n      tag_444\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":9002:9004   */\n      0x40\n        /* \"#utility.yul\":8997:9000   */\n      dup3\n        /* \"#utility.yul\":8993:9005   */\n      add\n        /* \"#utility.yul\":8986:9005   */\n      swap1\n      pop\n        /* \"#utility.yul\":8645:9011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9017:9436   */\n    tag_255:\n        /* \"#utility.yul\":9183:9187   */\n      0x00\n        /* \"#utility.yul\":9221:9223   */\n      0x20\n        /* \"#utility.yul\":9210:9219   */\n      dup3\n        /* \"#utility.yul\":9206:9224   */\n      add\n        /* \"#utility.yul\":9198:9224   */\n      swap1\n      pop\n        /* \"#utility.yul\":9270:9279   */\n      dup2\n        /* \"#utility.yul\":9264:9268   */\n      dup2\n        /* \"#utility.yul\":9260:9280   */\n      sub\n        /* \"#utility.yul\":9256:9257   */\n      0x00\n        /* \"#utility.yul\":9245:9254   */\n      dup4\n        /* \"#utility.yul\":9241:9258   */\n      add\n        /* \"#utility.yul\":9234:9281   */\n      mstore\n        /* \"#utility.yul\":9298:9429   */\n      tag_577\n        /* \"#utility.yul\":9424:9428   */\n      dup2\n        /* \"#utility.yul\":9298:9429   */\n      tag_445\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":9290:9429   */\n      swap1\n      pop\n        /* \"#utility.yul\":9017:9436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9442:9662   */\n    tag_446:\n        /* \"#utility.yul\":9582:9616   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":9578:9579   */\n      0x00\n        /* \"#utility.yul\":9570:9576   */\n      dup3\n        /* \"#utility.yul\":9566:9580   */\n      add\n        /* \"#utility.yul\":9559:9617   */\n      mstore\n        /* \"#utility.yul\":9651:9654   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9646:9648   */\n      0x20\n        /* \"#utility.yul\":9638:9644   */\n      dup3\n        /* \"#utility.yul\":9634:9649   */\n      add\n        /* \"#utility.yul\":9627:9655   */\n      mstore\n        /* \"#utility.yul\":9442:9662   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9668:10034   */\n    tag_447:\n        /* \"#utility.yul\":9810:9813   */\n      0x00\n        /* \"#utility.yul\":9831:9898   */\n      tag_580\n        /* \"#utility.yul\":9895:9897   */\n      0x21\n        /* \"#utility.yul\":9890:9893   */\n      dup4\n        /* \"#utility.yul\":9831:9898   */\n      tag_423\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":9824:9898   */\n      swap2\n      pop\n        /* \"#utility.yul\":9907:10000   */\n      tag_581\n        /* \"#utility.yul\":9996:9999   */\n      dup3\n        /* \"#utility.yul\":9907:10000   */\n      tag_446\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":10025:10027   */\n      0x40\n        /* \"#utility.yul\":10020:10023   */\n      dup3\n        /* \"#utility.yul\":10016:10028   */\n      add\n        /* \"#utility.yul\":10009:10028   */\n      swap1\n      pop\n        /* \"#utility.yul\":9668:10034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10040:10459   */\n    tag_275:\n        /* \"#utility.yul\":10206:10210   */\n      0x00\n        /* \"#utility.yul\":10244:10246   */\n      0x20\n        /* \"#utility.yul\":10233:10242   */\n      dup3\n        /* \"#utility.yul\":10229:10247   */\n      add\n        /* \"#utility.yul\":10221:10247   */\n      swap1\n      pop\n        /* \"#utility.yul\":10293:10302   */\n      dup2\n        /* \"#utility.yul\":10287:10291   */\n      dup2\n        /* \"#utility.yul\":10283:10303   */\n      sub\n        /* \"#utility.yul\":10279:10280   */\n      0x00\n        /* \"#utility.yul\":10268:10277   */\n      dup4\n        /* \"#utility.yul\":10264:10281   */\n      add\n        /* \"#utility.yul\":10257:10304   */\n      mstore\n        /* \"#utility.yul\":10321:10452   */\n      tag_583\n        /* \"#utility.yul\":10447:10451   */\n      dup2\n        /* \"#utility.yul\":10321:10452   */\n      tag_447\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":10313:10452   */\n      swap1\n      pop\n        /* \"#utility.yul\":10040:10459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10465:10636   */\n    tag_448:\n        /* \"#utility.yul\":10605:10628   */\n      0x496e73756666696369656e742062616c616e63652e0000000000000000000000\n        /* \"#utility.yul\":10601:10602   */\n      0x00\n        /* \"#utility.yul\":10593:10599   */\n      dup3\n        /* \"#utility.yul\":10589:10603   */\n      add\n        /* \"#utility.yul\":10582:10629   */\n      mstore\n        /* \"#utility.yul\":10465:10636   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10642:11008   */\n    tag_449:\n        /* \"#utility.yul\":10784:10787   */\n      0x00\n        /* \"#utility.yul\":10805:10872   */\n      tag_586\n        /* \"#utility.yul\":10869:10871   */\n      0x15\n        /* \"#utility.yul\":10864:10867   */\n      dup4\n        /* \"#utility.yul\":10805:10872   */\n      tag_423\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":10798:10872   */\n      swap2\n      pop\n        /* \"#utility.yul\":10881:10974   */\n      tag_587\n        /* \"#utility.yul\":10970:10973   */\n      dup3\n        /* \"#utility.yul\":10881:10974   */\n      tag_448\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":10999:11001   */\n      0x20\n        /* \"#utility.yul\":10994:10997   */\n      dup3\n        /* \"#utility.yul\":10990:11002   */\n      add\n        /* \"#utility.yul\":10983:11002   */\n      swap1\n      pop\n        /* \"#utility.yul\":10642:11008   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11014:11433   */\n    tag_279:\n        /* \"#utility.yul\":11180:11184   */\n      0x00\n        /* \"#utility.yul\":11218:11220   */\n      0x20\n        /* \"#utility.yul\":11207:11216   */\n      dup3\n        /* \"#utility.yul\":11203:11221   */\n      add\n        /* \"#utility.yul\":11195:11221   */\n      swap1\n      pop\n        /* \"#utility.yul\":11267:11276   */\n      dup2\n        /* \"#utility.yul\":11261:11265   */\n      dup2\n        /* \"#utility.yul\":11257:11277   */\n      sub\n        /* \"#utility.yul\":11253:11254   */\n      0x00\n        /* \"#utility.yul\":11242:11251   */\n      dup4\n        /* \"#utility.yul\":11238:11255   */\n      add\n        /* \"#utility.yul\":11231:11278   */\n      mstore\n        /* \"#utility.yul\":11295:11426   */\n      tag_589\n        /* \"#utility.yul\":11421:11425   */\n      dup2\n        /* \"#utility.yul\":11295:11426   */\n      tag_449\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":11287:11426   */\n      swap1\n      pop\n        /* \"#utility.yul\":11014:11433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11439:11630   */\n    tag_282:\n        /* \"#utility.yul\":11479:11482   */\n      0x00\n        /* \"#utility.yul\":11498:11518   */\n      tag_591\n        /* \"#utility.yul\":11516:11517   */\n      dup3\n        /* \"#utility.yul\":11498:11518   */\n      tag_420\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":11493:11518   */\n      swap2\n      pop\n        /* \"#utility.yul\":11532:11552   */\n      tag_592\n        /* \"#utility.yul\":11550:11551   */\n      dup4\n        /* \"#utility.yul\":11532:11552   */\n      tag_420\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":11527:11552   */\n      swap3\n      pop\n        /* \"#utility.yul\":11575:11576   */\n      dup3\n        /* \"#utility.yul\":11572:11573   */\n      dup3\n        /* \"#utility.yul\":11568:11577   */\n      add\n        /* \"#utility.yul\":11561:11577   */\n      swap1\n      pop\n        /* \"#utility.yul\":11596:11599   */\n      dup1\n        /* \"#utility.yul\":11593:11594   */\n      dup3\n        /* \"#utility.yul\":11590:11600   */\n      gt\n        /* \"#utility.yul\":11587:11623   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":11603:11621   */\n      tag_594\n      tag_442\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":11587:11623   */\n    tag_593:\n        /* \"#utility.yul\":11439:11630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11636:11809   */\n    tag_450:\n        /* \"#utility.yul\":11776:11801   */\n      0x50726573616c65206e6f74207374617274656420796574000000000000000000\n        /* \"#utility.yul\":11772:11773   */\n      0x00\n        /* \"#utility.yul\":11764:11770   */\n      dup3\n        /* \"#utility.yul\":11760:11774   */\n      add\n        /* \"#utility.yul\":11753:11802   */\n      mstore\n        /* \"#utility.yul\":11636:11809   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11815:12181   */\n    tag_451:\n        /* \"#utility.yul\":11957:11960   */\n      0x00\n        /* \"#utility.yul\":11978:12045   */\n      tag_597\n        /* \"#utility.yul\":12042:12044   */\n      0x17\n        /* \"#utility.yul\":12037:12040   */\n      dup4\n        /* \"#utility.yul\":11978:12045   */\n      tag_423\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":11971:12045   */\n      swap2\n      pop\n        /* \"#utility.yul\":12054:12147   */\n      tag_598\n        /* \"#utility.yul\":12143:12146   */\n      dup3\n        /* \"#utility.yul\":12054:12147   */\n      tag_450\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":12172:12174   */\n      0x20\n        /* \"#utility.yul\":12167:12170   */\n      dup3\n        /* \"#utility.yul\":12163:12175   */\n      add\n        /* \"#utility.yul\":12156:12175   */\n      swap1\n      pop\n        /* \"#utility.yul\":11815:12181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12187:12606   */\n    tag_287:\n        /* \"#utility.yul\":12353:12357   */\n      0x00\n        /* \"#utility.yul\":12391:12393   */\n      0x20\n        /* \"#utility.yul\":12380:12389   */\n      dup3\n        /* \"#utility.yul\":12376:12394   */\n      add\n        /* \"#utility.yul\":12368:12394   */\n      swap1\n      pop\n        /* \"#utility.yul\":12440:12449   */\n      dup2\n        /* \"#utility.yul\":12434:12438   */\n      dup2\n        /* \"#utility.yul\":12430:12450   */\n      sub\n        /* \"#utility.yul\":12426:12427   */\n      0x00\n        /* \"#utility.yul\":12415:12424   */\n      dup4\n        /* \"#utility.yul\":12411:12428   */\n      add\n        /* \"#utility.yul\":12404:12451   */\n      mstore\n        /* \"#utility.yul\":12468:12599   */\n      tag_600\n        /* \"#utility.yul\":12594:12598   */\n      dup2\n        /* \"#utility.yul\":12468:12599   */\n      tag_451\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":12460:12599   */\n      swap1\n      pop\n        /* \"#utility.yul\":12187:12606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12612:12782   */\n    tag_452:\n        /* \"#utility.yul\":12752:12774   */\n      0x4e6f207265776172647320617661696c61626c65000000000000000000000000\n        /* \"#utility.yul\":12748:12749   */\n      0x00\n        /* \"#utility.yul\":12740:12746   */\n      dup3\n        /* \"#utility.yul\":12736:12750   */\n      add\n        /* \"#utility.yul\":12729:12775   */\n      mstore\n        /* \"#utility.yul\":12612:12782   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12788:13154   */\n    tag_453:\n        /* \"#utility.yul\":12930:12933   */\n      0x00\n        /* \"#utility.yul\":12951:13018   */\n      tag_603\n        /* \"#utility.yul\":13015:13017   */\n      0x14\n        /* \"#utility.yul\":13010:13013   */\n      dup4\n        /* \"#utility.yul\":12951:13018   */\n      tag_423\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":12944:13018   */\n      swap2\n      pop\n        /* \"#utility.yul\":13027:13120   */\n      tag_604\n        /* \"#utility.yul\":13116:13119   */\n      dup3\n        /* \"#utility.yul\":13027:13120   */\n      tag_452\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":13145:13147   */\n      0x20\n        /* \"#utility.yul\":13140:13143   */\n      dup3\n        /* \"#utility.yul\":13136:13148   */\n      add\n        /* \"#utility.yul\":13129:13148   */\n      swap1\n      pop\n        /* \"#utility.yul\":12788:13154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13160:13579   */\n    tag_291:\n        /* \"#utility.yul\":13326:13330   */\n      0x00\n        /* \"#utility.yul\":13364:13366   */\n      0x20\n        /* \"#utility.yul\":13353:13362   */\n      dup3\n        /* \"#utility.yul\":13349:13367   */\n      add\n        /* \"#utility.yul\":13341:13367   */\n      swap1\n      pop\n        /* \"#utility.yul\":13413:13422   */\n      dup2\n        /* \"#utility.yul\":13407:13411   */\n      dup2\n        /* \"#utility.yul\":13403:13423   */\n      sub\n        /* \"#utility.yul\":13399:13400   */\n      0x00\n        /* \"#utility.yul\":13388:13397   */\n      dup4\n        /* \"#utility.yul\":13384:13401   */\n      add\n        /* \"#utility.yul\":13377:13424   */\n      mstore\n        /* \"#utility.yul\":13441:13572   */\n      tag_606\n        /* \"#utility.yul\":13567:13571   */\n      dup2\n        /* \"#utility.yul\":13441:13572   */\n      tag_453\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":13433:13572   */\n      swap1\n      pop\n        /* \"#utility.yul\":13160:13579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13585:13687   */\n    tag_454:\n        /* \"#utility.yul\":13627:13635   */\n      0x00\n        /* \"#utility.yul\":13674:13679   */\n      dup2\n        /* \"#utility.yul\":13671:13672   */\n      0x01\n        /* \"#utility.yul\":13667:13680   */\n      shr\n        /* \"#utility.yul\":13646:13680   */\n      swap1\n      pop\n        /* \"#utility.yul\":13585:13687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13693:14541   */\n    tag_455:\n        /* \"#utility.yul\":13754:13759   */\n      0x00\n        /* \"#utility.yul\":13761:13765   */\n      dup1\n        /* \"#utility.yul\":13785:13791   */\n      dup3\n        /* \"#utility.yul\":13776:13791   */\n      swap2\n      pop\n        /* \"#utility.yul\":13809:13814   */\n      dup4\n        /* \"#utility.yul\":13800:13814   */\n      swap1\n      pop\n        /* \"#utility.yul\":13823:14535   */\n    tag_609:\n        /* \"#utility.yul\":13844:13845   */\n      0x01\n        /* \"#utility.yul\":13834:13842   */\n      dup6\n        /* \"#utility.yul\":13831:13846   */\n      gt\n        /* \"#utility.yul\":13823:14535   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":13939:13943   */\n      dup1\n        /* \"#utility.yul\":13934:13937   */\n      dup7\n        /* \"#utility.yul\":13930:13944   */\n      div\n        /* \"#utility.yul\":13924:13928   */\n      dup2\n        /* \"#utility.yul\":13921:13945   */\n      gt\n        /* \"#utility.yul\":13918:13968   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":13948:13966   */\n      tag_613\n      tag_442\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":13918:13968   */\n    tag_612:\n        /* \"#utility.yul\":13998:13999   */\n      0x01\n        /* \"#utility.yul\":13988:13996   */\n      dup6\n        /* \"#utility.yul\":13984:14000   */\n      and\n        /* \"#utility.yul\":13981:14432   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":14413:14417   */\n      dup1\n        /* \"#utility.yul\":14406:14411   */\n      dup3\n        /* \"#utility.yul\":14402:14418   */\n      mul\n        /* \"#utility.yul\":14393:14418   */\n      swap2\n      pop\n        /* \"#utility.yul\":13981:14432   */\n    tag_614:\n        /* \"#utility.yul\":14463:14467   */\n      dup1\n        /* \"#utility.yul\":14457:14461   */\n      dup2\n        /* \"#utility.yul\":14453:14468   */\n      mul\n        /* \"#utility.yul\":14445:14468   */\n      swap1\n      pop\n        /* \"#utility.yul\":14493:14525   */\n      tag_615\n        /* \"#utility.yul\":14516:14524   */\n      dup6\n        /* \"#utility.yul\":14493:14525   */\n      tag_454\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":14481:14525   */\n      swap5\n      pop\n        /* \"#utility.yul\":13823:14535   */\n      jump(tag_609)\n    tag_611:\n        /* \"#utility.yul\":13693:14541   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14547:15620   */\n    tag_456:\n        /* \"#utility.yul\":14601:14606   */\n      0x00\n        /* \"#utility.yul\":14792:14800   */\n      dup3\n        /* \"#utility.yul\":14782:14822   */\n      tag_617\n      jumpi\n        /* \"#utility.yul\":14813:14814   */\n      0x01\n        /* \"#utility.yul\":14804:14814   */\n      swap1\n      pop\n        /* \"#utility.yul\":14815:14820   */\n      jump(tag_616)\n        /* \"#utility.yul\":14782:14822   */\n    tag_617:\n        /* \"#utility.yul\":14841:14845   */\n      dup2\n        /* \"#utility.yul\":14831:14867   */\n      tag_618\n      jumpi\n        /* \"#utility.yul\":14858:14859   */\n      0x00\n        /* \"#utility.yul\":14849:14859   */\n      swap1\n      pop\n        /* \"#utility.yul\":14860:14865   */\n      jump(tag_616)\n        /* \"#utility.yul\":14831:14867   */\n    tag_618:\n        /* \"#utility.yul\":14927:14931   */\n      dup2\n        /* \"#utility.yul\":14975:14976   */\n      0x01\n        /* \"#utility.yul\":14970:14997   */\n      dup2\n      eq\n      tag_620\n      jumpi\n        /* \"#utility.yul\":15011:15012   */\n      0x02\n        /* \"#utility.yul\":15006:15197   */\n      dup2\n      eq\n      tag_621\n      jumpi\n        /* \"#utility.yul\":14920:15197   */\n      jump(tag_619)\n        /* \"#utility.yul\":14970:14997   */\n    tag_620:\n        /* \"#utility.yul\":14988:14989   */\n      0x01\n        /* \"#utility.yul\":14979:14989   */\n      swap2\n      pop\n        /* \"#utility.yul\":14990:14995   */\n      pop\n      jump(tag_616)\n        /* \"#utility.yul\":15006:15197   */\n    tag_621:\n        /* \"#utility.yul\":15051:15054   */\n      0xff\n        /* \"#utility.yul\":15041:15049   */\n      dup5\n        /* \"#utility.yul\":15038:15055   */\n      gt\n        /* \"#utility.yul\":15035:15078   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":15058:15076   */\n      tag_623\n      tag_442\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":15035:15078   */\n    tag_622:\n        /* \"#utility.yul\":15107:15115   */\n      dup4\n        /* \"#utility.yul\":15104:15105   */\n      0x02\n        /* \"#utility.yul\":15100:15116   */\n      exp\n        /* \"#utility.yul\":15091:15116   */\n      swap2\n      pop\n        /* \"#utility.yul\":15142:15145   */\n      dup5\n        /* \"#utility.yul\":15135:15140   */\n      dup3\n        /* \"#utility.yul\":15132:15146   */\n      gt\n        /* \"#utility.yul\":15129:15169   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":15149:15167   */\n      tag_625\n      tag_442\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":15129:15169   */\n    tag_624:\n        /* \"#utility.yul\":15182:15187   */\n      pop\n      jump(tag_616)\n        /* \"#utility.yul\":14920:15197   */\n    tag_619:\n      pop\n        /* \"#utility.yul\":15306:15308   */\n      0x20\n        /* \"#utility.yul\":15296:15304   */\n      dup4\n        /* \"#utility.yul\":15293:15309   */\n      lt\n        /* \"#utility.yul\":15287:15290   */\n      0x0133\n        /* \"#utility.yul\":15281:15285   */\n      dup4\n        /* \"#utility.yul\":15278:15291   */\n      lt\n        /* \"#utility.yul\":15274:15310   */\n      and\n        /* \"#utility.yul\":15256:15258   */\n      0x4e\n        /* \"#utility.yul\":15246:15254   */\n      dup5\n        /* \"#utility.yul\":15243:15259   */\n      lt\n        /* \"#utility.yul\":15238:15240   */\n      0x0b\n        /* \"#utility.yul\":15232:15236   */\n      dup5\n        /* \"#utility.yul\":15229:15241   */\n      lt\n        /* \"#utility.yul\":15225:15260   */\n      and\n        /* \"#utility.yul\":15209:15320   */\n      or\n        /* \"#utility.yul\":15206:15452   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":15362:15370   */\n      dup3\n        /* \"#utility.yul\":15356:15360   */\n      dup3\n        /* \"#utility.yul\":15352:15371   */\n      exp\n        /* \"#utility.yul\":15343:15371   */\n      swap1\n      pop\n        /* \"#utility.yul\":15397:15400   */\n      dup4\n        /* \"#utility.yul\":15390:15395   */\n      dup2\n        /* \"#utility.yul\":15387:15401   */\n      gt\n        /* \"#utility.yul\":15384:15424   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":15404:15422   */\n      tag_628\n      tag_442\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":15384:15424   */\n    tag_627:\n        /* \"#utility.yul\":15437:15442   */\n      jump(tag_616)\n        /* \"#utility.yul\":15206:15452   */\n    tag_626:\n        /* \"#utility.yul\":15477:15519   */\n      tag_629\n        /* \"#utility.yul\":15515:15518   */\n      dup5\n        /* \"#utility.yul\":15505:15513   */\n      dup5\n        /* \"#utility.yul\":15499:15503   */\n      dup5\n        /* \"#utility.yul\":15496:15497   */\n      0x01\n        /* \"#utility.yul\":15477:15519   */\n      tag_455\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":15462:15519   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":15551:15555   */\n      dup2\n        /* \"#utility.yul\":15546:15549   */\n      dup5\n        /* \"#utility.yul\":15542:15556   */\n      div\n        /* \"#utility.yul\":15535:15540   */\n      dup2\n        /* \"#utility.yul\":15532:15557   */\n      gt\n        /* \"#utility.yul\":15529:15580   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":15560:15578   */\n      tag_631\n      tag_442\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":15529:15580   */\n    tag_630:\n        /* \"#utility.yul\":15609:15613   */\n      dup2\n        /* \"#utility.yul\":15602:15607   */\n      dup2\n        /* \"#utility.yul\":15598:15614   */\n      mul\n        /* \"#utility.yul\":15589:15614   */\n      swap1\n      pop\n        /* \"#utility.yul\":14547:15620   */\n    tag_616:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15626:15907   */\n    tag_298:\n        /* \"#utility.yul\":15684:15689   */\n      0x00\n        /* \"#utility.yul\":15708:15731   */\n      tag_633\n        /* \"#utility.yul\":15726:15730   */\n      dup3\n        /* \"#utility.yul\":15708:15731   */\n      tag_420\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":15700:15731   */\n      swap2\n      pop\n        /* \"#utility.yul\":15752:15777   */\n      tag_634\n        /* \"#utility.yul\":15768:15776   */\n      dup4\n        /* \"#utility.yul\":15752:15777   */\n      tag_438\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":15740:15777   */\n      swap3\n      pop\n        /* \"#utility.yul\":15796:15900   */\n      tag_635\n        /* \"#utility.yul\":15833:15899   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15823:15831   */\n      dup5\n        /* \"#utility.yul\":15817:15821   */\n      dup5\n        /* \"#utility.yul\":15796:15900   */\n      tag_456\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":15787:15900   */\n      swap1\n      pop\n        /* \"#utility.yul\":15626:15907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15913:16082   */\n    tag_457:\n        /* \"#utility.yul\":16053:16074   */\n      0x416c72656164792077686974656c697374656400000000000000000000000000\n        /* \"#utility.yul\":16049:16050   */\n      0x00\n        /* \"#utility.yul\":16041:16047   */\n      dup3\n        /* \"#utility.yul\":16037:16051   */\n      add\n        /* \"#utility.yul\":16030:16075   */\n      mstore\n        /* \"#utility.yul\":15913:16082   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16088:16454   */\n    tag_458:\n        /* \"#utility.yul\":16230:16233   */\n      0x00\n        /* \"#utility.yul\":16251:16318   */\n      tag_638\n        /* \"#utility.yul\":16315:16317   */\n      0x13\n        /* \"#utility.yul\":16310:16313   */\n      dup4\n        /* \"#utility.yul\":16251:16318   */\n      tag_423\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":16244:16318   */\n      swap2\n      pop\n        /* \"#utility.yul\":16327:16420   */\n      tag_639\n        /* \"#utility.yul\":16416:16419   */\n      dup3\n        /* \"#utility.yul\":16327:16420   */\n      tag_457\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":16445:16447   */\n      0x20\n        /* \"#utility.yul\":16440:16443   */\n      dup3\n        /* \"#utility.yul\":16436:16448   */\n      add\n        /* \"#utility.yul\":16429:16448   */\n      swap1\n      pop\n        /* \"#utility.yul\":16088:16454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16460:16879   */\n    tag_311:\n        /* \"#utility.yul\":16626:16630   */\n      0x00\n        /* \"#utility.yul\":16664:16666   */\n      0x20\n        /* \"#utility.yul\":16653:16662   */\n      dup3\n        /* \"#utility.yul\":16649:16667   */\n      add\n        /* \"#utility.yul\":16641:16667   */\n      swap1\n      pop\n        /* \"#utility.yul\":16713:16722   */\n      dup2\n        /* \"#utility.yul\":16707:16711   */\n      dup2\n        /* \"#utility.yul\":16703:16723   */\n      sub\n        /* \"#utility.yul\":16699:16700   */\n      0x00\n        /* \"#utility.yul\":16688:16697   */\n      dup4\n        /* \"#utility.yul\":16684:16701   */\n      add\n        /* \"#utility.yul\":16677:16724   */\n      mstore\n        /* \"#utility.yul\":16741:16872   */\n      tag_641\n        /* \"#utility.yul\":16867:16871   */\n      dup2\n        /* \"#utility.yul\":16741:16872   */\n      tag_458\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":16733:16872   */\n      swap1\n      pop\n        /* \"#utility.yul\":16460:16879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16885:17056   */\n    tag_459:\n        /* \"#utility.yul\":17025:17048   */\n      0x43616e6e6f7420726566657220796f757273656c660000000000000000000000\n        /* \"#utility.yul\":17021:17022   */\n      0x00\n        /* \"#utility.yul\":17013:17019   */\n      dup3\n        /* \"#utility.yul\":17009:17023   */\n      add\n        /* \"#utility.yul\":17002:17049   */\n      mstore\n        /* \"#utility.yul\":16885:17056   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17062:17428   */\n    tag_460:\n        /* \"#utility.yul\":17204:17207   */\n      0x00\n        /* \"#utility.yul\":17225:17292   */\n      tag_644\n        /* \"#utility.yul\":17289:17291   */\n      0x15\n        /* \"#utility.yul\":17284:17287   */\n      dup4\n        /* \"#utility.yul\":17225:17292   */\n      tag_423\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":17218:17292   */\n      swap2\n      pop\n        /* \"#utility.yul\":17301:17394   */\n      tag_645\n        /* \"#utility.yul\":17390:17393   */\n      dup3\n        /* \"#utility.yul\":17301:17394   */\n      tag_459\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":17419:17421   */\n      0x20\n        /* \"#utility.yul\":17414:17417   */\n      dup3\n        /* \"#utility.yul\":17410:17422   */\n      add\n        /* \"#utility.yul\":17403:17422   */\n      swap1\n      pop\n        /* \"#utility.yul\":17062:17428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17434:17853   */\n    tag_314:\n        /* \"#utility.yul\":17600:17604   */\n      0x00\n        /* \"#utility.yul\":17638:17640   */\n      0x20\n        /* \"#utility.yul\":17627:17636   */\n      dup3\n        /* \"#utility.yul\":17623:17641   */\n      add\n        /* \"#utility.yul\":17615:17641   */\n      swap1\n      pop\n        /* \"#utility.yul\":17687:17696   */\n      dup2\n        /* \"#utility.yul\":17681:17685   */\n      dup2\n        /* \"#utility.yul\":17677:17697   */\n      sub\n        /* \"#utility.yul\":17673:17674   */\n      0x00\n        /* \"#utility.yul\":17662:17671   */\n      dup4\n        /* \"#utility.yul\":17658:17675   */\n      add\n        /* \"#utility.yul\":17651:17698   */\n      mstore\n        /* \"#utility.yul\":17715:17846   */\n      tag_647\n        /* \"#utility.yul\":17841:17845   */\n      dup2\n        /* \"#utility.yul\":17715:17846   */\n      tag_460\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":17707:17846   */\n      swap1\n      pop\n        /* \"#utility.yul\":17434:17853   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17859:18026   */\n    tag_461:\n        /* \"#utility.yul\":17999:18018   */\n      0x4e6f20746f6b656e73207374616b65642e000000000000000000000000000000\n        /* \"#utility.yul\":17995:17996   */\n      0x00\n        /* \"#utility.yul\":17987:17993   */\n      dup3\n        /* \"#utility.yul\":17983:17997   */\n      add\n        /* \"#utility.yul\":17976:18019   */\n      mstore\n        /* \"#utility.yul\":17859:18026   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18032:18398   */\n    tag_462:\n        /* \"#utility.yul\":18174:18177   */\n      0x00\n        /* \"#utility.yul\":18195:18262   */\n      tag_650\n        /* \"#utility.yul\":18259:18261   */\n      0x11\n        /* \"#utility.yul\":18254:18257   */\n      dup4\n        /* \"#utility.yul\":18195:18262   */\n      tag_423\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":18188:18262   */\n      swap2\n      pop\n        /* \"#utility.yul\":18271:18364   */\n      tag_651\n        /* \"#utility.yul\":18360:18363   */\n      dup3\n        /* \"#utility.yul\":18271:18364   */\n      tag_461\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":18389:18391   */\n      0x20\n        /* \"#utility.yul\":18384:18387   */\n      dup3\n        /* \"#utility.yul\":18380:18392   */\n      add\n        /* \"#utility.yul\":18373:18392   */\n      swap1\n      pop\n        /* \"#utility.yul\":18032:18398   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18404:18823   */\n    tag_321:\n        /* \"#utility.yul\":18570:18574   */\n      0x00\n        /* \"#utility.yul\":18608:18610   */\n      0x20\n        /* \"#utility.yul\":18597:18606   */\n      dup3\n        /* \"#utility.yul\":18593:18611   */\n      add\n        /* \"#utility.yul\":18585:18611   */\n      swap1\n      pop\n        /* \"#utility.yul\":18657:18666   */\n      dup2\n        /* \"#utility.yul\":18651:18655   */\n      dup2\n        /* \"#utility.yul\":18647:18667   */\n      sub\n        /* \"#utility.yul\":18643:18644   */\n      0x00\n        /* \"#utility.yul\":18632:18641   */\n      dup4\n        /* \"#utility.yul\":18628:18645   */\n      add\n        /* \"#utility.yul\":18621:18668   */\n      mstore\n        /* \"#utility.yul\":18685:18816   */\n      tag_653\n        /* \"#utility.yul\":18811:18815   */\n      dup2\n        /* \"#utility.yul\":18685:18816   */\n      tag_462\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":18677:18816   */\n      swap1\n      pop\n        /* \"#utility.yul\":18404:18823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18829:19006   */\n    tag_463:\n        /* \"#utility.yul\":18969:18998   */\n      0x556e7374616b65206f6e6c792061667465722034207765656b732e0000000000\n        /* \"#utility.yul\":18965:18966   */\n      0x00\n        /* \"#utility.yul\":18957:18963   */\n      dup3\n        /* \"#utility.yul\":18953:18967   */\n      add\n        /* \"#utility.yul\":18946:18999   */\n      mstore\n        /* \"#utility.yul\":18829:19006   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19012:19378   */\n    tag_464:\n        /* \"#utility.yul\":19154:19157   */\n      0x00\n        /* \"#utility.yul\":19175:19242   */\n      tag_656\n        /* \"#utility.yul\":19239:19241   */\n      0x1b\n        /* \"#utility.yul\":19234:19237   */\n      dup4\n        /* \"#utility.yul\":19175:19242   */\n      tag_423\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":19168:19242   */\n      swap2\n      pop\n        /* \"#utility.yul\":19251:19344   */\n      tag_657\n        /* \"#utility.yul\":19340:19343   */\n      dup3\n        /* \"#utility.yul\":19251:19344   */\n      tag_463\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":19369:19371   */\n      0x20\n        /* \"#utility.yul\":19364:19367   */\n      dup3\n        /* \"#utility.yul\":19360:19372   */\n      add\n        /* \"#utility.yul\":19353:19372   */\n      swap1\n      pop\n        /* \"#utility.yul\":19012:19378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19384:19803   */\n    tag_325:\n        /* \"#utility.yul\":19550:19554   */\n      0x00\n        /* \"#utility.yul\":19588:19590   */\n      0x20\n        /* \"#utility.yul\":19577:19586   */\n      dup3\n        /* \"#utility.yul\":19573:19591   */\n      add\n        /* \"#utility.yul\":19565:19591   */\n      swap1\n      pop\n        /* \"#utility.yul\":19637:19646   */\n      dup2\n        /* \"#utility.yul\":19631:19635   */\n      dup2\n        /* \"#utility.yul\":19627:19647   */\n      sub\n        /* \"#utility.yul\":19623:19624   */\n      0x00\n        /* \"#utility.yul\":19612:19621   */\n      dup4\n        /* \"#utility.yul\":19608:19625   */\n      add\n        /* \"#utility.yul\":19601:19648   */\n      mstore\n        /* \"#utility.yul\":19665:19796   */\n      tag_659\n        /* \"#utility.yul\":19791:19795   */\n      dup2\n        /* \"#utility.yul\":19665:19796   */\n      tag_464\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":19657:19796   */\n      swap1\n      pop\n        /* \"#utility.yul\":19384:19803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19809:20141   */\n    tag_330:\n        /* \"#utility.yul\":19930:19934   */\n      0x00\n        /* \"#utility.yul\":19968:19970   */\n      0x40\n        /* \"#utility.yul\":19957:19966   */\n      dup3\n        /* \"#utility.yul\":19953:19971   */\n      add\n        /* \"#utility.yul\":19945:19971   */\n      swap1\n      pop\n        /* \"#utility.yul\":19981:20052   */\n      tag_661\n        /* \"#utility.yul\":20049:20050   */\n      0x00\n        /* \"#utility.yul\":20038:20047   */\n      dup4\n        /* \"#utility.yul\":20034:20051   */\n      add\n        /* \"#utility.yul\":20025:20031   */\n      dup6\n        /* \"#utility.yul\":19981:20052   */\n      tag_421\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":20062:20134   */\n      tag_662\n        /* \"#utility.yul\":20130:20132   */\n      0x20\n        /* \"#utility.yul\":20119:20128   */\n      dup4\n        /* \"#utility.yul\":20115:20133   */\n      add\n        /* \"#utility.yul\":20106:20112   */\n      dup5\n        /* \"#utility.yul\":20062:20134   */\n      tag_421\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":19809:20141   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20147:20313   */\n    tag_465:\n        /* \"#utility.yul\":20287:20305   */\n      0x53616c65206e6f74206163746976652e00000000000000000000000000000000\n        /* \"#utility.yul\":20283:20284   */\n      0x00\n        /* \"#utility.yul\":20275:20281   */\n      dup3\n        /* \"#utility.yul\":20271:20285   */\n      add\n        /* \"#utility.yul\":20264:20306   */\n      mstore\n        /* \"#utility.yul\":20147:20313   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20319:20685   */\n    tag_466:\n        /* \"#utility.yul\":20461:20464   */\n      0x00\n        /* \"#utility.yul\":20482:20549   */\n      tag_665\n        /* \"#utility.yul\":20546:20548   */\n      0x10\n        /* \"#utility.yul\":20541:20544   */\n      dup4\n        /* \"#utility.yul\":20482:20549   */\n      tag_423\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":20475:20549   */\n      swap2\n      pop\n        /* \"#utility.yul\":20558:20651   */\n      tag_666\n        /* \"#utility.yul\":20647:20650   */\n      dup3\n        /* \"#utility.yul\":20558:20651   */\n      tag_465\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":20676:20678   */\n      0x20\n        /* \"#utility.yul\":20671:20674   */\n      dup3\n        /* \"#utility.yul\":20667:20679   */\n      add\n        /* \"#utility.yul\":20660:20679   */\n      swap1\n      pop\n        /* \"#utility.yul\":20319:20685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20691:21110   */\n    tag_337:\n        /* \"#utility.yul\":20857:20861   */\n      0x00\n        /* \"#utility.yul\":20895:20897   */\n      0x20\n        /* \"#utility.yul\":20884:20893   */\n      dup3\n        /* \"#utility.yul\":20880:20898   */\n      add\n        /* \"#utility.yul\":20872:20898   */\n      swap1\n      pop\n        /* \"#utility.yul\":20944:20953   */\n      dup2\n        /* \"#utility.yul\":20938:20942   */\n      dup2\n        /* \"#utility.yul\":20934:20954   */\n      sub\n        /* \"#utility.yul\":20930:20931   */\n      0x00\n        /* \"#utility.yul\":20919:20928   */\n      dup4\n        /* \"#utility.yul\":20915:20932   */\n      add\n        /* \"#utility.yul\":20908:20955   */\n      mstore\n        /* \"#utility.yul\":20972:21103   */\n      tag_668\n        /* \"#utility.yul\":21098:21102   */\n      dup2\n        /* \"#utility.yul\":20972:21103   */\n      tag_466\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":20964:21103   */\n      swap1\n      pop\n        /* \"#utility.yul\":20691:21110   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21116:21294   */\n    tag_467:\n        /* \"#utility.yul\":21256:21286   */\n      0x4d7573742073656e642045544820746f2062757920746f6b656e732e00000000\n        /* \"#utility.yul\":21252:21253   */\n      0x00\n        /* \"#utility.yul\":21244:21250   */\n      dup3\n        /* \"#utility.yul\":21240:21254   */\n      add\n        /* \"#utility.yul\":21233:21287   */\n      mstore\n        /* \"#utility.yul\":21116:21294   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21300:21666   */\n    tag_468:\n        /* \"#utility.yul\":21442:21445   */\n      0x00\n        /* \"#utility.yul\":21463:21530   */\n      tag_671\n        /* \"#utility.yul\":21527:21529   */\n      0x1c\n        /* \"#utility.yul\":21522:21525   */\n      dup4\n        /* \"#utility.yul\":21463:21530   */\n      tag_423\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":21456:21530   */\n      swap2\n      pop\n        /* \"#utility.yul\":21539:21632   */\n      tag_672\n        /* \"#utility.yul\":21628:21631   */\n      dup3\n        /* \"#utility.yul\":21539:21632   */\n      tag_467\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":21657:21659   */\n      0x20\n        /* \"#utility.yul\":21652:21655   */\n      dup3\n        /* \"#utility.yul\":21648:21660   */\n      add\n        /* \"#utility.yul\":21641:21660   */\n      swap1\n      pop\n        /* \"#utility.yul\":21300:21666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21672:22091   */\n    tag_340:\n        /* \"#utility.yul\":21838:21842   */\n      0x00\n        /* \"#utility.yul\":21876:21878   */\n      0x20\n        /* \"#utility.yul\":21865:21874   */\n      dup3\n        /* \"#utility.yul\":21861:21879   */\n      add\n        /* \"#utility.yul\":21853:21879   */\n      swap1\n      pop\n        /* \"#utility.yul\":21925:21934   */\n      dup2\n        /* \"#utility.yul\":21919:21923   */\n      dup2\n        /* \"#utility.yul\":21915:21935   */\n      sub\n        /* \"#utility.yul\":21911:21912   */\n      0x00\n        /* \"#utility.yul\":21900:21909   */\n      dup4\n        /* \"#utility.yul\":21896:21913   */\n      add\n        /* \"#utility.yul\":21889:21936   */\n      mstore\n        /* \"#utility.yul\":21953:22084   */\n      tag_674\n        /* \"#utility.yul\":22079:22083   */\n      dup2\n        /* \"#utility.yul\":21953:22084   */\n      tag_468\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":21945:22084   */\n      swap1\n      pop\n        /* \"#utility.yul\":21672:22091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22097:22382   */\n    tag_344:\n        /* \"#utility.yul\":22157:22162   */\n      0x00\n        /* \"#utility.yul\":22181:22204   */\n      tag_676\n        /* \"#utility.yul\":22199:22203   */\n      dup3\n        /* \"#utility.yul\":22181:22204   */\n      tag_420\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":22173:22204   */\n      swap2\n      pop\n        /* \"#utility.yul\":22225:22252   */\n      tag_677\n        /* \"#utility.yul\":22243:22251   */\n      dup4\n        /* \"#utility.yul\":22225:22252   */\n      tag_420\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":22213:22252   */\n      swap3\n      pop\n        /* \"#utility.yul\":22271:22375   */\n      tag_678\n        /* \"#utility.yul\":22308:22374   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22298:22306   */\n      dup5\n        /* \"#utility.yul\":22292:22296   */\n      dup5\n        /* \"#utility.yul\":22271:22375   */\n      tag_456\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":22262:22375   */\n      swap1\n      pop\n        /* \"#utility.yul\":22097:22382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22388:22566   */\n    tag_469:\n        /* \"#utility.yul\":22528:22558   */\n      0x4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e00000000\n        /* \"#utility.yul\":22524:22525   */\n      0x00\n        /* \"#utility.yul\":22516:22522   */\n      dup3\n        /* \"#utility.yul\":22512:22526   */\n      add\n        /* \"#utility.yul\":22505:22559   */\n      mstore\n        /* \"#utility.yul\":22388:22566   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22572:22938   */\n    tag_470:\n        /* \"#utility.yul\":22714:22717   */\n      0x00\n        /* \"#utility.yul\":22735:22802   */\n      tag_681\n        /* \"#utility.yul\":22799:22801   */\n      0x1c\n        /* \"#utility.yul\":22794:22797   */\n      dup4\n        /* \"#utility.yul\":22735:22802   */\n      tag_423\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":22728:22802   */\n      swap2\n      pop\n        /* \"#utility.yul\":22811:22904   */\n      tag_682\n        /* \"#utility.yul\":22900:22903   */\n      dup3\n        /* \"#utility.yul\":22811:22904   */\n      tag_469\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":22929:22931   */\n      0x20\n        /* \"#utility.yul\":22924:22927   */\n      dup3\n        /* \"#utility.yul\":22920:22932   */\n      add\n        /* \"#utility.yul\":22913:22932   */\n      swap1\n      pop\n        /* \"#utility.yul\":22572:22938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22944:23363   */\n    tag_350:\n        /* \"#utility.yul\":23110:23114   */\n      0x00\n        /* \"#utility.yul\":23148:23150   */\n      0x20\n        /* \"#utility.yul\":23137:23146   */\n      dup3\n        /* \"#utility.yul\":23133:23151   */\n      add\n        /* \"#utility.yul\":23125:23151   */\n      swap1\n      pop\n        /* \"#utility.yul\":23197:23206   */\n      dup2\n        /* \"#utility.yul\":23191:23195   */\n      dup2\n        /* \"#utility.yul\":23187:23207   */\n      sub\n        /* \"#utility.yul\":23183:23184   */\n      0x00\n        /* \"#utility.yul\":23172:23181   */\n      dup4\n        /* \"#utility.yul\":23168:23185   */\n      add\n        /* \"#utility.yul\":23161:23208   */\n      mstore\n        /* \"#utility.yul\":23225:23356   */\n      tag_684\n        /* \"#utility.yul\":23351:23355   */\n      dup2\n        /* \"#utility.yul\":23225:23356   */\n      tag_470\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":23217:23356   */\n      swap1\n      pop\n        /* \"#utility.yul\":22944:23363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23369:23543   */\n    tag_471:\n        /* \"#utility.yul\":23509:23535   */\n      0x5072652d73616c65206e6f742073746172746564207965740000000000000000\n        /* \"#utility.yul\":23505:23506   */\n      0x00\n        /* \"#utility.yul\":23497:23503   */\n      dup3\n        /* \"#utility.yul\":23493:23507   */\n      add\n        /* \"#utility.yul\":23486:23536   */\n      mstore\n        /* \"#utility.yul\":23369:23543   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23549:23915   */\n    tag_472:\n        /* \"#utility.yul\":23691:23694   */\n      0x00\n        /* \"#utility.yul\":23712:23779   */\n      tag_687\n        /* \"#utility.yul\":23776:23778   */\n      0x18\n        /* \"#utility.yul\":23771:23774   */\n      dup4\n        /* \"#utility.yul\":23712:23779   */\n      tag_423\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":23705:23779   */\n      swap2\n      pop\n        /* \"#utility.yul\":23788:23881   */\n      tag_688\n        /* \"#utility.yul\":23877:23880   */\n      dup3\n        /* \"#utility.yul\":23788:23881   */\n      tag_471\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":23906:23908   */\n      0x20\n        /* \"#utility.yul\":23901:23904   */\n      dup3\n        /* \"#utility.yul\":23897:23909   */\n      add\n        /* \"#utility.yul\":23890:23909   */\n      swap1\n      pop\n        /* \"#utility.yul\":23549:23915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23921:24340   */\n    tag_358:\n        /* \"#utility.yul\":24087:24091   */\n      0x00\n        /* \"#utility.yul\":24125:24127   */\n      0x20\n        /* \"#utility.yul\":24114:24123   */\n      dup3\n        /* \"#utility.yul\":24110:24128   */\n      add\n        /* \"#utility.yul\":24102:24128   */\n      swap1\n      pop\n        /* \"#utility.yul\":24174:24183   */\n      dup2\n        /* \"#utility.yul\":24168:24172   */\n      dup2\n        /* \"#utility.yul\":24164:24184   */\n      sub\n        /* \"#utility.yul\":24160:24161   */\n      0x00\n        /* \"#utility.yul\":24149:24158   */\n      dup4\n        /* \"#utility.yul\":24145:24162   */\n      add\n        /* \"#utility.yul\":24138:24185   */\n      mstore\n        /* \"#utility.yul\":24202:24333   */\n      tag_690\n        /* \"#utility.yul\":24328:24332   */\n      dup2\n        /* \"#utility.yul\":24202:24333   */\n      tag_472\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":24194:24333   */\n      swap1\n      pop\n        /* \"#utility.yul\":23921:24340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24346:24788   */\n    tag_384:\n        /* \"#utility.yul\":24495:24499   */\n      0x00\n        /* \"#utility.yul\":24533:24535   */\n      0x60\n        /* \"#utility.yul\":24522:24531   */\n      dup3\n        /* \"#utility.yul\":24518:24536   */\n      add\n        /* \"#utility.yul\":24510:24536   */\n      swap1\n      pop\n        /* \"#utility.yul\":24546:24617   */\n      tag_692\n        /* \"#utility.yul\":24614:24615   */\n      0x00\n        /* \"#utility.yul\":24603:24612   */\n      dup4\n        /* \"#utility.yul\":24599:24616   */\n      add\n        /* \"#utility.yul\":24590:24596   */\n      dup7\n        /* \"#utility.yul\":24546:24617   */\n      tag_440\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":24627:24699   */\n      tag_693\n        /* \"#utility.yul\":24695:24697   */\n      0x20\n        /* \"#utility.yul\":24684:24693   */\n      dup4\n        /* \"#utility.yul\":24680:24698   */\n      add\n        /* \"#utility.yul\":24671:24677   */\n      dup6\n        /* \"#utility.yul\":24627:24699   */\n      tag_421\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":24709:24781   */\n      tag_694\n        /* \"#utility.yul\":24777:24779   */\n      0x40\n        /* \"#utility.yul\":24766:24775   */\n      dup4\n        /* \"#utility.yul\":24762:24780   */\n      add\n        /* \"#utility.yul\":24753:24759   */\n      dup5\n        /* \"#utility.yul\":24709:24781   */\n      tag_421\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":24346:24788   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205b8261fbf9076c95717db49b9f217f790da4799398c44e3f5ff665f300deb38064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1083": {
									"entryPoint": null,
									"id": 1083,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 640,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 437,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 773,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": 632,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2965,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2400,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1647,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1917,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11857:7",
										"nodeType": "YulBlock",
										"src": "0:11857:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "890:32:7",
													"nodeType": "YulBlock",
													"src": "890:32:7",
													"statements": [
														{
															"nativeSrc": "900:16:7",
															"nodeType": "YulAssignment",
															"src": "900:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:7",
																"nodeType": "YulIdentifier",
																"src": "911:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:7",
														"nodeType": "YulTypedName",
														"src": "872:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:7",
														"nodeType": "YulTypedName",
														"src": "882:7:7",
														"type": ""
													}
												],
												"src": "845:77:7"
											},
											{
												"body": {
													"nativeSrc": "971:79:7",
													"nodeType": "YulBlock",
													"src": "971:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:7",
																"nodeType": "YulBlock",
																"src": "1028:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:7"
																			},
																			"nativeSrc": "1030:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:7"
																		},
																		"nativeSrc": "1030:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:7"
																				},
																				"nativeSrc": "1001:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:7"
																		},
																		"nativeSrc": "991:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nativeSrc": "984:43:7",
																"nodeType": "YulFunctionCall",
																"src": "984:43:7"
															},
															"nativeSrc": "981:63:7",
															"nodeType": "YulIf",
															"src": "981:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:7",
														"nodeType": "YulTypedName",
														"src": "964:5:7",
														"type": ""
													}
												],
												"src": "928:122:7"
											},
											{
												"body": {
													"nativeSrc": "1119:80:7",
													"nodeType": "YulBlock",
													"src": "1119:80:7",
													"statements": [
														{
															"nativeSrc": "1129:22:7",
															"nodeType": "YulAssignment",
															"src": "1129:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nativeSrc": "1138:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:7"
																},
																"nativeSrc": "1160:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:7"
															},
															"nativeSrc": "1160:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:7",
														"nodeType": "YulTypedName",
														"src": "1097:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:7",
														"nodeType": "YulTypedName",
														"src": "1105:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:7",
														"nodeType": "YulTypedName",
														"src": "1113:5:7",
														"type": ""
													}
												],
												"src": "1056:143:7"
											},
											{
												"body": {
													"nativeSrc": "1367:972:7",
													"nodeType": "YulBlock",
													"src": "1367:972:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1414:83:7",
																"nodeType": "YulBlock",
																"src": "1414:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1416:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1416:77:7"
																			},
																			"nativeSrc": "1416:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1416:79:7"
																		},
																		"nativeSrc": "1416:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1416:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1388:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1388:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1397:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1397:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1384:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:7"
																		},
																		"nativeSrc": "1384:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1384:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1409:3:7",
																		"nodeType": "YulLiteral",
																		"src": "1409:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1380:3:7"
																},
																"nativeSrc": "1380:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1380:33:7"
															},
															"nativeSrc": "1377:120:7",
															"nodeType": "YulIf",
															"src": "1377:120:7"
														},
														{
															"nativeSrc": "1507:128:7",
															"nodeType": "YulBlock",
															"src": "1507:128:7",
															"statements": [
																{
																	"nativeSrc": "1522:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1522:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1536:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1526:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1526:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1551:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1551:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1597:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1597:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1608:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1608:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1593:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1593:3:7"
																				},
																				"nativeSrc": "1593:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1593:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1617:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1617:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1561:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1561:31:7"
																		},
																		"nativeSrc": "1561:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1561:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1551:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1551:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1645:129:7",
															"nodeType": "YulBlock",
															"src": "1645:129:7",
															"statements": [
																{
																	"nativeSrc": "1660:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1660:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1674:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1664:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1664:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1690:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1690:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1736:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1736:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1747:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1747:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1732:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1732:3:7"
																				},
																				"nativeSrc": "1732:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1732:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1756:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1756:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1700:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1700:31:7"
																		},
																		"nativeSrc": "1700:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1700:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1690:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1690:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1784:129:7",
															"nodeType": "YulBlock",
															"src": "1784:129:7",
															"statements": [
																{
																	"nativeSrc": "1799:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1799:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1813:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1813:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1803:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1803:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1829:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1829:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1875:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1875:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1886:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1886:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1871:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1871:3:7"
																				},
																				"nativeSrc": "1871:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1871:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1895:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1895:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1839:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1839:31:7"
																		},
																		"nativeSrc": "1839:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1839:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1829:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1829:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1923:129:7",
															"nodeType": "YulBlock",
															"src": "1923:129:7",
															"statements": [
																{
																	"nativeSrc": "1938:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1938:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1952:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1952:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1942:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1942:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1968:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1968:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2014:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2014:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2025:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2025:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2010:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2010:3:7"
																				},
																				"nativeSrc": "2010:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2010:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2034:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2034:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1978:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1978:31:7"
																		},
																		"nativeSrc": "1978:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1978:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1968:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1968:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2062:130:7",
															"nodeType": "YulBlock",
															"src": "2062:130:7",
															"statements": [
																{
																	"nativeSrc": "2077:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2077:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2091:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2091:3:7",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2081:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2081:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2108:74:7",
																	"nodeType": "YulAssignment",
																	"src": "2108:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2154:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2154:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2165:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2165:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2150:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2150:3:7"
																				},
																				"nativeSrc": "2150:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2150:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2174:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2174:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2118:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "2118:31:7"
																		},
																		"nativeSrc": "2118:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2118:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2108:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2108:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2202:130:7",
															"nodeType": "YulBlock",
															"src": "2202:130:7",
															"statements": [
																{
																	"nativeSrc": "2217:17:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2217:17:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2231:3:7",
																		"nodeType": "YulLiteral",
																		"src": "2231:3:7",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2221:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2221:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2248:74:7",
																	"nodeType": "YulAssignment",
																	"src": "2248:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2294:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2294:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2305:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2305:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2290:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2290:3:7"
																				},
																				"nativeSrc": "2290:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2290:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2314:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2314:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2258:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "2258:31:7"
																		},
																		"nativeSrc": "2258:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2258:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2248:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2248:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "1205:1134:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1297:9:7",
														"nodeType": "YulTypedName",
														"src": "1297:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1308:7:7",
														"nodeType": "YulTypedName",
														"src": "1308:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1320:6:7",
														"nodeType": "YulTypedName",
														"src": "1320:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1328:6:7",
														"nodeType": "YulTypedName",
														"src": "1328:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1336:6:7",
														"nodeType": "YulTypedName",
														"src": "1336:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1344:6:7",
														"nodeType": "YulTypedName",
														"src": "1344:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1352:6:7",
														"nodeType": "YulTypedName",
														"src": "1352:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1360:6:7",
														"nodeType": "YulTypedName",
														"src": "1360:6:7",
														"type": ""
													}
												],
												"src": "1205:1134:7"
											},
											{
												"body": {
													"nativeSrc": "2404:40:7",
													"nodeType": "YulBlock",
													"src": "2404:40:7",
													"statements": [
														{
															"nativeSrc": "2415:22:7",
															"nodeType": "YulAssignment",
															"src": "2415:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2431:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2431:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2425:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2425:5:7"
																},
																"nativeSrc": "2425:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2425:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2415:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2415:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2345:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2387:5:7",
														"nodeType": "YulTypedName",
														"src": "2387:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2397:6:7",
														"nodeType": "YulTypedName",
														"src": "2397:6:7",
														"type": ""
													}
												],
												"src": "2345:99:7"
											},
											{
												"body": {
													"nativeSrc": "2478:152:7",
													"nodeType": "YulBlock",
													"src": "2478:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2495:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2495:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2498:77:7",
																		"nodeType": "YulLiteral",
																		"src": "2498:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2488:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2488:6:7"
																},
																"nativeSrc": "2488:88:7",
																"nodeType": "YulFunctionCall",
																"src": "2488:88:7"
															},
															"nativeSrc": "2488:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "2488:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2592:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2595:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2595:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2585:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2585:6:7"
																},
																"nativeSrc": "2585:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2585:15:7"
															},
															"nativeSrc": "2585:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2585:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2616:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2616:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2619:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2619:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2609:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2609:6:7"
																},
																"nativeSrc": "2609:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2609:15:7"
															},
															"nativeSrc": "2609:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2609:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2450:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2450:180:7"
											},
											{
												"body": {
													"nativeSrc": "2664:152:7",
													"nodeType": "YulBlock",
													"src": "2664:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2681:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2681:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2684:77:7",
																		"nodeType": "YulLiteral",
																		"src": "2684:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2674:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:7"
																},
																"nativeSrc": "2674:88:7",
																"nodeType": "YulFunctionCall",
																"src": "2674:88:7"
															},
															"nativeSrc": "2674:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "2674:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2778:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2778:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2781:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2781:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2771:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:7"
																},
																"nativeSrc": "2771:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2771:15:7"
															},
															"nativeSrc": "2771:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2771:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2802:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2802:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2805:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2805:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2795:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:7"
																},
																"nativeSrc": "2795:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2795:15:7"
															},
															"nativeSrc": "2795:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2795:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2636:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2636:180:7"
											},
											{
												"body": {
													"nativeSrc": "2873:269:7",
													"nodeType": "YulBlock",
													"src": "2873:269:7",
													"statements": [
														{
															"nativeSrc": "2883:22:7",
															"nodeType": "YulAssignment",
															"src": "2883:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2897:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2897:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2903:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2903:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2893:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2893:3:7"
																},
																"nativeSrc": "2893:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2893:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2883:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2883:6:7"
																}
															]
														},
														{
															"nativeSrc": "2914:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2914:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2944:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2944:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2950:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2950:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2940:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2940:3:7"
																},
																"nativeSrc": "2940:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2940:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2918:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2918:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2991:51:7",
																"nodeType": "YulBlock",
																"src": "2991:51:7",
																"statements": [
																	{
																		"nativeSrc": "3005:27:7",
																		"nodeType": "YulAssignment",
																		"src": "3005:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3019:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3019:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3027:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3027:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3015:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3015:3:7"
																			},
																			"nativeSrc": "3015:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3015:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3005:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3005:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2971:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2971:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:6:7"
																},
																"nativeSrc": "2964:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2964:26:7"
															},
															"nativeSrc": "2961:81:7",
															"nodeType": "YulIf",
															"src": "2961:81:7"
														},
														{
															"body": {
																"nativeSrc": "3094:42:7",
																"nodeType": "YulBlock",
																"src": "3094:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "3108:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3108:16:7"
																			},
																			"nativeSrc": "3108:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3108:18:7"
																		},
																		"nativeSrc": "3108:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3108:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3058:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "3058:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3081:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3081:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3089:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3089:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3078:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3078:2:7"
																		},
																		"nativeSrc": "3078:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3055:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3055:2:7"
																},
																"nativeSrc": "3055:38:7",
																"nodeType": "YulFunctionCall",
																"src": "3055:38:7"
															},
															"nativeSrc": "3052:84:7",
															"nodeType": "YulIf",
															"src": "3052:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2822:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2857:4:7",
														"nodeType": "YulTypedName",
														"src": "2857:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2866:6:7",
														"nodeType": "YulTypedName",
														"src": "2866:6:7",
														"type": ""
													}
												],
												"src": "2822:320:7"
											},
											{
												"body": {
													"nativeSrc": "3202:87:7",
													"nodeType": "YulBlock",
													"src": "3202:87:7",
													"statements": [
														{
															"nativeSrc": "3212:11:7",
															"nodeType": "YulAssignment",
															"src": "3212:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "3220:3:7",
																"nodeType": "YulIdentifier",
																"src": "3220:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3212:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3212:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3240:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3240:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "3243:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3243:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3233:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:7"
																},
																"nativeSrc": "3233:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:14:7"
															},
															"nativeSrc": "3233:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "3233:14:7"
														},
														{
															"nativeSrc": "3256:26:7",
															"nodeType": "YulAssignment",
															"src": "3256:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3274:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3274:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3277:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3277:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "3264:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3264:9:7"
																},
																"nativeSrc": "3264:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3264:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3256:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3256:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "3148:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3189:3:7",
														"nodeType": "YulTypedName",
														"src": "3189:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "3197:4:7",
														"nodeType": "YulTypedName",
														"src": "3197:4:7",
														"type": ""
													}
												],
												"src": "3148:141:7"
											},
											{
												"body": {
													"nativeSrc": "3339:49:7",
													"nodeType": "YulBlock",
													"src": "3339:49:7",
													"statements": [
														{
															"nativeSrc": "3349:33:7",
															"nodeType": "YulAssignment",
															"src": "3349:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3367:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3367:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3374:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3363:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3363:3:7"
																		},
																		"nativeSrc": "3363:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3363:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3379:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3379:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3359:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3359:3:7"
																},
																"nativeSrc": "3359:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3359:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3349:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "3295:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3322:5:7",
														"nodeType": "YulTypedName",
														"src": "3322:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3332:6:7",
														"nodeType": "YulTypedName",
														"src": "3332:6:7",
														"type": ""
													}
												],
												"src": "3295:93:7"
											},
											{
												"body": {
													"nativeSrc": "3447:54:7",
													"nodeType": "YulBlock",
													"src": "3447:54:7",
													"statements": [
														{
															"nativeSrc": "3457:37:7",
															"nodeType": "YulAssignment",
															"src": "3457:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3482:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3482:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3488:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3488:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "3478:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3478:3:7"
																},
																"nativeSrc": "3478:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3478:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3457:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3457:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "3394:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3422:4:7",
														"nodeType": "YulTypedName",
														"src": "3422:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3428:5:7",
														"nodeType": "YulTypedName",
														"src": "3428:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3438:8:7",
														"nodeType": "YulTypedName",
														"src": "3438:8:7",
														"type": ""
													}
												],
												"src": "3394:107:7"
											},
											{
												"body": {
													"nativeSrc": "3583:317:7",
													"nodeType": "YulBlock",
													"src": "3583:317:7",
													"statements": [
														{
															"nativeSrc": "3593:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3593:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "3614:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "3614:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3626:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3610:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3610:3:7"
																},
																"nativeSrc": "3610:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3610:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "3597:9:7",
																	"nodeType": "YulTypedName",
																	"src": "3597:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3637:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3637:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3668:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3668:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:66:7",
																		"nodeType": "YulLiteral",
																		"src": "3679:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3649:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3649:18:7"
																},
																"nativeSrc": "3649:97:7",
																"nodeType": "YulFunctionCall",
																"src": "3649:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3641:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3641:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3755:51:7",
															"nodeType": "YulAssignment",
															"src": "3755:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3786:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3786:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3797:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3797:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3767:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3767:18:7"
																},
																"nativeSrc": "3767:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3767:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3755:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3755:8:7"
																}
															]
														},
														{
															"nativeSrc": "3815:30:7",
															"nodeType": "YulAssignment",
															"src": "3815:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3828:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3828:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3839:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3835:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:7"
																		},
																		"nativeSrc": "3835:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3835:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3824:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3824:3:7"
																},
																"nativeSrc": "3824:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3824:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3815:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3815:5:7"
																}
															]
														},
														{
															"nativeSrc": "3854:40:7",
															"nodeType": "YulAssignment",
															"src": "3854:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3867:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3867:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3878:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3878:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3888:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3888:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3874:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3874:3:7"
																		},
																		"nativeSrc": "3874:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3874:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3864:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3864:2:7"
																},
																"nativeSrc": "3864:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3864:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3854:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3854:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "3507:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3544:5:7",
														"nodeType": "YulTypedName",
														"src": "3544:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "3551:10:7",
														"nodeType": "YulTypedName",
														"src": "3551:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "3563:8:7",
														"nodeType": "YulTypedName",
														"src": "3563:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3576:6:7",
														"nodeType": "YulTypedName",
														"src": "3576:6:7",
														"type": ""
													}
												],
												"src": "3507:393:7"
											},
											{
												"body": {
													"nativeSrc": "3938:28:7",
													"nodeType": "YulBlock",
													"src": "3938:28:7",
													"statements": [
														{
															"nativeSrc": "3948:12:7",
															"nodeType": "YulAssignment",
															"src": "3948:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3955:5:7",
																"nodeType": "YulIdentifier",
																"src": "3955:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3948:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3948:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3906:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3924:5:7",
														"nodeType": "YulTypedName",
														"src": "3924:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3934:3:7",
														"nodeType": "YulTypedName",
														"src": "3934:3:7",
														"type": ""
													}
												],
												"src": "3906:60:7"
											},
											{
												"body": {
													"nativeSrc": "4032:82:7",
													"nodeType": "YulBlock",
													"src": "4032:82:7",
													"statements": [
														{
															"nativeSrc": "4042:66:7",
															"nodeType": "YulAssignment",
															"src": "4042:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4100:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4100:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "4082:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4082:17:7"
																				},
																				"nativeSrc": "4082:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4082:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4073:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "4073:8:7"
																		},
																		"nativeSrc": "4073:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4073:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4055:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4055:17:7"
																},
																"nativeSrc": "4055:53:7",
																"nodeType": "YulFunctionCall",
																"src": "4055:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4042:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4042:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3972:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4012:5:7",
														"nodeType": "YulTypedName",
														"src": "4012:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4022:9:7",
														"nodeType": "YulTypedName",
														"src": "4022:9:7",
														"type": ""
													}
												],
												"src": "3972:142:7"
											},
											{
												"body": {
													"nativeSrc": "4167:28:7",
													"nodeType": "YulBlock",
													"src": "4167:28:7",
													"statements": [
														{
															"nativeSrc": "4177:12:7",
															"nodeType": "YulAssignment",
															"src": "4177:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "4184:5:7",
																"nodeType": "YulIdentifier",
																"src": "4184:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4177:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4177:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "4120:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4153:5:7",
														"nodeType": "YulTypedName",
														"src": "4153:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4163:3:7",
														"nodeType": "YulTypedName",
														"src": "4163:3:7",
														"type": ""
													}
												],
												"src": "4120:75:7"
											},
											{
												"body": {
													"nativeSrc": "4277:193:7",
													"nodeType": "YulBlock",
													"src": "4277:193:7",
													"statements": [
														{
															"nativeSrc": "4287:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4287:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "4342:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "4342:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "4311:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4311:30:7"
																},
																"nativeSrc": "4311:39:7",
																"nodeType": "YulFunctionCall",
																"src": "4311:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "4291:16:7",
																	"nodeType": "YulTypedName",
																	"src": "4291:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4366:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4366:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "4406:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "4406:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "4400:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4400:5:7"
																				},
																				"nativeSrc": "4400:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4400:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4413:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4413:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "4445:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "4445:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "4421:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "4421:23:7"
																				},
																				"nativeSrc": "4421:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4421:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "4372:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "4372:27:7"
																		},
																		"nativeSrc": "4372:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4372:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "4359:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4359:6:7"
																},
																"nativeSrc": "4359:105:7",
																"nodeType": "YulFunctionCall",
																"src": "4359:105:7"
															},
															"nativeSrc": "4359:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "4359:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "4201:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4254:4:7",
														"nodeType": "YulTypedName",
														"src": "4254:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4260:6:7",
														"nodeType": "YulTypedName",
														"src": "4260:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "4268:7:7",
														"nodeType": "YulTypedName",
														"src": "4268:7:7",
														"type": ""
													}
												],
												"src": "4201:269:7"
											},
											{
												"body": {
													"nativeSrc": "4525:24:7",
													"nodeType": "YulBlock",
													"src": "4525:24:7",
													"statements": [
														{
															"nativeSrc": "4535:8:7",
															"nodeType": "YulAssignment",
															"src": "4535:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4542:1:7",
																"nodeType": "YulLiteral",
																"src": "4542:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4535:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4535:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "4476:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4521:3:7",
														"nodeType": "YulTypedName",
														"src": "4521:3:7",
														"type": ""
													}
												],
												"src": "4476:73:7"
											},
											{
												"body": {
													"nativeSrc": "4608:136:7",
													"nodeType": "YulBlock",
													"src": "4608:136:7",
													"statements": [
														{
															"nativeSrc": "4618:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4618:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4632:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4632:30:7"
																},
																"nativeSrc": "4632:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4632:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "4622:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4622:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4717:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4717:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4723:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4723:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4731:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4731:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4673:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4673:43:7"
																},
																"nativeSrc": "4673:65:7",
																"nodeType": "YulFunctionCall",
																"src": "4673:65:7"
															},
															"nativeSrc": "4673:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "4673:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "4555:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4594:4:7",
														"nodeType": "YulTypedName",
														"src": "4594:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "4600:6:7",
														"nodeType": "YulTypedName",
														"src": "4600:6:7",
														"type": ""
													}
												],
												"src": "4555:189:7"
											},
											{
												"body": {
													"nativeSrc": "4800:136:7",
													"nodeType": "YulBlock",
													"src": "4800:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4867:63:7",
																"nodeType": "YulBlock",
																"src": "4867:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4911:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4911:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4918:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4918:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4881:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "4881:29:7"
																			},
																			"nativeSrc": "4881:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4881:39:7"
																		},
																		"nativeSrc": "4881:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4881:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4820:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4820:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4827:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4827:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4817:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4817:2:7"
																},
																"nativeSrc": "4817:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4817:14:7"
															},
															"nativeSrc": "4810:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4832:26:7",
																"nodeType": "YulBlock",
																"src": "4832:26:7",
																"statements": [
																	{
																		"nativeSrc": "4834:22:7",
																		"nodeType": "YulAssignment",
																		"src": "4834:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4847:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4847:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4854:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4854:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4843:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4843:3:7"
																			},
																			"nativeSrc": "4843:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4843:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4834:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4834:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4814:2:7",
																"nodeType": "YulBlock",
																"src": "4814:2:7",
																"statements": []
															},
															"src": "4810:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4750:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4788:5:7",
														"nodeType": "YulTypedName",
														"src": "4788:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4795:3:7",
														"nodeType": "YulTypedName",
														"src": "4795:3:7",
														"type": ""
													}
												],
												"src": "4750:186:7"
											},
											{
												"body": {
													"nativeSrc": "5021:464:7",
													"nodeType": "YulBlock",
													"src": "5021:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5047:431:7",
																"nodeType": "YulBlock",
																"src": "5047:431:7",
																"statements": [
																	{
																		"nativeSrc": "5061:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5061:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "5109:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "5109:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "5077:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "5077:31:7"
																			},
																			"nativeSrc": "5077:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5077:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "5065:8:7",
																				"nodeType": "YulTypedName",
																				"src": "5065:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5128:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5128:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "5151:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "5151:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "5179:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5179:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "5161:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "5161:17:7"
																					},
																					"nativeSrc": "5161:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5161:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5147:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5147:3:7"
																			},
																			"nativeSrc": "5147:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5147:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "5132:11:7",
																				"nodeType": "YulTypedName",
																				"src": "5132:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "5348:27:7",
																			"nodeType": "YulBlock",
																			"src": "5348:27:7",
																			"statements": [
																				{
																					"nativeSrc": "5350:23:7",
																					"nodeType": "YulAssignment",
																					"src": "5350:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "5365:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "5365:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "5350:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "5350:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "5332:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "5332:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5344:2:7",
																					"nodeType": "YulLiteral",
																					"src": "5344:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "5329:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "5329:2:7"
																			},
																			"nativeSrc": "5329:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5329:18:7"
																		},
																		"nativeSrc": "5326:49:7",
																		"nodeType": "YulIf",
																		"src": "5326:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "5417:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "5417:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "5434:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "5434:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "5462:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5462:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "5444:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "5444:17:7"
																							},
																							"nativeSrc": "5444:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5444:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5430:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5430:3:7"
																					},
																					"nativeSrc": "5430:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5430:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "5388:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "5388:28:7"
																			},
																			"nativeSrc": "5388:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5388:80:7"
																		},
																		"nativeSrc": "5388:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5388:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "5038:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5038:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5043:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5043:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5035:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5035:2:7"
																},
																"nativeSrc": "5035:11:7",
																"nodeType": "YulFunctionCall",
																"src": "5035:11:7"
															},
															"nativeSrc": "5032:446:7",
															"nodeType": "YulIf",
															"src": "5032:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4942:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4997:5:7",
														"nodeType": "YulTypedName",
														"src": "4997:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5004:3:7",
														"nodeType": "YulTypedName",
														"src": "5004:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5009:10:7",
														"nodeType": "YulTypedName",
														"src": "5009:10:7",
														"type": ""
													}
												],
												"src": "4942:543:7"
											},
											{
												"body": {
													"nativeSrc": "5554:54:7",
													"nodeType": "YulBlock",
													"src": "5554:54:7",
													"statements": [
														{
															"nativeSrc": "5564:37:7",
															"nodeType": "YulAssignment",
															"src": "5564:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5589:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5589:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5595:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5595:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5585:3:7"
																},
																"nativeSrc": "5585:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5585:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5564:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "5564:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "5491:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5529:4:7",
														"nodeType": "YulTypedName",
														"src": "5529:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5535:5:7",
														"nodeType": "YulTypedName",
														"src": "5535:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5545:8:7",
														"nodeType": "YulTypedName",
														"src": "5545:8:7",
														"type": ""
													}
												],
												"src": "5491:117:7"
											},
											{
												"body": {
													"nativeSrc": "5665:118:7",
													"nodeType": "YulBlock",
													"src": "5665:118:7",
													"statements": [
														{
															"nativeSrc": "5675:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5675:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5724:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5724:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5727:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5727:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5720:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5720:3:7"
																				},
																				"nativeSrc": "5720:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5720:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5739:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5739:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5735:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5735:3:7"
																				},
																				"nativeSrc": "5735:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5735:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5691:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "5691:28:7"
																		},
																		"nativeSrc": "5691:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5691:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5687:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5687:3:7"
																},
																"nativeSrc": "5687:56:7",
																"nodeType": "YulFunctionCall",
																"src": "5687:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5679:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5679:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5752:25:7",
															"nodeType": "YulAssignment",
															"src": "5752:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5766:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5766:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5772:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5772:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5762:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5762:3:7"
																},
																"nativeSrc": "5762:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5762:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5752:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "5614:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5642:4:7",
														"nodeType": "YulTypedName",
														"src": "5642:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5648:5:7",
														"nodeType": "YulTypedName",
														"src": "5648:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5658:6:7",
														"nodeType": "YulTypedName",
														"src": "5658:6:7",
														"type": ""
													}
												],
												"src": "5614:169:7"
											},
											{
												"body": {
													"nativeSrc": "5869:214:7",
													"nodeType": "YulBlock",
													"src": "5869:214:7",
													"statements": [
														{
															"nativeSrc": "6002:37:7",
															"nodeType": "YulAssignment",
															"src": "6002:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6029:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6029:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "6035:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6035:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6010:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6010:18:7"
																},
																"nativeSrc": "6010:29:7",
																"nodeType": "YulFunctionCall",
																"src": "6010:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6002:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6002:4:7"
																}
															]
														},
														{
															"nativeSrc": "6048:29:7",
															"nodeType": "YulAssignment",
															"src": "6048:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6059:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6059:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6069:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6069:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "6072:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6072:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "6065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6065:3:7"
																		},
																		"nativeSrc": "6065:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6065:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6056:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6056:2:7"
																},
																"nativeSrc": "6056:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6056:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "6048:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5788:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5850:4:7",
														"nodeType": "YulTypedName",
														"src": "5850:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5856:3:7",
														"nodeType": "YulTypedName",
														"src": "5856:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5864:4:7",
														"nodeType": "YulTypedName",
														"src": "5864:4:7",
														"type": ""
													}
												],
												"src": "5788:295:7"
											},
											{
												"body": {
													"nativeSrc": "6180:1303:7",
													"nodeType": "YulBlock",
													"src": "6180:1303:7",
													"statements": [
														{
															"nativeSrc": "6191:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6238:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6238:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6205:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "6205:32:7"
																},
																"nativeSrc": "6205:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6205:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "6195:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6195:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6327:22:7",
																"nodeType": "YulBlock",
																"src": "6327:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6329:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6329:16:7"
																			},
																			"nativeSrc": "6329:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6329:18:7"
																		},
																		"nativeSrc": "6329:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6329:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6299:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6307:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6307:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6296:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6296:2:7"
																},
																"nativeSrc": "6296:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6296:30:7"
															},
															"nativeSrc": "6293:56:7",
															"nodeType": "YulIf",
															"src": "6293:56:7"
														},
														{
															"nativeSrc": "6359:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6359:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "6405:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6405:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "6399:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "6399:5:7"
																		},
																		"nativeSrc": "6399:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6399:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "6373:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "6373:25:7"
																},
																"nativeSrc": "6373:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6373:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "6363:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6363:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6504:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6504:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "6510:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6510:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "6518:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6518:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "6458:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "6458:45:7"
																},
																"nativeSrc": "6458:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6458:67:7"
															},
															"nativeSrc": "6458:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "6458:67:7"
														},
														{
															"nativeSrc": "6535:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6535:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6552:1:7",
																"nodeType": "YulLiteral",
																"src": "6552:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6539:9:7",
																	"nodeType": "YulTypedName",
																	"src": "6539:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6563:17:7",
															"nodeType": "YulAssignment",
															"src": "6563:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "6576:4:7",
																"nodeType": "YulLiteral",
																"src": "6576:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "6563:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "6563:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6627:611:7",
																		"nodeType": "YulBlock",
																		"src": "6627:611:7",
																		"statements": [
																			{
																				"nativeSrc": "6641:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6641:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6660:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6660:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6672:4:7",
																									"nodeType": "YulLiteral",
																									"src": "6672:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6668:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6668:3:7"
																							},
																							"nativeSrc": "6668:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6668:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6656:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6656:3:7"
																					},
																					"nativeSrc": "6656:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6656:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6645:7:7",
																						"nodeType": "YulTypedName",
																						"src": "6645:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6692:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6692:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6738:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6738:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6706:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "6706:31:7"
																					},
																					"nativeSrc": "6706:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6706:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6696:6:7",
																						"nodeType": "YulTypedName",
																						"src": "6696:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6756:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6756:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6765:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6765:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6760:1:7",
																						"nodeType": "YulTypedName",
																						"src": "6760:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6824:163:7",
																					"nodeType": "YulBlock",
																					"src": "6824:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6849:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6849:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6867:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "6867:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6872:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "6872:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6863:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6863:3:7"
																												},
																												"nativeSrc": "6863:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6863:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6857:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "6857:5:7"
																										},
																										"nativeSrc": "6857:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6857:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6842:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6842:6:7"
																								},
																								"nativeSrc": "6842:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6842:42:7"
																							},
																							"nativeSrc": "6842:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6842:42:7"
																						},
																						{
																							"nativeSrc": "6901:24:7",
																							"nodeType": "YulAssignment",
																							"src": "6901:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6915:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6915:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6923:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6923:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6911:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6911:3:7"
																								},
																								"nativeSrc": "6911:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6911:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6901:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6901:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6942:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6942:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6959:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6959:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6970:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6970:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6955:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6955:3:7"
																								},
																								"nativeSrc": "6955:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6955:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6942:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6942:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6790:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "6790:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6793:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6793:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6787:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6787:2:7"
																					},
																					"nativeSrc": "6787:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6787:14:7"
																				},
																				"nativeSrc": "6779:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6802:21:7",
																					"nodeType": "YulBlock",
																					"src": "6802:21:7",
																					"statements": [
																						{
																							"nativeSrc": "6804:17:7",
																							"nodeType": "YulAssignment",
																							"src": "6804:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6813:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "6813:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6816:4:7",
																										"nodeType": "YulLiteral",
																										"src": "6816:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6809:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6809:3:7"
																								},
																								"nativeSrc": "6809:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6809:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6804:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "6804:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6783:3:7",
																					"nodeType": "YulBlock",
																					"src": "6783:3:7",
																					"statements": []
																				},
																				"src": "6779:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "7023:156:7",
																					"nodeType": "YulBlock",
																					"src": "7023:156:7",
																					"statements": [
																						{
																							"nativeSrc": "7041:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "7041:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7068:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "7068:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7073:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "7073:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7064:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "7064:3:7"
																										},
																										"nativeSrc": "7064:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "7064:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7058:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7058:5:7"
																								},
																								"nativeSrc": "7058:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7058:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "7045:9:7",
																									"nodeType": "YulTypedName",
																									"src": "7045:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7108:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "7108:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "7135:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "7135:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "7150:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "7150:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "7158:4:7",
																														"nodeType": "YulLiteral",
																														"src": "7158:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "7146:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "7146:3:7"
																												},
																												"nativeSrc": "7146:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "7146:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "7116:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "7116:18:7"
																										},
																										"nativeSrc": "7116:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "7116:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7101:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "7101:6:7"
																								},
																								"nativeSrc": "7101:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7101:64:7"
																							},
																							"nativeSrc": "7101:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "7101:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7006:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "7006:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7015:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "7015:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7003:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "7003:2:7"
																					},
																					"nativeSrc": "7003:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7003:19:7"
																				},
																				"nativeSrc": "7000:179:7",
																				"nodeType": "YulIf",
																				"src": "7000:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7199:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "7199:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "7213:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "7213:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "7221:1:7",
																											"nodeType": "YulLiteral",
																											"src": "7221:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "7209:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "7209:3:7"
																									},
																									"nativeSrc": "7209:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "7209:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "7225:1:7",
																									"nodeType": "YulLiteral",
																									"src": "7225:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7205:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "7205:3:7"
																							},
																							"nativeSrc": "7205:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7205:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7192:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7192:6:7"
																					},
																					"nativeSrc": "7192:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7192:36:7"
																				},
																				"nativeSrc": "7192:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7192:36:7"
																			}
																		]
																	},
																	"nativeSrc": "6620:618:7",
																	"nodeType": "YulCase",
																	"src": "6620:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6625:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6625:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "7255:222:7",
																		"nodeType": "YulBlock",
																		"src": "7255:222:7",
																		"statements": [
																			{
																				"nativeSrc": "7269:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7269:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7282:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7282:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "7273:5:7",
																						"nodeType": "YulTypedName",
																						"src": "7273:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7306:67:7",
																					"nodeType": "YulBlock",
																					"src": "7306:67:7",
																					"statements": [
																						{
																							"nativeSrc": "7324:35:7",
																							"nodeType": "YulAssignment",
																							"src": "7324:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "7343:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "7343:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "7348:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "7348:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "7339:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "7339:3:7"
																										},
																										"nativeSrc": "7339:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "7339:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "7333:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7333:5:7"
																								},
																								"nativeSrc": "7333:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "7333:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "7324:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7324:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "7299:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7299:6:7"
																				},
																				"nativeSrc": "7296:77:7",
																				"nodeType": "YulIf",
																				"src": "7296:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7393:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "7393:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "7452:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "7452:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "7459:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "7459:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "7399:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "7399:52:7"
																							},
																							"nativeSrc": "7399:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7399:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "7386:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7386:6:7"
																					},
																					"nativeSrc": "7386:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7386:81:7"
																				},
																				"nativeSrc": "7386:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "7386:81:7"
																			}
																		]
																	},
																	"nativeSrc": "7247:230:7",
																	"nodeType": "YulCase",
																	"src": "7247:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "6600:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6600:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6608:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6608:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6597:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6597:2:7"
																},
																"nativeSrc": "6597:14:7",
																"nodeType": "YulFunctionCall",
																"src": "6597:14:7"
															},
															"nativeSrc": "6590:887:7",
															"nodeType": "YulSwitch",
															"src": "6590:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "6088:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6169:4:7",
														"nodeType": "YulTypedName",
														"src": "6169:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "6175:3:7",
														"nodeType": "YulTypedName",
														"src": "6175:3:7",
														"type": ""
													}
												],
												"src": "6088:1395:7"
											},
											{
												"body": {
													"nativeSrc": "7554:53:7",
													"nodeType": "YulBlock",
													"src": "7554:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7571:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7571:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7594:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7594:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7576:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "7576:17:7"
																		},
																		"nativeSrc": "7576:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7576:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7564:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7564:6:7"
																},
																"nativeSrc": "7564:37:7",
																"nodeType": "YulFunctionCall",
																"src": "7564:37:7"
															},
															"nativeSrc": "7564:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "7564:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7489:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7542:5:7",
														"nodeType": "YulTypedName",
														"src": "7542:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7549:3:7",
														"nodeType": "YulTypedName",
														"src": "7549:3:7",
														"type": ""
													}
												],
												"src": "7489:118:7"
											},
											{
												"body": {
													"nativeSrc": "7711:124:7",
													"nodeType": "YulBlock",
													"src": "7711:124:7",
													"statements": [
														{
															"nativeSrc": "7721:26:7",
															"nodeType": "YulAssignment",
															"src": "7721:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7733:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7733:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7744:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7744:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7729:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7729:3:7"
																},
																"nativeSrc": "7729:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7729:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7721:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7721:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7801:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7801:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7814:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7814:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7825:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7825:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7810:3:7"
																		},
																		"nativeSrc": "7810:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7810:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7757:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7757:43:7"
																},
																"nativeSrc": "7757:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7757:71:7"
															},
															"nativeSrc": "7757:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7757:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7613:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7683:9:7",
														"nodeType": "YulTypedName",
														"src": "7683:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7695:6:7",
														"nodeType": "YulTypedName",
														"src": "7695:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7706:4:7",
														"nodeType": "YulTypedName",
														"src": "7706:4:7",
														"type": ""
													}
												],
												"src": "7613:222:7"
											},
											{
												"body": {
													"nativeSrc": "7869:152:7",
													"nodeType": "YulBlock",
													"src": "7869:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7886:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7886:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7889:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7879:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7879:6:7"
																},
																"nativeSrc": "7879:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7879:88:7"
															},
															"nativeSrc": "7879:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7879:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7986:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7986:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:7"
																},
																"nativeSrc": "7976:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7976:15:7"
															},
															"nativeSrc": "7976:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7976:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8007:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8007:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8010:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8000:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:7"
																},
																"nativeSrc": "8000:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8000:15:7"
															},
															"nativeSrc": "8000:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8000:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7841:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7841:180:7"
											},
											{
												"body": {
													"nativeSrc": "8078:51:7",
													"nodeType": "YulBlock",
													"src": "8078:51:7",
													"statements": [
														{
															"nativeSrc": "8088:34:7",
															"nodeType": "YulAssignment",
															"src": "8088:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8113:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8113:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "8116:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8116:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8109:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8109:3:7"
																},
																"nativeSrc": "8109:13:7",
																"nodeType": "YulFunctionCall",
																"src": "8109:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "8088:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "8088:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "8027:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8059:5:7",
														"nodeType": "YulTypedName",
														"src": "8059:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "8069:8:7",
														"nodeType": "YulTypedName",
														"src": "8069:8:7",
														"type": ""
													}
												],
												"src": "8027:102:7"
											},
											{
												"body": {
													"nativeSrc": "8208:775:7",
													"nodeType": "YulBlock",
													"src": "8208:775:7",
													"statements": [
														{
															"nativeSrc": "8218:15:7",
															"nodeType": "YulAssignment",
															"src": "8218:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "8227:6:7",
																"nodeType": "YulIdentifier",
																"src": "8227:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8218:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8218:5:7"
																}
															]
														},
														{
															"nativeSrc": "8242:14:7",
															"nodeType": "YulAssignment",
															"src": "8242:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "8251:5:7",
																"nodeType": "YulIdentifier",
																"src": "8251:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "8242:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8242:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8300:677:7",
																"nodeType": "YulBlock",
																"src": "8300:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "8388:22:7",
																			"nodeType": "YulBlock",
																			"src": "8388:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8390:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "8390:16:7"
																						},
																						"nativeSrc": "8390:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8390:18:7"
																					},
																					"nativeSrc": "8390:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "8390:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8366:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8366:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "8376:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8376:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "8381:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "8381:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "8372:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "8372:3:7"
																					},
																					"nativeSrc": "8372:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8372:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8363:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "8363:2:7"
																			},
																			"nativeSrc": "8363:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8363:24:7"
																		},
																		"nativeSrc": "8360:50:7",
																		"nodeType": "YulIf",
																		"src": "8360:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "8455:419:7",
																			"nodeType": "YulBlock",
																			"src": "8455:419:7",
																			"statements": [
																				{
																					"nativeSrc": "8835:25:7",
																					"nodeType": "YulAssignment",
																					"src": "8835:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "8848:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "8848:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "8855:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "8855:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "8844:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8844:3:7"
																						},
																						"nativeSrc": "8844:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8844:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "8835:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "8835:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8430:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8430:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8440:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8440:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8426:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8426:3:7"
																			},
																			"nativeSrc": "8426:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8426:16:7"
																		},
																		"nativeSrc": "8423:451:7",
																		"nodeType": "YulIf",
																		"src": "8423:451:7"
																	},
																	{
																		"nativeSrc": "8887:23:7",
																		"nodeType": "YulAssignment",
																		"src": "8887:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8899:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8899:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "8905:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "8905:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "8895:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8895:3:7"
																			},
																			"nativeSrc": "8895:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8895:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "8887:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8887:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8923:44:7",
																		"nodeType": "YulAssignment",
																		"src": "8923:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "8958:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "8958:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "8935:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "8935:22:7"
																			},
																			"nativeSrc": "8935:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8935:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "8923:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "8923:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8276:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "8276:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8286:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8286:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8273:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8273:2:7"
																},
																"nativeSrc": "8273:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8273:15:7"
															},
															"nativeSrc": "8265:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8289:2:7",
																"nodeType": "YulBlock",
																"src": "8289:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "8269:3:7",
																"nodeType": "YulBlock",
																"src": "8269:3:7",
																"statements": []
															},
															"src": "8265:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "8135:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "8163:6:7",
														"nodeType": "YulTypedName",
														"src": "8163:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "8171:5:7",
														"nodeType": "YulTypedName",
														"src": "8171:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "8178:8:7",
														"nodeType": "YulTypedName",
														"src": "8178:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "8188:3:7",
														"nodeType": "YulTypedName",
														"src": "8188:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "8196:5:7",
														"nodeType": "YulTypedName",
														"src": "8196:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "8203:4:7",
														"nodeType": "YulTypedName",
														"src": "8203:4:7",
														"type": ""
													}
												],
												"src": "8135:848:7"
											},
											{
												"body": {
													"nativeSrc": "9049:1013:7",
													"nodeType": "YulBlock",
													"src": "9049:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9244:20:7",
																"nodeType": "YulBlock",
																"src": "9244:20:7",
																"statements": [
																	{
																		"nativeSrc": "9246:10:7",
																		"nodeType": "YulAssignment",
																		"src": "9246:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9255:1:7",
																			"nodeType": "YulLiteral",
																			"src": "9255:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9246:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9246:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9257:5:7",
																		"nodeType": "YulLeave",
																		"src": "9257:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9234:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9234:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9227:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9227:6:7"
																},
																"nativeSrc": "9227:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9227:16:7"
															},
															"nativeSrc": "9224:40:7",
															"nodeType": "YulIf",
															"src": "9224:40:7"
														},
														{
															"body": {
																"nativeSrc": "9289:20:7",
																"nodeType": "YulBlock",
																"src": "9289:20:7",
																"statements": [
																	{
																		"nativeSrc": "9291:10:7",
																		"nodeType": "YulAssignment",
																		"src": "9291:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9300:1:7",
																			"nodeType": "YulLiteral",
																			"src": "9300:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9291:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9291:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9302:5:7",
																		"nodeType": "YulLeave",
																		"src": "9302:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9283:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9283:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9276:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9276:6:7"
																},
																"nativeSrc": "9276:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9276:12:7"
															},
															"nativeSrc": "9273:36:7",
															"nodeType": "YulIf",
															"src": "9273:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "9419:20:7",
																		"nodeType": "YulBlock",
																		"src": "9419:20:7",
																		"statements": [
																			{
																				"nativeSrc": "9421:10:7",
																				"nodeType": "YulAssignment",
																				"src": "9421:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9430:1:7",
																					"nodeType": "YulLiteral",
																					"src": "9430:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9421:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9421:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "9432:5:7",
																				"nodeType": "YulLeave",
																				"src": "9432:5:7"
																			}
																		]
																	},
																	"nativeSrc": "9412:27:7",
																	"nodeType": "YulCase",
																	"src": "9412:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9417:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9463:176:7",
																		"nodeType": "YulBlock",
																		"src": "9463:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "9498:22:7",
																					"nodeType": "YulBlock",
																					"src": "9498:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9500:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "9500:16:7"
																								},
																								"nativeSrc": "9500:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9500:18:7"
																							},
																							"nativeSrc": "9500:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9500:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "9483:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "9483:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9493:3:7",
																							"nodeType": "YulLiteral",
																							"src": "9493:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9480:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9480:2:7"
																					},
																					"nativeSrc": "9480:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9480:17:7"
																				},
																				"nativeSrc": "9477:43:7",
																				"nodeType": "YulIf",
																				"src": "9477:43:7"
																			},
																			{
																				"nativeSrc": "9533:25:7",
																				"nodeType": "YulAssignment",
																				"src": "9533:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9546:1:7",
																							"nodeType": "YulLiteral",
																							"src": "9546:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "9549:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "9549:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "9542:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9542:3:7"
																					},
																					"nativeSrc": "9542:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9542:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "9533:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "9533:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9589:22:7",
																					"nodeType": "YulBlock",
																					"src": "9589:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "9591:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "9591:16:7"
																								},
																								"nativeSrc": "9591:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "9591:18:7"
																							},
																							"nativeSrc": "9591:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "9591:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "9577:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "9577:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "9584:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9584:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "9574:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "9574:2:7"
																					},
																					"nativeSrc": "9574:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9574:14:7"
																				},
																				"nativeSrc": "9571:40:7",
																				"nodeType": "YulIf",
																				"src": "9571:40:7"
																			},
																			{
																				"nativeSrc": "9624:5:7",
																				"nodeType": "YulLeave",
																				"src": "9624:5:7"
																			}
																		]
																	},
																	"nativeSrc": "9448:191:7",
																	"nodeType": "YulCase",
																	"src": "9448:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9453:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9453:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "9369:4:7",
																"nodeType": "YulIdentifier",
																"src": "9369:4:7"
															},
															"nativeSrc": "9362:277:7",
															"nodeType": "YulSwitch",
															"src": "9362:277:7"
														},
														{
															"body": {
																"nativeSrc": "9771:123:7",
																"nodeType": "YulBlock",
																"src": "9771:123:7",
																"statements": [
																	{
																		"nativeSrc": "9785:28:7",
																		"nodeType": "YulAssignment",
																		"src": "9785:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9798:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "9798:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "9804:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "9804:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "9794:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9794:3:7"
																			},
																			"nativeSrc": "9794:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9794:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "9785:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9785:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "9844:22:7",
																			"nodeType": "YulBlock",
																			"src": "9844:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9846:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "9846:16:7"
																						},
																						"nativeSrc": "9846:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9846:18:7"
																					},
																					"nativeSrc": "9846:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "9846:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "9832:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "9832:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "9839:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9839:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9829:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "9829:2:7"
																			},
																			"nativeSrc": "9829:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9829:14:7"
																		},
																		"nativeSrc": "9826:40:7",
																		"nodeType": "YulIf",
																		"src": "9826:40:7"
																	},
																	{
																		"nativeSrc": "9879:5:7",
																		"nodeType": "YulLeave",
																		"src": "9879:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9674:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "9674:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9680:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9680:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9671:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9671:2:7"
																				},
																				"nativeSrc": "9671:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9671:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9688:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "9688:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9698:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9698:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9685:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9685:2:7"
																				},
																				"nativeSrc": "9685:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9685:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9667:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9667:3:7"
																		},
																		"nativeSrc": "9667:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9667:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "9723:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "9723:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9729:3:7",
																						"nodeType": "YulLiteral",
																						"src": "9729:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9720:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9720:2:7"
																				},
																				"nativeSrc": "9720:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9720:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "9738:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "9738:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:7",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "9735:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9735:2:7"
																				},
																				"nativeSrc": "9735:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9735:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9716:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9716:3:7"
																		},
																		"nativeSrc": "9716:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9716:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "9651:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9651:2:7"
																},
																"nativeSrc": "9651:111:7",
																"nodeType": "YulFunctionCall",
																"src": "9651:111:7"
															},
															"nativeSrc": "9648:246:7",
															"nodeType": "YulIf",
															"src": "9648:246:7"
														},
														{
															"nativeSrc": "9904:57:7",
															"nodeType": "YulAssignment",
															"src": "9904:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9938:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9938:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "9941:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9941:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9947:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9947:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "9957:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9957:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "9919:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "9919:18:7"
																},
																"nativeSrc": "9919:42:7",
																"nodeType": "YulFunctionCall",
																"src": "9919:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9904:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9904:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "9911:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9911:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10000:22:7",
																"nodeType": "YulBlock",
																"src": "10000:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10002:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10002:16:7"
																			},
																			"nativeSrc": "10002:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10002:18:7"
																		},
																		"nativeSrc": "10002:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10002:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "9977:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9977:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "9988:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9988:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "9993:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9993:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "9984:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9984:3:7"
																		},
																		"nativeSrc": "9984:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9984:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9974:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9974:2:7"
																},
																"nativeSrc": "9974:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9974:25:7"
															},
															"nativeSrc": "9971:51:7",
															"nodeType": "YulIf",
															"src": "9971:51:7"
														},
														{
															"nativeSrc": "10031:25:7",
															"nodeType": "YulAssignment",
															"src": "10031:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "10044:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10044:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "10051:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10051:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10040:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10040:3:7"
																},
																"nativeSrc": "10040:16:7",
																"nodeType": "YulFunctionCall",
																"src": "10040:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10031:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10031:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "8989:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9019:4:7",
														"nodeType": "YulTypedName",
														"src": "9019:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9025:8:7",
														"nodeType": "YulTypedName",
														"src": "9025:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9035:3:7",
														"nodeType": "YulTypedName",
														"src": "9035:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9043:5:7",
														"nodeType": "YulTypedName",
														"src": "9043:5:7",
														"type": ""
													}
												],
												"src": "8989:1073:7"
											},
											{
												"body": {
													"nativeSrc": "10111:43:7",
													"nodeType": "YulBlock",
													"src": "10111:43:7",
													"statements": [
														{
															"nativeSrc": "10121:27:7",
															"nodeType": "YulAssignment",
															"src": "10121:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10136:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10136:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10143:4:7",
																		"nodeType": "YulLiteral",
																		"src": "10143:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10132:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10132:3:7"
																},
																"nativeSrc": "10132:16:7",
																"nodeType": "YulFunctionCall",
																"src": "10132:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10121:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10121:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "10068:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10093:5:7",
														"nodeType": "YulTypedName",
														"src": "10093:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10103:7:7",
														"nodeType": "YulTypedName",
														"src": "10103:7:7",
														"type": ""
													}
												],
												"src": "10068:86:7"
											},
											{
												"body": {
													"nativeSrc": "10224:217:7",
													"nodeType": "YulBlock",
													"src": "10224:217:7",
													"statements": [
														{
															"nativeSrc": "10234:31:7",
															"nodeType": "YulAssignment",
															"src": "10234:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10260:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10260:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10242:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10242:17:7"
																},
																"nativeSrc": "10242:23:7",
																"nodeType": "YulFunctionCall",
																"src": "10242:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "10234:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10234:4:7"
																}
															]
														},
														{
															"nativeSrc": "10274:37:7",
															"nodeType": "YulAssignment",
															"src": "10274:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10302:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "10302:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "10286:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "10286:15:7"
																},
																"nativeSrc": "10286:25:7",
																"nodeType": "YulFunctionCall",
																"src": "10286:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "10274:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "10274:8:7"
																}
															]
														},
														{
															"nativeSrc": "10321:113:7",
															"nodeType": "YulAssignment",
															"src": "10321:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10351:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10351:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "10357:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "10357:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10367:66:7",
																		"nodeType": "YulLiteral",
																		"src": "10367:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "10330:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "10330:20:7"
																},
																"nativeSrc": "10330:104:7",
																"nodeType": "YulFunctionCall",
																"src": "10330:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "10321:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10321:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "10160:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10199:4:7",
														"nodeType": "YulTypedName",
														"src": "10199:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10205:8:7",
														"nodeType": "YulTypedName",
														"src": "10205:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10218:5:7",
														"nodeType": "YulTypedName",
														"src": "10218:5:7",
														"type": ""
													}
												],
												"src": "10160:281:7"
											},
											{
												"body": {
													"nativeSrc": "10495:362:7",
													"nodeType": "YulBlock",
													"src": "10495:362:7",
													"statements": [
														{
															"nativeSrc": "10505:25:7",
															"nodeType": "YulAssignment",
															"src": "10505:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10528:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10528:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10510:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10510:17:7"
																},
																"nativeSrc": "10510:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10510:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10505:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10505:1:7"
																}
															]
														},
														{
															"nativeSrc": "10539:25:7",
															"nodeType": "YulAssignment",
															"src": "10539:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10562:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10562:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10544:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10544:17:7"
																},
																"nativeSrc": "10544:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10544:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10539:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10539:1:7"
																}
															]
														},
														{
															"nativeSrc": "10573:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "10573:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10596:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10596:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10599:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10599:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10592:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10592:3:7"
																},
																"nativeSrc": "10592:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10592:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10577:11:7",
																	"nodeType": "YulTypedName",
																	"src": "10577:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10610:41:7",
															"nodeType": "YulAssignment",
															"src": "10610:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10639:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "10639:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10621:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10621:17:7"
																},
																"nativeSrc": "10621:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10621:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10610:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "10610:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10828:22:7",
																"nodeType": "YulBlock",
																"src": "10828:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10830:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "10830:16:7"
																			},
																			"nativeSrc": "10830:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10830:18:7"
																		},
																		"nativeSrc": "10830:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10830:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10761:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10761:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10754:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "10754:6:7"
																				},
																				"nativeSrc": "10754:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10754:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10784:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "10784:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10791:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "10791:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10800:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "10800:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10787:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10787:3:7"
																						},
																						"nativeSrc": "10787:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10787:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10781:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "10781:2:7"
																				},
																				"nativeSrc": "10781:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10781:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10734:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10734:2:7"
																		},
																		"nativeSrc": "10734:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10734:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10714:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10714:6:7"
																},
																"nativeSrc": "10714:113:7",
																"nodeType": "YulFunctionCall",
																"src": "10714:113:7"
															},
															"nativeSrc": "10711:139:7",
															"nodeType": "YulIf",
															"src": "10711:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10447:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10478:1:7",
														"nodeType": "YulTypedName",
														"src": "10478:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10481:1:7",
														"nodeType": "YulTypedName",
														"src": "10481:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10487:7:7",
														"nodeType": "YulTypedName",
														"src": "10487:7:7",
														"type": ""
													}
												],
												"src": "10447:410:7"
											},
											{
												"body": {
													"nativeSrc": "10907:147:7",
													"nodeType": "YulBlock",
													"src": "10907:147:7",
													"statements": [
														{
															"nativeSrc": "10917:25:7",
															"nodeType": "YulAssignment",
															"src": "10917:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10940:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10940:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10922:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10922:17:7"
																},
																"nativeSrc": "10922:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10922:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10917:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10917:1:7"
																}
															]
														},
														{
															"nativeSrc": "10951:25:7",
															"nodeType": "YulAssignment",
															"src": "10951:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10974:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10974:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10956:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "10956:17:7"
																},
																"nativeSrc": "10956:20:7",
																"nodeType": "YulFunctionCall",
																"src": "10956:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10951:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "10951:1:7"
																}
															]
														},
														{
															"nativeSrc": "10985:16:7",
															"nodeType": "YulAssignment",
															"src": "10985:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10996:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10996:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10999:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "10999:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10992:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10992:3:7"
																},
																"nativeSrc": "10992:9:7",
																"nodeType": "YulFunctionCall",
																"src": "10992:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10985:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10985:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11025:22:7",
																"nodeType": "YulBlock",
																"src": "11025:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11027:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11027:16:7"
																			},
																			"nativeSrc": "11027:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11027:18:7"
																		},
																		"nativeSrc": "11027:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11027:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11017:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11017:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11020:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11020:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11014:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11014:2:7"
																},
																"nativeSrc": "11014:10:7",
																"nodeType": "YulFunctionCall",
																"src": "11014:10:7"
															},
															"nativeSrc": "11011:36:7",
															"nodeType": "YulIf",
															"src": "11011:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10863:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10894:1:7",
														"nodeType": "YulTypedName",
														"src": "10894:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10897:1:7",
														"nodeType": "YulTypedName",
														"src": "10897:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10903:3:7",
														"nodeType": "YulTypedName",
														"src": "10903:3:7",
														"type": ""
													}
												],
												"src": "10863:191:7"
											},
											{
												"body": {
													"nativeSrc": "11125:53:7",
													"nodeType": "YulBlock",
													"src": "11125:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11142:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11142:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11165:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11165:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "11147:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "11147:17:7"
																		},
																		"nativeSrc": "11147:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11147:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11135:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11135:6:7"
																},
																"nativeSrc": "11135:37:7",
																"nodeType": "YulFunctionCall",
																"src": "11135:37:7"
															},
															"nativeSrc": "11135:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "11135:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11060:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11113:5:7",
														"nodeType": "YulTypedName",
														"src": "11113:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11120:3:7",
														"nodeType": "YulTypedName",
														"src": "11120:3:7",
														"type": ""
													}
												],
												"src": "11060:118:7"
											},
											{
												"body": {
													"nativeSrc": "11338:288:7",
													"nodeType": "YulBlock",
													"src": "11338:288:7",
													"statements": [
														{
															"nativeSrc": "11348:26:7",
															"nodeType": "YulAssignment",
															"src": "11348:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11360:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11360:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11371:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11371:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11356:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11356:3:7"
																},
																"nativeSrc": "11356:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11356:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11348:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11348:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11428:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11428:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11441:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11441:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11452:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11452:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11437:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11437:3:7"
																		},
																		"nativeSrc": "11437:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11437:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11384:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11384:43:7"
																},
																"nativeSrc": "11384:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11384:71:7"
															},
															"nativeSrc": "11384:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11384:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11509:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11509:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11522:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11522:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11533:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11533:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11518:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11518:3:7"
																		},
																		"nativeSrc": "11518:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11518:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11465:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11465:43:7"
																},
																"nativeSrc": "11465:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11465:72:7"
															},
															"nativeSrc": "11465:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11465:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11591:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11591:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11604:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11604:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11615:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11615:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11600:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11600:3:7"
																		},
																		"nativeSrc": "11600:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11600:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11547:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11547:43:7"
																},
																"nativeSrc": "11547:72:7",
																"nodeType": "YulFunctionCall",
																"src": "11547:72:7"
															},
															"nativeSrc": "11547:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "11547:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11184:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11294:9:7",
														"nodeType": "YulTypedName",
														"src": "11294:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11306:6:7",
														"nodeType": "YulTypedName",
														"src": "11306:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11314:6:7",
														"nodeType": "YulTypedName",
														"src": "11314:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11322:6:7",
														"nodeType": "YulTypedName",
														"src": "11322:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11333:4:7",
														"nodeType": "YulTypedName",
														"src": "11333:4:7",
														"type": ""
													}
												],
												"src": "11184:442:7"
											},
											{
												"body": {
													"nativeSrc": "11730:124:7",
													"nodeType": "YulBlock",
													"src": "11730:124:7",
													"statements": [
														{
															"nativeSrc": "11740:26:7",
															"nodeType": "YulAssignment",
															"src": "11740:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11752:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11752:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11763:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11763:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11748:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11748:3:7"
																},
																"nativeSrc": "11748:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11748:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11740:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11740:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11820:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11820:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11833:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11833:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11844:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11844:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11829:3:7"
																		},
																		"nativeSrc": "11829:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11829:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11776:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "11776:43:7"
																},
																"nativeSrc": "11776:71:7",
																"nodeType": "YulFunctionCall",
																"src": "11776:71:7"
															},
															"nativeSrc": "11776:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "11776:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "11632:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11702:9:7",
														"nodeType": "YulTypedName",
														"src": "11702:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11714:6:7",
														"nodeType": "YulTypedName",
														"src": "11714:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11725:4:7",
														"nodeType": "YulTypedName",
														"src": "11725:4:7",
														"type": ""
													}
												],
												"src": "11632:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051613a30380380613a30833981810160405281019061003191906105af565b856040518060400160405280600b81526020017f4e6174757265546f6b656e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f4e5452000000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610869565b5080600490816100bd9190610869565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610947565b60405180910390fd5b61013f816101b560201b60201c565b506101743061015261027860201b60201c565b600a61015e9190610ac8565b876101699190610b12565b61028060201b60201c565b8360088190555082600a819055508160098190555080600d819055505f600560146101000a81548160ff021916908315150217905550505050505050610be3565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102f0575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102e79190610947565b60405180910390fd5b6103015f838361030560201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610355578060025f8282546103499190610b53565b92505081905550610423565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103de578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103d593929190610b95565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361046a578060025f82825403925050819055506104b4565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105119190610bca565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61054b82610522565b9050919050565b61055b81610541565b8114610565575f80fd5b50565b5f8151905061057681610552565b92915050565b5f819050919050565b61058e8161057c565b8114610598575f80fd5b50565b5f815190506105a981610585565b92915050565b5f805f805f8060c087890312156105c9576105c861051e565b5b5f6105d689828a01610568565b96505060206105e789828a0161059b565b95505060406105f889828a0161059b565b945050606061060989828a0161059b565b935050608061061a89828a0161059b565b92505060a061062b89828a0161059b565b9150509295509295509295565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806106b357607f821691505b6020821081036106c6576106c561066f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106ed565b61073286836106ed565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61076d6107686107638461057c565b61074a565b61057c565b9050919050565b5f819050919050565b61078683610753565b61079a61079282610774565b8484546106f9565b825550505050565b5f90565b6107ae6107a2565b6107b981848461077d565b505050565b5b818110156107dc576107d15f826107a6565b6001810190506107bf565b5050565b601f821115610821576107f2816106cc565b6107fb846106de565b8101602085101561080a578190505b61081e610816856106de565b8301826107be565b50505b505050565b5f82821c905092915050565b5f6108415f1984600802610826565b1980831691505092915050565b5f6108598383610832565b9150826002028217905092915050565b61087282610638565b67ffffffffffffffff81111561088b5761088a610642565b5b610895825461069c565b6108a08282856107e0565b5f60209050601f8311600181146108d1575f84156108bf578287015190505b6108c9858261084e565b865550610930565b601f1984166108df866106cc565b5f5b82811015610906578489015182556001820191506020850194506020810190506108e1565b86831015610923578489015161091f601f891682610832565b8355505b6001600288020188555050505b505050505050565b61094181610541565b82525050565b5f60208201905061095a5f830184610938565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b60018511156109e2578086048111156109be576109bd610960565b5b60018516156109cd5780820291505b80810290506109db8561098d565b94506109a2565b94509492505050565b5f826109fa5760019050610ab5565b81610a07575f9050610ab5565b8160018114610a1d5760028114610a2757610a56565b6001915050610ab5565b60ff841115610a3957610a38610960565b5b8360020a915084821115610a5057610a4f610960565b5b50610ab5565b5060208310610133831016604e8410600b8410161715610a8b5782820a905083811115610a8657610a85610960565b5b610ab5565b610a988484846001610999565b92509050818404811115610aaf57610aae610960565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610ad28261057c565b9150610add83610abc565b9250610b0a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846109eb565b905092915050565b5f610b1c8261057c565b9150610b278361057c565b9250828202610b358161057c565b91508282048414831517610b4c57610b4b610960565b5b5092915050565b5f610b5d8261057c565b9150610b688361057c565b9250828201905080821115610b8057610b7f610960565b5b92915050565b610b8f8161057c565b82525050565b5f606082019050610ba85f830186610938565b610bb56020830185610b86565b610bc26040830184610b86565b949350505050565b5f602082019050610bdd5f830184610b86565b92915050565b612e4080610bf05f395ff3fe60806040526004361061022f575f3560e01c80637547c7a31161012d578063a9059cbb116100aa578063dd62ed3e1161006e578063dd62ed3e1461083f578063f2fde38b1461087b578063f8102e68146108a3578063f9931855146108cd578063f9a81af7146109095761022f565b8063a9059cbb14610769578063cce29ea7146107a5578063cec297a0146107cf578063d0febe4c1461080b578063d348b409146108155761022f565b806395d89b41116100f157806395d89b41146106895780639b19251a146106b35780639ca423b3146106ef578063a09c4cf41461072b578063a5ce413b146107535761022f565b80637547c7a3146105a95780637c613b2f146105d15780638265324d146105e75780638da5cb5b146106235780638f0794fe1461064d5761022f565b80632c663960116101bb5780634f3fc2df1161017f5780634f3fc2df146104d9578063518ab2a81461050357806370a082311461052d578063715018a6146105695780637165d19b1461057f5761022f565b80632c663960146103f557806330f72cd414610431578063313ce5671461045b578063329a27e7146104855780634405df4a146104af5761022f565b80630d505541116102025780630d505541146102ed57806318160ddd146103295780631d0806ae1461035357806323b872dd1461037d57806327e235e3146103b95761022f565b806303e293a31461023357806306d65af31461025d57806306fdde0314610287578063095ea7b3146102b1575b5f80fd5b34801561023e575f80fd5b50610247610931565b60405161025491906121a9565b60405180910390f35b348015610268575f80fd5b50610271610937565b60405161027e91906121a9565b60405180910390f35b348015610292575f80fd5b5061029b61093d565b6040516102a89190612232565b60405180910390f35b3480156102bc575f80fd5b506102d760048036038101906102d291906122da565b6109cd565b6040516102e49190612332565b60405180910390f35b3480156102f8575f80fd5b50610313600480360381019061030e919061234b565b6109ef565b60405161032091906121a9565b60405180910390f35b348015610334575f80fd5b5061033d610ab4565b60405161034a91906121a9565b60405180910390f35b34801561035e575f80fd5b50610367610abd565b60405161037491906121a9565b60405180910390f35b348015610388575f80fd5b506103a3600480360381019061039e9190612376565b610ac3565b6040516103b09190612332565b60405180910390f35b3480156103c4575f80fd5b506103df60048036038101906103da919061234b565b610af1565b6040516103ec91906121a9565b60405180910390f35b348015610400575f80fd5b5061041b600480360381019061041691906123c6565b610b06565b60405161042891906121a9565b60405180910390f35b34801561043c575f80fd5b50610445610b71565b6040516104529190612332565b60405180910390f35b348015610466575f80fd5b5061046f610b84565b60405161047c919061241f565b60405180910390f35b348015610490575f80fd5b50610499610b8c565b6040516104a691906121a9565b60405180910390f35b3480156104ba575f80fd5b506104c3610bd0565b6040516104d091906121a9565b60405180910390f35b3480156104e4575f80fd5b506104ed610c13565b6040516104fa91906121a9565b60405180910390f35b34801561050e575f80fd5b50610517610c19565b60405161052491906121a9565b60405180910390f35b348015610538575f80fd5b50610553600480360381019061054e919061234b565b610c1f565b60405161056091906121a9565b60405180910390f35b348015610574575f80fd5b5061057d610c64565b005b34801561058a575f80fd5b50610593610c77565b6040516105a091906121a9565b60405180910390f35b3480156105b4575f80fd5b506105cf60048036038101906105ca9190612438565b610c7d565b005b3480156105dc575f80fd5b506105e5610dfb565b005b3480156105f2575f80fd5b5061060d6004803603810190610608919061234b565b610f3c565b60405161061a91906121a9565b60405180910390f35b34801561062e575f80fd5b50610637610fad565b6040516106449190612472565b60405180910390f35b348015610658575f80fd5b50610673600480360381019061066e919061234b565b610fd5565b60405161068091906121a9565b60405180910390f35b348015610694575f80fd5b5061069d610fea565b6040516106aa9190612232565b60405180910390f35b3480156106be575f80fd5b506106d960048036038101906106d4919061234b565b61107a565b6040516106e69190612332565b60405180910390f35b3480156106fa575f80fd5b506107156004803603810190610710919061234b565b611097565b6040516107229190612472565b60405180910390f35b348015610736575f80fd5b50610751600480360381019061074c919061234b565b6110c7565b005b34801561075e575f80fd5b506107676113c8565b005b348015610774575f80fd5b5061078f600480360381019061078a91906122da565b6115d3565b60405161079c9190612332565b60405180910390f35b3480156107b0575f80fd5b506107b96115f5565b6040516107c691906121a9565b60405180910390f35b3480156107da575f80fd5b506107f560048036038101906107f0919061234b565b6115fb565b60405161080291906121a9565b60405180910390f35b610813611610565b005b348015610820575f80fd5b50610829611806565b60405161083691906121a9565b60405180910390f35b34801561084a575f80fd5b506108656004803603810190610860919061248b565b61188f565b60405161087291906121a9565b60405180910390f35b348015610886575f80fd5b506108a1600480360381019061089c919061234b565b611911565b005b3480156108ae575f80fd5b506108b7611995565b6040516108c491906121a9565b60405180910390f35b3480156108d8575f80fd5b506108f360048036038101906108ee919061234b565b61199b565b60405161090091906121a9565b60405180910390f35b348015610914575f80fd5b5061092f600480360381019061092a91906123c6565b6119b0565b005b60095481565b60065481565b60606003805461094c906124f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610978906124f6565b80156109c35780601f1061099a576101008083540402835291602001916109c3565b820191905f5260205f20905b8154815290600101906020018083116109a657829003601f168201915b5050505050905090565b5f806109d7611a44565b90506109e4818585611a4b565b600191505092915050565b5f8062093a80600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442610a3e9190612553565b610a4891906125b3565b9050606481600d54600e5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a9891906125e3565b610aa291906125e3565b610aac91906125b3565b915050919050565b5f600254905090565b60085481565b5f80610acd611a44565b9050610ada858285611a5d565b610ae5858585611af0565b60019150509392505050565b6013602052805f5260405f205f915090505481565b5f82821015610b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4190612694565b60405180910390fd5b5f62093a808484610b5b9190612553565b610b6591906125b3565b90508091505092915050565b600560149054906101000a900460ff1681565b5f6012905090565b5f60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f80610bde60065442610b06565b90505f600c5482600854600954610bf59190612553565b610bff91906125e3565b610c0991906125b3565b9050809250505090565b600d5481565b600b5481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610c6c611be0565b610c755f611c67565b565b600a5481565b5f8111610cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb690612722565b60405180910390fd5b80610cc933610c1f565b1015610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d019061278a565b60405180910390fd5b610d15333083611af0565b80600e5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d6191906127a8565b9250508190555042600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef82604051610df091906121a9565b60405180910390a250565b60011515600560149054906101000a900460ff16151514610e51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4890612825565b60405180910390fd5b5f610e5b33610f3c565b90505f8111610e9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e969061288d565b60405180910390fd5b610ea93382611d2a565b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167ff0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d82604051610f3191906121a9565b60405180910390a250565b5f610f45610b84565b600a610f5191906129da565b6101f460125f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f9c91906125e3565b610fa691906125e3565b9050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f602052805f5260405f205f915090505481565b606060048054610ff9906124f6565b80601f0160208091040260200160405190810160405280929190818152602001828054611025906124f6565b80156110705780601f1061104757610100808354040283529160200191611070565b820191905f5260205f20905b81548152906001019060200180831161105357829003601f168201915b5050505050905090565b6010602052805f5260405f205f915054906101000a900460ff1681565b6011602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114890612a6e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036111bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b690612ad6565b60405180910390fd5b600160105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611296575060105f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b1561136b578060115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160125f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461136391906127a8565b925050819055505b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da42607545760405160405180910390a350565b5f600e5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811161144b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144290612b3e565b60405180910390fd5b6224ea00600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461149791906127a8565b4210156114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d090612ba6565b60405180910390fd5b5f6114e3336109ef565b90505f600e5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061157f3033838561157a91906127a8565b611af0565b3373ffffffffffffffffffffffffffffffffffffffff167f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c233683836040516115c7929190612bc4565b60405180910390a25050565b5f806115dd611a44565b90506115ea818585611af0565b600191505092915050565b60075481565b6012602052805f5260405f205f915090505481565b600560149054906101000a900460ff1661165f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165690612c35565b60405180910390fd5b5f34116116a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169890612c9d565b60405180910390fd5b5f6116aa611806565b90505f816116b6610b84565b60ff16600a6116c59190612cbb565b346116d091906125e3565b6116da91906125b3565b9050806116e630610c1f565b1015611727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171e90612d4f565b60405180910390fd5b8060135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461177391906127a8565b92505081905550611785303383611af0565b80600b5f82825461179691906127a8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117fa91906121a9565b60405180910390a35050565b5f600560149054906101000a900460ff16611856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184d90612db7565b60405180910390fd5b60075442111561186a57600954905061188c565b5f611873610bd0565b90505f8160085461188491906127a8565b905080925050505b90565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611919611be0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611989575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016119809190612472565b60405180910390fd5b61199281611c67565b50565b600c5481565b600e602052805f5260405f205f915090505481565b6119b8611be0565b8160068190555062093a80816119ce91906125e3565b6006546119db91906127a8565b60078190555080600c819055506001600560146101000a81548160ff0219169083151502179055507f3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d600654600754604051611a38929190612bc4565b60405180910390a15050565b5f33905090565b611a588383836001611da9565b505050565b5f611a68848461188f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015611aea5781811015611adb578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611ad293929190612dd5565b60405180910390fd5b611ae984848484035f611da9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b60575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611b579190612472565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bd0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611bc79190612472565b60405180910390fd5b611bdb838383611f78565b505050565b611be8611a44565b73ffffffffffffffffffffffffffffffffffffffff16611c06610fad565b73ffffffffffffffffffffffffffffffffffffffff1614611c6557611c29611a44565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611c5c9190612472565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d9a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d919190612472565b60405180910390fd5b611da55f8383611f78565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e19575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611e109190612472565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e89575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611e809190612472565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611f72578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611f6991906121a9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fc8578060025f828254611fbc91906127a8565b92505081905550612096565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612051578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161204893929190612dd5565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120dd578060025f8282540392505081905550612127565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161218491906121a9565b60405180910390a3505050565b5f819050919050565b6121a381612191565b82525050565b5f6020820190506121bc5f83018461219a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612204826121c2565b61220e81856121cc565b935061221e8185602086016121dc565b612227816121ea565b840191505092915050565b5f6020820190508181035f83015261224a81846121fa565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61227f82612256565b9050919050565b61228f81612275565b8114612299575f80fd5b50565b5f813590506122aa81612286565b92915050565b6122b981612191565b81146122c3575f80fd5b50565b5f813590506122d4816122b0565b92915050565b5f80604083850312156122f0576122ef612252565b5b5f6122fd8582860161229c565b925050602061230e858286016122c6565b9150509250929050565b5f8115159050919050565b61232c81612318565b82525050565b5f6020820190506123455f830184612323565b92915050565b5f602082840312156123605761235f612252565b5b5f61236d8482850161229c565b91505092915050565b5f805f6060848603121561238d5761238c612252565b5b5f61239a8682870161229c565b93505060206123ab8682870161229c565b92505060406123bc868287016122c6565b9150509250925092565b5f80604083850312156123dc576123db612252565b5b5f6123e9858286016122c6565b92505060206123fa858286016122c6565b9150509250929050565b5f60ff82169050919050565b61241981612404565b82525050565b5f6020820190506124325f830184612410565b92915050565b5f6020828403121561244d5761244c612252565b5b5f61245a848285016122c6565b91505092915050565b61246c81612275565b82525050565b5f6020820190506124855f830184612463565b92915050565b5f80604083850312156124a1576124a0612252565b5b5f6124ae8582860161229c565b92505060206124bf8582860161229c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061250d57607f821691505b6020821081036125205761251f6124c9565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61255d82612191565b915061256883612191565b92508282039050818111156125805761257f612526565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6125bd82612191565b91506125c883612191565b9250826125d8576125d7612586565b5b828204905092915050565b5f6125ed82612191565b91506125f883612191565b925082820261260681612191565b9150828204841483151761261d5761261c612526565b5b5092915050565b7f456e642074696d65206d7573742062652061667465722073746172742074696d5f8201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b5f61267e6021836121cc565b915061268982612624565b604082019050919050565b5f6020820190508181035f8301526126ab81612672565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61270c6021836121cc565b9150612717826126b2565b604082019050919050565b5f6020820190508181035f83015261273981612700565b9050919050565b7f496e73756666696369656e742062616c616e63652e00000000000000000000005f82015250565b5f6127746015836121cc565b915061277f82612740565b602082019050919050565b5f6020820190508181035f8301526127a181612768565b9050919050565b5f6127b282612191565b91506127bd83612191565b92508282019050808211156127d5576127d4612526565b5b92915050565b7f50726573616c65206e6f742073746172746564207965740000000000000000005f82015250565b5f61280f6017836121cc565b915061281a826127db565b602082019050919050565b5f6020820190508181035f83015261283c81612803565b9050919050565b7f4e6f207265776172647320617661696c61626c650000000000000000000000005f82015250565b5f6128776014836121cc565b915061288282612843565b602082019050919050565b5f6020820190508181035f8301526128a48161286b565b9050919050565b5f8160011c9050919050565b5f808291508390505b6001851115612900578086048111156128dc576128db612526565b5b60018516156128eb5780820291505b80810290506128f9856128ab565b94506128c0565b94509492505050565b5f8261291857600190506129d3565b81612925575f90506129d3565b816001811461293b576002811461294557612974565b60019150506129d3565b60ff84111561295757612956612526565b5b8360020a91508482111561296e5761296d612526565b5b506129d3565b5060208310610133831016604e8410600b84101617156129a95782820a9050838111156129a4576129a3612526565b5b6129d3565b6129b684848460016128b7565b925090508184048111156129cd576129cc612526565b5b81810290505b9392505050565b5f6129e482612191565b91506129ef83612404565b9250612a1c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612909565b905092915050565b7f416c72656164792077686974656c6973746564000000000000000000000000005f82015250565b5f612a586013836121cc565b9150612a6382612a24565b602082019050919050565b5f6020820190508181035f830152612a8581612a4c565b9050919050565b7f43616e6e6f7420726566657220796f757273656c6600000000000000000000005f82015250565b5f612ac06015836121cc565b9150612acb82612a8c565b602082019050919050565b5f6020820190508181035f830152612aed81612ab4565b9050919050565b7f4e6f20746f6b656e73207374616b65642e0000000000000000000000000000005f82015250565b5f612b286011836121cc565b9150612b3382612af4565b602082019050919050565b5f6020820190508181035f830152612b5581612b1c565b9050919050565b7f556e7374616b65206f6e6c792061667465722034207765656b732e00000000005f82015250565b5f612b90601b836121cc565b9150612b9b82612b5c565b602082019050919050565b5f6020820190508181035f830152612bbd81612b84565b9050919050565b5f604082019050612bd75f83018561219a565b612be4602083018461219a565b9392505050565b7f53616c65206e6f74206163746976652e000000000000000000000000000000005f82015250565b5f612c1f6010836121cc565b9150612c2a82612beb565b602082019050919050565b5f6020820190508181035f830152612c4c81612c13565b9050919050565b7f4d7573742073656e642045544820746f2062757920746f6b656e732e000000005f82015250565b5f612c87601c836121cc565b9150612c9282612c53565b602082019050919050565b5f6020820190508181035f830152612cb481612c7b565b9050919050565b5f612cc582612191565b9150612cd083612191565b9250612cfd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612909565b905092915050565b7f4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e000000005f82015250565b5f612d39601c836121cc565b9150612d4482612d05565b602082019050919050565b5f6020820190508181035f830152612d6681612d2d565b9050919050565b7f5072652d73616c65206e6f7420737461727465642079657400000000000000005f82015250565b5f612da16018836121cc565b9150612dac82612d6d565b602082019050919050565b5f6020820190508181035f830152612dce81612d95565b9050919050565b5f606082019050612de85f830186612463565b612df5602083018561219a565b612e02604083018461219a565b94935050505056fea26469706673582212205b8261fbf9076c95717db49b9f217f790da4799398c44e3f5ff665f300deb38064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3A30 CODESIZE SUB DUP1 PUSH2 0x3A30 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x5AF JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E6174757265546F6B656E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4E54520000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x869 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x869 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x1B5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x174 ADDRESS PUSH2 0x152 PUSH2 0x278 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xAC8 JUMP JUMPDEST DUP8 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0x280 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP4 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH2 0xBE3 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2F0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x301 PUSH0 DUP4 DUP4 PUSH2 0x305 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x355 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0xB53 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x423 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3DE JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x46A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4B4 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x511 SWAP2 SWAP1 PUSH2 0xBCA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x54B DUP3 PUSH2 0x522 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55B DUP2 PUSH2 0x541 JUMP JUMPDEST DUP2 EQ PUSH2 0x565 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x576 DUP2 PUSH2 0x552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x58E DUP2 PUSH2 0x57C JUMP JUMPDEST DUP2 EQ PUSH2 0x598 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A9 DUP2 PUSH2 0x585 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x5C9 JUMPI PUSH2 0x5C8 PUSH2 0x51E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x5D6 DUP10 DUP3 DUP11 ADD PUSH2 0x568 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x5E7 DUP10 DUP3 DUP11 ADD PUSH2 0x59B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x5F8 DUP10 DUP3 DUP11 ADD PUSH2 0x59B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x609 DUP10 DUP3 DUP11 ADD PUSH2 0x59B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x61A DUP10 DUP3 DUP11 ADD PUSH2 0x59B JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x62B DUP10 DUP3 DUP11 ADD PUSH2 0x59B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6B3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C6 JUMPI PUSH2 0x6C5 PUSH2 0x66F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x728 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x732 DUP7 DUP4 PUSH2 0x6ED JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x76D PUSH2 0x768 PUSH2 0x763 DUP5 PUSH2 0x57C JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x786 DUP4 PUSH2 0x753 JUMP JUMPDEST PUSH2 0x79A PUSH2 0x792 DUP3 PUSH2 0x774 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x6F9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x7A2 JUMP JUMPDEST PUSH2 0x7B9 DUP2 DUP5 DUP5 PUSH2 0x77D JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7D1 PUSH0 DUP3 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x821 JUMPI PUSH2 0x7F2 DUP2 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x6DE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x80A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x81E PUSH2 0x816 DUP6 PUSH2 0x6DE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x7BE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x841 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x826 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x859 DUP4 DUP4 PUSH2 0x832 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x872 DUP3 PUSH2 0x638 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0x642 JUMP JUMPDEST JUMPDEST PUSH2 0x895 DUP3 SLOAD PUSH2 0x69C JUMP JUMPDEST PUSH2 0x8A0 DUP3 DUP3 DUP6 PUSH2 0x7E0 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x8D1 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x8BF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x8C9 DUP6 DUP3 PUSH2 0x84E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x930 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x8DF DUP7 PUSH2 0x6CC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x906 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8E1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x923 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x91F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x832 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x541 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x95A PUSH0 DUP4 ADD DUP5 PUSH2 0x938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x9E2 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x9BE JUMPI PUSH2 0x9BD PUSH2 0x960 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x9CD JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x9DB DUP6 PUSH2 0x98D JUMP JUMPDEST SWAP5 POP PUSH2 0x9A2 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x9FA JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xAB5 JUMP JUMPDEST DUP2 PUSH2 0xA07 JUMPI PUSH0 SWAP1 POP PUSH2 0xAB5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA1D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA27 JUMPI PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA39 JUMPI PUSH2 0xA38 PUSH2 0x960 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xA50 JUMPI PUSH2 0xA4F PUSH2 0x960 JUMP JUMPDEST JUMPDEST POP PUSH2 0xAB5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA8B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA86 JUMPI PUSH2 0xA85 PUSH2 0x960 JUMP JUMPDEST JUMPDEST PUSH2 0xAB5 JUMP JUMPDEST PUSH2 0xA98 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x999 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xAAF JUMPI PUSH2 0xAAE PUSH2 0x960 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xAD2 DUP3 PUSH2 0x57C JUMP JUMPDEST SWAP2 POP PUSH2 0xADD DUP4 PUSH2 0xABC JUMP JUMPDEST SWAP3 POP PUSH2 0xB0A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x9EB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB1C DUP3 PUSH2 0x57C JUMP JUMPDEST SWAP2 POP PUSH2 0xB27 DUP4 PUSH2 0x57C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB35 DUP2 PUSH2 0x57C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB4C JUMPI PUSH2 0xB4B PUSH2 0x960 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB5D DUP3 PUSH2 0x57C JUMP JUMPDEST SWAP2 POP PUSH2 0xB68 DUP4 PUSH2 0x57C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB80 JUMPI PUSH2 0xB7F PUSH2 0x960 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB8F DUP2 PUSH2 0x57C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBA8 PUSH0 DUP4 ADD DUP7 PUSH2 0x938 JUMP JUMPDEST PUSH2 0xBB5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xB86 JUMP JUMPDEST PUSH2 0xBC2 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBDD PUSH0 DUP4 ADD DUP5 PUSH2 0xB86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E40 DUP1 PUSH2 0xBF0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x83F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0xF8102E68 EQ PUSH2 0x8A3 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xF9A81AF7 EQ PUSH2 0x909 JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xCCE29EA7 EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xCEC297A0 EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0xD348B409 EQ PUSH2 0x815 JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0x9CA423B3 EQ PUSH2 0x6EF JUMPI DUP1 PUSH4 0xA09C4CF4 EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x753 JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x7C613B2F EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x8265324D EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x8F0794FE EQ PUSH2 0x64D JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x2C663960 GT PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4F3FC2DF GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x4F3FC2DF EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x7165D19B EQ PUSH2 0x57F JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x2C663960 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x30F72CD4 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x329A27E7 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x4405DF4A EQ PUSH2 0x4AF JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0xD505541 GT PUSH2 0x202 JUMPI DUP1 PUSH4 0xD505541 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3B9 JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x3E293A3 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x6D65AF3 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x517 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH2 0xC64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x593 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E5 PUSH2 0xDFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x637 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x673 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x694 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x69D PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x715 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x736 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x751 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x10C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x767 PUSH2 0x13C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x774 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x78F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x15D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B9 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x813 PUSH2 0x1610 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x820 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x829 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x836 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x865 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x860 SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH2 0x188F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x886 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89C SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B7 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x914 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x92F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x19B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x94C SWAP1 PUSH2 0x24F6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x978 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x99A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D7 PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP PUSH2 0x9E4 DUP2 DUP6 DUP6 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH3 0x93A80 PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 PUSH1 0xD SLOAD PUSH1 0xE PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA98 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xACD PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP PUSH2 0xADA DUP6 DUP3 DUP6 PUSH2 0x1A5D JUMP JUMPDEST PUSH2 0xAE5 DUP6 DUP6 DUP6 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP3 LT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB41 SWAP1 PUSH2 0x2694 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x93A80 DUP5 DUP5 PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBDE PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xB06 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC SLOAD DUP3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6C PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0xC75 PUSH0 PUSH2 0x1C67 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB6 SWAP1 PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xCC9 CALLER PUSH2 0xC1F JUMP JUMPDEST LT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD15 CALLER ADDRESS DUP4 PUSH2 0x1AF0 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD61 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF DUP3 PUSH1 0x40 MLOAD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE48 SWAP1 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE5B CALLER PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE96 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA9 CALLER DUP3 PUSH2 0x1D2A JUMP JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF0BC0A70FE19EF2D8DC1E1948B338A1184184FB1EA3AC836F24065828816D68D DUP3 PUSH1 0x40 MLOAD PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH2 0xF45 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0xA PUSH2 0xF51 SWAP2 SWAP1 PUSH2 0x29DA JUMP JUMPDEST PUSH2 0x1F4 PUSH1 0x12 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF9C SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF9 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1025 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1070 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1047 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1070 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1053 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1148 SWAP1 PUSH2 0x2A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B6 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1296 JUMPI POP PUSH1 0x10 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x136B JUMPI DUP1 PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1363 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4BC18AA4B0095C9A3B5CDF42D2322D5A145591B04045988A995A5DA426075457 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x144B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1442 SWAP1 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x24EA00 PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1497 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D0 SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x14E3 CALLER PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xE PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x157F ADDRESS CALLER DUP4 DUP6 PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH2 0x1AF0 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15C7 SWAP3 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x15DD PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP PUSH2 0x15EA DUP2 DUP6 DUP6 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x165F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1656 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1698 SWAP1 PUSH2 0x2C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x16AA PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x16B6 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x16C5 SWAP2 SWAP1 PUSH2 0x2CBB JUMP JUMPDEST CALLVALUE PUSH2 0x16D0 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0x16DA SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x16E6 ADDRESS PUSH2 0xC1F JUMP JUMPDEST LT ISZERO PUSH2 0x1727 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171E SWAP1 PUSH2 0x2D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1785 ADDRESS CALLER DUP4 PUSH2 0x1AF0 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1796 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184D SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0x186A JUMPI PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x188C JUMP JUMPDEST PUSH0 PUSH2 0x1873 PUSH2 0xBD0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1884 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1919 PUSH2 0x1BE0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1989 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1980 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1992 DUP2 PUSH2 0x1C67 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19B8 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 DUP2 PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x19DB SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x3844853BE672B18D859394AA37E05615B95B78E66B4DC37DCA98D1DB1B05EA7D PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1A38 SWAP3 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A58 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1DA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A68 DUP5 DUP5 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1AEA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1ADB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AE9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1DA9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B60 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B57 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BD0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC7 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BDB DUP4 DUP4 DUP4 PUSH2 0x1F78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1BE8 PUSH2 0x1A44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C06 PUSH2 0xFAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C65 JUMPI PUSH2 0x1C29 PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5C SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D9A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D91 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DA5 PUSH0 DUP4 DUP4 PUSH2 0x1F78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E19 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E10 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E80 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1F72 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F69 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FC8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1FBC SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2096 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2051 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2048 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20DD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2127 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2184 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A3 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21BC PUSH0 DUP4 ADD DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2204 DUP3 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x220E DUP2 DUP6 PUSH2 0x21CC JUMP JUMPDEST SWAP4 POP PUSH2 0x221E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x2227 DUP2 PUSH2 0x21EA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x224A DUP2 DUP5 PUSH2 0x21FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x227F DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x228F DUP2 PUSH2 0x2275 JUMP JUMPDEST DUP2 EQ PUSH2 0x2299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22AA DUP2 PUSH2 0x2286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22B9 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP2 EQ PUSH2 0x22C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D4 DUP2 PUSH2 0x22B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F0 JUMPI PUSH2 0x22EF PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22FD DUP6 DUP3 DUP7 ADD PUSH2 0x229C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x230E DUP6 DUP3 DUP7 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232C DUP2 PUSH2 0x2318 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2345 PUSH0 DUP4 ADD DUP5 PUSH2 0x2323 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2360 JUMPI PUSH2 0x235F PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x236D DUP5 DUP3 DUP6 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x238D JUMPI PUSH2 0x238C PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239A DUP7 DUP3 DUP8 ADD PUSH2 0x229C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23AB DUP7 DUP3 DUP8 ADD PUSH2 0x229C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23BC DUP7 DUP3 DUP8 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23DC JUMPI PUSH2 0x23DB PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23E9 DUP6 DUP3 DUP7 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23FA DUP6 DUP3 DUP7 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2419 DUP2 PUSH2 0x2404 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2432 PUSH0 DUP4 ADD DUP5 PUSH2 0x2410 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244D JUMPI PUSH2 0x244C PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x245A DUP5 DUP3 DUP6 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x246C DUP2 PUSH2 0x2275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2485 PUSH0 DUP4 ADD DUP5 PUSH2 0x2463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A1 JUMPI PUSH2 0x24A0 PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24AE DUP6 DUP3 DUP7 ADD PUSH2 0x229C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24BF DUP6 DUP3 DUP7 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x250D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2520 JUMPI PUSH2 0x251F PUSH2 0x24C9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x255D DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x2568 DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2580 JUMPI PUSH2 0x257F PUSH2 0x2526 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25BD DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C8 DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25D8 JUMPI PUSH2 0x25D7 PUSH2 0x2586 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25ED DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x25F8 DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2606 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x261D JUMPI PUSH2 0x261C PUSH2 0x2526 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x267E PUSH1 0x21 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2689 DUP3 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26AB DUP2 PUSH2 0x2672 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x270C PUSH1 0x21 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2717 DUP3 PUSH2 0x26B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2739 DUP2 PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2774 PUSH1 0x15 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x277F DUP3 PUSH2 0x2740 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27A1 DUP2 PUSH2 0x2768 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27B2 DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x27BD DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27D5 JUMPI PUSH2 0x27D4 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C65206E6F74207374617274656420796574000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x280F PUSH1 0x17 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x281A DUP3 PUSH2 0x27DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x283C DUP2 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2877 PUSH1 0x14 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2882 DUP3 PUSH2 0x2843 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28A4 DUP2 PUSH2 0x286B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2900 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x28DC JUMPI PUSH2 0x28DB PUSH2 0x2526 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x28EB JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x28F9 DUP6 PUSH2 0x28AB JUMP JUMPDEST SWAP5 POP PUSH2 0x28C0 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2918 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x29D3 JUMP JUMPDEST DUP2 PUSH2 0x2925 JUMPI PUSH0 SWAP1 POP PUSH2 0x29D3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x293B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2945 JUMPI PUSH2 0x2974 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2957 JUMPI PUSH2 0x2956 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x296E JUMPI PUSH2 0x296D PUSH2 0x2526 JUMP JUMPDEST JUMPDEST POP PUSH2 0x29D3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x29A9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x29A4 JUMPI PUSH2 0x29A3 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST PUSH2 0x29D3 JUMP JUMPDEST PUSH2 0x29B6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x29CD JUMPI PUSH2 0x29CC PUSH2 0x2526 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29E4 DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EF DUP4 PUSH2 0x2404 JUMP JUMPDEST SWAP3 POP PUSH2 0x2A1C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C72656164792077686974656C697374656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A58 PUSH1 0x13 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2A63 DUP3 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A85 DUP2 PUSH2 0x2A4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726566657220796F757273656C660000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AC0 PUSH1 0x15 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACB DUP3 PUSH2 0x2A8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AED DUP2 PUSH2 0x2AB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73207374616B65642E000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B28 PUSH1 0x11 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2B33 DUP3 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B55 DUP2 PUSH2 0x2B1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E7374616B65206F6E6C792061667465722034207765656B732E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B90 PUSH1 0x1B DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2B9B DUP3 PUSH2 0x2B5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BBD DUP2 PUSH2 0x2B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BD7 PUSH0 DUP4 ADD DUP6 PUSH2 0x219A JUMP JUMPDEST PUSH2 0x2BE4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x53616C65206E6F74206163746976652E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C1F PUSH1 0x10 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2C2A DUP3 PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C4C DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E732E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C87 PUSH1 0x1C DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2C92 DUP3 PUSH2 0x2C53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CB4 DUP2 PUSH2 0x2C7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CC5 DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD0 DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP PUSH2 0x2CFD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D39 PUSH1 0x1C DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2D44 DUP3 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D66 DUP2 PUSH2 0x2D2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D73616C65206E6F742073746172746564207965740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DA1 PUSH1 0x18 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAC DUP3 PUSH2 0x2D6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DCE DUP2 PUSH2 0x2D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DE8 PUSH0 DUP4 ADD DUP7 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x2DF5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x219A JUMP JUMPDEST PUSH2 0x2E02 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST DUP3 PUSH2 0xFBF9 SMOD PUSH13 0x95717DB49B9F217F790DA47993 SWAP9 0xC4 0x4E EXTCODEHASH PUSH0 0xF6 PUSH6 0xF300DEB38064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "174:6408:6:-:0;;;1371:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1589:12;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1620:52:6::2;1634:4;1661:10;:8;;;:10;;:::i;:::-;1655:2;:16;;;;:::i;:::-;1641:11;:30;;;;:::i;:::-;1620:5;;;:52;;:::i;:::-;1698:13;1683:12;:28;;;;1743:19;1722:18;:40;;;;1792:17;1773:16;:36;;;;1840:18;1820:17;:38;;;;1887:5;1869:15;;:23;;;;;;;;;;;;;;;;;;1371:529:::0;;;;;;174:6408;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:1134::-;1320:6;1328;1336;1344;1352;1360;1409:3;1397:9;1388:7;1384:23;1380:33;1377:120;;;1416:79;;:::i;:::-;1377:120;1536:1;1561:64;1617:7;1608:6;1597:9;1593:22;1561:64;:::i;:::-;1551:74;;1507:128;1674:2;1700:64;1756:7;1747:6;1736:9;1732:22;1700:64;:::i;:::-;1690:74;;1645:129;1813:2;1839:64;1895:7;1886:6;1875:9;1871:22;1839:64;:::i;:::-;1829:74;;1784:129;1952:2;1978:64;2034:7;2025:6;2014:9;2010:22;1978:64;:::i;:::-;1968:74;;1923:129;2091:3;2118:64;2174:7;2165:6;2154:9;2150:22;2118:64;:::i;:::-;2108:74;;2062:130;2231:3;2258:64;2314:7;2305:6;2294:9;2290:22;2258:64;:::i;:::-;2248:74;;2202:130;1205:1134;;;;;;;;:::o;2345:99::-;2397:6;2431:5;2425:12;2415:22;;2345:99;;;:::o;2450:180::-;2498:77;2495:1;2488:88;2595:4;2592:1;2585:15;2619:4;2616:1;2609:15;2636:180;2684:77;2681:1;2674:88;2781:4;2778:1;2771:15;2805:4;2802:1;2795:15;2822:320;2866:6;2903:1;2897:4;2893:12;2883:22;;2950:1;2944:4;2940:12;2971:18;2961:81;;3027:4;3019:6;3015:17;3005:27;;2961:81;3089:2;3081:6;3078:14;3058:18;3055:38;3052:84;;3108:18;;:::i;:::-;3052:84;2873:269;2822:320;;;:::o;3148:141::-;3197:4;3220:3;3212:11;;3243:3;3240:1;3233:14;3277:4;3274:1;3264:18;3256:26;;3148:141;;;:::o;3295:93::-;3332:6;3379:2;3374;3367:5;3363:14;3359:23;3349:33;;3295:93;;;:::o;3394:107::-;3438:8;3488:5;3482:4;3478:16;3457:37;;3394:107;;;;:::o;3507:393::-;3576:6;3626:1;3614:10;3610:18;3649:97;3679:66;3668:9;3649:97;:::i;:::-;3767:39;3797:8;3786:9;3767:39;:::i;:::-;3755:51;;3839:4;3835:9;3828:5;3824:21;3815:30;;3888:4;3878:8;3874:19;3867:5;3864:30;3854:40;;3583:317;;3507:393;;;;;:::o;3906:60::-;3934:3;3955:5;3948:12;;3906:60;;;:::o;3972:142::-;4022:9;4055:53;4073:34;4082:24;4100:5;4082:24;:::i;:::-;4073:34;:::i;:::-;4055:53;:::i;:::-;4042:66;;3972:142;;;:::o;4120:75::-;4163:3;4184:5;4177:12;;4120:75;;;:::o;4201:269::-;4311:39;4342:7;4311:39;:::i;:::-;4372:91;4421:41;4445:16;4421:41;:::i;:::-;4413:6;4406:4;4400:11;4372:91;:::i;:::-;4366:4;4359:105;4277:193;4201:269;;;:::o;4476:73::-;4521:3;4476:73;:::o;4555:189::-;4632:32;;:::i;:::-;4673:65;4731:6;4723;4717:4;4673:65;:::i;:::-;4608:136;4555:189;;:::o;4750:186::-;4810:120;4827:3;4820:5;4817:14;4810:120;;;4881:39;4918:1;4911:5;4881:39;:::i;:::-;4854:1;4847:5;4843:13;4834:22;;4810:120;;;4750:186;;:::o;4942:543::-;5043:2;5038:3;5035:11;5032:446;;;5077:38;5109:5;5077:38;:::i;:::-;5161:29;5179:10;5161:29;:::i;:::-;5151:8;5147:44;5344:2;5332:10;5329:18;5326:49;;;5365:8;5350:23;;5326:49;5388:80;5444:22;5462:3;5444:22;:::i;:::-;5434:8;5430:37;5417:11;5388:80;:::i;:::-;5047:431;;5032:446;4942:543;;;:::o;5491:117::-;5545:8;5595:5;5589:4;5585:16;5564:37;;5491:117;;;;:::o;5614:169::-;5658:6;5691:51;5739:1;5735:6;5727:5;5724:1;5720:13;5691:51;:::i;:::-;5687:56;5772:4;5766;5762:15;5752:25;;5665:118;5614:169;;;;:::o;5788:295::-;5864:4;6010:29;6035:3;6029:4;6010:29;:::i;:::-;6002:37;;6072:3;6069:1;6065:11;6059:4;6056:21;6048:29;;5788:295;;;;:::o;6088:1395::-;6205:37;6238:3;6205:37;:::i;:::-;6307:18;6299:6;6296:30;6293:56;;;6329:18;;:::i;:::-;6293:56;6373:38;6405:4;6399:11;6373:38;:::i;:::-;6458:67;6518:6;6510;6504:4;6458:67;:::i;:::-;6552:1;6576:4;6563:17;;6608:2;6600:6;6597:14;6625:1;6620:618;;;;7282:1;7299:6;7296:77;;;7348:9;7343:3;7339:19;7333:26;7324:35;;7296:77;7399:67;7459:6;7452:5;7399:67;:::i;:::-;7393:4;7386:81;7255:222;6590:887;;6620:618;6672:4;6668:9;6660:6;6656:22;6706:37;6738:4;6706:37;:::i;:::-;6765:1;6779:208;6793:7;6790:1;6787:14;6779:208;;;6872:9;6867:3;6863:19;6857:26;6849:6;6842:42;6923:1;6915:6;6911:14;6901:24;;6970:2;6959:9;6955:18;6942:31;;6816:4;6813:1;6809:12;6804:17;;6779:208;;;7015:6;7006:7;7003:19;7000:179;;;7073:9;7068:3;7064:19;7058:26;7116:48;7158:4;7150:6;7146:17;7135:9;7116:48;:::i;:::-;7108:6;7101:64;7023:156;7000:179;7225:1;7221;7213:6;7209:14;7205:22;7199:4;7192:36;6627:611;;;6590:887;;6180:1303;;;6088:1395;;:::o;7489:118::-;7576:24;7594:5;7576:24;:::i;:::-;7571:3;7564:37;7489:118;;:::o;7613:222::-;7706:4;7744:2;7733:9;7729:18;7721:26;;7757:71;7825:1;7814:9;7810:17;7801:6;7757:71;:::i;:::-;7613:222;;;;:::o;7841:180::-;7889:77;7886:1;7879:88;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8027:102;8069:8;8116:5;8113:1;8109:13;8088:34;;8027:102;;;:::o;8135:848::-;8196:5;8203:4;8227:6;8218:15;;8251:5;8242:14;;8265:712;8286:1;8276:8;8273:15;8265:712;;;8381:4;8376:3;8372:14;8366:4;8363:24;8360:50;;;8390:18;;:::i;:::-;8360:50;8440:1;8430:8;8426:16;8423:451;;;8855:4;8848:5;8844:16;8835:25;;8423:451;8905:4;8899;8895:15;8887:23;;8935:32;8958:8;8935:32;:::i;:::-;8923:44;;8265:712;;;8135:848;;;;;;;:::o;8989:1073::-;9043:5;9234:8;9224:40;;9255:1;9246:10;;9257:5;;9224:40;9283:4;9273:36;;9300:1;9291:10;;9302:5;;9273:36;9369:4;9417:1;9412:27;;;;9453:1;9448:191;;;;9362:277;;9412:27;9430:1;9421:10;;9432:5;;;9448:191;9493:3;9483:8;9480:17;9477:43;;;9500:18;;:::i;:::-;9477:43;9549:8;9546:1;9542:16;9533:25;;9584:3;9577:5;9574:14;9571:40;;;9591:18;;:::i;:::-;9571:40;9624:5;;;9362:277;;9748:2;9738:8;9735:16;9729:3;9723:4;9720:13;9716:36;9698:2;9688:8;9685:16;9680:2;9674:4;9671:12;9667:35;9651:111;9648:246;;;9804:8;9798:4;9794:19;9785:28;;9839:3;9832:5;9829:14;9826:40;;;9846:18;;:::i;:::-;9826:40;9879:5;;9648:246;9919:42;9957:3;9947:8;9941:4;9938:1;9919:42;:::i;:::-;9904:57;;;;9993:4;9988:3;9984:14;9977:5;9974:25;9971:51;;;10002:18;;:::i;:::-;9971:51;10051:4;10044:5;10040:16;10031:25;;8989:1073;;;;;;:::o;10068:86::-;10103:7;10143:4;10136:5;10132:16;10121:27;;10068:86;;;:::o;10160:281::-;10218:5;10242:23;10260:4;10242:23;:::i;:::-;10234:31;;10286:25;10302:8;10286:25;:::i;:::-;10274:37;;10330:104;10367:66;10357:8;10351:4;10330:104;:::i;:::-;10321:113;;10160:281;;;;:::o;10447:410::-;10487:7;10510:20;10528:1;10510:20;:::i;:::-;10505:25;;10544:20;10562:1;10544:20;:::i;:::-;10539:25;;10599:1;10596;10592:9;10621:30;10639:11;10621:30;:::i;:::-;10610:41;;10800:1;10791:7;10787:15;10784:1;10781:22;10761:1;10754:9;10734:83;10711:139;;10830:18;;:::i;:::-;10711:139;10495:362;10447:410;;;;:::o;10863:191::-;10903:3;10922:20;10940:1;10922:20;:::i;:::-;10917:25;;10956:20;10974:1;10956:20;:::i;:::-;10951:25;;10999:1;10996;10992:9;10985:16;;11020:3;11017:1;11014:10;11011:36;;;11027:18;;:::i;:::-;11011:36;10863:191;;;;:::o;11060:118::-;11147:24;11165:5;11147:24;:::i;:::-;11142:3;11135:37;11060:118;;:::o;11184:442::-;11333:4;11371:2;11360:9;11356:18;11348:26;;11384:71;11452:1;11441:9;11437:17;11428:6;11384:71;:::i;:::-;11465:72;11533:2;11522:9;11518:18;11509:6;11465:72;:::i;:::-;11547;11615:2;11604:9;11600:18;11591:6;11547:72;:::i;:::-;11184:442;;;;;;:::o;11632:222::-;11725:4;11763:2;11752:9;11748:18;11740:26;;11776:71;11844:1;11833:9;11829:17;11820:6;11776:71;:::i;:::-;11632:222;;;;:::o;174:6408:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 6731,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 7593,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 7136,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 7466,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 6724,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 6749,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 7271,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 6896,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 8056,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 6287,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 2509,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 3103,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balances_983": {
									"entryPoint": 2801,
									"id": 983,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokens_1414": {
									"entryPoint": 5648,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculatePriceIncrease_1300": {
									"entryPoint": 3024,
									"id": 1300,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculatePrice_1332": {
									"entryPoint": 6150,
									"id": 1332,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateReferralReward_1163": {
									"entryPoint": 3900,
									"id": 1163,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateStakingReward_1581": {
									"entryPoint": 2543,
									"id": 1581,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateWeeksElapsed_1191": {
									"entryPoint": 2822,
									"id": 1191,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 2948,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getWalletBalance_1425": {
									"entryPoint": 2956,
									"id": 1425,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialPrice_949": {
									"entryPoint": 2749,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintReferralReward_1235": {
									"entryPoint": 3579,
									"id": 1235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 2365,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 4013,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@preSaleEndTime_947": {
									"entryPoint": 5621,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleStartTime_945": {
									"entryPoint": 2359,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleWeeksInWeeks_957": {
									"entryPoint": 6549,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleIsActive_943": {
									"entryPoint": 2929,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referralCounts_979": {
									"entryPoint": 5627,
									"id": 979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referrals_975": {
									"entryPoint": 4247,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@regularSalePrice_951": {
									"entryPoint": 2353,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3172,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signUpForWhitelist_1144": {
									"entryPoint": 4295,
									"id": 1144,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeTokens_1479": {
									"entryPoint": 3197,
									"id": 1479,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_963": {
									"entryPoint": 6555,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingRewardRate_959": {
									"entryPoint": 3091,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTimestamp_967": {
									"entryPoint": 4053,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPreSale_1272": {
									"entryPoint": 6576,
									"id": 1272,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 4074,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokensSold_955": {
									"entryPoint": 3097,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": 2740,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2755,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 6417,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 5587,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstakeTokens_1550": {
									"entryPoint": 5064,
									"id": 1550,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weeklyIncreaseRate_953": {
									"entryPoint": 3191,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whitelist_971": {
									"entryPoint": 4218,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11283,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11036,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11669,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 9232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11733,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10277,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11204,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 9247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 10423,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 11451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 10714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 10505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8668,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9510,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9606,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9417,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 10411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51": {
									"entryPoint": 10892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76": {
									"entryPoint": 11347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd": {
									"entryPoint": 11243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4": {
									"entryPoint": 10996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a": {
									"entryPoint": 9906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9": {
									"entryPoint": 10048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254": {
									"entryPoint": 11100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040": {
									"entryPoint": 10307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a": {
									"entryPoint": 10788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f": {
									"entryPoint": 10203,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7": {
									"entryPoint": 11525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82": {
									"entryPoint": 11629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5": {
									"entryPoint": 9764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24791:7",
										"nodeType": "YulBlock",
										"src": "0:24791:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:7",
													"nodeType": "YulBlock",
													"src": "52:32:7",
													"statements": [
														{
															"nativeSrc": "62:16:7",
															"nodeType": "YulAssignment",
															"src": "62:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:7",
																"nodeType": "YulIdentifier",
																"src": "73:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:77:7"
											},
											{
												"body": {
													"nativeSrc": "155:53:7",
													"nodeType": "YulBlock",
													"src": "155:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:7"
																		},
																		"nativeSrc": "177:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:7"
																},
																"nativeSrc": "165:37:7",
																"nodeType": "YulFunctionCall",
																"src": "165:37:7"
															},
															"nativeSrc": "165:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:7",
														"nodeType": "YulTypedName",
														"src": "143:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:7",
														"nodeType": "YulTypedName",
														"src": "150:3:7",
														"type": ""
													}
												],
												"src": "90:118:7"
											},
											{
												"body": {
													"nativeSrc": "312:124:7",
													"nodeType": "YulBlock",
													"src": "312:124:7",
													"statements": [
														{
															"nativeSrc": "322:26:7",
															"nodeType": "YulAssignment",
															"src": "322:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:7"
																},
																"nativeSrc": "330:18:7",
																"nodeType": "YulFunctionCall",
																"src": "330:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:7"
																		},
																		"nativeSrc": "411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:7"
																},
																"nativeSrc": "358:71:7",
																"nodeType": "YulFunctionCall",
																"src": "358:71:7"
															},
															"nativeSrc": "358:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:7",
														"nodeType": "YulTypedName",
														"src": "284:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:7",
														"nodeType": "YulTypedName",
														"src": "296:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:7",
														"nodeType": "YulTypedName",
														"src": "307:4:7",
														"type": ""
													}
												],
												"src": "214:222:7"
											},
											{
												"body": {
													"nativeSrc": "501:40:7",
													"nodeType": "YulBlock",
													"src": "501:40:7",
													"statements": [
														{
															"nativeSrc": "512:22:7",
															"nodeType": "YulAssignment",
															"src": "512:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "528:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "528:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "522:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "522:5:7"
																},
																"nativeSrc": "522:12:7",
																"nodeType": "YulFunctionCall",
																"src": "522:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "512:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "512:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "442:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "484:5:7",
														"nodeType": "YulTypedName",
														"src": "484:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "494:6:7",
														"nodeType": "YulTypedName",
														"src": "494:6:7",
														"type": ""
													}
												],
												"src": "442:99:7"
											},
											{
												"body": {
													"nativeSrc": "643:73:7",
													"nodeType": "YulBlock",
													"src": "643:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "660:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "660:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "665:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "653:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "653:6:7"
																},
																"nativeSrc": "653:19:7",
																"nodeType": "YulFunctionCall",
																"src": "653:19:7"
															},
															"nativeSrc": "653:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "653:19:7"
														},
														{
															"nativeSrc": "681:29:7",
															"nodeType": "YulAssignment",
															"src": "681:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "700:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "700:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "705:4:7",
																		"nodeType": "YulLiteral",
																		"src": "705:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "696:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "696:3:7"
																},
																"nativeSrc": "696:14:7",
																"nodeType": "YulFunctionCall",
																"src": "696:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "681:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "681:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "547:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "615:3:7",
														"nodeType": "YulTypedName",
														"src": "615:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "620:6:7",
														"nodeType": "YulTypedName",
														"src": "620:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "631:11:7",
														"nodeType": "YulTypedName",
														"src": "631:11:7",
														"type": ""
													}
												],
												"src": "547:169:7"
											},
											{
												"body": {
													"nativeSrc": "784:77:7",
													"nodeType": "YulBlock",
													"src": "784:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "801:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "801:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "806:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "806:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "811:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "811:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "795:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "795:5:7"
																},
																"nativeSrc": "795:23:7",
																"nodeType": "YulFunctionCall",
																"src": "795:23:7"
															},
															"nativeSrc": "795:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "795:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "838:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "838:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "843:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "843:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "834:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "834:3:7"
																		},
																		"nativeSrc": "834:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "834:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "852:1:7",
																		"nodeType": "YulLiteral",
																		"src": "852:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "827:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "827:6:7"
																},
																"nativeSrc": "827:27:7",
																"nodeType": "YulFunctionCall",
																"src": "827:27:7"
															},
															"nativeSrc": "827:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "827:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "722:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "766:3:7",
														"nodeType": "YulTypedName",
														"src": "766:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "771:3:7",
														"nodeType": "YulTypedName",
														"src": "771:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "776:6:7",
														"nodeType": "YulTypedName",
														"src": "776:6:7",
														"type": ""
													}
												],
												"src": "722:139:7"
											},
											{
												"body": {
													"nativeSrc": "915:54:7",
													"nodeType": "YulBlock",
													"src": "915:54:7",
													"statements": [
														{
															"nativeSrc": "925:38:7",
															"nodeType": "YulAssignment",
															"src": "925:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "943:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "950:2:7",
																				"nodeType": "YulLiteral",
																				"src": "950:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "959:2:7",
																				"nodeType": "YulLiteral",
																				"src": "959:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "955:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:7"
																		},
																		"nativeSrc": "955:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "955:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:28:7",
																"nodeType": "YulFunctionCall",
																"src": "935:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "925:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "867:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "898:5:7",
														"nodeType": "YulTypedName",
														"src": "898:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "908:6:7",
														"nodeType": "YulTypedName",
														"src": "908:6:7",
														"type": ""
													}
												],
												"src": "867:102:7"
											},
											{
												"body": {
													"nativeSrc": "1067:285:7",
													"nodeType": "YulBlock",
													"src": "1067:285:7",
													"statements": [
														{
															"nativeSrc": "1077:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1077:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1124:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1124:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1091:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "1091:32:7"
																},
																"nativeSrc": "1091:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1091:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1081:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1081:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1139:78:7",
															"nodeType": "YulAssignment",
															"src": "1139:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1205:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1205:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1210:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1210:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1146:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "1146:58:7"
																},
																"nativeSrc": "1146:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1146:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1265:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1265:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1272:4:7",
																				"nodeType": "YulLiteral",
																				"src": "1272:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1261:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1261:3:7"
																		},
																		"nativeSrc": "1261:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1261:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1279:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1279:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1284:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1284:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1226:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "1226:34:7"
																},
																"nativeSrc": "1226:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1226:65:7"
															},
															"nativeSrc": "1226:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1226:65:7"
														},
														{
															"nativeSrc": "1300:46:7",
															"nodeType": "YulAssignment",
															"src": "1300:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1311:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1311:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1338:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1338:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1316:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "1316:21:7"
																		},
																		"nativeSrc": "1316:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:7"
																},
																"nativeSrc": "1307:39:7",
																"nodeType": "YulFunctionCall",
																"src": "1307:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1300:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1300:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "975:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1048:5:7",
														"nodeType": "YulTypedName",
														"src": "1048:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1055:3:7",
														"nodeType": "YulTypedName",
														"src": "1055:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1063:3:7",
														"nodeType": "YulTypedName",
														"src": "1063:3:7",
														"type": ""
													}
												],
												"src": "975:377:7"
											},
											{
												"body": {
													"nativeSrc": "1476:195:7",
													"nodeType": "YulBlock",
													"src": "1476:195:7",
													"statements": [
														{
															"nativeSrc": "1486:26:7",
															"nodeType": "YulAssignment",
															"src": "1486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1494:3:7"
																},
																"nativeSrc": "1494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1486:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1533:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1533:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1544:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1544:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1529:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:7"
																		},
																		"nativeSrc": "1529:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1552:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1552:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1558:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1548:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nativeSrc": "1548:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1548:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1522:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1522:6:7"
																},
																"nativeSrc": "1522:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1522:47:7"
															},
															"nativeSrc": "1522:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1522:47:7"
														},
														{
															"nativeSrc": "1578:86:7",
															"nodeType": "YulAssignment",
															"src": "1578:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1650:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1650:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1659:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1659:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1586:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1586:63:7"
																},
																"nativeSrc": "1586:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1586:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1578:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1578:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1358:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1448:9:7",
														"nodeType": "YulTypedName",
														"src": "1448:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1460:6:7",
														"nodeType": "YulTypedName",
														"src": "1460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1471:4:7",
														"nodeType": "YulTypedName",
														"src": "1471:4:7",
														"type": ""
													}
												],
												"src": "1358:313:7"
											},
											{
												"body": {
													"nativeSrc": "1717:35:7",
													"nodeType": "YulBlock",
													"src": "1717:35:7",
													"statements": [
														{
															"nativeSrc": "1727:19:7",
															"nodeType": "YulAssignment",
															"src": "1727:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1743:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1743:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1737:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1737:5:7"
																},
																"nativeSrc": "1737:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1737:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1727:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1727:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1677:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1710:6:7",
														"nodeType": "YulTypedName",
														"src": "1710:6:7",
														"type": ""
													}
												],
												"src": "1677:75:7"
											},
											{
												"body": {
													"nativeSrc": "1847:28:7",
													"nodeType": "YulBlock",
													"src": "1847:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1864:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1857:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:7"
																},
																"nativeSrc": "1857:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1857:12:7"
															},
															"nativeSrc": "1857:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1758:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:7"
											},
											{
												"body": {
													"nativeSrc": "1970:28:7",
													"nodeType": "YulBlock",
													"src": "1970:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1987:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1987:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1990:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1990:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1980:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1980:6:7"
																},
																"nativeSrc": "1980:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1980:12:7"
															},
															"nativeSrc": "1980:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1980:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1881:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1881:117:7"
											},
											{
												"body": {
													"nativeSrc": "2049:81:7",
													"nodeType": "YulBlock",
													"src": "2049:81:7",
													"statements": [
														{
															"nativeSrc": "2059:65:7",
															"nodeType": "YulAssignment",
															"src": "2059:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2074:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2074:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2081:42:7",
																		"nodeType": "YulLiteral",
																		"src": "2081:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2070:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:7"
																},
																"nativeSrc": "2070:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2070:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2059:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2059:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2004:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2031:5:7",
														"nodeType": "YulTypedName",
														"src": "2031:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2041:7:7",
														"nodeType": "YulTypedName",
														"src": "2041:7:7",
														"type": ""
													}
												],
												"src": "2004:126:7"
											},
											{
												"body": {
													"nativeSrc": "2181:51:7",
													"nodeType": "YulBlock",
													"src": "2181:51:7",
													"statements": [
														{
															"nativeSrc": "2191:35:7",
															"nodeType": "YulAssignment",
															"src": "2191:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2220:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2220:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2202:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2202:17:7"
																},
																"nativeSrc": "2202:24:7",
																"nodeType": "YulFunctionCall",
																"src": "2202:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2191:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2191:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2136:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2163:5:7",
														"nodeType": "YulTypedName",
														"src": "2163:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2173:7:7",
														"nodeType": "YulTypedName",
														"src": "2173:7:7",
														"type": ""
													}
												],
												"src": "2136:96:7"
											},
											{
												"body": {
													"nativeSrc": "2281:79:7",
													"nodeType": "YulBlock",
													"src": "2281:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2338:16:7",
																"nodeType": "YulBlock",
																"src": "2338:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2347:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2347:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2350:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2350:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2340:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2340:6:7"
																			},
																			"nativeSrc": "2340:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2340:12:7"
																		},
																		"nativeSrc": "2340:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2340:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2304:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2304:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2329:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2329:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2311:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2311:17:7"
																				},
																				"nativeSrc": "2311:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2311:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2301:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2301:2:7"
																		},
																		"nativeSrc": "2301:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2294:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2294:6:7"
																},
																"nativeSrc": "2294:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2294:43:7"
															},
															"nativeSrc": "2291:63:7",
															"nodeType": "YulIf",
															"src": "2291:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2238:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2274:5:7",
														"nodeType": "YulTypedName",
														"src": "2274:5:7",
														"type": ""
													}
												],
												"src": "2238:122:7"
											},
											{
												"body": {
													"nativeSrc": "2418:87:7",
													"nodeType": "YulBlock",
													"src": "2418:87:7",
													"statements": [
														{
															"nativeSrc": "2428:29:7",
															"nodeType": "YulAssignment",
															"src": "2428:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2437:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2437:12:7"
																},
																"nativeSrc": "2437:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2437:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2428:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2428:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2493:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2493:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2466:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2466:26:7"
																},
																"nativeSrc": "2466:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2466:33:7"
															},
															"nativeSrc": "2466:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2466:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2366:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2396:6:7",
														"nodeType": "YulTypedName",
														"src": "2396:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2404:3:7",
														"nodeType": "YulTypedName",
														"src": "2404:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2412:5:7",
														"nodeType": "YulTypedName",
														"src": "2412:5:7",
														"type": ""
													}
												],
												"src": "2366:139:7"
											},
											{
												"body": {
													"nativeSrc": "2554:79:7",
													"nodeType": "YulBlock",
													"src": "2554:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2611:16:7",
																"nodeType": "YulBlock",
																"src": "2611:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2620:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2620:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2623:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2623:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2613:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2613:6:7"
																			},
																			"nativeSrc": "2613:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2613:12:7"
																		},
																		"nativeSrc": "2613:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2613:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2577:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2577:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2602:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2602:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2584:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2584:17:7"
																				},
																				"nativeSrc": "2584:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2584:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2574:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2574:2:7"
																		},
																		"nativeSrc": "2574:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:7"
																},
																"nativeSrc": "2567:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2567:43:7"
															},
															"nativeSrc": "2564:63:7",
															"nodeType": "YulIf",
															"src": "2564:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2511:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2547:5:7",
														"nodeType": "YulTypedName",
														"src": "2547:5:7",
														"type": ""
													}
												],
												"src": "2511:122:7"
											},
											{
												"body": {
													"nativeSrc": "2691:87:7",
													"nodeType": "YulBlock",
													"src": "2691:87:7",
													"statements": [
														{
															"nativeSrc": "2701:29:7",
															"nodeType": "YulAssignment",
															"src": "2701:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2723:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2723:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2710:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2710:12:7"
																},
																"nativeSrc": "2710:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2710:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2701:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2701:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2766:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2766:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2739:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2739:26:7"
																},
																"nativeSrc": "2739:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2739:33:7"
															},
															"nativeSrc": "2739:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2739:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2639:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2669:6:7",
														"nodeType": "YulTypedName",
														"src": "2669:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2677:3:7",
														"nodeType": "YulTypedName",
														"src": "2677:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2685:5:7",
														"nodeType": "YulTypedName",
														"src": "2685:5:7",
														"type": ""
													}
												],
												"src": "2639:139:7"
											},
											{
												"body": {
													"nativeSrc": "2867:391:7",
													"nodeType": "YulBlock",
													"src": "2867:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2913:83:7",
																"nodeType": "YulBlock",
																"src": "2913:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2915:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2915:77:7"
																			},
																			"nativeSrc": "2915:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2915:79:7"
																		},
																		"nativeSrc": "2915:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2915:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2888:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2888:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2897:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2897:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2884:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2884:3:7"
																		},
																		"nativeSrc": "2884:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2884:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2909:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2909:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2880:3:7"
																},
																"nativeSrc": "2880:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2880:32:7"
															},
															"nativeSrc": "2877:119:7",
															"nodeType": "YulIf",
															"src": "2877:119:7"
														},
														{
															"nativeSrc": "3006:117:7",
															"nodeType": "YulBlock",
															"src": "3006:117:7",
															"statements": [
																{
																	"nativeSrc": "3021:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3021:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3025:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3025:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3050:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3050:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3085:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3085:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3096:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3096:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3081:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3081:3:7"
																				},
																				"nativeSrc": "3081:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3081:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3105:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3060:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3060:20:7"
																		},
																		"nativeSrc": "3060:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3060:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3050:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3050:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3133:118:7",
															"nodeType": "YulBlock",
															"src": "3133:118:7",
															"statements": [
																{
																	"nativeSrc": "3148:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3148:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3162:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3152:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3152:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3178:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3178:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3213:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3213:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3224:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3224:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3209:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:7"
																				},
																				"nativeSrc": "3209:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3233:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3233:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3188:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3188:20:7"
																		},
																		"nativeSrc": "3188:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3188:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3178:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3178:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2784:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2829:9:7",
														"nodeType": "YulTypedName",
														"src": "2829:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2840:7:7",
														"nodeType": "YulTypedName",
														"src": "2840:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2852:6:7",
														"nodeType": "YulTypedName",
														"src": "2852:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2860:6:7",
														"nodeType": "YulTypedName",
														"src": "2860:6:7",
														"type": ""
													}
												],
												"src": "2784:474:7"
											},
											{
												"body": {
													"nativeSrc": "3306:48:7",
													"nodeType": "YulBlock",
													"src": "3306:48:7",
													"statements": [
														{
															"nativeSrc": "3316:32:7",
															"nodeType": "YulAssignment",
															"src": "3316:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3334:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:7"
																		},
																		"nativeSrc": "3334:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3334:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:7"
																},
																"nativeSrc": "3327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3327:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3316:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3316:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3264:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3288:5:7",
														"nodeType": "YulTypedName",
														"src": "3288:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3298:7:7",
														"nodeType": "YulTypedName",
														"src": "3298:7:7",
														"type": ""
													}
												],
												"src": "3264:90:7"
											},
											{
												"body": {
													"nativeSrc": "3419:50:7",
													"nodeType": "YulBlock",
													"src": "3419:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3436:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3436:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3456:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3456:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3441:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3441:14:7"
																		},
																		"nativeSrc": "3441:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3441:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3429:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:7"
																},
																"nativeSrc": "3429:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3429:34:7"
															},
															"nativeSrc": "3429:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3429:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3360:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3407:5:7",
														"nodeType": "YulTypedName",
														"src": "3407:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3414:3:7",
														"nodeType": "YulTypedName",
														"src": "3414:3:7",
														"type": ""
													}
												],
												"src": "3360:109:7"
											},
											{
												"body": {
													"nativeSrc": "3567:118:7",
													"nodeType": "YulBlock",
													"src": "3567:118:7",
													"statements": [
														{
															"nativeSrc": "3577:26:7",
															"nodeType": "YulAssignment",
															"src": "3577:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3589:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3589:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3600:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3600:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3585:3:7"
																},
																"nativeSrc": "3585:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3585:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3577:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3577:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3613:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3613:37:7"
																},
																"nativeSrc": "3613:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:7"
															},
															"nativeSrc": "3613:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3475:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3539:9:7",
														"nodeType": "YulTypedName",
														"src": "3539:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3551:6:7",
														"nodeType": "YulTypedName",
														"src": "3551:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3562:4:7",
														"nodeType": "YulTypedName",
														"src": "3562:4:7",
														"type": ""
													}
												],
												"src": "3475:210:7"
											},
											{
												"body": {
													"nativeSrc": "3757:263:7",
													"nodeType": "YulBlock",
													"src": "3757:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:7",
																"nodeType": "YulBlock",
																"src": "3803:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:7"
																			},
																			"nativeSrc": "3805:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:7"
																		},
																		"nativeSrc": "3805:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:7"
																		},
																		"nativeSrc": "3774:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:7"
																},
																"nativeSrc": "3770:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:7"
															},
															"nativeSrc": "3767:119:7",
															"nodeType": "YulIf",
															"src": "3767:119:7"
														},
														{
															"nativeSrc": "3896:117:7",
															"nodeType": "YulBlock",
															"src": "3896:117:7",
															"statements": [
																{
																	"nativeSrc": "3911:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:7"
																				},
																				"nativeSrc": "3971:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3950:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:7"
																		},
																		"nativeSrc": "3950:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3691:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:7",
														"nodeType": "YulTypedName",
														"src": "3727:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:7",
														"nodeType": "YulTypedName",
														"src": "3738:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:7",
														"nodeType": "YulTypedName",
														"src": "3750:6:7",
														"type": ""
													}
												],
												"src": "3691:329:7"
											},
											{
												"body": {
													"nativeSrc": "4126:519:7",
													"nodeType": "YulBlock",
													"src": "4126:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4172:83:7",
																"nodeType": "YulBlock",
																"src": "4172:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4174:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4174:77:7"
																			},
																			"nativeSrc": "4174:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4174:79:7"
																		},
																		"nativeSrc": "4174:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4174:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4147:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4147:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4156:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4143:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4143:3:7"
																		},
																		"nativeSrc": "4143:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4143:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4168:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4139:3:7"
																},
																"nativeSrc": "4139:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4139:32:7"
															},
															"nativeSrc": "4136:119:7",
															"nodeType": "YulIf",
															"src": "4136:119:7"
														},
														{
															"nativeSrc": "4265:117:7",
															"nodeType": "YulBlock",
															"src": "4265:117:7",
															"statements": [
																{
																	"nativeSrc": "4280:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4280:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4294:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4294:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4284:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4284:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4309:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4309:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4344:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4344:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4355:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4355:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4340:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4340:3:7"
																				},
																				"nativeSrc": "4340:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4340:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4364:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4319:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4319:20:7"
																		},
																		"nativeSrc": "4319:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4319:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4309:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4309:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4392:118:7",
															"nodeType": "YulBlock",
															"src": "4392:118:7",
															"statements": [
																{
																	"nativeSrc": "4407:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4407:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4421:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4421:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4411:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4411:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4437:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4437:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4472:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4472:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4483:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4483:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4468:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4468:3:7"
																				},
																				"nativeSrc": "4468:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4468:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4492:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4492:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4447:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4447:20:7"
																		},
																		"nativeSrc": "4447:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4437:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4437:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4520:118:7",
															"nodeType": "YulBlock",
															"src": "4520:118:7",
															"statements": [
																{
																	"nativeSrc": "4535:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4535:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4539:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4539:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4565:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4565:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4600:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4600:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4611:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4611:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4596:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4596:3:7"
																				},
																				"nativeSrc": "4596:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4596:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4620:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4575:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4575:20:7"
																		},
																		"nativeSrc": "4575:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4575:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4565:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4565:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4026:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4080:9:7",
														"nodeType": "YulTypedName",
														"src": "4080:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4091:7:7",
														"nodeType": "YulTypedName",
														"src": "4091:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4103:6:7",
														"nodeType": "YulTypedName",
														"src": "4103:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4111:6:7",
														"nodeType": "YulTypedName",
														"src": "4111:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4119:6:7",
														"nodeType": "YulTypedName",
														"src": "4119:6:7",
														"type": ""
													}
												],
												"src": "4026:619:7"
											},
											{
												"body": {
													"nativeSrc": "4734:391:7",
													"nodeType": "YulBlock",
													"src": "4734:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4780:83:7",
																"nodeType": "YulBlock",
																"src": "4780:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4782:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4782:77:7"
																			},
																			"nativeSrc": "4782:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4782:79:7"
																		},
																		"nativeSrc": "4782:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4782:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4755:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4755:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4764:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4764:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4751:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4751:3:7"
																		},
																		"nativeSrc": "4751:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4751:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4776:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4776:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4747:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:7"
																},
																"nativeSrc": "4747:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4747:32:7"
															},
															"nativeSrc": "4744:119:7",
															"nodeType": "YulIf",
															"src": "4744:119:7"
														},
														{
															"nativeSrc": "4873:117:7",
															"nodeType": "YulBlock",
															"src": "4873:117:7",
															"statements": [
																{
																	"nativeSrc": "4888:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4888:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4902:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4902:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4892:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4892:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4917:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4917:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4952:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4952:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4963:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4963:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4948:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4948:3:7"
																				},
																				"nativeSrc": "4948:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4948:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4972:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4972:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4927:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4927:20:7"
																		},
																		"nativeSrc": "4927:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4927:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4917:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4917:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5000:118:7",
															"nodeType": "YulBlock",
															"src": "5000:118:7",
															"statements": [
																{
																	"nativeSrc": "5015:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5015:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5029:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5029:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5019:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5019:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5045:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5045:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5080:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5080:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5091:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5091:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5076:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5076:3:7"
																				},
																				"nativeSrc": "5076:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5076:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5100:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5100:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5055:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5055:20:7"
																		},
																		"nativeSrc": "5055:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5055:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5045:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5045:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4651:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4696:9:7",
														"nodeType": "YulTypedName",
														"src": "4696:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4707:7:7",
														"nodeType": "YulTypedName",
														"src": "4707:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4719:6:7",
														"nodeType": "YulTypedName",
														"src": "4719:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4727:6:7",
														"nodeType": "YulTypedName",
														"src": "4727:6:7",
														"type": ""
													}
												],
												"src": "4651:474:7"
											},
											{
												"body": {
													"nativeSrc": "5174:43:7",
													"nodeType": "YulBlock",
													"src": "5174:43:7",
													"statements": [
														{
															"nativeSrc": "5184:27:7",
															"nodeType": "YulAssignment",
															"src": "5184:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5199:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5199:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5206:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5195:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5195:3:7"
																},
																"nativeSrc": "5195:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5195:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5184:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5184:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5131:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5156:5:7",
														"nodeType": "YulTypedName",
														"src": "5156:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5166:7:7",
														"nodeType": "YulTypedName",
														"src": "5166:7:7",
														"type": ""
													}
												],
												"src": "5131:86:7"
											},
											{
												"body": {
													"nativeSrc": "5284:51:7",
													"nodeType": "YulBlock",
													"src": "5284:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5301:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5301:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5322:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5322:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5306:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "5306:15:7"
																		},
																		"nativeSrc": "5306:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5306:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5294:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:7"
																},
																"nativeSrc": "5294:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5294:35:7"
															},
															"nativeSrc": "5294:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5294:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5223:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5272:5:7",
														"nodeType": "YulTypedName",
														"src": "5272:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5279:3:7",
														"nodeType": "YulTypedName",
														"src": "5279:3:7",
														"type": ""
													}
												],
												"src": "5223:112:7"
											},
											{
												"body": {
													"nativeSrc": "5435:120:7",
													"nodeType": "YulBlock",
													"src": "5435:120:7",
													"statements": [
														{
															"nativeSrc": "5445:26:7",
															"nodeType": "YulAssignment",
															"src": "5445:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5457:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5457:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5468:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5468:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5453:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5453:3:7"
																},
																"nativeSrc": "5453:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5453:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5445:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5445:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5521:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5521:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5534:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5534:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5545:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5545:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5530:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5530:3:7"
																		},
																		"nativeSrc": "5530:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5530:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5481:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5481:39:7"
																},
																"nativeSrc": "5481:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5481:67:7"
															},
															"nativeSrc": "5481:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5481:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5341:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5407:9:7",
														"nodeType": "YulTypedName",
														"src": "5407:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5419:6:7",
														"nodeType": "YulTypedName",
														"src": "5419:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5430:4:7",
														"nodeType": "YulTypedName",
														"src": "5430:4:7",
														"type": ""
													}
												],
												"src": "5341:214:7"
											},
											{
												"body": {
													"nativeSrc": "5627:263:7",
													"nodeType": "YulBlock",
													"src": "5627:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5673:83:7",
																"nodeType": "YulBlock",
																"src": "5673:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5675:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5675:77:7"
																			},
																			"nativeSrc": "5675:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5675:79:7"
																		},
																		"nativeSrc": "5675:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5675:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5648:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5648:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5657:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5657:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5644:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5644:3:7"
																		},
																		"nativeSrc": "5644:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5644:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5669:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5669:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5640:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5640:3:7"
																},
																"nativeSrc": "5640:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5640:32:7"
															},
															"nativeSrc": "5637:119:7",
															"nodeType": "YulIf",
															"src": "5637:119:7"
														},
														{
															"nativeSrc": "5766:117:7",
															"nodeType": "YulBlock",
															"src": "5766:117:7",
															"statements": [
																{
																	"nativeSrc": "5781:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5781:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5795:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5795:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5785:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5785:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5810:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5810:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5845:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5845:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5856:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5856:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5841:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5841:3:7"
																				},
																				"nativeSrc": "5841:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5841:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5865:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5865:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5820:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5820:20:7"
																		},
																		"nativeSrc": "5820:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5820:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5810:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5810:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5561:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5597:9:7",
														"nodeType": "YulTypedName",
														"src": "5597:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5608:7:7",
														"nodeType": "YulTypedName",
														"src": "5608:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5620:6:7",
														"nodeType": "YulTypedName",
														"src": "5620:6:7",
														"type": ""
													}
												],
												"src": "5561:329:7"
											},
											{
												"body": {
													"nativeSrc": "5961:53:7",
													"nodeType": "YulBlock",
													"src": "5961:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5978:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5978:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6001:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6001:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5983:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5983:17:7"
																		},
																		"nativeSrc": "5983:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5983:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5971:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5971:6:7"
																},
																"nativeSrc": "5971:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5971:37:7"
															},
															"nativeSrc": "5971:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5971:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5896:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5949:5:7",
														"nodeType": "YulTypedName",
														"src": "5949:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5956:3:7",
														"nodeType": "YulTypedName",
														"src": "5956:3:7",
														"type": ""
													}
												],
												"src": "5896:118:7"
											},
											{
												"body": {
													"nativeSrc": "6118:124:7",
													"nodeType": "YulBlock",
													"src": "6118:124:7",
													"statements": [
														{
															"nativeSrc": "6128:26:7",
															"nodeType": "YulAssignment",
															"src": "6128:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6140:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6140:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6151:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6151:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6136:3:7"
																},
																"nativeSrc": "6136:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6136:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6128:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6128:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6208:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6208:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6221:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6221:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6232:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6232:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6217:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6217:3:7"
																		},
																		"nativeSrc": "6217:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6217:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6164:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "6164:43:7"
																},
																"nativeSrc": "6164:71:7",
																"nodeType": "YulFunctionCall",
																"src": "6164:71:7"
															},
															"nativeSrc": "6164:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "6164:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6020:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6090:9:7",
														"nodeType": "YulTypedName",
														"src": "6090:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6102:6:7",
														"nodeType": "YulTypedName",
														"src": "6102:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6113:4:7",
														"nodeType": "YulTypedName",
														"src": "6113:4:7",
														"type": ""
													}
												],
												"src": "6020:222:7"
											},
											{
												"body": {
													"nativeSrc": "6331:391:7",
													"nodeType": "YulBlock",
													"src": "6331:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6377:83:7",
																"nodeType": "YulBlock",
																"src": "6377:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6379:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6379:77:7"
																			},
																			"nativeSrc": "6379:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6379:79:7"
																		},
																		"nativeSrc": "6379:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6379:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6352:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6352:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6361:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6361:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6348:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:7"
																		},
																		"nativeSrc": "6348:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6348:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6373:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6373:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6344:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:7"
																},
																"nativeSrc": "6344:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6344:32:7"
															},
															"nativeSrc": "6341:119:7",
															"nodeType": "YulIf",
															"src": "6341:119:7"
														},
														{
															"nativeSrc": "6470:117:7",
															"nodeType": "YulBlock",
															"src": "6470:117:7",
															"statements": [
																{
																	"nativeSrc": "6485:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6485:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6499:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6499:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6489:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6489:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6514:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6514:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6549:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6549:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6560:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6560:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6545:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6545:3:7"
																				},
																				"nativeSrc": "6545:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6545:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6569:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6569:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6524:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6524:20:7"
																		},
																		"nativeSrc": "6524:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6524:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6514:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6514:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6597:118:7",
															"nodeType": "YulBlock",
															"src": "6597:118:7",
															"statements": [
																{
																	"nativeSrc": "6612:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6612:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6626:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6626:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6616:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6616:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6642:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6642:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6677:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6677:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6688:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6688:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6673:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6673:3:7"
																				},
																				"nativeSrc": "6673:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6673:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6697:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6697:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6652:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6652:20:7"
																		},
																		"nativeSrc": "6652:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6652:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6642:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6642:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6248:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:7",
														"nodeType": "YulTypedName",
														"src": "6293:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6304:7:7",
														"nodeType": "YulTypedName",
														"src": "6304:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6316:6:7",
														"nodeType": "YulTypedName",
														"src": "6316:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6324:6:7",
														"nodeType": "YulTypedName",
														"src": "6324:6:7",
														"type": ""
													}
												],
												"src": "6248:474:7"
											},
											{
												"body": {
													"nativeSrc": "6756:152:7",
													"nodeType": "YulBlock",
													"src": "6756:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6773:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6773:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6776:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6776:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6766:6:7"
																},
																"nativeSrc": "6766:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6766:88:7"
															},
															"nativeSrc": "6766:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6766:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6870:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6870:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6873:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6873:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6863:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6863:6:7"
																},
																"nativeSrc": "6863:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6863:15:7"
															},
															"nativeSrc": "6863:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6863:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6894:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6894:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6897:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6897:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6887:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6887:6:7"
																},
																"nativeSrc": "6887:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6887:15:7"
															},
															"nativeSrc": "6887:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6887:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6728:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6728:180:7"
											},
											{
												"body": {
													"nativeSrc": "6965:269:7",
													"nodeType": "YulBlock",
													"src": "6965:269:7",
													"statements": [
														{
															"nativeSrc": "6975:22:7",
															"nodeType": "YulAssignment",
															"src": "6975:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6989:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6989:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6995:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6995:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6985:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6985:3:7"
																},
																"nativeSrc": "6985:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6985:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6975:6:7"
																}
															]
														},
														{
															"nativeSrc": "7006:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7006:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7036:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7036:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7042:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7042:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7032:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7032:3:7"
																},
																"nativeSrc": "7032:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7032:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7010:18:7",
																	"nodeType": "YulTypedName",
																	"src": "7010:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7083:51:7",
																"nodeType": "YulBlock",
																"src": "7083:51:7",
																"statements": [
																	{
																		"nativeSrc": "7097:27:7",
																		"nodeType": "YulAssignment",
																		"src": "7097:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7111:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7111:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7119:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7119:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7107:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7107:3:7"
																			},
																			"nativeSrc": "7107:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7107:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7097:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7097:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7063:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7063:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7056:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7056:6:7"
																},
																"nativeSrc": "7056:26:7",
																"nodeType": "YulFunctionCall",
																"src": "7056:26:7"
															},
															"nativeSrc": "7053:81:7",
															"nodeType": "YulIf",
															"src": "7053:81:7"
														},
														{
															"body": {
																"nativeSrc": "7186:42:7",
																"nodeType": "YulBlock",
																"src": "7186:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7200:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7200:16:7"
																			},
																			"nativeSrc": "7200:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7200:18:7"
																		},
																		"nativeSrc": "7200:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7200:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7150:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "7150:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7173:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7173:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7181:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7181:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7170:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7170:2:7"
																		},
																		"nativeSrc": "7170:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7170:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7147:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7147:2:7"
																},
																"nativeSrc": "7147:38:7",
																"nodeType": "YulFunctionCall",
																"src": "7147:38:7"
															},
															"nativeSrc": "7144:84:7",
															"nodeType": "YulIf",
															"src": "7144:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6914:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6949:4:7",
														"nodeType": "YulTypedName",
														"src": "6949:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6958:6:7",
														"nodeType": "YulTypedName",
														"src": "6958:6:7",
														"type": ""
													}
												],
												"src": "6914:320:7"
											},
											{
												"body": {
													"nativeSrc": "7268:152:7",
													"nodeType": "YulBlock",
													"src": "7268:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7285:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7285:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7288:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7278:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7278:6:7"
																},
																"nativeSrc": "7278:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7278:88:7"
															},
															"nativeSrc": "7278:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7278:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7382:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7382:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7385:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7385:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7375:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7375:6:7"
																},
																"nativeSrc": "7375:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7375:15:7"
															},
															"nativeSrc": "7375:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7375:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7406:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7406:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7409:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7409:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7399:6:7"
																},
																"nativeSrc": "7399:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7399:15:7"
															},
															"nativeSrc": "7399:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7399:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7240:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7240:180:7"
											},
											{
												"body": {
													"nativeSrc": "7471:149:7",
													"nodeType": "YulBlock",
													"src": "7471:149:7",
													"statements": [
														{
															"nativeSrc": "7481:25:7",
															"nodeType": "YulAssignment",
															"src": "7481:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7504:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7504:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7486:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7486:17:7"
																},
																"nativeSrc": "7486:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7486:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7481:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7481:1:7"
																}
															]
														},
														{
															"nativeSrc": "7515:25:7",
															"nodeType": "YulAssignment",
															"src": "7515:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7538:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7538:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7520:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7520:17:7"
																},
																"nativeSrc": "7520:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7520:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7515:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7515:1:7"
																}
															]
														},
														{
															"nativeSrc": "7549:17:7",
															"nodeType": "YulAssignment",
															"src": "7549:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7561:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7561:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7564:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7564:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7557:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7557:3:7"
																},
																"nativeSrc": "7557:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7557:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7549:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7549:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:7",
																"nodeType": "YulBlock",
																"src": "7591:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7593:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:7"
																			},
																			"nativeSrc": "7593:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:7"
																		},
																		"nativeSrc": "7593:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7582:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7582:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7588:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7588:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7579:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7579:2:7"
																},
																"nativeSrc": "7579:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7579:11:7"
															},
															"nativeSrc": "7576:37:7",
															"nodeType": "YulIf",
															"src": "7576:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7426:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7457:1:7",
														"nodeType": "YulTypedName",
														"src": "7457:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7460:1:7",
														"nodeType": "YulTypedName",
														"src": "7460:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7466:4:7",
														"nodeType": "YulTypedName",
														"src": "7466:4:7",
														"type": ""
													}
												],
												"src": "7426:194:7"
											},
											{
												"body": {
													"nativeSrc": "7654:152:7",
													"nodeType": "YulBlock",
													"src": "7654:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7671:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7671:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7674:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7674:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7664:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7664:6:7"
																},
																"nativeSrc": "7664:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7664:88:7"
															},
															"nativeSrc": "7664:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7664:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7768:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7768:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7771:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7771:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7761:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7761:6:7"
																},
																"nativeSrc": "7761:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7761:15:7"
															},
															"nativeSrc": "7761:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7761:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7792:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7792:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7795:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7795:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7785:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7785:6:7"
																},
																"nativeSrc": "7785:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7785:15:7"
															},
															"nativeSrc": "7785:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7785:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7626:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7626:180:7"
											},
											{
												"body": {
													"nativeSrc": "7854:143:7",
													"nodeType": "YulBlock",
													"src": "7854:143:7",
													"statements": [
														{
															"nativeSrc": "7864:25:7",
															"nodeType": "YulAssignment",
															"src": "7864:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7887:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7887:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7869:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7869:17:7"
																},
																"nativeSrc": "7869:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7869:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7864:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7864:1:7"
																}
															]
														},
														{
															"nativeSrc": "7898:25:7",
															"nodeType": "YulAssignment",
															"src": "7898:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7921:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7921:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7903:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7903:17:7"
																},
																"nativeSrc": "7903:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7903:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7898:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7898:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7945:22:7",
																"nodeType": "YulBlock",
																"src": "7945:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7947:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7947:16:7"
																			},
																			"nativeSrc": "7947:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7947:18:7"
																		},
																		"nativeSrc": "7947:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7947:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7942:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7942:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7935:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7935:6:7"
																},
																"nativeSrc": "7935:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7935:9:7"
															},
															"nativeSrc": "7932:35:7",
															"nodeType": "YulIf",
															"src": "7932:35:7"
														},
														{
															"nativeSrc": "7977:14:7",
															"nodeType": "YulAssignment",
															"src": "7977:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7986:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7986:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7989:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7989:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7982:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7982:3:7"
																},
																"nativeSrc": "7982:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7982:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7977:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7977:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7812:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7843:1:7",
														"nodeType": "YulTypedName",
														"src": "7843:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7846:1:7",
														"nodeType": "YulTypedName",
														"src": "7846:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7852:1:7",
														"nodeType": "YulTypedName",
														"src": "7852:1:7",
														"type": ""
													}
												],
												"src": "7812:185:7"
											},
											{
												"body": {
													"nativeSrc": "8051:362:7",
													"nodeType": "YulBlock",
													"src": "8051:362:7",
													"statements": [
														{
															"nativeSrc": "8061:25:7",
															"nodeType": "YulAssignment",
															"src": "8061:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8084:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8084:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8066:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8066:17:7"
																},
																"nativeSrc": "8066:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8066:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8061:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8061:1:7"
																}
															]
														},
														{
															"nativeSrc": "8095:25:7",
															"nodeType": "YulAssignment",
															"src": "8095:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8118:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8118:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8100:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8100:17:7"
																},
																"nativeSrc": "8100:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8100:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8095:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8095:1:7"
																}
															]
														},
														{
															"nativeSrc": "8129:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8129:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8152:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8152:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8155:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8155:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8148:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8148:3:7"
																},
																"nativeSrc": "8148:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8148:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8133:11:7",
																	"nodeType": "YulTypedName",
																	"src": "8133:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8166:41:7",
															"nodeType": "YulAssignment",
															"src": "8166:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8195:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "8195:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8177:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8177:17:7"
																},
																"nativeSrc": "8177:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8177:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8166:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "8166:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8384:22:7",
																"nodeType": "YulBlock",
																"src": "8384:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8386:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8386:16:7"
																			},
																			"nativeSrc": "8386:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8386:18:7"
																		},
																		"nativeSrc": "8386:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8386:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8317:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8317:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8310:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8310:6:7"
																				},
																				"nativeSrc": "8310:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8310:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8340:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "8340:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8347:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "8347:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8356:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "8356:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8343:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "8343:3:7"
																						},
																						"nativeSrc": "8343:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "8343:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8337:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "8337:2:7"
																				},
																				"nativeSrc": "8337:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8337:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8290:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8290:2:7"
																		},
																		"nativeSrc": "8290:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8290:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8270:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8270:6:7"
																},
																"nativeSrc": "8270:113:7",
																"nodeType": "YulFunctionCall",
																"src": "8270:113:7"
															},
															"nativeSrc": "8267:139:7",
															"nodeType": "YulIf",
															"src": "8267:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8003:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8034:1:7",
														"nodeType": "YulTypedName",
														"src": "8034:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8037:1:7",
														"nodeType": "YulTypedName",
														"src": "8037:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8043:7:7",
														"nodeType": "YulTypedName",
														"src": "8043:7:7",
														"type": ""
													}
												],
												"src": "8003:410:7"
											},
											{
												"body": {
													"nativeSrc": "8525:114:7",
													"nodeType": "YulBlock",
													"src": "8525:114:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8547:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8547:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8555:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8555:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8543:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8543:3:7"
																		},
																		"nativeSrc": "8543:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8543:14:7"
																	},
																	{
																		"hexValue": "456e642074696d65206d7573742062652061667465722073746172742074696d",
																		"kind": "string",
																		"nativeSrc": "8559:34:7",
																		"nodeType": "YulLiteral",
																		"src": "8559:34:7",
																		"type": "",
																		"value": "End time must be after start tim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8536:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8536:6:7"
																},
																"nativeSrc": "8536:58:7",
																"nodeType": "YulFunctionCall",
																"src": "8536:58:7"
															},
															"nativeSrc": "8536:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "8536:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8615:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8615:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8623:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8623:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8611:3:7"
																		},
																		"nativeSrc": "8611:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8611:15:7"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nativeSrc": "8628:3:7",
																		"nodeType": "YulLiteral",
																		"src": "8628:3:7",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8604:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8604:6:7"
																},
																"nativeSrc": "8604:28:7",
																"nodeType": "YulFunctionCall",
																"src": "8604:28:7"
															},
															"nativeSrc": "8604:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "8604:28:7"
														}
													]
												},
												"name": "store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
												"nativeSrc": "8419:220:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8517:6:7",
														"nodeType": "YulTypedName",
														"src": "8517:6:7",
														"type": ""
													}
												],
												"src": "8419:220:7"
											},
											{
												"body": {
													"nativeSrc": "8791:220:7",
													"nodeType": "YulBlock",
													"src": "8791:220:7",
													"statements": [
														{
															"nativeSrc": "8801:74:7",
															"nodeType": "YulAssignment",
															"src": "8801:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8867:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8867:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8872:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8872:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8808:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8808:58:7"
																},
																"nativeSrc": "8808:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8808:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8801:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8801:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8973:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8973:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
																	"nativeSrc": "8884:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8884:88:7"
																},
																"nativeSrc": "8884:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8884:93:7"
															},
															"nativeSrc": "8884:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8884:93:7"
														},
														{
															"nativeSrc": "8986:19:7",
															"nodeType": "YulAssignment",
															"src": "8986:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8997:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8997:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9002:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9002:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8993:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8993:3:7"
																},
																"nativeSrc": "8993:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8993:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8986:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8986:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8645:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8779:3:7",
														"nodeType": "YulTypedName",
														"src": "8779:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8787:3:7",
														"nodeType": "YulTypedName",
														"src": "8787:3:7",
														"type": ""
													}
												],
												"src": "8645:366:7"
											},
											{
												"body": {
													"nativeSrc": "9188:248:7",
													"nodeType": "YulBlock",
													"src": "9188:248:7",
													"statements": [
														{
															"nativeSrc": "9198:26:7",
															"nodeType": "YulAssignment",
															"src": "9198:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9210:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9210:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9221:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9221:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9206:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9206:3:7"
																},
																"nativeSrc": "9206:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9206:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9198:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9198:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9245:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9245:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9256:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9256:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9241:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9241:3:7"
																		},
																		"nativeSrc": "9241:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9241:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9264:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9264:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9270:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9270:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9260:3:7"
																		},
																		"nativeSrc": "9260:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9260:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9234:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9234:6:7"
																},
																"nativeSrc": "9234:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9234:47:7"
															},
															"nativeSrc": "9234:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9234:47:7"
														},
														{
															"nativeSrc": "9290:139:7",
															"nodeType": "YulAssignment",
															"src": "9290:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9424:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9424:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9298:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9298:124:7"
																},
																"nativeSrc": "9298:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9298:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9290:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9290:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9017:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9168:9:7",
														"nodeType": "YulTypedName",
														"src": "9168:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9183:4:7",
														"nodeType": "YulTypedName",
														"src": "9183:4:7",
														"type": ""
													}
												],
												"src": "9017:419:7"
											},
											{
												"body": {
													"nativeSrc": "9548:114:7",
													"nodeType": "YulBlock",
													"src": "9548:114:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9570:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9570:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9578:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9578:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:7"
																		},
																		"nativeSrc": "9566:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9566:14:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "9582:34:7",
																		"nodeType": "YulLiteral",
																		"src": "9582:34:7",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9559:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9559:6:7"
																},
																"nativeSrc": "9559:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9559:58:7"
															},
															"nativeSrc": "9559:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9559:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9638:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9638:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9646:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9646:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9634:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9634:3:7"
																		},
																		"nativeSrc": "9634:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9634:15:7"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "9651:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9651:3:7",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9627:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9627:6:7"
																},
																"nativeSrc": "9627:28:7",
																"nodeType": "YulFunctionCall",
																"src": "9627:28:7"
															},
															"nativeSrc": "9627:28:7",
															"nodeType": "YulExpressionStatement",
															"src": "9627:28:7"
														}
													]
												},
												"name": "store_literal_in_memory_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
												"nativeSrc": "9442:220:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9540:6:7",
														"nodeType": "YulTypedName",
														"src": "9540:6:7",
														"type": ""
													}
												],
												"src": "9442:220:7"
											},
											{
												"body": {
													"nativeSrc": "9814:220:7",
													"nodeType": "YulBlock",
													"src": "9814:220:7",
													"statements": [
														{
															"nativeSrc": "9824:74:7",
															"nodeType": "YulAssignment",
															"src": "9824:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9890:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9890:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9895:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9895:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9831:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9831:58:7"
																},
																"nativeSrc": "9831:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9831:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9824:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9824:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9996:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9996:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
																	"nativeSrc": "9907:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:88:7"
																},
																"nativeSrc": "9907:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:93:7"
															},
															"nativeSrc": "9907:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9907:93:7"
														},
														{
															"nativeSrc": "10009:19:7",
															"nodeType": "YulAssignment",
															"src": "10009:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10020:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10020:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10025:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10025:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10016:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10016:3:7"
																},
																"nativeSrc": "10016:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10016:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10009:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10009:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9668:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9802:3:7",
														"nodeType": "YulTypedName",
														"src": "9802:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9810:3:7",
														"nodeType": "YulTypedName",
														"src": "9810:3:7",
														"type": ""
													}
												],
												"src": "9668:366:7"
											},
											{
												"body": {
													"nativeSrc": "10211:248:7",
													"nodeType": "YulBlock",
													"src": "10211:248:7",
													"statements": [
														{
															"nativeSrc": "10221:26:7",
															"nodeType": "YulAssignment",
															"src": "10221:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10233:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10233:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10244:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10244:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10229:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10229:3:7"
																},
																"nativeSrc": "10229:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10229:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10221:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10221:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10268:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10268:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10279:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10279:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10264:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10264:3:7"
																		},
																		"nativeSrc": "10264:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10264:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10287:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10287:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10293:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10293:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10283:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10283:3:7"
																		},
																		"nativeSrc": "10283:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10283:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10257:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10257:6:7"
																},
																"nativeSrc": "10257:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10257:47:7"
															},
															"nativeSrc": "10257:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10257:47:7"
														},
														{
															"nativeSrc": "10313:139:7",
															"nodeType": "YulAssignment",
															"src": "10313:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10447:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10447:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10321:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10321:124:7"
																},
																"nativeSrc": "10321:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10321:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10313:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10040:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10191:9:7",
														"nodeType": "YulTypedName",
														"src": "10191:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10206:4:7",
														"nodeType": "YulTypedName",
														"src": "10206:4:7",
														"type": ""
													}
												],
												"src": "10040:419:7"
											},
											{
												"body": {
													"nativeSrc": "10571:65:7",
													"nodeType": "YulBlock",
													"src": "10571:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10593:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10593:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10601:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10601:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10589:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10589:3:7"
																		},
																		"nativeSrc": "10589:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10589:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e63652e",
																		"kind": "string",
																		"nativeSrc": "10605:23:7",
																		"nodeType": "YulLiteral",
																		"src": "10605:23:7",
																		"type": "",
																		"value": "Insufficient balance."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10582:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10582:6:7"
																},
																"nativeSrc": "10582:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10582:47:7"
															},
															"nativeSrc": "10582:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10582:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
												"nativeSrc": "10465:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10563:6:7",
														"nodeType": "YulTypedName",
														"src": "10563:6:7",
														"type": ""
													}
												],
												"src": "10465:171:7"
											},
											{
												"body": {
													"nativeSrc": "10788:220:7",
													"nodeType": "YulBlock",
													"src": "10788:220:7",
													"statements": [
														{
															"nativeSrc": "10798:74:7",
															"nodeType": "YulAssignment",
															"src": "10798:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10864:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10864:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10869:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10869:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10805:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10805:58:7"
																},
																"nativeSrc": "10805:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10805:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10798:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10798:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10970:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10970:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																	"nativeSrc": "10881:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10881:88:7"
																},
																"nativeSrc": "10881:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10881:93:7"
															},
															"nativeSrc": "10881:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10881:93:7"
														},
														{
															"nativeSrc": "10983:19:7",
															"nodeType": "YulAssignment",
															"src": "10983:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10994:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10994:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10999:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10999:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10990:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10990:3:7"
																},
																"nativeSrc": "10990:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10990:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10983:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10983:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10642:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10776:3:7",
														"nodeType": "YulTypedName",
														"src": "10776:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10784:3:7",
														"nodeType": "YulTypedName",
														"src": "10784:3:7",
														"type": ""
													}
												],
												"src": "10642:366:7"
											},
											{
												"body": {
													"nativeSrc": "11185:248:7",
													"nodeType": "YulBlock",
													"src": "11185:248:7",
													"statements": [
														{
															"nativeSrc": "11195:26:7",
															"nodeType": "YulAssignment",
															"src": "11195:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11207:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11207:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11218:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11218:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11203:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11203:3:7"
																},
																"nativeSrc": "11203:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11203:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11195:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11195:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11242:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11242:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11253:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11253:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11238:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11238:3:7"
																		},
																		"nativeSrc": "11238:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11238:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11261:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11261:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11267:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11267:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11257:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11257:3:7"
																		},
																		"nativeSrc": "11257:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11257:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11231:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11231:6:7"
																},
																"nativeSrc": "11231:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11231:47:7"
															},
															"nativeSrc": "11231:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11231:47:7"
														},
														{
															"nativeSrc": "11287:139:7",
															"nodeType": "YulAssignment",
															"src": "11287:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11421:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "11421:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11295:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11295:124:7"
																},
																"nativeSrc": "11295:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11295:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11287:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11287:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11014:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11165:9:7",
														"nodeType": "YulTypedName",
														"src": "11165:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11180:4:7",
														"nodeType": "YulTypedName",
														"src": "11180:4:7",
														"type": ""
													}
												],
												"src": "11014:419:7"
											},
											{
												"body": {
													"nativeSrc": "11483:147:7",
													"nodeType": "YulBlock",
													"src": "11483:147:7",
													"statements": [
														{
															"nativeSrc": "11493:25:7",
															"nodeType": "YulAssignment",
															"src": "11493:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11516:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11516:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11498:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11498:17:7"
																},
																"nativeSrc": "11498:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11498:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11493:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11493:1:7"
																}
															]
														},
														{
															"nativeSrc": "11527:25:7",
															"nodeType": "YulAssignment",
															"src": "11527:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11550:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11550:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11532:17:7"
																},
																"nativeSrc": "11532:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11532:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11527:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11527:1:7"
																}
															]
														},
														{
															"nativeSrc": "11561:16:7",
															"nodeType": "YulAssignment",
															"src": "11561:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11572:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11572:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11575:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11575:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11568:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11568:3:7"
																},
																"nativeSrc": "11568:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11568:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11561:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11561:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11601:22:7",
																"nodeType": "YulBlock",
																"src": "11601:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11603:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11603:16:7"
																			},
																			"nativeSrc": "11603:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11603:18:7"
																		},
																		"nativeSrc": "11603:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11603:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11593:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11593:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11596:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11596:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11590:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11590:2:7"
																},
																"nativeSrc": "11590:10:7",
																"nodeType": "YulFunctionCall",
																"src": "11590:10:7"
															},
															"nativeSrc": "11587:36:7",
															"nodeType": "YulIf",
															"src": "11587:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11439:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11470:1:7",
														"nodeType": "YulTypedName",
														"src": "11470:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11473:1:7",
														"nodeType": "YulTypedName",
														"src": "11473:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11479:3:7",
														"nodeType": "YulTypedName",
														"src": "11479:3:7",
														"type": ""
													}
												],
												"src": "11439:191:7"
											},
											{
												"body": {
													"nativeSrc": "11742:67:7",
													"nodeType": "YulBlock",
													"src": "11742:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11764:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11764:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11772:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11772:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11760:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11760:3:7"
																		},
																		"nativeSrc": "11760:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11760:14:7"
																	},
																	{
																		"hexValue": "50726573616c65206e6f74207374617274656420796574",
																		"kind": "string",
																		"nativeSrc": "11776:25:7",
																		"nodeType": "YulLiteral",
																		"src": "11776:25:7",
																		"type": "",
																		"value": "Presale not started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11753:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11753:6:7"
																},
																"nativeSrc": "11753:49:7",
																"nodeType": "YulFunctionCall",
																"src": "11753:49:7"
															},
															"nativeSrc": "11753:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "11753:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f",
												"nativeSrc": "11636:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11734:6:7",
														"nodeType": "YulTypedName",
														"src": "11734:6:7",
														"type": ""
													}
												],
												"src": "11636:173:7"
											},
											{
												"body": {
													"nativeSrc": "11961:220:7",
													"nodeType": "YulBlock",
													"src": "11961:220:7",
													"statements": [
														{
															"nativeSrc": "11971:74:7",
															"nodeType": "YulAssignment",
															"src": "11971:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12037:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12037:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12042:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12042:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11978:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11978:58:7"
																},
																"nativeSrc": "11978:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11978:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11971:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11971:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12143:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12143:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f",
																	"nativeSrc": "12054:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12054:88:7"
																},
																"nativeSrc": "12054:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12054:93:7"
															},
															"nativeSrc": "12054:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12054:93:7"
														},
														{
															"nativeSrc": "12156:19:7",
															"nodeType": "YulAssignment",
															"src": "12156:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12167:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12167:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12172:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12172:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12163:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12163:3:7"
																},
																"nativeSrc": "12163:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12163:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12156:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12156:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11815:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11949:3:7",
														"nodeType": "YulTypedName",
														"src": "11949:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11957:3:7",
														"nodeType": "YulTypedName",
														"src": "11957:3:7",
														"type": ""
													}
												],
												"src": "11815:366:7"
											},
											{
												"body": {
													"nativeSrc": "12358:248:7",
													"nodeType": "YulBlock",
													"src": "12358:248:7",
													"statements": [
														{
															"nativeSrc": "12368:26:7",
															"nodeType": "YulAssignment",
															"src": "12368:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12380:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12380:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12391:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12391:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12376:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12376:3:7"
																},
																"nativeSrc": "12376:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12376:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12368:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12368:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12415:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12415:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12426:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12426:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12411:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12411:3:7"
																		},
																		"nativeSrc": "12411:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12411:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12434:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12434:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12440:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12440:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12430:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12430:3:7"
																		},
																		"nativeSrc": "12430:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12430:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12404:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12404:6:7"
																},
																"nativeSrc": "12404:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12404:47:7"
															},
															"nativeSrc": "12404:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12404:47:7"
														},
														{
															"nativeSrc": "12460:139:7",
															"nodeType": "YulAssignment",
															"src": "12460:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12594:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12594:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12468:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12468:124:7"
																},
																"nativeSrc": "12468:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12468:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12460:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12460:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12187:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12338:9:7",
														"nodeType": "YulTypedName",
														"src": "12338:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12353:4:7",
														"nodeType": "YulTypedName",
														"src": "12353:4:7",
														"type": ""
													}
												],
												"src": "12187:419:7"
											},
											{
												"body": {
													"nativeSrc": "12718:64:7",
													"nodeType": "YulBlock",
													"src": "12718:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12740:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12740:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12748:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12748:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12736:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12736:3:7"
																		},
																		"nativeSrc": "12736:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12736:14:7"
																	},
																	{
																		"hexValue": "4e6f207265776172647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "12752:22:7",
																		"nodeType": "YulLiteral",
																		"src": "12752:22:7",
																		"type": "",
																		"value": "No rewards available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12729:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12729:6:7"
																},
																"nativeSrc": "12729:46:7",
																"nodeType": "YulFunctionCall",
																"src": "12729:46:7"
															},
															"nativeSrc": "12729:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "12729:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
												"nativeSrc": "12612:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12710:6:7",
														"nodeType": "YulTypedName",
														"src": "12710:6:7",
														"type": ""
													}
												],
												"src": "12612:170:7"
											},
											{
												"body": {
													"nativeSrc": "12934:220:7",
													"nodeType": "YulBlock",
													"src": "12934:220:7",
													"statements": [
														{
															"nativeSrc": "12944:74:7",
															"nodeType": "YulAssignment",
															"src": "12944:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13010:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13010:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13015:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13015:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12951:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12951:58:7"
																},
																"nativeSrc": "12951:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12951:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12944:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12944:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13116:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13116:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																	"nativeSrc": "13027:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "13027:88:7"
																},
																"nativeSrc": "13027:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13027:93:7"
															},
															"nativeSrc": "13027:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "13027:93:7"
														},
														{
															"nativeSrc": "13129:19:7",
															"nodeType": "YulAssignment",
															"src": "13129:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13140:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13140:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13145:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13145:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13136:3:7"
																},
																"nativeSrc": "13136:12:7",
																"nodeType": "YulFunctionCall",
																"src": "13136:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13129:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13129:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12788:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12922:3:7",
														"nodeType": "YulTypedName",
														"src": "12922:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12930:3:7",
														"nodeType": "YulTypedName",
														"src": "12930:3:7",
														"type": ""
													}
												],
												"src": "12788:366:7"
											},
											{
												"body": {
													"nativeSrc": "13331:248:7",
													"nodeType": "YulBlock",
													"src": "13331:248:7",
													"statements": [
														{
															"nativeSrc": "13341:26:7",
															"nodeType": "YulAssignment",
															"src": "13341:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13353:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13353:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13364:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13364:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13349:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13349:3:7"
																},
																"nativeSrc": "13349:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13349:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13341:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13341:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13388:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13388:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13399:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13399:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13384:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13384:3:7"
																		},
																		"nativeSrc": "13384:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13384:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13407:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "13407:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13413:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13413:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13403:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13403:3:7"
																		},
																		"nativeSrc": "13403:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13403:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13377:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13377:6:7"
																},
																"nativeSrc": "13377:47:7",
																"nodeType": "YulFunctionCall",
																"src": "13377:47:7"
															},
															"nativeSrc": "13377:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "13377:47:7"
														},
														{
															"nativeSrc": "13433:139:7",
															"nodeType": "YulAssignment",
															"src": "13433:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13567:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13567:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13441:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "13441:124:7"
																},
																"nativeSrc": "13441:131:7",
																"nodeType": "YulFunctionCall",
																"src": "13441:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13433:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13433:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13160:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13311:9:7",
														"nodeType": "YulTypedName",
														"src": "13311:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13326:4:7",
														"nodeType": "YulTypedName",
														"src": "13326:4:7",
														"type": ""
													}
												],
												"src": "13160:419:7"
											},
											{
												"body": {
													"nativeSrc": "13636:51:7",
													"nodeType": "YulBlock",
													"src": "13636:51:7",
													"statements": [
														{
															"nativeSrc": "13646:34:7",
															"nodeType": "YulAssignment",
															"src": "13646:34:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13671:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13671:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13674:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13674:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13667:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13667:3:7"
																},
																"nativeSrc": "13667:13:7",
																"nodeType": "YulFunctionCall",
																"src": "13667:13:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13646:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "13646:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "13585:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13617:5:7",
														"nodeType": "YulTypedName",
														"src": "13617:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13627:8:7",
														"nodeType": "YulTypedName",
														"src": "13627:8:7",
														"type": ""
													}
												],
												"src": "13585:102:7"
											},
											{
												"body": {
													"nativeSrc": "13766:775:7",
													"nodeType": "YulBlock",
													"src": "13766:775:7",
													"statements": [
														{
															"nativeSrc": "13776:15:7",
															"nodeType": "YulAssignment",
															"src": "13776:15:7",
															"value": {
																"name": "_power",
																"nativeSrc": "13785:6:7",
																"nodeType": "YulIdentifier",
																"src": "13785:6:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "13776:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "13776:5:7"
																}
															]
														},
														{
															"nativeSrc": "13800:14:7",
															"nodeType": "YulAssignment",
															"src": "13800:14:7",
															"value": {
																"name": "_base",
																"nativeSrc": "13809:5:7",
																"nodeType": "YulIdentifier",
																"src": "13809:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "13800:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13800:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13858:677:7",
																"nodeType": "YulBlock",
																"src": "13858:677:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "13946:22:7",
																			"nodeType": "YulBlock",
																			"src": "13946:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "13948:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "13948:16:7"
																						},
																						"nativeSrc": "13948:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "13948:18:7"
																					},
																					"nativeSrc": "13948:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "13948:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "13924:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "13924:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "13934:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "13934:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "13939:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "13939:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "13930:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "13930:3:7"
																					},
																					"nativeSrc": "13930:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "13930:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "13921:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "13921:2:7"
																			},
																			"nativeSrc": "13921:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13921:24:7"
																		},
																		"nativeSrc": "13918:50:7",
																		"nodeType": "YulIf",
																		"src": "13918:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "14013:419:7",
																			"nodeType": "YulBlock",
																			"src": "14013:419:7",
																			"statements": [
																				{
																					"nativeSrc": "14393:25:7",
																					"nodeType": "YulAssignment",
																					"src": "14393:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "14406:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "14406:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "14413:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "14413:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "14402:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "14402:3:7"
																						},
																						"nativeSrc": "14402:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "14402:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "14393:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "14393:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "13988:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "13988:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13998:1:7",
																					"nodeType": "YulLiteral",
																					"src": "13998:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "13984:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "13984:3:7"
																			},
																			"nativeSrc": "13984:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13984:16:7"
																		},
																		"nativeSrc": "13981:451:7",
																		"nodeType": "YulIf",
																		"src": "13981:451:7"
																	},
																	{
																		"nativeSrc": "14445:23:7",
																		"nodeType": "YulAssignment",
																		"src": "14445:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "14457:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "14457:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "14463:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "14463:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "14453:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "14453:3:7"
																			},
																			"nativeSrc": "14453:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14453:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "14445:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14445:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14481:44:7",
																		"nodeType": "YulAssignment",
																		"src": "14481:44:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "14516:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "14516:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "14493:22:7",
																				"nodeType": "YulIdentifier",
																				"src": "14493:22:7"
																			},
																			"nativeSrc": "14493:32:7",
																			"nodeType": "YulFunctionCall",
																			"src": "14493:32:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "14481:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "14481:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "13834:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "13834:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13844:1:7",
																		"nodeType": "YulLiteral",
																		"src": "13844:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13831:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13831:2:7"
																},
																"nativeSrc": "13831:15:7",
																"nodeType": "YulFunctionCall",
																"src": "13831:15:7"
															},
															"nativeSrc": "13823:712:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13847:2:7",
																"nodeType": "YulBlock",
																"src": "13847:2:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "13827:3:7",
																"nodeType": "YulBlock",
																"src": "13827:3:7",
																"statements": []
															},
															"src": "13823:712:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "13693:848:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "13721:6:7",
														"nodeType": "YulTypedName",
														"src": "13721:6:7",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "13729:5:7",
														"nodeType": "YulTypedName",
														"src": "13729:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "13736:8:7",
														"nodeType": "YulTypedName",
														"src": "13736:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "13746:3:7",
														"nodeType": "YulTypedName",
														"src": "13746:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "13754:5:7",
														"nodeType": "YulTypedName",
														"src": "13754:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "13761:4:7",
														"nodeType": "YulTypedName",
														"src": "13761:4:7",
														"type": ""
													}
												],
												"src": "13693:848:7"
											},
											{
												"body": {
													"nativeSrc": "14607:1013:7",
													"nodeType": "YulBlock",
													"src": "14607:1013:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "14802:20:7",
																"nodeType": "YulBlock",
																"src": "14802:20:7",
																"statements": [
																	{
																		"nativeSrc": "14804:10:7",
																		"nodeType": "YulAssignment",
																		"src": "14804:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14813:1:7",
																			"nodeType": "YulLiteral",
																			"src": "14813:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14804:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14804:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14815:5:7",
																		"nodeType": "YulLeave",
																		"src": "14815:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "14792:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "14792:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14785:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14785:6:7"
																},
																"nativeSrc": "14785:16:7",
																"nodeType": "YulFunctionCall",
																"src": "14785:16:7"
															},
															"nativeSrc": "14782:40:7",
															"nodeType": "YulIf",
															"src": "14782:40:7"
														},
														{
															"body": {
																"nativeSrc": "14847:20:7",
																"nodeType": "YulBlock",
																"src": "14847:20:7",
																"statements": [
																	{
																		"nativeSrc": "14849:10:7",
																		"nodeType": "YulAssignment",
																		"src": "14849:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "14858:1:7",
																			"nodeType": "YulLiteral",
																			"src": "14858:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "14849:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "14849:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "14860:5:7",
																		"nodeType": "YulLeave",
																		"src": "14860:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "14841:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14841:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14834:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14834:6:7"
																},
																"nativeSrc": "14834:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14834:12:7"
															},
															"nativeSrc": "14831:36:7",
															"nodeType": "YulIf",
															"src": "14831:36:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14977:20:7",
																		"nodeType": "YulBlock",
																		"src": "14977:20:7",
																		"statements": [
																			{
																				"nativeSrc": "14979:10:7",
																				"nodeType": "YulAssignment",
																				"src": "14979:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14988:1:7",
																					"nodeType": "YulLiteral",
																					"src": "14988:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "14979:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "14979:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "14990:5:7",
																				"nodeType": "YulLeave",
																				"src": "14990:5:7"
																			}
																		]
																	},
																	"nativeSrc": "14970:27:7",
																	"nodeType": "YulCase",
																	"src": "14970:27:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14975:1:7",
																		"nodeType": "YulLiteral",
																		"src": "14975:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15021:176:7",
																		"nodeType": "YulBlock",
																		"src": "15021:176:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "15056:22:7",
																					"nodeType": "YulBlock",
																					"src": "15056:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "15058:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "15058:16:7"
																								},
																								"nativeSrc": "15058:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "15058:18:7"
																							},
																							"nativeSrc": "15058:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "15058:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "15041:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "15041:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "15051:3:7",
																							"nodeType": "YulLiteral",
																							"src": "15051:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "15038:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "15038:2:7"
																					},
																					"nativeSrc": "15038:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "15038:17:7"
																				},
																				"nativeSrc": "15035:43:7",
																				"nodeType": "YulIf",
																				"src": "15035:43:7"
																			},
																			{
																				"nativeSrc": "15091:25:7",
																				"nodeType": "YulAssignment",
																				"src": "15091:25:7",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "15104:1:7",
																							"nodeType": "YulLiteral",
																							"src": "15104:1:7",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "15107:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "15107:8:7"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "15100:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "15100:3:7"
																					},
																					"nativeSrc": "15100:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "15100:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "15091:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "15091:5:7"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15147:22:7",
																					"nodeType": "YulBlock",
																					"src": "15147:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "15149:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "15149:16:7"
																								},
																								"nativeSrc": "15149:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "15149:18:7"
																							},
																							"nativeSrc": "15149:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "15149:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "15135:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "15135:5:7"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "15142:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "15142:3:7"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "15132:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "15132:2:7"
																					},
																					"nativeSrc": "15132:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "15132:14:7"
																				},
																				"nativeSrc": "15129:40:7",
																				"nodeType": "YulIf",
																				"src": "15129:40:7"
																			},
																			{
																				"nativeSrc": "15182:5:7",
																				"nodeType": "YulLeave",
																				"src": "15182:5:7"
																			}
																		]
																	},
																	"nativeSrc": "15006:191:7",
																	"nodeType": "YulCase",
																	"src": "15006:191:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15011:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15011:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "14927:4:7",
																"nodeType": "YulIdentifier",
																"src": "14927:4:7"
															},
															"nativeSrc": "14920:277:7",
															"nodeType": "YulSwitch",
															"src": "14920:277:7"
														},
														{
															"body": {
																"nativeSrc": "15329:123:7",
																"nodeType": "YulBlock",
																"src": "15329:123:7",
																"statements": [
																	{
																		"nativeSrc": "15343:28:7",
																		"nodeType": "YulAssignment",
																		"src": "15343:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "15356:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "15356:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "15362:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "15362:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "15352:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15352:3:7"
																			},
																			"nativeSrc": "15352:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15352:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "15343:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "15343:5:7"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "15402:22:7",
																			"nodeType": "YulBlock",
																			"src": "15402:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "15404:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "15404:16:7"
																						},
																						"nativeSrc": "15404:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "15404:18:7"
																					},
																					"nativeSrc": "15404:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "15404:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "15390:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "15390:5:7"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "15397:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "15397:3:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "15387:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "15387:2:7"
																			},
																			"nativeSrc": "15387:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15387:14:7"
																		},
																		"nativeSrc": "15384:40:7",
																		"nodeType": "YulIf",
																		"src": "15384:40:7"
																	},
																	{
																		"nativeSrc": "15437:5:7",
																		"nodeType": "YulLeave",
																		"src": "15437:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15232:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "15232:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15238:2:7",
																						"nodeType": "YulLiteral",
																						"src": "15238:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15229:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "15229:2:7"
																				},
																				"nativeSrc": "15229:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15229:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15246:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "15246:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15256:2:7",
																						"nodeType": "YulLiteral",
																						"src": "15256:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15243:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "15243:2:7"
																				},
																				"nativeSrc": "15243:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15243:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15225:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15225:3:7"
																		},
																		"nativeSrc": "15225:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15225:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "15281:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "15281:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15287:3:7",
																						"nodeType": "YulLiteral",
																						"src": "15287:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15278:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "15278:2:7"
																				},
																				"nativeSrc": "15278:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15278:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "15296:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "15296:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15306:2:7",
																						"nodeType": "YulLiteral",
																						"src": "15306:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "15293:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "15293:2:7"
																				},
																				"nativeSrc": "15293:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "15293:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15274:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15274:3:7"
																		},
																		"nativeSrc": "15274:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15274:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15209:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15209:2:7"
																},
																"nativeSrc": "15209:111:7",
																"nodeType": "YulFunctionCall",
																"src": "15209:111:7"
															},
															"nativeSrc": "15206:246:7",
															"nodeType": "YulIf",
															"src": "15206:246:7"
														},
														{
															"nativeSrc": "15462:57:7",
															"nodeType": "YulAssignment",
															"src": "15462:57:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15496:1:7",
																		"nodeType": "YulLiteral",
																		"src": "15496:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15499:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15499:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15505:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "15505:8:7"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "15515:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15515:3:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "15477:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "15477:18:7"
																},
																"nativeSrc": "15477:42:7",
																"nodeType": "YulFunctionCall",
																"src": "15477:42:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15462:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15462:5:7"
																},
																{
																	"name": "base",
																	"nativeSrc": "15469:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15469:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15558:22:7",
																"nodeType": "YulBlock",
																"src": "15558:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15560:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "15560:16:7"
																			},
																			"nativeSrc": "15560:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "15560:18:7"
																		},
																		"nativeSrc": "15560:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "15560:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15535:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15535:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "15546:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "15546:3:7"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "15551:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15551:4:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "15542:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15542:3:7"
																		},
																		"nativeSrc": "15542:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15542:14:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15532:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "15532:2:7"
																},
																"nativeSrc": "15532:25:7",
																"nodeType": "YulFunctionCall",
																"src": "15532:25:7"
															},
															"nativeSrc": "15529:51:7",
															"nodeType": "YulIf",
															"src": "15529:51:7"
														},
														{
															"nativeSrc": "15589:25:7",
															"nodeType": "YulAssignment",
															"src": "15589:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "15602:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "15602:5:7"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "15609:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15609:4:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15598:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15598:3:7"
																},
																"nativeSrc": "15598:16:7",
																"nodeType": "YulFunctionCall",
																"src": "15598:16:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15589:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15589:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "14547:1073:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "14577:4:7",
														"nodeType": "YulTypedName",
														"src": "14577:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "14583:8:7",
														"nodeType": "YulTypedName",
														"src": "14583:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "14593:3:7",
														"nodeType": "YulTypedName",
														"src": "14593:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "14601:5:7",
														"nodeType": "YulTypedName",
														"src": "14601:5:7",
														"type": ""
													}
												],
												"src": "14547:1073:7"
											},
											{
												"body": {
													"nativeSrc": "15690:217:7",
													"nodeType": "YulBlock",
													"src": "15690:217:7",
													"statements": [
														{
															"nativeSrc": "15700:31:7",
															"nodeType": "YulAssignment",
															"src": "15700:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15726:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15726:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15708:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "15708:17:7"
																},
																"nativeSrc": "15708:23:7",
																"nodeType": "YulFunctionCall",
																"src": "15708:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "15700:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15700:4:7"
																}
															]
														},
														{
															"nativeSrc": "15740:37:7",
															"nodeType": "YulAssignment",
															"src": "15740:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "15768:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "15768:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "15752:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "15752:15:7"
																},
																"nativeSrc": "15752:25:7",
																"nodeType": "YulFunctionCall",
																"src": "15752:25:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "15740:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "15740:8:7"
																}
															]
														},
														{
															"nativeSrc": "15787:113:7",
															"nodeType": "YulAssignment",
															"src": "15787:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "15817:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15817:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "15823:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "15823:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15833:66:7",
																		"nodeType": "YulLiteral",
																		"src": "15833:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "15796:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "15796:20:7"
																},
																"nativeSrc": "15796:104:7",
																"nodeType": "YulFunctionCall",
																"src": "15796:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "15787:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "15787:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "15626:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "15665:4:7",
														"nodeType": "YulTypedName",
														"src": "15665:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "15671:8:7",
														"nodeType": "YulTypedName",
														"src": "15671:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "15684:5:7",
														"nodeType": "YulTypedName",
														"src": "15684:5:7",
														"type": ""
													}
												],
												"src": "15626:281:7"
											},
											{
												"body": {
													"nativeSrc": "16019:63:7",
													"nodeType": "YulBlock",
													"src": "16019:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16041:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16041:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16049:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16049:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16037:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16037:3:7"
																		},
																		"nativeSrc": "16037:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16037:14:7"
																	},
																	{
																		"hexValue": "416c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "16053:21:7",
																		"nodeType": "YulLiteral",
																		"src": "16053:21:7",
																		"type": "",
																		"value": "Already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16030:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16030:6:7"
																},
																"nativeSrc": "16030:45:7",
																"nodeType": "YulFunctionCall",
																"src": "16030:45:7"
															},
															"nativeSrc": "16030:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "16030:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
												"nativeSrc": "15913:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16011:6:7",
														"nodeType": "YulTypedName",
														"src": "16011:6:7",
														"type": ""
													}
												],
												"src": "15913:169:7"
											},
											{
												"body": {
													"nativeSrc": "16234:220:7",
													"nodeType": "YulBlock",
													"src": "16234:220:7",
													"statements": [
														{
															"nativeSrc": "16244:74:7",
															"nodeType": "YulAssignment",
															"src": "16244:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16310:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16310:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16315:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16315:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16251:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16251:58:7"
																},
																"nativeSrc": "16251:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16251:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16244:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16244:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16416:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16416:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																	"nativeSrc": "16327:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16327:88:7"
																},
																"nativeSrc": "16327:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16327:93:7"
															},
															"nativeSrc": "16327:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16327:93:7"
														},
														{
															"nativeSrc": "16429:19:7",
															"nodeType": "YulAssignment",
															"src": "16429:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16440:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16440:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16445:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16445:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16436:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16436:3:7"
																},
																"nativeSrc": "16436:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16436:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16429:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16429:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16088:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16222:3:7",
														"nodeType": "YulTypedName",
														"src": "16222:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16230:3:7",
														"nodeType": "YulTypedName",
														"src": "16230:3:7",
														"type": ""
													}
												],
												"src": "16088:366:7"
											},
											{
												"body": {
													"nativeSrc": "16631:248:7",
													"nodeType": "YulBlock",
													"src": "16631:248:7",
													"statements": [
														{
															"nativeSrc": "16641:26:7",
															"nodeType": "YulAssignment",
															"src": "16641:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16653:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16653:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16664:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16664:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16649:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16649:3:7"
																},
																"nativeSrc": "16649:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16649:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16641:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16641:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16688:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16688:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16699:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16699:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16684:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16684:3:7"
																		},
																		"nativeSrc": "16684:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16684:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16707:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16707:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16713:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16713:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16703:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16703:3:7"
																		},
																		"nativeSrc": "16703:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16703:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16677:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16677:6:7"
																},
																"nativeSrc": "16677:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16677:47:7"
															},
															"nativeSrc": "16677:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16677:47:7"
														},
														{
															"nativeSrc": "16733:139:7",
															"nodeType": "YulAssignment",
															"src": "16733:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16867:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16867:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16741:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16741:124:7"
																},
																"nativeSrc": "16741:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16741:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16733:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16733:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16460:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16611:9:7",
														"nodeType": "YulTypedName",
														"src": "16611:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16626:4:7",
														"nodeType": "YulTypedName",
														"src": "16626:4:7",
														"type": ""
													}
												],
												"src": "16460:419:7"
											},
											{
												"body": {
													"nativeSrc": "16991:65:7",
													"nodeType": "YulBlock",
													"src": "16991:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17013:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17013:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17021:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17021:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17009:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17009:3:7"
																		},
																		"nativeSrc": "17009:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17009:14:7"
																	},
																	{
																		"hexValue": "43616e6e6f7420726566657220796f757273656c66",
																		"kind": "string",
																		"nativeSrc": "17025:23:7",
																		"nodeType": "YulLiteral",
																		"src": "17025:23:7",
																		"type": "",
																		"value": "Cannot refer yourself"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17002:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17002:6:7"
																},
																"nativeSrc": "17002:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17002:47:7"
															},
															"nativeSrc": "17002:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17002:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
												"nativeSrc": "16885:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16983:6:7",
														"nodeType": "YulTypedName",
														"src": "16983:6:7",
														"type": ""
													}
												],
												"src": "16885:171:7"
											},
											{
												"body": {
													"nativeSrc": "17208:220:7",
													"nodeType": "YulBlock",
													"src": "17208:220:7",
													"statements": [
														{
															"nativeSrc": "17218:74:7",
															"nodeType": "YulAssignment",
															"src": "17218:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17284:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17284:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17289:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17289:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17225:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "17225:58:7"
																},
																"nativeSrc": "17225:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17225:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17218:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17218:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17390:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17390:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																	"nativeSrc": "17301:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17301:88:7"
																},
																"nativeSrc": "17301:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17301:93:7"
															},
															"nativeSrc": "17301:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17301:93:7"
														},
														{
															"nativeSrc": "17403:19:7",
															"nodeType": "YulAssignment",
															"src": "17403:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17414:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17414:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17419:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17419:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17410:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17410:3:7"
																},
																"nativeSrc": "17410:12:7",
																"nodeType": "YulFunctionCall",
																"src": "17410:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17403:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17403:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17062:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17196:3:7",
														"nodeType": "YulTypedName",
														"src": "17196:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17204:3:7",
														"nodeType": "YulTypedName",
														"src": "17204:3:7",
														"type": ""
													}
												],
												"src": "17062:366:7"
											},
											{
												"body": {
													"nativeSrc": "17605:248:7",
													"nodeType": "YulBlock",
													"src": "17605:248:7",
													"statements": [
														{
															"nativeSrc": "17615:26:7",
															"nodeType": "YulAssignment",
															"src": "17615:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17627:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17627:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17638:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17638:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17623:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17623:3:7"
																},
																"nativeSrc": "17623:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17623:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17615:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17615:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17662:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17662:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17673:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17673:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17658:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17658:3:7"
																		},
																		"nativeSrc": "17658:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17658:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17681:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17681:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17687:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17687:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17677:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17677:3:7"
																		},
																		"nativeSrc": "17677:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17677:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17651:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17651:6:7"
																},
																"nativeSrc": "17651:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17651:47:7"
															},
															"nativeSrc": "17651:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17651:47:7"
														},
														{
															"nativeSrc": "17707:139:7",
															"nodeType": "YulAssignment",
															"src": "17707:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17841:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17841:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17715:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17715:124:7"
																},
																"nativeSrc": "17715:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17715:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17707:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17707:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17434:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17585:9:7",
														"nodeType": "YulTypedName",
														"src": "17585:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17600:4:7",
														"nodeType": "YulTypedName",
														"src": "17600:4:7",
														"type": ""
													}
												],
												"src": "17434:419:7"
											},
											{
												"body": {
													"nativeSrc": "17965:61:7",
													"nodeType": "YulBlock",
													"src": "17965:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17987:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "17987:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17995:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17995:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17983:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17983:3:7"
																		},
																		"nativeSrc": "17983:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17983:14:7"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73207374616b65642e",
																		"kind": "string",
																		"nativeSrc": "17999:19:7",
																		"nodeType": "YulLiteral",
																		"src": "17999:19:7",
																		"type": "",
																		"value": "No tokens staked."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17976:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17976:6:7"
																},
																"nativeSrc": "17976:43:7",
																"nodeType": "YulFunctionCall",
																"src": "17976:43:7"
															},
															"nativeSrc": "17976:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "17976:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
												"nativeSrc": "17859:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17957:6:7",
														"nodeType": "YulTypedName",
														"src": "17957:6:7",
														"type": ""
													}
												],
												"src": "17859:167:7"
											},
											{
												"body": {
													"nativeSrc": "18178:220:7",
													"nodeType": "YulBlock",
													"src": "18178:220:7",
													"statements": [
														{
															"nativeSrc": "18188:74:7",
															"nodeType": "YulAssignment",
															"src": "18188:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18254:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18254:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18259:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18259:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18195:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18195:58:7"
																},
																"nativeSrc": "18195:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18195:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18188:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18188:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18360:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18360:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
																	"nativeSrc": "18271:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18271:88:7"
																},
																"nativeSrc": "18271:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18271:93:7"
															},
															"nativeSrc": "18271:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18271:93:7"
														},
														{
															"nativeSrc": "18373:19:7",
															"nodeType": "YulAssignment",
															"src": "18373:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18384:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18384:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18389:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18389:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18380:3:7"
																},
																"nativeSrc": "18380:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18380:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18373:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18373:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18032:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18166:3:7",
														"nodeType": "YulTypedName",
														"src": "18166:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18174:3:7",
														"nodeType": "YulTypedName",
														"src": "18174:3:7",
														"type": ""
													}
												],
												"src": "18032:366:7"
											},
											{
												"body": {
													"nativeSrc": "18575:248:7",
													"nodeType": "YulBlock",
													"src": "18575:248:7",
													"statements": [
														{
															"nativeSrc": "18585:26:7",
															"nodeType": "YulAssignment",
															"src": "18585:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18597:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18597:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18608:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18608:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18593:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18593:3:7"
																},
																"nativeSrc": "18593:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18593:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18585:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18585:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18632:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18632:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18643:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18643:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18628:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18628:3:7"
																		},
																		"nativeSrc": "18628:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18628:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18651:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18651:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18657:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18657:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18647:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18647:3:7"
																		},
																		"nativeSrc": "18647:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18647:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18621:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18621:6:7"
																},
																"nativeSrc": "18621:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18621:47:7"
															},
															"nativeSrc": "18621:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18621:47:7"
														},
														{
															"nativeSrc": "18677:139:7",
															"nodeType": "YulAssignment",
															"src": "18677:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18811:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18811:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18685:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18685:124:7"
																},
																"nativeSrc": "18685:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18685:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18677:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18677:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18404:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18555:9:7",
														"nodeType": "YulTypedName",
														"src": "18555:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18570:4:7",
														"nodeType": "YulTypedName",
														"src": "18570:4:7",
														"type": ""
													}
												],
												"src": "18404:419:7"
											},
											{
												"body": {
													"nativeSrc": "18935:71:7",
													"nodeType": "YulBlock",
													"src": "18935:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18957:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18957:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18965:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18965:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18953:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18953:3:7"
																		},
																		"nativeSrc": "18953:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18953:14:7"
																	},
																	{
																		"hexValue": "556e7374616b65206f6e6c792061667465722034207765656b732e",
																		"kind": "string",
																		"nativeSrc": "18969:29:7",
																		"nodeType": "YulLiteral",
																		"src": "18969:29:7",
																		"type": "",
																		"value": "Unstake only after 4 weeks."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18946:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18946:6:7"
																},
																"nativeSrc": "18946:53:7",
																"nodeType": "YulFunctionCall",
																"src": "18946:53:7"
															},
															"nativeSrc": "18946:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "18946:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254",
												"nativeSrc": "18829:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18927:6:7",
														"nodeType": "YulTypedName",
														"src": "18927:6:7",
														"type": ""
													}
												],
												"src": "18829:177:7"
											},
											{
												"body": {
													"nativeSrc": "19158:220:7",
													"nodeType": "YulBlock",
													"src": "19158:220:7",
													"statements": [
														{
															"nativeSrc": "19168:74:7",
															"nodeType": "YulAssignment",
															"src": "19168:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19234:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19234:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19239:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19239:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19175:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "19175:58:7"
																},
																"nativeSrc": "19175:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19175:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19168:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19168:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19340:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19340:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254",
																	"nativeSrc": "19251:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "19251:88:7"
																},
																"nativeSrc": "19251:93:7",
																"nodeType": "YulFunctionCall",
																"src": "19251:93:7"
															},
															"nativeSrc": "19251:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "19251:93:7"
														},
														{
															"nativeSrc": "19353:19:7",
															"nodeType": "YulAssignment",
															"src": "19353:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19364:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "19364:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19369:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19369:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19360:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19360:3:7"
																},
																"nativeSrc": "19360:12:7",
																"nodeType": "YulFunctionCall",
																"src": "19360:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19353:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19353:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19012:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19146:3:7",
														"nodeType": "YulTypedName",
														"src": "19146:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19154:3:7",
														"nodeType": "YulTypedName",
														"src": "19154:3:7",
														"type": ""
													}
												],
												"src": "19012:366:7"
											},
											{
												"body": {
													"nativeSrc": "19555:248:7",
													"nodeType": "YulBlock",
													"src": "19555:248:7",
													"statements": [
														{
															"nativeSrc": "19565:26:7",
															"nodeType": "YulAssignment",
															"src": "19565:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19577:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19577:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19588:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19588:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19573:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19573:3:7"
																},
																"nativeSrc": "19573:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19573:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19565:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19565:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19612:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19612:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19623:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19623:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19608:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19608:3:7"
																		},
																		"nativeSrc": "19608:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19608:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19631:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "19631:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19637:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19637:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19627:3:7"
																		},
																		"nativeSrc": "19627:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19627:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19601:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19601:6:7"
																},
																"nativeSrc": "19601:47:7",
																"nodeType": "YulFunctionCall",
																"src": "19601:47:7"
															},
															"nativeSrc": "19601:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "19601:47:7"
														},
														{
															"nativeSrc": "19657:139:7",
															"nodeType": "YulAssignment",
															"src": "19657:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19791:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "19791:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19665:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "19665:124:7"
																},
																"nativeSrc": "19665:131:7",
																"nodeType": "YulFunctionCall",
																"src": "19665:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19657:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19657:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19384:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19535:9:7",
														"nodeType": "YulTypedName",
														"src": "19535:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19550:4:7",
														"nodeType": "YulTypedName",
														"src": "19550:4:7",
														"type": ""
													}
												],
												"src": "19384:419:7"
											},
											{
												"body": {
													"nativeSrc": "19935:206:7",
													"nodeType": "YulBlock",
													"src": "19935:206:7",
													"statements": [
														{
															"nativeSrc": "19945:26:7",
															"nodeType": "YulAssignment",
															"src": "19945:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19957:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19957:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19968:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19968:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19953:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19953:3:7"
																},
																"nativeSrc": "19953:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19953:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19945:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19945:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20025:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20025:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20038:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20038:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20049:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20049:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20034:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20034:3:7"
																		},
																		"nativeSrc": "20034:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20034:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19981:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19981:43:7"
																},
																"nativeSrc": "19981:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19981:71:7"
															},
															"nativeSrc": "19981:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19981:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20106:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "20106:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20119:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20119:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20130:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20130:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20115:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20115:3:7"
																		},
																		"nativeSrc": "20115:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20115:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20062:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "20062:43:7"
																},
																"nativeSrc": "20062:72:7",
																"nodeType": "YulFunctionCall",
																"src": "20062:72:7"
															},
															"nativeSrc": "20062:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "20062:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19809:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19899:9:7",
														"nodeType": "YulTypedName",
														"src": "19899:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19911:6:7",
														"nodeType": "YulTypedName",
														"src": "19911:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19919:6:7",
														"nodeType": "YulTypedName",
														"src": "19919:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19930:4:7",
														"nodeType": "YulTypedName",
														"src": "19930:4:7",
														"type": ""
													}
												],
												"src": "19809:332:7"
											},
											{
												"body": {
													"nativeSrc": "20253:60:7",
													"nodeType": "YulBlock",
													"src": "20253:60:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20275:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "20275:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20283:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20283:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20271:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20271:3:7"
																		},
																		"nativeSrc": "20271:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20271:14:7"
																	},
																	{
																		"hexValue": "53616c65206e6f74206163746976652e",
																		"kind": "string",
																		"nativeSrc": "20287:18:7",
																		"nodeType": "YulLiteral",
																		"src": "20287:18:7",
																		"type": "",
																		"value": "Sale not active."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20264:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20264:6:7"
																},
																"nativeSrc": "20264:42:7",
																"nodeType": "YulFunctionCall",
																"src": "20264:42:7"
															},
															"nativeSrc": "20264:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "20264:42:7"
														}
													]
												},
												"name": "store_literal_in_memory_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd",
												"nativeSrc": "20147:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20245:6:7",
														"nodeType": "YulTypedName",
														"src": "20245:6:7",
														"type": ""
													}
												],
												"src": "20147:166:7"
											},
											{
												"body": {
													"nativeSrc": "20465:220:7",
													"nodeType": "YulBlock",
													"src": "20465:220:7",
													"statements": [
														{
															"nativeSrc": "20475:74:7",
															"nodeType": "YulAssignment",
															"src": "20475:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20541:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20541:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20546:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20546:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20482:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "20482:58:7"
																},
																"nativeSrc": "20482:67:7",
																"nodeType": "YulFunctionCall",
																"src": "20482:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20475:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20475:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20647:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20647:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd",
																	"nativeSrc": "20558:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "20558:88:7"
																},
																"nativeSrc": "20558:93:7",
																"nodeType": "YulFunctionCall",
																"src": "20558:93:7"
															},
															"nativeSrc": "20558:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "20558:93:7"
														},
														{
															"nativeSrc": "20660:19:7",
															"nodeType": "YulAssignment",
															"src": "20660:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20671:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20671:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20676:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20676:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20667:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20667:3:7"
																},
																"nativeSrc": "20667:12:7",
																"nodeType": "YulFunctionCall",
																"src": "20667:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20660:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20660:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20319:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20453:3:7",
														"nodeType": "YulTypedName",
														"src": "20453:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20461:3:7",
														"nodeType": "YulTypedName",
														"src": "20461:3:7",
														"type": ""
													}
												],
												"src": "20319:366:7"
											},
											{
												"body": {
													"nativeSrc": "20862:248:7",
													"nodeType": "YulBlock",
													"src": "20862:248:7",
													"statements": [
														{
															"nativeSrc": "20872:26:7",
															"nodeType": "YulAssignment",
															"src": "20872:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20884:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20884:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20895:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20895:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20880:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20880:3:7"
																},
																"nativeSrc": "20880:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20880:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20872:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20872:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20919:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20919:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20930:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20930:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20915:3:7"
																		},
																		"nativeSrc": "20915:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20915:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20938:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "20938:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20944:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20944:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20934:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20934:3:7"
																		},
																		"nativeSrc": "20934:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20934:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20908:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20908:6:7"
																},
																"nativeSrc": "20908:47:7",
																"nodeType": "YulFunctionCall",
																"src": "20908:47:7"
															},
															"nativeSrc": "20908:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "20908:47:7"
														},
														{
															"nativeSrc": "20964:139:7",
															"nodeType": "YulAssignment",
															"src": "20964:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21098:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21098:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20972:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "20972:124:7"
																},
																"nativeSrc": "20972:131:7",
																"nodeType": "YulFunctionCall",
																"src": "20972:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20964:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20964:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20691:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20842:9:7",
														"nodeType": "YulTypedName",
														"src": "20842:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20857:4:7",
														"nodeType": "YulTypedName",
														"src": "20857:4:7",
														"type": ""
													}
												],
												"src": "20691:419:7"
											},
											{
												"body": {
													"nativeSrc": "21222:72:7",
													"nodeType": "YulBlock",
													"src": "21222:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21244:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "21244:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21252:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21252:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21240:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21240:3:7"
																		},
																		"nativeSrc": "21240:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21240:14:7"
																	},
																	{
																		"hexValue": "4d7573742073656e642045544820746f2062757920746f6b656e732e",
																		"kind": "string",
																		"nativeSrc": "21256:30:7",
																		"nodeType": "YulLiteral",
																		"src": "21256:30:7",
																		"type": "",
																		"value": "Must send ETH to buy tokens."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21233:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21233:6:7"
																},
																"nativeSrc": "21233:54:7",
																"nodeType": "YulFunctionCall",
																"src": "21233:54:7"
															},
															"nativeSrc": "21233:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "21233:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76",
												"nativeSrc": "21116:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21214:6:7",
														"nodeType": "YulTypedName",
														"src": "21214:6:7",
														"type": ""
													}
												],
												"src": "21116:178:7"
											},
											{
												"body": {
													"nativeSrc": "21446:220:7",
													"nodeType": "YulBlock",
													"src": "21446:220:7",
													"statements": [
														{
															"nativeSrc": "21456:74:7",
															"nodeType": "YulAssignment",
															"src": "21456:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21522:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21522:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21527:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21527:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21463:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "21463:58:7"
																},
																"nativeSrc": "21463:67:7",
																"nodeType": "YulFunctionCall",
																"src": "21463:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21456:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21456:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21628:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21628:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76",
																	"nativeSrc": "21539:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "21539:88:7"
																},
																"nativeSrc": "21539:93:7",
																"nodeType": "YulFunctionCall",
																"src": "21539:93:7"
															},
															"nativeSrc": "21539:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "21539:93:7"
														},
														{
															"nativeSrc": "21641:19:7",
															"nodeType": "YulAssignment",
															"src": "21641:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21652:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21652:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21657:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21657:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21648:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21648:3:7"
																},
																"nativeSrc": "21648:12:7",
																"nodeType": "YulFunctionCall",
																"src": "21648:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21641:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21641:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21300:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21434:3:7",
														"nodeType": "YulTypedName",
														"src": "21434:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21442:3:7",
														"nodeType": "YulTypedName",
														"src": "21442:3:7",
														"type": ""
													}
												],
												"src": "21300:366:7"
											},
											{
												"body": {
													"nativeSrc": "21843:248:7",
													"nodeType": "YulBlock",
													"src": "21843:248:7",
													"statements": [
														{
															"nativeSrc": "21853:26:7",
															"nodeType": "YulAssignment",
															"src": "21853:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21865:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "21865:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21876:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21876:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21861:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21861:3:7"
																},
																"nativeSrc": "21861:18:7",
																"nodeType": "YulFunctionCall",
																"src": "21861:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21853:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21853:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21900:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21900:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21911:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21911:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21896:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21896:3:7"
																		},
																		"nativeSrc": "21896:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21896:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21919:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "21919:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21925:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21925:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21915:3:7"
																		},
																		"nativeSrc": "21915:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21915:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21889:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21889:6:7"
																},
																"nativeSrc": "21889:47:7",
																"nodeType": "YulFunctionCall",
																"src": "21889:47:7"
															},
															"nativeSrc": "21889:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "21889:47:7"
														},
														{
															"nativeSrc": "21945:139:7",
															"nodeType": "YulAssignment",
															"src": "21945:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22079:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "22079:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21953:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "21953:124:7"
																},
																"nativeSrc": "21953:131:7",
																"nodeType": "YulFunctionCall",
																"src": "21953:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21945:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21945:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21672:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21823:9:7",
														"nodeType": "YulTypedName",
														"src": "21823:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21838:4:7",
														"nodeType": "YulTypedName",
														"src": "21838:4:7",
														"type": ""
													}
												],
												"src": "21672:419:7"
											},
											{
												"body": {
													"nativeSrc": "22163:219:7",
													"nodeType": "YulBlock",
													"src": "22163:219:7",
													"statements": [
														{
															"nativeSrc": "22173:31:7",
															"nodeType": "YulAssignment",
															"src": "22173:31:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "22199:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "22199:4:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22181:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "22181:17:7"
																},
																"nativeSrc": "22181:23:7",
																"nodeType": "YulFunctionCall",
																"src": "22181:23:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "22173:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22173:4:7"
																}
															]
														},
														{
															"nativeSrc": "22213:39:7",
															"nodeType": "YulAssignment",
															"src": "22213:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "22243:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "22243:8:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22225:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "22225:17:7"
																},
																"nativeSrc": "22225:27:7",
																"nodeType": "YulFunctionCall",
																"src": "22225:27:7"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "22213:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "22213:8:7"
																}
															]
														},
														{
															"nativeSrc": "22262:113:7",
															"nodeType": "YulAssignment",
															"src": "22262:113:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "22292:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "22292:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "22298:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "22298:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22308:66:7",
																		"nodeType": "YulLiteral",
																		"src": "22308:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "22271:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "22271:20:7"
																},
																"nativeSrc": "22271:104:7",
																"nodeType": "YulFunctionCall",
																"src": "22271:104:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "22262:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "22262:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "22097:285:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "22138:4:7",
														"nodeType": "YulTypedName",
														"src": "22138:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "22144:8:7",
														"nodeType": "YulTypedName",
														"src": "22144:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "22157:5:7",
														"nodeType": "YulTypedName",
														"src": "22157:5:7",
														"type": ""
													}
												],
												"src": "22097:285:7"
											},
											{
												"body": {
													"nativeSrc": "22494:72:7",
													"nodeType": "YulBlock",
													"src": "22494:72:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22516:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "22516:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22524:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22524:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22512:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22512:3:7"
																		},
																		"nativeSrc": "22512:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22512:14:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e",
																		"kind": "string",
																		"nativeSrc": "22528:30:7",
																		"nodeType": "YulLiteral",
																		"src": "22528:30:7",
																		"type": "",
																		"value": "Not enough tokens available."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22505:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "22505:6:7"
																},
																"nativeSrc": "22505:54:7",
																"nodeType": "YulFunctionCall",
																"src": "22505:54:7"
															},
															"nativeSrc": "22505:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "22505:54:7"
														}
													]
												},
												"name": "store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
												"nativeSrc": "22388:178:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22486:6:7",
														"nodeType": "YulTypedName",
														"src": "22486:6:7",
														"type": ""
													}
												],
												"src": "22388:178:7"
											},
											{
												"body": {
													"nativeSrc": "22718:220:7",
													"nodeType": "YulBlock",
													"src": "22718:220:7",
													"statements": [
														{
															"nativeSrc": "22728:74:7",
															"nodeType": "YulAssignment",
															"src": "22728:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22794:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22794:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22799:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22799:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22735:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "22735:58:7"
																},
																"nativeSrc": "22735:67:7",
																"nodeType": "YulFunctionCall",
																"src": "22735:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22728:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22728:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22900:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22900:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																	"nativeSrc": "22811:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "22811:88:7"
																},
																"nativeSrc": "22811:93:7",
																"nodeType": "YulFunctionCall",
																"src": "22811:93:7"
															},
															"nativeSrc": "22811:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "22811:93:7"
														},
														{
															"nativeSrc": "22913:19:7",
															"nodeType": "YulAssignment",
															"src": "22913:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22924:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22924:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22929:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22929:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22920:3:7"
																},
																"nativeSrc": "22920:12:7",
																"nodeType": "YulFunctionCall",
																"src": "22920:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22913:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22913:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22572:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22706:3:7",
														"nodeType": "YulTypedName",
														"src": "22706:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22714:3:7",
														"nodeType": "YulTypedName",
														"src": "22714:3:7",
														"type": ""
													}
												],
												"src": "22572:366:7"
											},
											{
												"body": {
													"nativeSrc": "23115:248:7",
													"nodeType": "YulBlock",
													"src": "23115:248:7",
													"statements": [
														{
															"nativeSrc": "23125:26:7",
															"nodeType": "YulAssignment",
															"src": "23125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "23137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23133:3:7"
																},
																"nativeSrc": "23133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "23133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "23125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23172:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23172:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23183:1:7",
																				"nodeType": "YulLiteral",
																				"src": "23183:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23168:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23168:3:7"
																		},
																		"nativeSrc": "23168:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23168:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23191:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "23191:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23197:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23197:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23187:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23187:3:7"
																		},
																		"nativeSrc": "23187:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23187:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23161:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23161:6:7"
																},
																"nativeSrc": "23161:47:7",
																"nodeType": "YulFunctionCall",
																"src": "23161:47:7"
															},
															"nativeSrc": "23161:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "23161:47:7"
														},
														{
															"nativeSrc": "23217:139:7",
															"nodeType": "YulAssignment",
															"src": "23217:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23351:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "23351:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23225:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "23225:124:7"
																},
																"nativeSrc": "23225:131:7",
																"nodeType": "YulFunctionCall",
																"src": "23225:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23217:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "23217:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22944:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23095:9:7",
														"nodeType": "YulTypedName",
														"src": "23095:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23110:4:7",
														"nodeType": "YulTypedName",
														"src": "23110:4:7",
														"type": ""
													}
												],
												"src": "22944:419:7"
											},
											{
												"body": {
													"nativeSrc": "23475:68:7",
													"nodeType": "YulBlock",
													"src": "23475:68:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23497:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "23497:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23505:1:7",
																				"nodeType": "YulLiteral",
																				"src": "23505:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23493:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23493:3:7"
																		},
																		"nativeSrc": "23493:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23493:14:7"
																	},
																	{
																		"hexValue": "5072652d73616c65206e6f74207374617274656420796574",
																		"kind": "string",
																		"nativeSrc": "23509:26:7",
																		"nodeType": "YulLiteral",
																		"src": "23509:26:7",
																		"type": "",
																		"value": "Pre-sale not started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23486:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23486:6:7"
																},
																"nativeSrc": "23486:50:7",
																"nodeType": "YulFunctionCall",
																"src": "23486:50:7"
															},
															"nativeSrc": "23486:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "23486:50:7"
														}
													]
												},
												"name": "store_literal_in_memory_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82",
												"nativeSrc": "23369:174:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23467:6:7",
														"nodeType": "YulTypedName",
														"src": "23467:6:7",
														"type": ""
													}
												],
												"src": "23369:174:7"
											},
											{
												"body": {
													"nativeSrc": "23695:220:7",
													"nodeType": "YulBlock",
													"src": "23695:220:7",
													"statements": [
														{
															"nativeSrc": "23705:74:7",
															"nodeType": "YulAssignment",
															"src": "23705:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23771:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23771:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23776:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23776:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23712:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "23712:58:7"
																},
																"nativeSrc": "23712:67:7",
																"nodeType": "YulFunctionCall",
																"src": "23712:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23705:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23705:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23877:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82",
																	"nativeSrc": "23788:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "23788:88:7"
																},
																"nativeSrc": "23788:93:7",
																"nodeType": "YulFunctionCall",
																"src": "23788:93:7"
															},
															"nativeSrc": "23788:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "23788:93:7"
														},
														{
															"nativeSrc": "23890:19:7",
															"nodeType": "YulAssignment",
															"src": "23890:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23901:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "23901:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23906:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23906:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23897:3:7"
																},
																"nativeSrc": "23897:12:7",
																"nodeType": "YulFunctionCall",
																"src": "23897:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23890:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23890:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23549:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23683:3:7",
														"nodeType": "YulTypedName",
														"src": "23683:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23691:3:7",
														"nodeType": "YulTypedName",
														"src": "23691:3:7",
														"type": ""
													}
												],
												"src": "23549:366:7"
											},
											{
												"body": {
													"nativeSrc": "24092:248:7",
													"nodeType": "YulBlock",
													"src": "24092:248:7",
													"statements": [
														{
															"nativeSrc": "24102:26:7",
															"nodeType": "YulAssignment",
															"src": "24102:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24114:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "24114:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24125:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24125:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24110:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24110:3:7"
																},
																"nativeSrc": "24110:18:7",
																"nodeType": "YulFunctionCall",
																"src": "24110:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24102:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24102:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24149:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24149:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24160:1:7",
																				"nodeType": "YulLiteral",
																				"src": "24160:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24145:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24145:3:7"
																		},
																		"nativeSrc": "24145:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24145:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24168:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "24168:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24174:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24174:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24164:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24164:3:7"
																		},
																		"nativeSrc": "24164:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24164:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24138:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "24138:6:7"
																},
																"nativeSrc": "24138:47:7",
																"nodeType": "YulFunctionCall",
																"src": "24138:47:7"
															},
															"nativeSrc": "24138:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "24138:47:7"
														},
														{
															"nativeSrc": "24194:139:7",
															"nodeType": "YulAssignment",
															"src": "24194:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24328:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "24328:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24202:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "24202:124:7"
																},
																"nativeSrc": "24202:131:7",
																"nodeType": "YulFunctionCall",
																"src": "24202:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24194:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24194:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23921:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24072:9:7",
														"nodeType": "YulTypedName",
														"src": "24072:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24087:4:7",
														"nodeType": "YulTypedName",
														"src": "24087:4:7",
														"type": ""
													}
												],
												"src": "23921:419:7"
											},
											{
												"body": {
													"nativeSrc": "24500:288:7",
													"nodeType": "YulBlock",
													"src": "24500:288:7",
													"statements": [
														{
															"nativeSrc": "24510:26:7",
															"nodeType": "YulAssignment",
															"src": "24510:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24522:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "24522:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24533:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24533:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24518:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24518:3:7"
																},
																"nativeSrc": "24518:18:7",
																"nodeType": "YulFunctionCall",
																"src": "24518:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24510:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24510:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24590:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24590:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24603:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24603:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24614:1:7",
																				"nodeType": "YulLiteral",
																				"src": "24614:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24599:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24599:3:7"
																		},
																		"nativeSrc": "24599:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24599:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24546:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24546:43:7"
																},
																"nativeSrc": "24546:71:7",
																"nodeType": "YulFunctionCall",
																"src": "24546:71:7"
															},
															"nativeSrc": "24546:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "24546:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24671:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24671:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24684:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24684:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24695:2:7",
																				"nodeType": "YulLiteral",
																				"src": "24695:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24680:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24680:3:7"
																		},
																		"nativeSrc": "24680:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24680:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24627:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24627:43:7"
																},
																"nativeSrc": "24627:72:7",
																"nodeType": "YulFunctionCall",
																"src": "24627:72:7"
															},
															"nativeSrc": "24627:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "24627:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "24753:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24753:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24766:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24766:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24777:2:7",
																				"nodeType": "YulLiteral",
																				"src": "24777:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24762:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24762:3:7"
																		},
																		"nativeSrc": "24762:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24762:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24709:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24709:43:7"
																},
																"nativeSrc": "24709:72:7",
																"nodeType": "YulFunctionCall",
																"src": "24709:72:7"
															},
															"nativeSrc": "24709:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "24709:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "24346:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24456:9:7",
														"nodeType": "YulTypedName",
														"src": "24456:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24468:6:7",
														"nodeType": "YulTypedName",
														"src": "24468:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24476:6:7",
														"nodeType": "YulTypedName",
														"src": "24476:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24484:6:7",
														"nodeType": "YulTypedName",
														"src": "24484:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24495:4:7",
														"nodeType": "YulTypedName",
														"src": "24495:4:7",
														"type": ""
													}
												],
												"src": "24346:442:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"End time must be after start tim\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance.\")\n\n    }\n\n    function abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale not started yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards available\")\n\n    }\n\n    function abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already whitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot refer yourself\")\n\n    }\n\n    function abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens staked.\")\n\n    }\n\n    function abi_encode_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unstake only after 4 weeks.\")\n\n    }\n\n    function abi_encode_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sale not active.\")\n\n    }\n\n    function abi_encode_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must send ETH to buy tokens.\")\n\n    }\n\n    function abi_encode_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens available.\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pre-sale not started yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061022f575f3560e01c80637547c7a31161012d578063a9059cbb116100aa578063dd62ed3e1161006e578063dd62ed3e1461083f578063f2fde38b1461087b578063f8102e68146108a3578063f9931855146108cd578063f9a81af7146109095761022f565b8063a9059cbb14610769578063cce29ea7146107a5578063cec297a0146107cf578063d0febe4c1461080b578063d348b409146108155761022f565b806395d89b41116100f157806395d89b41146106895780639b19251a146106b35780639ca423b3146106ef578063a09c4cf41461072b578063a5ce413b146107535761022f565b80637547c7a3146105a95780637c613b2f146105d15780638265324d146105e75780638da5cb5b146106235780638f0794fe1461064d5761022f565b80632c663960116101bb5780634f3fc2df1161017f5780634f3fc2df146104d9578063518ab2a81461050357806370a082311461052d578063715018a6146105695780637165d19b1461057f5761022f565b80632c663960146103f557806330f72cd414610431578063313ce5671461045b578063329a27e7146104855780634405df4a146104af5761022f565b80630d505541116102025780630d505541146102ed57806318160ddd146103295780631d0806ae1461035357806323b872dd1461037d57806327e235e3146103b95761022f565b806303e293a31461023357806306d65af31461025d57806306fdde0314610287578063095ea7b3146102b1575b5f80fd5b34801561023e575f80fd5b50610247610931565b60405161025491906121a9565b60405180910390f35b348015610268575f80fd5b50610271610937565b60405161027e91906121a9565b60405180910390f35b348015610292575f80fd5b5061029b61093d565b6040516102a89190612232565b60405180910390f35b3480156102bc575f80fd5b506102d760048036038101906102d291906122da565b6109cd565b6040516102e49190612332565b60405180910390f35b3480156102f8575f80fd5b50610313600480360381019061030e919061234b565b6109ef565b60405161032091906121a9565b60405180910390f35b348015610334575f80fd5b5061033d610ab4565b60405161034a91906121a9565b60405180910390f35b34801561035e575f80fd5b50610367610abd565b60405161037491906121a9565b60405180910390f35b348015610388575f80fd5b506103a3600480360381019061039e9190612376565b610ac3565b6040516103b09190612332565b60405180910390f35b3480156103c4575f80fd5b506103df60048036038101906103da919061234b565b610af1565b6040516103ec91906121a9565b60405180910390f35b348015610400575f80fd5b5061041b600480360381019061041691906123c6565b610b06565b60405161042891906121a9565b60405180910390f35b34801561043c575f80fd5b50610445610b71565b6040516104529190612332565b60405180910390f35b348015610466575f80fd5b5061046f610b84565b60405161047c919061241f565b60405180910390f35b348015610490575f80fd5b50610499610b8c565b6040516104a691906121a9565b60405180910390f35b3480156104ba575f80fd5b506104c3610bd0565b6040516104d091906121a9565b60405180910390f35b3480156104e4575f80fd5b506104ed610c13565b6040516104fa91906121a9565b60405180910390f35b34801561050e575f80fd5b50610517610c19565b60405161052491906121a9565b60405180910390f35b348015610538575f80fd5b50610553600480360381019061054e919061234b565b610c1f565b60405161056091906121a9565b60405180910390f35b348015610574575f80fd5b5061057d610c64565b005b34801561058a575f80fd5b50610593610c77565b6040516105a091906121a9565b60405180910390f35b3480156105b4575f80fd5b506105cf60048036038101906105ca9190612438565b610c7d565b005b3480156105dc575f80fd5b506105e5610dfb565b005b3480156105f2575f80fd5b5061060d6004803603810190610608919061234b565b610f3c565b60405161061a91906121a9565b60405180910390f35b34801561062e575f80fd5b50610637610fad565b6040516106449190612472565b60405180910390f35b348015610658575f80fd5b50610673600480360381019061066e919061234b565b610fd5565b60405161068091906121a9565b60405180910390f35b348015610694575f80fd5b5061069d610fea565b6040516106aa9190612232565b60405180910390f35b3480156106be575f80fd5b506106d960048036038101906106d4919061234b565b61107a565b6040516106e69190612332565b60405180910390f35b3480156106fa575f80fd5b506107156004803603810190610710919061234b565b611097565b6040516107229190612472565b60405180910390f35b348015610736575f80fd5b50610751600480360381019061074c919061234b565b6110c7565b005b34801561075e575f80fd5b506107676113c8565b005b348015610774575f80fd5b5061078f600480360381019061078a91906122da565b6115d3565b60405161079c9190612332565b60405180910390f35b3480156107b0575f80fd5b506107b96115f5565b6040516107c691906121a9565b60405180910390f35b3480156107da575f80fd5b506107f560048036038101906107f0919061234b565b6115fb565b60405161080291906121a9565b60405180910390f35b610813611610565b005b348015610820575f80fd5b50610829611806565b60405161083691906121a9565b60405180910390f35b34801561084a575f80fd5b506108656004803603810190610860919061248b565b61188f565b60405161087291906121a9565b60405180910390f35b348015610886575f80fd5b506108a1600480360381019061089c919061234b565b611911565b005b3480156108ae575f80fd5b506108b7611995565b6040516108c491906121a9565b60405180910390f35b3480156108d8575f80fd5b506108f360048036038101906108ee919061234b565b61199b565b60405161090091906121a9565b60405180910390f35b348015610914575f80fd5b5061092f600480360381019061092a91906123c6565b6119b0565b005b60095481565b60065481565b60606003805461094c906124f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610978906124f6565b80156109c35780601f1061099a576101008083540402835291602001916109c3565b820191905f5260205f20905b8154815290600101906020018083116109a657829003601f168201915b5050505050905090565b5f806109d7611a44565b90506109e4818585611a4b565b600191505092915050565b5f8062093a80600f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205442610a3e9190612553565b610a4891906125b3565b9050606481600d54600e5f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610a9891906125e3565b610aa291906125e3565b610aac91906125b3565b915050919050565b5f600254905090565b60085481565b5f80610acd611a44565b9050610ada858285611a5d565b610ae5858585611af0565b60019150509392505050565b6013602052805f5260405f205f915090505481565b5f82821015610b4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4190612694565b60405180910390fd5b5f62093a808484610b5b9190612553565b610b6591906125b3565b90508091505092915050565b600560149054906101000a900460ff1681565b5f6012905090565b5f60135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f80610bde60065442610b06565b90505f600c5482600854600954610bf59190612553565b610bff91906125e3565b610c0991906125b3565b9050809250505090565b600d5481565b600b5481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610c6c611be0565b610c755f611c67565b565b600a5481565b5f8111610cbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb690612722565b60405180910390fd5b80610cc933610c1f565b1015610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d019061278a565b60405180910390fd5b610d15333083611af0565b80600e5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610d6191906127a8565b9250508190555042600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef82604051610df091906121a9565b60405180910390a250565b60011515600560149054906101000a900460ff16151514610e51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4890612825565b60405180910390fd5b5f610e5b33610f3c565b90505f8111610e9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e969061288d565b60405180910390fd5b610ea93382611d2a565b5f60125f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055503373ffffffffffffffffffffffffffffffffffffffff167ff0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d82604051610f3191906121a9565b60405180910390a250565b5f610f45610b84565b600a610f5191906129da565b6101f460125f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f9c91906125e3565b610fa691906125e3565b9050919050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600f602052805f5260405f205f915090505481565b606060048054610ff9906124f6565b80601f0160208091040260200160405190810160405280929190818152602001828054611025906124f6565b80156110705780601f1061104757610100808354040283529160200191611070565b820191905f5260205f20905b81548152906001019060200180831161105357829003601f168201915b5050505050905090565b6010602052805f5260405f205f915054906101000a900460ff1681565b6011602052805f5260405f205f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611151576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114890612a6e565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036111bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b690612ad6565b60405180910390fd5b600160105f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015611296575060105f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b1561136b578060115f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160125f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461136391906127a8565b925050819055505b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da42607545760405160405180910390a350565b5f600e5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f811161144b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144290612b3e565b60405180910390fd5b6224ea00600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205461149791906127a8565b4210156114d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d090612ba6565b60405180910390fd5b5f6114e3336109ef565b90505f600e5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f600f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061157f3033838561157a91906127a8565b611af0565b3373ffffffffffffffffffffffffffffffffffffffff167f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c233683836040516115c7929190612bc4565b60405180910390a25050565b5f806115dd611a44565b90506115ea818585611af0565b600191505092915050565b60075481565b6012602052805f5260405f205f915090505481565b600560149054906101000a900460ff1661165f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165690612c35565b60405180910390fd5b5f34116116a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169890612c9d565b60405180910390fd5b5f6116aa611806565b90505f816116b6610b84565b60ff16600a6116c59190612cbb565b346116d091906125e3565b6116da91906125b3565b9050806116e630610c1f565b1015611727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171e90612d4f565b60405180910390fd5b8060135f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461177391906127a8565b92505081905550611785303383611af0565b80600b5f82825461179691906127a8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516117fa91906121a9565b60405180910390a35050565b5f600560149054906101000a900460ff16611856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161184d90612db7565b60405180910390fd5b60075442111561186a57600954905061188c565b5f611873610bd0565b90505f8160085461188491906127a8565b905080925050505b90565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611919611be0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611989575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016119809190612472565b60405180910390fd5b61199281611c67565b50565b600c5481565b600e602052805f5260405f205f915090505481565b6119b8611be0565b8160068190555062093a80816119ce91906125e3565b6006546119db91906127a8565b60078190555080600c819055506001600560146101000a81548160ff0219169083151502179055507f3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d600654600754604051611a38929190612bc4565b60405180910390a15050565b5f33905090565b611a588383836001611da9565b505050565b5f611a68848461188f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015611aea5781811015611adb578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401611ad293929190612dd5565b60405180910390fd5b611ae984848484035f611da9565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611b60575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611b579190612472565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611bd0575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611bc79190612472565b60405180910390fd5b611bdb838383611f78565b505050565b611be8611a44565b73ffffffffffffffffffffffffffffffffffffffff16611c06610fad565b73ffffffffffffffffffffffffffffffffffffffff1614611c6557611c29611a44565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611c5c9190612472565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d9a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611d919190612472565b60405180910390fd5b611da55f8383611f78565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e19575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611e109190612472565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611e89575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611e809190612472565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611f72578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611f6991906121a9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611fc8578060025f828254611fbc91906127a8565b92505081905550612096565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612051578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161204893929190612dd5565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036120dd578060025f8282540392505081905550612127565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161218491906121a9565b60405180910390a3505050565b5f819050919050565b6121a381612191565b82525050565b5f6020820190506121bc5f83018461219a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f612204826121c2565b61220e81856121cc565b935061221e8185602086016121dc565b612227816121ea565b840191505092915050565b5f6020820190508181035f83015261224a81846121fa565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61227f82612256565b9050919050565b61228f81612275565b8114612299575f80fd5b50565b5f813590506122aa81612286565b92915050565b6122b981612191565b81146122c3575f80fd5b50565b5f813590506122d4816122b0565b92915050565b5f80604083850312156122f0576122ef612252565b5b5f6122fd8582860161229c565b925050602061230e858286016122c6565b9150509250929050565b5f8115159050919050565b61232c81612318565b82525050565b5f6020820190506123455f830184612323565b92915050565b5f602082840312156123605761235f612252565b5b5f61236d8482850161229c565b91505092915050565b5f805f6060848603121561238d5761238c612252565b5b5f61239a8682870161229c565b93505060206123ab8682870161229c565b92505060406123bc868287016122c6565b9150509250925092565b5f80604083850312156123dc576123db612252565b5b5f6123e9858286016122c6565b92505060206123fa858286016122c6565b9150509250929050565b5f60ff82169050919050565b61241981612404565b82525050565b5f6020820190506124325f830184612410565b92915050565b5f6020828403121561244d5761244c612252565b5b5f61245a848285016122c6565b91505092915050565b61246c81612275565b82525050565b5f6020820190506124855f830184612463565b92915050565b5f80604083850312156124a1576124a0612252565b5b5f6124ae8582860161229c565b92505060206124bf8582860161229c565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061250d57607f821691505b6020821081036125205761251f6124c9565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61255d82612191565b915061256883612191565b92508282039050818111156125805761257f612526565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6125bd82612191565b91506125c883612191565b9250826125d8576125d7612586565b5b828204905092915050565b5f6125ed82612191565b91506125f883612191565b925082820261260681612191565b9150828204841483151761261d5761261c612526565b5b5092915050565b7f456e642074696d65206d7573742062652061667465722073746172742074696d5f8201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b5f61267e6021836121cc565b915061268982612624565b604082019050919050565b5f6020820190508181035f8301526126ab81612672565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f8201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61270c6021836121cc565b9150612717826126b2565b604082019050919050565b5f6020820190508181035f83015261273981612700565b9050919050565b7f496e73756666696369656e742062616c616e63652e00000000000000000000005f82015250565b5f6127746015836121cc565b915061277f82612740565b602082019050919050565b5f6020820190508181035f8301526127a181612768565b9050919050565b5f6127b282612191565b91506127bd83612191565b92508282019050808211156127d5576127d4612526565b5b92915050565b7f50726573616c65206e6f742073746172746564207965740000000000000000005f82015250565b5f61280f6017836121cc565b915061281a826127db565b602082019050919050565b5f6020820190508181035f83015261283c81612803565b9050919050565b7f4e6f207265776172647320617661696c61626c650000000000000000000000005f82015250565b5f6128776014836121cc565b915061288282612843565b602082019050919050565b5f6020820190508181035f8301526128a48161286b565b9050919050565b5f8160011c9050919050565b5f808291508390505b6001851115612900578086048111156128dc576128db612526565b5b60018516156128eb5780820291505b80810290506128f9856128ab565b94506128c0565b94509492505050565b5f8261291857600190506129d3565b81612925575f90506129d3565b816001811461293b576002811461294557612974565b60019150506129d3565b60ff84111561295757612956612526565b5b8360020a91508482111561296e5761296d612526565b5b506129d3565b5060208310610133831016604e8410600b84101617156129a95782820a9050838111156129a4576129a3612526565b5b6129d3565b6129b684848460016128b7565b925090508184048111156129cd576129cc612526565b5b81810290505b9392505050565b5f6129e482612191565b91506129ef83612404565b9250612a1c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612909565b905092915050565b7f416c72656164792077686974656c6973746564000000000000000000000000005f82015250565b5f612a586013836121cc565b9150612a6382612a24565b602082019050919050565b5f6020820190508181035f830152612a8581612a4c565b9050919050565b7f43616e6e6f7420726566657220796f757273656c6600000000000000000000005f82015250565b5f612ac06015836121cc565b9150612acb82612a8c565b602082019050919050565b5f6020820190508181035f830152612aed81612ab4565b9050919050565b7f4e6f20746f6b656e73207374616b65642e0000000000000000000000000000005f82015250565b5f612b286011836121cc565b9150612b3382612af4565b602082019050919050565b5f6020820190508181035f830152612b5581612b1c565b9050919050565b7f556e7374616b65206f6e6c792061667465722034207765656b732e00000000005f82015250565b5f612b90601b836121cc565b9150612b9b82612b5c565b602082019050919050565b5f6020820190508181035f830152612bbd81612b84565b9050919050565b5f604082019050612bd75f83018561219a565b612be4602083018461219a565b9392505050565b7f53616c65206e6f74206163746976652e000000000000000000000000000000005f82015250565b5f612c1f6010836121cc565b9150612c2a82612beb565b602082019050919050565b5f6020820190508181035f830152612c4c81612c13565b9050919050565b7f4d7573742073656e642045544820746f2062757920746f6b656e732e000000005f82015250565b5f612c87601c836121cc565b9150612c9282612c53565b602082019050919050565b5f6020820190508181035f830152612cb481612c7b565b9050919050565b5f612cc582612191565b9150612cd083612191565b9250612cfd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484612909565b905092915050565b7f4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e000000005f82015250565b5f612d39601c836121cc565b9150612d4482612d05565b602082019050919050565b5f6020820190508181035f830152612d6681612d2d565b9050919050565b7f5072652d73616c65206e6f7420737461727465642079657400000000000000005f82015250565b5f612da16018836121cc565b9150612dac82612d6d565b602082019050919050565b5f6020820190508181035f830152612dce81612d95565b9050919050565b5f606082019050612de85f830186612463565b612df5602083018561219a565b612e02604083018461219a565b94935050505056fea26469706673582212205b8261fbf9076c95717db49b9f217f790da4799398c44e3f5ff665f300deb38064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x22F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xAA JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x83F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0xF8102E68 EQ PUSH2 0x8A3 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x8CD JUMPI DUP1 PUSH4 0xF9A81AF7 EQ PUSH2 0x909 JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x769 JUMPI DUP1 PUSH4 0xCCE29EA7 EQ PUSH2 0x7A5 JUMPI DUP1 PUSH4 0xCEC297A0 EQ PUSH2 0x7CF JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x80B JUMPI DUP1 PUSH4 0xD348B409 EQ PUSH2 0x815 JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xF1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x6B3 JUMPI DUP1 PUSH4 0x9CA423B3 EQ PUSH2 0x6EF JUMPI DUP1 PUSH4 0xA09C4CF4 EQ PUSH2 0x72B JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x753 JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x5A9 JUMPI DUP1 PUSH4 0x7C613B2F EQ PUSH2 0x5D1 JUMPI DUP1 PUSH4 0x8265324D EQ PUSH2 0x5E7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x623 JUMPI DUP1 PUSH4 0x8F0794FE EQ PUSH2 0x64D JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x2C663960 GT PUSH2 0x1BB JUMPI DUP1 PUSH4 0x4F3FC2DF GT PUSH2 0x17F JUMPI DUP1 PUSH4 0x4F3FC2DF EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0x7165D19B EQ PUSH2 0x57F JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x2C663960 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x30F72CD4 EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x45B JUMPI DUP1 PUSH4 0x329A27E7 EQ PUSH2 0x485 JUMPI DUP1 PUSH4 0x4405DF4A EQ PUSH2 0x4AF JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0xD505541 GT PUSH2 0x202 JUMPI DUP1 PUSH4 0xD505541 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x329 JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x3B9 JUMPI PUSH2 0x22F JUMP JUMPDEST DUP1 PUSH4 0x3E293A3 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x6D65AF3 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B1 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH2 0x931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x268 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x271 PUSH2 0x937 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29B PUSH2 0x93D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x9CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x9EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x33D PUSH2 0xAB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x367 PUSH2 0xABD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x374 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x388 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH2 0xAC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B0 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DA SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EC SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x400 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x445 PUSH2 0xB71 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46F PUSH2 0xB84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47C SWAP2 SWAP1 PUSH2 0x241F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x490 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x499 PUSH2 0xB8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4ED PUSH2 0xC13 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FA SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x517 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x553 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54E SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xC1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x574 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x57D PUSH2 0xC64 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x593 PUSH2 0xC77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A0 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5CA SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5E5 PUSH2 0xDFB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x60D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x608 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61A SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x637 PUSH2 0xFAD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x644 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x658 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x673 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x66E SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x680 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x694 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x69D PUSH2 0xFEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AA SWAP2 SWAP1 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D4 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x107A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E6 SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x715 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x1097 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x722 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x736 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x751 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x10C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x75E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x767 PUSH2 0x13C8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x774 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x78F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x78A SWAP2 SWAP1 PUSH2 0x22DA JUMP JUMPDEST PUSH2 0x15D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79C SWAP2 SWAP1 PUSH2 0x2332 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7B9 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7C6 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7F0 SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x15FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x802 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x813 PUSH2 0x1610 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x820 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x829 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x836 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x84A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x865 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x860 SWAP2 SWAP1 PUSH2 0x248B JUMP JUMPDEST PUSH2 0x188F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x872 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x886 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x89C SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B7 PUSH2 0x1995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8EE SWAP2 SWAP1 PUSH2 0x234B JUMP JUMPDEST PUSH2 0x199B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x900 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x914 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x92F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x23C6 JUMP JUMPDEST PUSH2 0x19B0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x94C SWAP1 PUSH2 0x24F6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x978 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x99A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x9D7 PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP PUSH2 0x9E4 DUP2 DUP6 DUP6 PUSH2 0x1A4B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH3 0x93A80 PUSH1 0xF PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD TIMESTAMP PUSH2 0xA3E SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x64 DUP2 PUSH1 0xD SLOAD PUSH1 0xE PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xA98 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0xAAC SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xACD PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP PUSH2 0xADA DUP6 DUP3 DUP6 PUSH2 0x1A5D JUMP JUMPDEST PUSH2 0xAE5 DUP6 DUP6 DUP6 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP3 DUP3 LT ISZERO PUSH2 0xB4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB41 SWAP1 PUSH2 0x2694 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH3 0x93A80 DUP5 DUP5 PUSH2 0xB5B SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0xB65 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xBDE PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xB06 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC SLOAD DUP3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH2 0xBFF SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC6C PUSH2 0x1BE0 JUMP JUMPDEST PUSH2 0xC75 PUSH0 PUSH2 0x1C67 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB6 SWAP1 PUSH2 0x2722 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xCC9 CALLER PUSH2 0xC1F JUMP JUMPDEST LT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD01 SWAP1 PUSH2 0x278A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD15 CALLER ADDRESS DUP4 PUSH2 0x1AF0 JUMP JUMPDEST DUP1 PUSH1 0xE PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD61 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF DUP3 PUSH1 0x40 MLOAD PUSH2 0xDF0 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0xE51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE48 SWAP1 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE5B CALLER PUSH2 0xF3C JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE96 SWAP1 PUSH2 0x288D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEA9 CALLER DUP3 PUSH2 0x1D2A JUMP JUMPDEST PUSH0 PUSH1 0x12 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF0BC0A70FE19EF2D8DC1E1948B338A1184184FB1EA3AC836F24065828816D68D DUP3 PUSH1 0x40 MLOAD PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH2 0xF45 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0xA PUSH2 0xF51 SWAP2 SWAP1 PUSH2 0x29DA JUMP JUMPDEST PUSH2 0x1F4 PUSH1 0x12 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF9C SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xFF9 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1025 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1070 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1047 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1070 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1053 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1151 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1148 SWAP1 PUSH2 0x2A6E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B6 SWAP1 PUSH2 0x2AD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x10 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1296 JUMPI POP PUSH1 0x10 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x136B JUMPI DUP1 PUSH1 0x11 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x12 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1363 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4BC18AA4B0095C9A3B5CDF42D2322D5A145591B04045988A995A5DA426075457 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH1 0xE PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x144B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1442 SWAP1 PUSH2 0x2B3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x24EA00 PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x1497 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D0 SWAP1 PUSH2 0x2BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x14E3 CALLER PUSH2 0x9EF JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xE PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0xF PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x157F ADDRESS CALLER DUP4 DUP6 PUSH2 0x157A SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH2 0x1AF0 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x15C7 SWAP3 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x15DD PUSH2 0x1A44 JUMP JUMPDEST SWAP1 POP PUSH2 0x15EA DUP2 DUP6 DUP6 PUSH2 0x1AF0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x165F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1656 SWAP1 PUSH2 0x2C35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1698 SWAP1 PUSH2 0x2C9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x16AA PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0x16B6 PUSH2 0xB84 JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH2 0x16C5 SWAP2 SWAP1 PUSH2 0x2CBB JUMP JUMPDEST CALLVALUE PUSH2 0x16D0 SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH2 0x16DA SWAP2 SWAP1 PUSH2 0x25B3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x16E6 ADDRESS PUSH2 0xC1F JUMP JUMPDEST LT ISZERO PUSH2 0x1727 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171E SWAP1 PUSH2 0x2D4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x13 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1773 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1785 ADDRESS CALLER DUP4 PUSH2 0x1AF0 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1796 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184D SWAP1 PUSH2 0x2DB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0x186A JUMPI PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x188C JUMP JUMPDEST PUSH0 PUSH2 0x1873 PUSH2 0xBD0 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x8 SLOAD PUSH2 0x1884 SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1919 PUSH2 0x1BE0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1989 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1980 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1992 DUP2 PUSH2 0x1C67 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19B8 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 DUP2 PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x25E3 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x19DB SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x3844853BE672B18D859394AA37E05615B95B78E66B4DC37DCA98D1DB1B05EA7D PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1A38 SWAP3 SWAP2 SWAP1 PUSH2 0x2BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A58 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1DA9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A68 DUP5 DUP5 PUSH2 0x188F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x1AEA JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1ADB JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD2 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1AE9 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1DA9 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B60 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B57 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1BD0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BC7 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BDB DUP4 DUP4 DUP4 PUSH2 0x1F78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1BE8 PUSH2 0x1A44 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C06 PUSH2 0xFAD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C65 JUMPI PUSH2 0x1C29 PUSH2 0x1A44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5C SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D9A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D91 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DA5 PUSH0 DUP4 DUP4 PUSH2 0x1F78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E19 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E10 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E89 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E80 SWAP2 SWAP1 PUSH2 0x2472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1F72 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F69 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1FC8 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1FBC SWAP2 SWAP1 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2096 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2051 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2048 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x20DD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x2127 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2184 SWAP2 SWAP1 PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21A3 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21BC PUSH0 DUP4 ADD DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2204 DUP3 PUSH2 0x21C2 JUMP JUMPDEST PUSH2 0x220E DUP2 DUP6 PUSH2 0x21CC JUMP JUMPDEST SWAP4 POP PUSH2 0x221E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21DC JUMP JUMPDEST PUSH2 0x2227 DUP2 PUSH2 0x21EA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x224A DUP2 DUP5 PUSH2 0x21FA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x227F DUP3 PUSH2 0x2256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x228F DUP2 PUSH2 0x2275 JUMP JUMPDEST DUP2 EQ PUSH2 0x2299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22AA DUP2 PUSH2 0x2286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22B9 DUP2 PUSH2 0x2191 JUMP JUMPDEST DUP2 EQ PUSH2 0x22C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22D4 DUP2 PUSH2 0x22B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22F0 JUMPI PUSH2 0x22EF PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22FD DUP6 DUP3 DUP7 ADD PUSH2 0x229C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x230E DUP6 DUP3 DUP7 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232C DUP2 PUSH2 0x2318 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2345 PUSH0 DUP4 ADD DUP5 PUSH2 0x2323 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2360 JUMPI PUSH2 0x235F PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x236D DUP5 DUP3 DUP6 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x238D JUMPI PUSH2 0x238C PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239A DUP7 DUP3 DUP8 ADD PUSH2 0x229C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x23AB DUP7 DUP3 DUP8 ADD PUSH2 0x229C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x23BC DUP7 DUP3 DUP8 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23DC JUMPI PUSH2 0x23DB PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23E9 DUP6 DUP3 DUP7 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23FA DUP6 DUP3 DUP7 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2419 DUP2 PUSH2 0x2404 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2432 PUSH0 DUP4 ADD DUP5 PUSH2 0x2410 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x244D JUMPI PUSH2 0x244C PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x245A DUP5 DUP3 DUP6 ADD PUSH2 0x22C6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x246C DUP2 PUSH2 0x2275 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2485 PUSH0 DUP4 ADD DUP5 PUSH2 0x2463 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24A1 JUMPI PUSH2 0x24A0 PUSH2 0x2252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24AE DUP6 DUP3 DUP7 ADD PUSH2 0x229C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x24BF DUP6 DUP3 DUP7 ADD PUSH2 0x229C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x250D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2520 JUMPI PUSH2 0x251F PUSH2 0x24C9 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x255D DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x2568 DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2580 JUMPI PUSH2 0x257F PUSH2 0x2526 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x25BD DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x25C8 DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x25D8 JUMPI PUSH2 0x25D7 PUSH2 0x2586 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25ED DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x25F8 DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2606 DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x261D JUMPI PUSH2 0x261C PUSH2 0x2526 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH0 DUP3 ADD MSTORE PUSH32 0x6500000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x267E PUSH1 0x21 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2689 DUP3 PUSH2 0x2624 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26AB DUP2 PUSH2 0x2672 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x270C PUSH1 0x21 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2717 DUP3 PUSH2 0x26B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2739 DUP2 PUSH2 0x2700 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E63652E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2774 PUSH1 0x15 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x277F DUP3 PUSH2 0x2740 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27A1 DUP2 PUSH2 0x2768 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27B2 DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x27BD DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x27D5 JUMPI PUSH2 0x27D4 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C65206E6F74207374617274656420796574000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x280F PUSH1 0x17 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x281A DUP3 PUSH2 0x27DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x283C DUP2 PUSH2 0x2803 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2877 PUSH1 0x14 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2882 DUP3 PUSH2 0x2843 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28A4 DUP2 PUSH2 0x286B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x2900 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x28DC JUMPI PUSH2 0x28DB PUSH2 0x2526 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x28EB JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x28F9 DUP6 PUSH2 0x28AB JUMP JUMPDEST SWAP5 POP PUSH2 0x28C0 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2918 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x29D3 JUMP JUMPDEST DUP2 PUSH2 0x2925 JUMPI PUSH0 SWAP1 POP PUSH2 0x29D3 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x293B JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x2945 JUMPI PUSH2 0x2974 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x29D3 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x2957 JUMPI PUSH2 0x2956 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x296E JUMPI PUSH2 0x296D PUSH2 0x2526 JUMP JUMPDEST JUMPDEST POP PUSH2 0x29D3 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x29A9 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x29A4 JUMPI PUSH2 0x29A3 PUSH2 0x2526 JUMP JUMPDEST JUMPDEST PUSH2 0x29D3 JUMP JUMPDEST PUSH2 0x29B6 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x28B7 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x29CD JUMPI PUSH2 0x29CC PUSH2 0x2526 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29E4 DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x29EF DUP4 PUSH2 0x2404 JUMP JUMPDEST SWAP3 POP PUSH2 0x2A1C PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C72656164792077686974656C697374656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A58 PUSH1 0x13 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2A63 DUP3 PUSH2 0x2A24 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A85 DUP2 PUSH2 0x2A4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420726566657220796F757273656C660000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2AC0 PUSH1 0x15 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2ACB DUP3 PUSH2 0x2A8C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AED DUP2 PUSH2 0x2AB4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73207374616B65642E000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B28 PUSH1 0x11 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2B33 DUP3 PUSH2 0x2AF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B55 DUP2 PUSH2 0x2B1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E7374616B65206F6E6C792061667465722034207765656B732E0000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B90 PUSH1 0x1B DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2B9B DUP3 PUSH2 0x2B5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BBD DUP2 PUSH2 0x2B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BD7 PUSH0 DUP4 ADD DUP6 PUSH2 0x219A JUMP JUMPDEST PUSH2 0x2BE4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x53616C65206E6F74206163746976652E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C1F PUSH1 0x10 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2C2A DUP3 PUSH2 0x2BEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C4C DUP2 PUSH2 0x2C13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E732E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C87 PUSH1 0x1C DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2C92 DUP3 PUSH2 0x2C53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CB4 DUP2 PUSH2 0x2C7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CC5 DUP3 PUSH2 0x2191 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CD0 DUP4 PUSH2 0x2191 JUMP JUMPDEST SWAP3 POP PUSH2 0x2CFD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x2909 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D39 PUSH1 0x1C DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2D44 DUP3 PUSH2 0x2D05 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D66 DUP2 PUSH2 0x2D2D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072652D73616C65206E6F742073746172746564207965740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DA1 PUSH1 0x18 DUP4 PUSH2 0x21CC JUMP JUMPDEST SWAP2 POP PUSH2 0x2DAC DUP3 PUSH2 0x2D6D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DCE DUP2 PUSH2 0x2D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2DE8 PUSH0 DUP4 ADD DUP7 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x2DF5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x219A JUMP JUMPDEST PUSH2 0x2E02 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x219A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST DUP3 PUSH2 0xFBF9 SMOD PUSH13 0x95717DB49B9F217F790DA47993 SWAP9 0xC4 0x4E EXTCODEHASH PUSH0 0xF6 PUSH6 0xF300DEB38064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "174:6408:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:31;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;255;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6328:247:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:27:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;820:43:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2572:304;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;221:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5270:97:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3874:298;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;514:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;441:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;401:33:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5377:404;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2886:416;;;;;;;;;;;;;:::i;:::-;;2408:156;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;607:51:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;665:41:6;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;713:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1915:481;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5789:531;;;;;;;;;;;;;:::i;:::-;;3315:178:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;293:29:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;764:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4641:625;;;:::i;:::-;;4188:376;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;473:34:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;553:47;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3427:438;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;363:31;;;;:::o;255:::-;;;;:::o;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;6328:247:6:-;6395:7;6415:19;6482:7;6456:16;:22;6473:4;6456:22;;;;;;;;;;;;;;;;6438:15;:40;;;;:::i;:::-;6437:52;;;;:::i;:::-;6415:74;;6564:3;6549:11;6529:17;;6508:12;:18;6521:4;6508:18;;;;;;;;;;;;;;;;:38;;;;:::i;:::-;:52;;;;:::i;:::-;6507:60;;;;:::i;:::-;6500:67;;;6328:247;;;:::o;2849:97:2:-;2901:7;2927:12;;2920:19;;2849:97;:::o;329:27:6:-;;;;:::o;4776:244:2:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;820:43:6:-;;;;;;;;;;;;;;;;;:::o;2572:304::-;2660:7;2699:9;2688:7;:20;;2680:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;2757:20;2804:6;2791:9;2781:7;:19;;;;:::i;:::-;2780:30;;;;:::i;:::-;2757:53;;2856:12;2849:19;;;2572:304;;;;:::o;221:27::-;;;;;;;;;;;;;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;5270:97:6:-;5319:7;5341:8;:20;5350:10;5341:20;;;;;;;;;;;;;;;;5334:27;;5270:97;:::o;3874:298::-;3929:7;3948:20;3970:56;3992:16;;4010:15;3970:21;:56::i;:::-;3948:78;;4037:21;4114:19;;4098:12;4082;;4063:16;;:31;;;;:::i;:::-;4062:48;;;;:::i;:::-;4061:72;;;;:::i;:::-;4037:96;;4151:13;4144:20;;;;3874:298;:::o;514:32::-;;;;:::o;441:25::-;;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;401:33:6:-;;;;:::o;5377:404::-;5451:1;5442:6;:10;5434:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;5534:6;5509:21;5519:10;5509:9;:21::i;:::-;:31;;5501:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;5579:44;5589:10;5609:4;5616:6;5579:9;:44::i;:::-;5662:6;5634:12;:24;5647:10;5634:24;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;5710:15;5679:16;:28;5696:10;5679:28;;;;;;;;;;;;;;;:46;;;;5754:10;5741:32;;;5766:6;5741:32;;;;;;:::i;:::-;;;;;;;;5377:404;:::o;2886:416::-;2965:4;2948:21;;:15;;;;;;;;;;;:21;;;2940:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;3011:20;3034:35;3058:10;3034:23;:35::i;:::-;3011:58;;3107:1;3092:12;:16;3084:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;3148:31;3154:10;3166:12;3148:5;:31::i;:::-;3223:1;3194:14;:26;3209:10;3194:26;;;;;;;;;;;;;;;:30;;;;3265:10;3244:46;;;3277:12;3244:46;;;;;;:::i;:::-;;;;;;;;2925:377;2886:416::o;2408:156::-;2480:7;2546:10;:8;:10::i;:::-;2540:2;:16;;;;:::i;:::-;2534:3;2507:14;:24;2522:8;2507:24;;;;;;;;;;;;;;;;:30;;;;:::i;:::-;:49;;;;:::i;:::-;2500:56;;2408:156;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;607:51:6:-;;;;;;;;;;;;;;;;;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;665:41:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;713:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;1915:481::-;1990:9;:21;2000:10;1990:21;;;;;;;;;;;;;;;;;;;;;;;;;1989:22;1981:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2068:8;2054:22;;:10;:22;;;2046:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2147:4;2123:9;:21;2133:10;2123:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2196:1;2176:22;;:8;:22;;;;:45;;;;;2202:9;:19;2212:8;2202:19;;;;;;;;;;;;;;;;;;;;;;;;;2176:45;2172:154;;;2262:8;2238:9;:21;2248:10;2238:21;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;2313:1;2285:14;:24;2300:8;2285:24;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;2172:154;2379:8;2351:37;;2367:10;2351:37;;;;;;;;;;;;1915:481;:::o;5789:531::-;5834:14;5851:12;:24;5864:10;5851:24;;;;;;;;;;;;;;;;5834:41;;5903:1;5894:6;:10;5886:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;5995:7;5964:16;:28;5981:10;5964:28;;;;;;;;;;;;;;;;:38;;;;:::i;:::-;5945:15;:57;;5937:97;;;;;;;;;;;;:::i;:::-;;;;;;;;;6055:14;6072:34;6095:10;6072:22;:34::i;:::-;6055:51;;6144:1;6117:12;:24;6130:10;6117:24;;;;;;;;;;;;;;;:28;;;;6187:1;6156:16;:28;6173:10;6156:28;;;;;;;;;;;;;;;:32;;;;6201:53;6219:4;6226:10;6247:6;6238;:15;;;;:::i;:::-;6201:9;:53::i;:::-;6285:10;6270:42;;;6297:6;6305;6270:42;;;;;;;:::i;:::-;;;;;;;;5823:497;;5789:531::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;293:29:6:-;;;;:::o;764:49::-;;;;;;;;;;;;;;;;;:::o;4641:625::-;4694:15;;;;;;;;;;;4686:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;4757:1;4745:9;:13;4737:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;4800:20;4823:16;:14;:16::i;:::-;4800:39;;4884:19;4948:12;4933:10;:8;:10::i;:::-;4925:19;;4919:2;:25;;;;:::i;:::-;4907:9;:37;;;;:::i;:::-;4906:54;;;;:::i;:::-;4884:76;;5003:11;4975:24;4993:4;4975:9;:24::i;:::-;:39;;4967:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5078:11;5054:8;:20;5063:10;5054:20;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;5096:49;5114:4;5121:10;5133:11;5096:9;:49::i;:::-;5166:11;5152:10;;:25;;;;;;;:::i;:::-;;;;;;;;5215:10;5191:48;;5208:4;5191:48;;;5227:11;5191:48;;;;;;:::i;:::-;;;;;;;;4679:587;;4641:625::o;4188:376::-;4235:7;4263:15;;;;;;;;;;;4255:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;4340:14;;4322:15;:32;4317:89;;;4378:16;;4371:23;;;;4317:89;4418:21;4442:24;:22;:24::i;:::-;4418:48;;4477:20;4513:13;4500:12;;:26;;;;:::i;:::-;4477:49;;4544:12;4537:19;;;;4188:376;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;473:34:6:-;;;;:::o;553:47::-;;;;;;;;;;;;;;;;;:::o;3427:438::-;1531:13:0;:11;:13::i;:::-;3630:10:6::1;3611:16;:29;;;;3705:7;3688:14;:24;;;;:::i;:::-;3668:16;;:45;;;;:::i;:::-;3651:14;:62;;;;3746:14;3724:19;:36;;;;3789:4;3771:15;;:22;;;;;;;;;;;;;;;;;;3809:48;3824:16;;3842:14;;3809:48;;;;;;;:::i;:::-;;;;;;;;3427:438:::0;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:77:7:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:99::-;494:6;528:5;522:12;512:22;;442:99;;;:::o;547:169::-;631:11;665:6;660:3;653:19;705:4;700:3;696:14;681:29;;547:169;;;;:::o;722:139::-;811:6;806:3;801;795:23;852:1;843:6;838:3;834:16;827:27;722:139;;;:::o;867:102::-;908:6;959:2;955:7;950:2;943:5;939:14;935:28;925:38;;867:102;;;:::o;975:377::-;1063:3;1091:39;1124:5;1091:39;:::i;:::-;1146:71;1210:6;1205:3;1146:71;:::i;:::-;1139:78;;1226:65;1284:6;1279:3;1272:4;1265:5;1261:16;1226:65;:::i;:::-;1316:29;1338:6;1316:29;:::i;:::-;1311:3;1307:39;1300:46;;1067:285;975:377;;;;:::o;1358:313::-;1471:4;1509:2;1498:9;1494:18;1486:26;;1558:9;1552:4;1548:20;1544:1;1533:9;1529:17;1522:47;1586:78;1659:4;1650:6;1586:78;:::i;:::-;1578:86;;1358:313;;;;:::o;1758:117::-;1867:1;1864;1857:12;2004:126;2041:7;2081:42;2074:5;2070:54;2059:65;;2004:126;;;:::o;2136:96::-;2173:7;2202:24;2220:5;2202:24;:::i;:::-;2191:35;;2136:96;;;:::o;2238:122::-;2311:24;2329:5;2311:24;:::i;:::-;2304:5;2301:35;2291:63;;2350:1;2347;2340:12;2291:63;2238:122;:::o;2366:139::-;2412:5;2450:6;2437:20;2428:29;;2466:33;2493:5;2466:33;:::i;:::-;2366:139;;;;:::o;2511:122::-;2584:24;2602:5;2584:24;:::i;:::-;2577:5;2574:35;2564:63;;2623:1;2620;2613:12;2564:63;2511:122;:::o;2639:139::-;2685:5;2723:6;2710:20;2701:29;;2739:33;2766:5;2739:33;:::i;:::-;2639:139;;;;:::o;2784:474::-;2852:6;2860;2909:2;2897:9;2888:7;2884:23;2880:32;2877:119;;;2915:79;;:::i;:::-;2877:119;3035:1;3060:53;3105:7;3096:6;3085:9;3081:22;3060:53;:::i;:::-;3050:63;;3006:117;3162:2;3188:53;3233:7;3224:6;3213:9;3209:22;3188:53;:::i;:::-;3178:63;;3133:118;2784:474;;;;;:::o;3264:90::-;3298:7;3341:5;3334:13;3327:21;3316:32;;3264:90;;;:::o;3360:109::-;3441:21;3456:5;3441:21;:::i;:::-;3436:3;3429:34;3360:109;;:::o;3475:210::-;3562:4;3600:2;3589:9;3585:18;3577:26;;3613:65;3675:1;3664:9;3660:17;3651:6;3613:65;:::i;:::-;3475:210;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:619::-;4103:6;4111;4119;4168:2;4156:9;4147:7;4143:23;4139:32;4136:119;;;4174:79;;:::i;:::-;4136:119;4294:1;4319:53;4364:7;4355:6;4344:9;4340:22;4319:53;:::i;:::-;4309:63;;4265:117;4421:2;4447:53;4492:7;4483:6;4472:9;4468:22;4447:53;:::i;:::-;4437:63;;4392:118;4549:2;4575:53;4620:7;4611:6;4600:9;4596:22;4575:53;:::i;:::-;4565:63;;4520:118;4026:619;;;;;:::o;4651:474::-;4719:6;4727;4776:2;4764:9;4755:7;4751:23;4747:32;4744:119;;;4782:79;;:::i;:::-;4744:119;4902:1;4927:53;4972:7;4963:6;4952:9;4948:22;4927:53;:::i;:::-;4917:63;;4873:117;5029:2;5055:53;5100:7;5091:6;5080:9;5076:22;5055:53;:::i;:::-;5045:63;;5000:118;4651:474;;;;;:::o;5131:86::-;5166:7;5206:4;5199:5;5195:16;5184:27;;5131:86;;;:::o;5223:112::-;5306:22;5322:5;5306:22;:::i;:::-;5301:3;5294:35;5223:112;;:::o;5341:214::-;5430:4;5468:2;5457:9;5453:18;5445:26;;5481:67;5545:1;5534:9;5530:17;5521:6;5481:67;:::i;:::-;5341:214;;;;:::o;5561:329::-;5620:6;5669:2;5657:9;5648:7;5644:23;5640:32;5637:119;;;5675:79;;:::i;:::-;5637:119;5795:1;5820:53;5865:7;5856:6;5845:9;5841:22;5820:53;:::i;:::-;5810:63;;5766:117;5561:329;;;;:::o;5896:118::-;5983:24;6001:5;5983:24;:::i;:::-;5978:3;5971:37;5896:118;;:::o;6020:222::-;6113:4;6151:2;6140:9;6136:18;6128:26;;6164:71;6232:1;6221:9;6217:17;6208:6;6164:71;:::i;:::-;6020:222;;;;:::o;6248:474::-;6316:6;6324;6373:2;6361:9;6352:7;6348:23;6344:32;6341:119;;;6379:79;;:::i;:::-;6341:119;6499:1;6524:53;6569:7;6560:6;6549:9;6545:22;6524:53;:::i;:::-;6514:63;;6470:117;6626:2;6652:53;6697:7;6688:6;6677:9;6673:22;6652:53;:::i;:::-;6642:63;;6597:118;6248:474;;;;;:::o;6728:180::-;6776:77;6773:1;6766:88;6873:4;6870:1;6863:15;6897:4;6894:1;6887:15;6914:320;6958:6;6995:1;6989:4;6985:12;6975:22;;7042:1;7036:4;7032:12;7063:18;7053:81;;7119:4;7111:6;7107:17;7097:27;;7053:81;7181:2;7173:6;7170:14;7150:18;7147:38;7144:84;;7200:18;;:::i;:::-;7144:84;6965:269;6914:320;;;:::o;7240:180::-;7288:77;7285:1;7278:88;7385:4;7382:1;7375:15;7409:4;7406:1;7399:15;7426:194;7466:4;7486:20;7504:1;7486:20;:::i;:::-;7481:25;;7520:20;7538:1;7520:20;:::i;:::-;7515:25;;7564:1;7561;7557:9;7549:17;;7588:1;7582:4;7579:11;7576:37;;;7593:18;;:::i;:::-;7576:37;7426:194;;;;:::o;7626:180::-;7674:77;7671:1;7664:88;7771:4;7768:1;7761:15;7795:4;7792:1;7785:15;7812:185;7852:1;7869:20;7887:1;7869:20;:::i;:::-;7864:25;;7903:20;7921:1;7903:20;:::i;:::-;7898:25;;7942:1;7932:35;;7947:18;;:::i;:::-;7932:35;7989:1;7986;7982:9;7977:14;;7812:185;;;;:::o;8003:410::-;8043:7;8066:20;8084:1;8066:20;:::i;:::-;8061:25;;8100:20;8118:1;8100:20;:::i;:::-;8095:25;;8155:1;8152;8148:9;8177:30;8195:11;8177:30;:::i;:::-;8166:41;;8356:1;8347:7;8343:15;8340:1;8337:22;8317:1;8310:9;8290:83;8267:139;;8386:18;;:::i;:::-;8267:139;8051:362;8003:410;;;;:::o;8419:220::-;8559:34;8555:1;8547:6;8543:14;8536:58;8628:3;8623:2;8615:6;8611:15;8604:28;8419:220;:::o;8645:366::-;8787:3;8808:67;8872:2;8867:3;8808:67;:::i;:::-;8801:74;;8884:93;8973:3;8884:93;:::i;:::-;9002:2;8997:3;8993:12;8986:19;;8645:366;;;:::o;9017:419::-;9183:4;9221:2;9210:9;9206:18;9198:26;;9270:9;9264:4;9260:20;9256:1;9245:9;9241:17;9234:47;9298:131;9424:4;9298:131;:::i;:::-;9290:139;;9017:419;;;:::o;9442:220::-;9582:34;9578:1;9570:6;9566:14;9559:58;9651:3;9646:2;9638:6;9634:15;9627:28;9442:220;:::o;9668:366::-;9810:3;9831:67;9895:2;9890:3;9831:67;:::i;:::-;9824:74;;9907:93;9996:3;9907:93;:::i;:::-;10025:2;10020:3;10016:12;10009:19;;9668:366;;;:::o;10040:419::-;10206:4;10244:2;10233:9;10229:18;10221:26;;10293:9;10287:4;10283:20;10279:1;10268:9;10264:17;10257:47;10321:131;10447:4;10321:131;:::i;:::-;10313:139;;10040:419;;;:::o;10465:171::-;10605:23;10601:1;10593:6;10589:14;10582:47;10465:171;:::o;10642:366::-;10784:3;10805:67;10869:2;10864:3;10805:67;:::i;:::-;10798:74;;10881:93;10970:3;10881:93;:::i;:::-;10999:2;10994:3;10990:12;10983:19;;10642:366;;;:::o;11014:419::-;11180:4;11218:2;11207:9;11203:18;11195:26;;11267:9;11261:4;11257:20;11253:1;11242:9;11238:17;11231:47;11295:131;11421:4;11295:131;:::i;:::-;11287:139;;11014:419;;;:::o;11439:191::-;11479:3;11498:20;11516:1;11498:20;:::i;:::-;11493:25;;11532:20;11550:1;11532:20;:::i;:::-;11527:25;;11575:1;11572;11568:9;11561:16;;11596:3;11593:1;11590:10;11587:36;;;11603:18;;:::i;:::-;11587:36;11439:191;;;;:::o;11636:173::-;11776:25;11772:1;11764:6;11760:14;11753:49;11636:173;:::o;11815:366::-;11957:3;11978:67;12042:2;12037:3;11978:67;:::i;:::-;11971:74;;12054:93;12143:3;12054:93;:::i;:::-;12172:2;12167:3;12163:12;12156:19;;11815:366;;;:::o;12187:419::-;12353:4;12391:2;12380:9;12376:18;12368:26;;12440:9;12434:4;12430:20;12426:1;12415:9;12411:17;12404:47;12468:131;12594:4;12468:131;:::i;:::-;12460:139;;12187:419;;;:::o;12612:170::-;12752:22;12748:1;12740:6;12736:14;12729:46;12612:170;:::o;12788:366::-;12930:3;12951:67;13015:2;13010:3;12951:67;:::i;:::-;12944:74;;13027:93;13116:3;13027:93;:::i;:::-;13145:2;13140:3;13136:12;13129:19;;12788:366;;;:::o;13160:419::-;13326:4;13364:2;13353:9;13349:18;13341:26;;13413:9;13407:4;13403:20;13399:1;13388:9;13384:17;13377:47;13441:131;13567:4;13441:131;:::i;:::-;13433:139;;13160:419;;;:::o;13585:102::-;13627:8;13674:5;13671:1;13667:13;13646:34;;13585:102;;;:::o;13693:848::-;13754:5;13761:4;13785:6;13776:15;;13809:5;13800:14;;13823:712;13844:1;13834:8;13831:15;13823:712;;;13939:4;13934:3;13930:14;13924:4;13921:24;13918:50;;;13948:18;;:::i;:::-;13918:50;13998:1;13988:8;13984:16;13981:451;;;14413:4;14406:5;14402:16;14393:25;;13981:451;14463:4;14457;14453:15;14445:23;;14493:32;14516:8;14493:32;:::i;:::-;14481:44;;13823:712;;;13693:848;;;;;;;:::o;14547:1073::-;14601:5;14792:8;14782:40;;14813:1;14804:10;;14815:5;;14782:40;14841:4;14831:36;;14858:1;14849:10;;14860:5;;14831:36;14927:4;14975:1;14970:27;;;;15011:1;15006:191;;;;14920:277;;14970:27;14988:1;14979:10;;14990:5;;;15006:191;15051:3;15041:8;15038:17;15035:43;;;15058:18;;:::i;:::-;15035:43;15107:8;15104:1;15100:16;15091:25;;15142:3;15135:5;15132:14;15129:40;;;15149:18;;:::i;:::-;15129:40;15182:5;;;14920:277;;15306:2;15296:8;15293:16;15287:3;15281:4;15278:13;15274:36;15256:2;15246:8;15243:16;15238:2;15232:4;15229:12;15225:35;15209:111;15206:246;;;15362:8;15356:4;15352:19;15343:28;;15397:3;15390:5;15387:14;15384:40;;;15404:18;;:::i;:::-;15384:40;15437:5;;15206:246;15477:42;15515:3;15505:8;15499:4;15496:1;15477:42;:::i;:::-;15462:57;;;;15551:4;15546:3;15542:14;15535:5;15532:25;15529:51;;;15560:18;;:::i;:::-;15529:51;15609:4;15602:5;15598:16;15589:25;;14547:1073;;;;;;:::o;15626:281::-;15684:5;15708:23;15726:4;15708:23;:::i;:::-;15700:31;;15752:25;15768:8;15752:25;:::i;:::-;15740:37;;15796:104;15833:66;15823:8;15817:4;15796:104;:::i;:::-;15787:113;;15626:281;;;;:::o;15913:169::-;16053:21;16049:1;16041:6;16037:14;16030:45;15913:169;:::o;16088:366::-;16230:3;16251:67;16315:2;16310:3;16251:67;:::i;:::-;16244:74;;16327:93;16416:3;16327:93;:::i;:::-;16445:2;16440:3;16436:12;16429:19;;16088:366;;;:::o;16460:419::-;16626:4;16664:2;16653:9;16649:18;16641:26;;16713:9;16707:4;16703:20;16699:1;16688:9;16684:17;16677:47;16741:131;16867:4;16741:131;:::i;:::-;16733:139;;16460:419;;;:::o;16885:171::-;17025:23;17021:1;17013:6;17009:14;17002:47;16885:171;:::o;17062:366::-;17204:3;17225:67;17289:2;17284:3;17225:67;:::i;:::-;17218:74;;17301:93;17390:3;17301:93;:::i;:::-;17419:2;17414:3;17410:12;17403:19;;17062:366;;;:::o;17434:419::-;17600:4;17638:2;17627:9;17623:18;17615:26;;17687:9;17681:4;17677:20;17673:1;17662:9;17658:17;17651:47;17715:131;17841:4;17715:131;:::i;:::-;17707:139;;17434:419;;;:::o;17859:167::-;17999:19;17995:1;17987:6;17983:14;17976:43;17859:167;:::o;18032:366::-;18174:3;18195:67;18259:2;18254:3;18195:67;:::i;:::-;18188:74;;18271:93;18360:3;18271:93;:::i;:::-;18389:2;18384:3;18380:12;18373:19;;18032:366;;;:::o;18404:419::-;18570:4;18608:2;18597:9;18593:18;18585:26;;18657:9;18651:4;18647:20;18643:1;18632:9;18628:17;18621:47;18685:131;18811:4;18685:131;:::i;:::-;18677:139;;18404:419;;;:::o;18829:177::-;18969:29;18965:1;18957:6;18953:14;18946:53;18829:177;:::o;19012:366::-;19154:3;19175:67;19239:2;19234:3;19175:67;:::i;:::-;19168:74;;19251:93;19340:3;19251:93;:::i;:::-;19369:2;19364:3;19360:12;19353:19;;19012:366;;;:::o;19384:419::-;19550:4;19588:2;19577:9;19573:18;19565:26;;19637:9;19631:4;19627:20;19623:1;19612:9;19608:17;19601:47;19665:131;19791:4;19665:131;:::i;:::-;19657:139;;19384:419;;;:::o;19809:332::-;19930:4;19968:2;19957:9;19953:18;19945:26;;19981:71;20049:1;20038:9;20034:17;20025:6;19981:71;:::i;:::-;20062:72;20130:2;20119:9;20115:18;20106:6;20062:72;:::i;:::-;19809:332;;;;;:::o;20147:166::-;20287:18;20283:1;20275:6;20271:14;20264:42;20147:166;:::o;20319:366::-;20461:3;20482:67;20546:2;20541:3;20482:67;:::i;:::-;20475:74;;20558:93;20647:3;20558:93;:::i;:::-;20676:2;20671:3;20667:12;20660:19;;20319:366;;;:::o;20691:419::-;20857:4;20895:2;20884:9;20880:18;20872:26;;20944:9;20938:4;20934:20;20930:1;20919:9;20915:17;20908:47;20972:131;21098:4;20972:131;:::i;:::-;20964:139;;20691:419;;;:::o;21116:178::-;21256:30;21252:1;21244:6;21240:14;21233:54;21116:178;:::o;21300:366::-;21442:3;21463:67;21527:2;21522:3;21463:67;:::i;:::-;21456:74;;21539:93;21628:3;21539:93;:::i;:::-;21657:2;21652:3;21648:12;21641:19;;21300:366;;;:::o;21672:419::-;21838:4;21876:2;21865:9;21861:18;21853:26;;21925:9;21919:4;21915:20;21911:1;21900:9;21896:17;21889:47;21953:131;22079:4;21953:131;:::i;:::-;21945:139;;21672:419;;;:::o;22097:285::-;22157:5;22181:23;22199:4;22181:23;:::i;:::-;22173:31;;22225:27;22243:8;22225:27;:::i;:::-;22213:39;;22271:104;22308:66;22298:8;22292:4;22271:104;:::i;:::-;22262:113;;22097:285;;;;:::o;22388:178::-;22528:30;22524:1;22516:6;22512:14;22505:54;22388:178;:::o;22572:366::-;22714:3;22735:67;22799:2;22794:3;22735:67;:::i;:::-;22728:74;;22811:93;22900:3;22811:93;:::i;:::-;22929:2;22924:3;22920:12;22913:19;;22572:366;;;:::o;22944:419::-;23110:4;23148:2;23137:9;23133:18;23125:26;;23197:9;23191:4;23187:20;23183:1;23172:9;23168:17;23161:47;23225:131;23351:4;23225:131;:::i;:::-;23217:139;;22944:419;;;:::o;23369:174::-;23509:26;23505:1;23497:6;23493:14;23486:50;23369:174;:::o;23549:366::-;23691:3;23712:67;23776:2;23771:3;23712:67;:::i;:::-;23705:74;;23788:93;23877:3;23788:93;:::i;:::-;23906:2;23901:3;23897:12;23890:19;;23549:366;;;:::o;23921:419::-;24087:4;24125:2;24114:9;24110:18;24102:26;;24174:9;24168:4;24164:20;24160:1;24149:9;24145:17;24138:47;24202:131;24328:4;24202:131;:::i;:::-;24194:139;;23921:419;;;:::o;24346:442::-;24495:4;24533:2;24522:9;24518:18;24510:26;;24546:71;24614:1;24603:9;24599:17;24590:6;24546:71;:::i;:::-;24627:72;24695:2;24684:9;24680:18;24671:6;24627:72;:::i;:::-;24709;24777:2;24766:9;24762:18;24753:6;24709:72;:::i;:::-;24346:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2368000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"balances(address)": "2936",
								"buyTokens()": "infinite",
								"calculatePrice()": "infinite",
								"calculatePriceIncrease()": "infinite",
								"calculateReferralReward(address)": "infinite",
								"calculateStakingReward(address)": "infinite",
								"calculateWeeksElapsed(uint256,uint256)": "infinite",
								"decimals()": "428",
								"getWalletBalance()": "2631",
								"initialPrice()": "2515",
								"mintReferralReward()": "infinite",
								"name()": "infinite",
								"owner()": "2627",
								"preSaleEndTime()": "2492",
								"preSaleStartTime()": "2494",
								"preSaleWeeksInWeeks()": "2513",
								"presaleIsActive()": "2585",
								"referralCounts(address)": "2891",
								"referrals(address)": "infinite",
								"regularSalePrice()": "2472",
								"renounceOwnership()": "infinite",
								"signUpForWhitelist(address)": "infinite",
								"stakeTokens(uint256)": "infinite",
								"stakedAmount(address)": "2912",
								"stakingRewardRate()": "2470",
								"stakingTimestamp(address)": "2936",
								"startPreSale(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"tokensSold()": "2492",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unstakeTokens()": "infinite",
								"weeklyIncreaseRate()": "2558",
								"whitelist(address)": "2900"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 6582,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1371,
									"end": 1900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1589,
									"end": 1601,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4E6174757265546F6B656E000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4E54520000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1620,
									"end": 1672,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1634,
									"end": 1638,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1661,
									"end": 1671,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1661,
									"end": 1669,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1661,
									"end": 1669,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1661,
									"end": 1669,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1661,
									"end": 1671,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1661,
									"end": 1671,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1661,
									"end": 1671,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1661,
									"end": 1671,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1661,
									"end": 1671,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1655,
									"end": 1657,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1655,
									"end": 1671,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1655,
									"end": 1671,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1655,
									"end": 1671,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1655,
									"end": 1671,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1655,
									"end": 1671,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1655,
									"end": 1671,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1655,
									"end": 1671,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1641,
									"end": 1652,
									"modifierDepth": 2,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1641,
									"end": 1671,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1641,
									"end": 1671,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1641,
									"end": 1671,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1641,
									"end": 1671,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1641,
									"end": 1671,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1641,
									"end": 1671,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1641,
									"end": 1671,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1620,
									"end": 1625,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1620,
									"end": 1625,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1620,
									"end": 1625,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1620,
									"end": 1672,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1620,
									"end": 1672,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1620,
									"end": 1672,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1620,
									"end": 1672,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1620,
									"end": 1672,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1698,
									"end": 1711,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1695,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1683,
									"end": 1711,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1711,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1711,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1683,
									"end": 1711,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1743,
									"end": 1762,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1740,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1722,
									"end": 1762,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1762,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1762,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1722,
									"end": 1762,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1792,
									"end": 1809,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1789,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1773,
									"end": 1809,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1809,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1809,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1773,
									"end": 1809,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1840,
									"end": 1858,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1820,
									"end": 1837,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 1820,
									"end": 1858,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1820,
									"end": 1858,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1820,
									"end": 1858,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1820,
									"end": 1858,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1887,
									"end": 1892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1884,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1869,
									"end": 1884,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1892,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1371,
									"end": 1900,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2756,
									"end": 2761,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2773,
									"end": 2782,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2707,
									"end": 2789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1334,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1342,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1344,
									"end": 1350,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1352,
									"end": 1358,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1360,
									"end": 1366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1412,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 1397,
									"end": 1406,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1388,
									"end": 1395,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1384,
									"end": 1407,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1380,
									"end": 1413,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1416,
									"end": 1495,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1416,
									"end": 1495,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1416,
									"end": 1495,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 1416,
									"end": 1495,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 1377,
									"end": 1497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1536,
									"end": 1537,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1561,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1617,
									"end": 1624,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1608,
									"end": 1614,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1597,
									"end": 1606,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1615,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1561,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1561,
									"end": 1625,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 1561,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1551,
									"end": 1625,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 1551,
									"end": 1625,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1507,
									"end": 1635,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1674,
									"end": 1676,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1700,
									"end": 1764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1756,
									"end": 1763,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1736,
									"end": 1745,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1732,
									"end": 1754,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1700,
									"end": 1764,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1700,
									"end": 1764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1700,
									"end": 1764,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 1700,
									"end": 1764,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1764,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1690,
									"end": 1764,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1645,
									"end": 1774,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1813,
									"end": 1815,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1839,
									"end": 1903,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1895,
									"end": 1902,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1892,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1875,
									"end": 1884,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 1871,
									"end": 1893,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1903,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1839,
									"end": 1903,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1839,
									"end": 1903,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 1839,
									"end": 1903,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1903,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1829,
									"end": 1903,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1784,
									"end": 1913,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1952,
									"end": 1954,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1978,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2034,
									"end": 2041,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2014,
									"end": 2023,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2010,
									"end": 2032,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1978,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1978,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1978,
									"end": 2042,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 1978,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2042,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 2042,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1923,
									"end": 2052,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2091,
									"end": 2094,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2118,
									"end": 2182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2174,
									"end": 2181,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 2165,
									"end": 2171,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2154,
									"end": 2163,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2172,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2118,
									"end": 2182,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2118,
									"end": 2182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2118,
									"end": 2182,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 2118,
									"end": 2182,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2182,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2108,
									"end": 2182,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2062,
									"end": 2192,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2231,
									"end": 2234,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 2258,
									"end": 2322,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2314,
									"end": 2321,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2311,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2294,
									"end": 2303,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2312,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2258,
									"end": 2322,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2258,
									"end": 2322,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2258,
									"end": 2322,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 2258,
									"end": 2322,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2248,
									"end": 2322,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2248,
									"end": 2322,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2202,
									"end": 2332,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 2339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2444,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2345,
									"end": 2444,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2397,
									"end": 2403,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2437,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2415,
									"end": 2437,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2415,
									"end": 2437,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2444,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2444,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2444,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2345,
									"end": 2444,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2450,
									"end": 2630,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2450,
									"end": 2630,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2498,
									"end": 2575,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2495,
									"end": 2496,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2488,
									"end": 2576,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2595,
									"end": 2599,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 2592,
									"end": 2593,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2585,
									"end": 2600,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2619,
									"end": 2623,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2616,
									"end": 2617,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2609,
									"end": 2624,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2816,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2636,
									"end": 2816,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2684,
									"end": 2761,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2681,
									"end": 2682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2674,
									"end": 2762,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2781,
									"end": 2785,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2778,
									"end": 2779,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2771,
									"end": 2786,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2805,
									"end": 2809,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2802,
									"end": 2803,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2795,
									"end": 2810,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 3142,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2822,
									"end": 3142,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2866,
									"end": 2872,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2903,
									"end": 2904,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2897,
									"end": 2901,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2893,
									"end": 2905,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2905,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2905,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2950,
									"end": 2951,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2944,
									"end": 2948,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2940,
									"end": 2952,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2971,
									"end": 2989,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2961,
									"end": 3042,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2961,
									"end": 3042,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3027,
									"end": 3031,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 3019,
									"end": 3025,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3015,
									"end": 3032,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3005,
									"end": 3032,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3005,
									"end": 3032,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2961,
									"end": 3042,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 2961,
									"end": 3042,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3081,
									"end": 3087,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3092,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3055,
									"end": 3093,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3052,
									"end": 3136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3052,
									"end": 3136,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3108,
									"end": 3126,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3108,
									"end": 3126,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3108,
									"end": 3126,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3108,
									"end": 3126,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3108,
									"end": 3126,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3052,
									"end": 3136,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3052,
									"end": 3136,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2873,
									"end": 3142,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 3142,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 3142,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 3142,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2822,
									"end": 3142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3148,
									"end": 3289,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3148,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3197,
									"end": 3201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3220,
									"end": 3223,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3212,
									"end": 3223,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3212,
									"end": 3223,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3243,
									"end": 3246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3240,
									"end": 3241,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3233,
									"end": 3247,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3277,
									"end": 3281,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3274,
									"end": 3275,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3264,
									"end": 3282,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3256,
									"end": 3282,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3256,
									"end": 3282,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3148,
									"end": 3289,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3148,
									"end": 3289,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3148,
									"end": 3289,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3148,
									"end": 3289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3388,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3295,
									"end": 3388,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3332,
									"end": 3338,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3379,
									"end": 3381,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3374,
									"end": 3376,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3367,
									"end": 3372,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3363,
									"end": 3377,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3382,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 3349,
									"end": 3382,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3349,
									"end": 3382,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3388,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3388,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3388,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3388,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3394,
									"end": 3501,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3394,
									"end": 3501,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3438,
									"end": 3446,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3488,
									"end": 3493,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3486,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3478,
									"end": 3494,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3457,
									"end": 3494,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3457,
									"end": 3494,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3394,
									"end": 3501,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3394,
									"end": 3501,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3394,
									"end": 3501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3394,
									"end": 3501,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3394,
									"end": 3501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3900,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3507,
									"end": 3900,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3576,
									"end": 3582,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3626,
									"end": 3627,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 3614,
									"end": 3624,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3610,
									"end": 3628,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3649,
									"end": 3746,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3679,
									"end": 3745,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3668,
									"end": 3677,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3649,
									"end": 3746,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3649,
									"end": 3746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3649,
									"end": 3746,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3649,
									"end": 3746,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3797,
									"end": 3805,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3806,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3767,
									"end": 3806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3767,
									"end": 3806,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3767,
									"end": 3806,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3806,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3755,
									"end": 3806,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3839,
									"end": 3843,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3835,
									"end": 3844,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3828,
									"end": 3833,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3824,
									"end": 3845,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3845,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3815,
									"end": 3845,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3888,
									"end": 3892,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3878,
									"end": 3886,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3874,
									"end": 3893,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3867,
									"end": 3872,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3864,
									"end": 3894,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3894,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3854,
									"end": 3894,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3583,
									"end": 3900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3583,
									"end": 3900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3900,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3900,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3900,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3507,
									"end": 3900,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 3966,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3906,
									"end": 3966,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3934,
									"end": 3937,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3955,
									"end": 3960,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3948,
									"end": 3960,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3948,
									"end": 3960,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 3966,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 3966,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 3966,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3906,
									"end": 3966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4114,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3972,
									"end": 4114,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4022,
									"end": 4031,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4055,
									"end": 4108,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4073,
									"end": 4107,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4082,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4100,
									"end": 4105,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4082,
									"end": 4106,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4082,
									"end": 4106,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4082,
									"end": 4106,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4082,
									"end": 4106,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4107,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4073,
									"end": 4107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4073,
									"end": 4107,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4073,
									"end": 4107,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4055,
									"end": 4108,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4055,
									"end": 4108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4055,
									"end": 4108,
									"name": "tag",
									"source": 7,
									"value": "124"
								},
								{
									"begin": 4055,
									"end": 4108,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4042,
									"end": 4108,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4042,
									"end": 4108,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4114,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4114,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4114,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3972,
									"end": 4114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4120,
									"end": 4195,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4120,
									"end": 4195,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4163,
									"end": 4166,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4184,
									"end": 4189,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4177,
									"end": 4189,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4177,
									"end": 4189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4120,
									"end": 4195,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4120,
									"end": 4195,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4120,
									"end": 4195,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4120,
									"end": 4195,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4470,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 4201,
									"end": 4470,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4311,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4342,
									"end": 4349,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4311,
									"end": 4350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4311,
									"end": 4350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4311,
									"end": 4350,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4311,
									"end": 4350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4421,
									"end": 4462,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4445,
									"end": 4461,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4421,
									"end": 4462,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4421,
									"end": 4462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4421,
									"end": 4462,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4421,
									"end": 4462,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4413,
									"end": 4419,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4406,
									"end": 4410,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4400,
									"end": 4411,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4463,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4372,
									"end": 4463,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4463,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4372,
									"end": 4463,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4366,
									"end": 4370,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4359,
									"end": 4464,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 4277,
									"end": 4470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4470,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4549,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 4476,
									"end": 4549,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4521,
									"end": 4524,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4476,
									"end": 4549,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4476,
									"end": 4549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4555,
									"end": 4744,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 4555,
									"end": 4744,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4632,
									"end": 4664,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4632,
									"end": 4664,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 4632,
									"end": 4664,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4632,
									"end": 4664,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4632,
									"end": 4664,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4673,
									"end": 4738,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4731,
									"end": 4737,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4723,
									"end": 4729,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4717,
									"end": 4721,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4673,
									"end": 4738,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 4673,
									"end": 4738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4673,
									"end": 4738,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4673,
									"end": 4738,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4608,
									"end": 4744,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4555,
									"end": 4744,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4555,
									"end": 4744,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4555,
									"end": 4744,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4750,
									"end": 4936,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 4750,
									"end": 4936,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4810,
									"end": 4930,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4810,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4827,
									"end": 4830,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4820,
									"end": 4825,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4817,
									"end": 4831,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4810,
									"end": 4930,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4810,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4810,
									"end": 4930,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4881,
									"end": 4920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4918,
									"end": 4919,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4911,
									"end": 4916,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4881,
									"end": 4920,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 4881,
									"end": 4920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4881,
									"end": 4920,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 4881,
									"end": 4920,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4854,
									"end": 4855,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4847,
									"end": 4852,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4843,
									"end": 4856,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4834,
									"end": 4856,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4834,
									"end": 4856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4810,
									"end": 4930,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4810,
									"end": 4930,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4810,
									"end": 4930,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 4810,
									"end": 4930,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4750,
									"end": 4936,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4750,
									"end": 4936,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4750,
									"end": 4936,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 5485,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 4942,
									"end": 5485,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5043,
									"end": 5045,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5038,
									"end": 5041,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5035,
									"end": 5046,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5032,
									"end": 5478,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5032,
									"end": 5478,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5032,
									"end": 5478,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5109,
									"end": 5114,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 5077,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5077,
									"end": 5115,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5077,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5179,
									"end": 5189,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5190,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 5161,
									"end": 5190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5190,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 5161,
									"end": 5190,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5151,
									"end": 5159,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5147,
									"end": 5191,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5344,
									"end": 5346,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5332,
									"end": 5342,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5329,
									"end": 5347,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5375,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5375,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5326,
									"end": 5375,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5365,
									"end": 5373,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5350,
									"end": 5373,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5350,
									"end": 5373,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5326,
									"end": 5375,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5326,
									"end": 5375,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5388,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5444,
									"end": 5466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5462,
									"end": 5465,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5444,
									"end": 5466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 5444,
									"end": 5466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5444,
									"end": 5466,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5444,
									"end": 5466,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5434,
									"end": 5442,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5430,
									"end": 5467,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5417,
									"end": 5428,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5388,
									"end": 5468,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 5388,
									"end": 5468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5388,
									"end": 5468,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5388,
									"end": 5468,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5047,
									"end": 5478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5047,
									"end": 5478,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5032,
									"end": 5478,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5032,
									"end": 5478,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 5485,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 5485,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 5485,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4942,
									"end": 5485,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5491,
									"end": 5608,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 5491,
									"end": 5608,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5545,
									"end": 5553,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5595,
									"end": 5600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5589,
									"end": 5593,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5585,
									"end": 5601,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 5564,
									"end": 5601,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5564,
									"end": 5601,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5491,
									"end": 5608,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5491,
									"end": 5608,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5491,
									"end": 5608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5491,
									"end": 5608,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5491,
									"end": 5608,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5614,
									"end": 5783,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 5614,
									"end": 5783,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5658,
									"end": 5664,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5691,
									"end": 5742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5739,
									"end": 5740,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5735,
									"end": 5741,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5727,
									"end": 5732,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5724,
									"end": 5725,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5720,
									"end": 5733,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5691,
									"end": 5742,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 5691,
									"end": 5742,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5691,
									"end": 5742,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5691,
									"end": 5742,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5687,
									"end": 5743,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5772,
									"end": 5776,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5766,
									"end": 5770,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5762,
									"end": 5777,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5752,
									"end": 5777,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5752,
									"end": 5777,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5665,
									"end": 5783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5614,
									"end": 5783,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5614,
									"end": 5783,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5614,
									"end": 5783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5614,
									"end": 5783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5614,
									"end": 5783,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5788,
									"end": 6083,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 5788,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6010,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6035,
									"end": 6038,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6029,
									"end": 6033,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6010,
									"end": 6039,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 6010,
									"end": 6039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6010,
									"end": 6039,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6010,
									"end": 6039,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6039,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6002,
									"end": 6039,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6072,
									"end": 6075,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6069,
									"end": 6070,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6065,
									"end": 6076,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6059,
									"end": 6063,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6056,
									"end": 6077,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6077,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6048,
									"end": 6077,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5788,
									"end": 6083,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5788,
									"end": 6083,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5788,
									"end": 6083,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5788,
									"end": 6083,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5788,
									"end": 6083,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6088,
									"end": 7483,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 6088,
									"end": 7483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6205,
									"end": 6242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6238,
									"end": 6241,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6205,
									"end": 6242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6205,
									"end": 6242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6205,
									"end": 6242,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6205,
									"end": 6242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6307,
									"end": 6325,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6299,
									"end": 6305,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6296,
									"end": 6326,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6293,
									"end": 6349,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6293,
									"end": 6349,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6293,
									"end": 6349,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6329,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6329,
									"end": 6347,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 6329,
									"end": 6347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6329,
									"end": 6347,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6329,
									"end": 6347,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6293,
									"end": 6349,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6293,
									"end": 6349,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6405,
									"end": 6409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6399,
									"end": 6410,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 6373,
									"end": 6411,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6411,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6373,
									"end": 6411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6458,
									"end": 6525,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6518,
									"end": 6524,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6510,
									"end": 6516,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6504,
									"end": 6508,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6458,
									"end": 6525,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6458,
									"end": 6525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6458,
									"end": 6525,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6458,
									"end": 6525,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6552,
									"end": 6553,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6580,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6563,
									"end": 6580,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6563,
									"end": 6580,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6608,
									"end": 6610,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6600,
									"end": 6606,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6597,
									"end": 6611,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 6625,
									"end": 6626,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6620,
									"end": 7238,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6620,
									"end": 7238,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 6620,
									"end": 7238,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6620,
									"end": 7238,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7282,
									"end": 7283,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7299,
									"end": 7305,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7296,
									"end": 7373,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7296,
									"end": 7373,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7296,
									"end": 7373,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7348,
									"end": 7357,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7343,
									"end": 7346,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 7339,
									"end": 7358,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7333,
									"end": 7359,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7324,
									"end": 7359,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7324,
									"end": 7359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7296,
									"end": 7373,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 7296,
									"end": 7373,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7399,
									"end": 7466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7459,
									"end": 7465,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 7452,
									"end": 7457,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7399,
									"end": 7466,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7399,
									"end": 7466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7399,
									"end": 7466,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7399,
									"end": 7466,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7393,
									"end": 7397,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7386,
									"end": 7467,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 7255,
									"end": 7477,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6590,
									"end": 7477,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6590,
									"end": 7477,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6620,
									"end": 7238,
									"name": "tag",
									"source": 7,
									"value": "160"
								},
								{
									"begin": 6620,
									"end": 7238,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6672,
									"end": 6676,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6668,
									"end": 6677,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 6660,
									"end": 6666,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6656,
									"end": 6678,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6706,
									"end": 6743,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6738,
									"end": 6742,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6706,
									"end": 6743,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 6706,
									"end": 6743,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6706,
									"end": 6743,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 6706,
									"end": 6743,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6987,
									"name": "tag",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6779,
									"end": 6987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6793,
									"end": 6800,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6790,
									"end": 6791,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6787,
									"end": 6801,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6779,
									"end": 6987,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6779,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6779,
									"end": 6987,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6872,
									"end": 6881,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6867,
									"end": 6870,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6863,
									"end": 6882,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6857,
									"end": 6883,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6849,
									"end": 6855,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6842,
									"end": 6884,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6915,
									"end": 6921,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6911,
									"end": 6925,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6925,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6901,
									"end": 6925,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6970,
									"end": 6972,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6959,
									"end": 6968,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6955,
									"end": 6973,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6942,
									"end": 6973,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6942,
									"end": 6973,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6816,
									"end": 6820,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6813,
									"end": 6814,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6809,
									"end": 6821,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6804,
									"end": 6821,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6804,
									"end": 6821,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6779,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "164"
								},
								{
									"begin": 6779,
									"end": 6987,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6779,
									"end": 6987,
									"name": "tag",
									"source": 7,
									"value": "166"
								},
								{
									"begin": 6779,
									"end": 6987,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7015,
									"end": 7021,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 7006,
									"end": 7013,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7003,
									"end": 7022,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 7000,
									"end": 7179,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 7000,
									"end": 7179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7000,
									"end": 7179,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 7073,
									"end": 7082,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7068,
									"end": 7071,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 7064,
									"end": 7083,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7058,
									"end": 7084,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 7116,
									"end": 7164,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7158,
									"end": 7162,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 7150,
									"end": 7156,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 7146,
									"end": 7163,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 7135,
									"end": 7144,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7116,
									"end": 7164,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7116,
									"end": 7164,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7116,
									"end": 7164,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7116,
									"end": 7164,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7108,
									"end": 7114,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7101,
									"end": 7165,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 7023,
									"end": 7179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7000,
									"end": 7179,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7000,
									"end": 7179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7225,
									"end": 7226,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 7221,
									"end": 7222,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 7213,
									"end": 7219,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 7209,
									"end": 7223,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 7205,
									"end": 7227,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7199,
									"end": 7203,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 7192,
									"end": 7228,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6627,
									"end": 7238,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6627,
									"end": 7238,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6627,
									"end": 7238,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6590,
									"end": 7477,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6590,
									"end": 7477,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6590,
									"end": 7477,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6180,
									"end": 7483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6180,
									"end": 7483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6180,
									"end": 7483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6088,
									"end": 7483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6088,
									"end": 7483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6088,
									"end": 7483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7489,
									"end": 7607,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7489,
									"end": 7607,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7576,
									"end": 7600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7594,
									"end": 7599,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 7576,
									"end": 7600,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 7576,
									"end": 7600,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7576,
									"end": 7600,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 7576,
									"end": 7600,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7571,
									"end": 7574,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7564,
									"end": 7601,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7489,
									"end": 7607,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7489,
									"end": 7607,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7489,
									"end": 7607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7835,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 7613,
									"end": 7835,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7706,
									"end": 7710,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7744,
									"end": 7746,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7733,
									"end": 7742,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7729,
									"end": 7747,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7721,
									"end": 7747,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7721,
									"end": 7747,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7757,
									"end": 7828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7825,
									"end": 7826,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7814,
									"end": 7823,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7810,
									"end": 7827,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7801,
									"end": 7807,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7757,
									"end": 7828,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 7757,
									"end": 7828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7757,
									"end": 7828,
									"name": "tag",
									"source": 7,
									"value": "172"
								},
								{
									"begin": 7757,
									"end": 7828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7835,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7835,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7835,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7835,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7613,
									"end": 7835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7841,
									"end": 8021,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 7841,
									"end": 8021,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7889,
									"end": 7966,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7886,
									"end": 7887,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7879,
									"end": 7967,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7986,
									"end": 7990,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 7983,
									"end": 7984,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 7976,
									"end": 7991,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8010,
									"end": 8014,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 8007,
									"end": 8008,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8000,
									"end": 8015,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8027,
									"end": 8129,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8027,
									"end": 8129,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8069,
									"end": 8077,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8116,
									"end": 8121,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8113,
									"end": 8114,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8109,
									"end": 8122,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 8088,
									"end": 8122,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8088,
									"end": 8122,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8027,
									"end": 8129,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8027,
									"end": 8129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8027,
									"end": 8129,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8027,
									"end": 8129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8983,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 8135,
									"end": 8983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8196,
									"end": 8201,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8203,
									"end": 8207,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8227,
									"end": 8233,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8218,
									"end": 8233,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8218,
									"end": 8233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8251,
									"end": 8256,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8242,
									"end": 8256,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8242,
									"end": 8256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8977,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8265,
									"end": 8977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8286,
									"end": 8287,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8276,
									"end": 8284,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8273,
									"end": 8288,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8977,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8265,
									"end": 8977,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8381,
									"end": 8385,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8376,
									"end": 8379,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 8372,
									"end": 8386,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 8366,
									"end": 8370,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8363,
									"end": 8387,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8360,
									"end": 8410,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8360,
									"end": 8410,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8360,
									"end": 8410,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8390,
									"end": 8408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8390,
									"end": 8408,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 8390,
									"end": 8408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8390,
									"end": 8408,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 8390,
									"end": 8408,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8360,
									"end": 8410,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 8360,
									"end": 8410,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8440,
									"end": 8441,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 8430,
									"end": 8438,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8426,
									"end": 8442,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 8423,
									"end": 8874,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8423,
									"end": 8874,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8423,
									"end": 8874,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8855,
									"end": 8859,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8848,
									"end": 8853,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8844,
									"end": 8860,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8835,
									"end": 8860,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8835,
									"end": 8860,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8423,
									"end": 8874,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 8423,
									"end": 8874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8905,
									"end": 8909,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8899,
									"end": 8903,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8895,
									"end": 8910,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 8887,
									"end": 8910,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8887,
									"end": 8910,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8967,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8958,
									"end": 8966,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8967,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 8935,
									"end": 8967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8935,
									"end": 8967,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 8935,
									"end": 8967,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8923,
									"end": 8967,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8923,
									"end": 8967,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8265,
									"end": 8977,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8977,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8265,
									"end": 8977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8983,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8983,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8983,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8135,
									"end": 8983,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8989,
									"end": 10062,
									"name": "tag",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 8989,
									"end": 10062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9043,
									"end": 9048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9234,
									"end": 9242,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9224,
									"end": 9264,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 9224,
									"end": 9264,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9255,
									"end": 9256,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9246,
									"end": 9256,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9246,
									"end": 9256,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9257,
									"end": 9262,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9257,
									"end": 9262,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9224,
									"end": 9264,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 9224,
									"end": 9264,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9283,
									"end": 9287,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9273,
									"end": 9309,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 9273,
									"end": 9309,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9300,
									"end": 9301,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9291,
									"end": 9301,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9291,
									"end": 9301,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9302,
									"end": 9307,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9302,
									"end": 9307,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9273,
									"end": 9309,
									"name": "tag",
									"source": 7,
									"value": "185"
								},
								{
									"begin": 9273,
									"end": 9309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9369,
									"end": 9373,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9417,
									"end": 9418,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9412,
									"end": 9439,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9439,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9439,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9412,
									"end": 9439,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9453,
									"end": 9454,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9448,
									"end": 9639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9448,
									"end": 9639,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 9448,
									"end": 9639,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9448,
									"end": 9639,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9362,
									"end": 9639,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9362,
									"end": 9639,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9412,
									"end": 9439,
									"name": "tag",
									"source": 7,
									"value": "187"
								},
								{
									"begin": 9412,
									"end": 9439,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9430,
									"end": 9431,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9421,
									"end": 9431,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9421,
									"end": 9431,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9432,
									"end": 9437,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9432,
									"end": 9437,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9432,
									"end": 9437,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9448,
									"end": 9639,
									"name": "tag",
									"source": 7,
									"value": "188"
								},
								{
									"begin": 9448,
									"end": 9639,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9493,
									"end": 9496,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 9483,
									"end": 9491,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9480,
									"end": 9497,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9477,
									"end": 9520,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9477,
									"end": 9520,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9477,
									"end": 9520,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9500,
									"end": 9518,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9500,
									"end": 9518,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9500,
									"end": 9518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9500,
									"end": 9518,
									"name": "tag",
									"source": 7,
									"value": "190"
								},
								{
									"begin": 9500,
									"end": 9518,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9477,
									"end": 9520,
									"name": "tag",
									"source": 7,
									"value": "189"
								},
								{
									"begin": 9477,
									"end": 9520,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9549,
									"end": 9557,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9546,
									"end": 9547,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 9542,
									"end": 9558,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 9533,
									"end": 9558,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9533,
									"end": 9558,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9584,
									"end": 9587,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9577,
									"end": 9582,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9574,
									"end": 9588,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9571,
									"end": 9611,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9571,
									"end": 9611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9571,
									"end": 9611,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9591,
									"end": 9609,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9591,
									"end": 9609,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9591,
									"end": 9609,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9591,
									"end": 9609,
									"name": "tag",
									"source": 7,
									"value": "192"
								},
								{
									"begin": 9591,
									"end": 9609,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9571,
									"end": 9611,
									"name": "tag",
									"source": 7,
									"value": "191"
								},
								{
									"begin": 9571,
									"end": 9611,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9624,
									"end": 9629,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9624,
									"end": 9629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9624,
									"end": 9629,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9362,
									"end": 9639,
									"name": "tag",
									"source": 7,
									"value": "186"
								},
								{
									"begin": 9362,
									"end": 9639,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9362,
									"end": 9639,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9748,
									"end": 9750,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9738,
									"end": 9746,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9735,
									"end": 9751,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9729,
									"end": 9732,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 9723,
									"end": 9727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9720,
									"end": 9733,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9716,
									"end": 9752,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9698,
									"end": 9700,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 9688,
									"end": 9696,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9685,
									"end": 9701,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9680,
									"end": 9682,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 9674,
									"end": 9678,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9671,
									"end": 9683,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 9667,
									"end": 9702,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 9651,
									"end": 9762,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 9648,
									"end": 9894,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9648,
									"end": 9894,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9648,
									"end": 9894,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9804,
									"end": 9812,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9798,
									"end": 9802,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9794,
									"end": 9813,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 9785,
									"end": 9813,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9785,
									"end": 9813,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9839,
									"end": 9842,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9832,
									"end": 9837,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9829,
									"end": 9843,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9826,
									"end": 9866,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9826,
									"end": 9866,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9826,
									"end": 9866,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 9846,
									"end": 9864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9846,
									"end": 9864,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9846,
									"end": 9864,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9846,
									"end": 9864,
									"name": "tag",
									"source": 7,
									"value": "195"
								},
								{
									"begin": 9846,
									"end": 9864,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9826,
									"end": 9866,
									"name": "tag",
									"source": 7,
									"value": "194"
								},
								{
									"begin": 9826,
									"end": 9866,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9879,
									"end": 9884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 9879,
									"end": 9884,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9648,
									"end": 9894,
									"name": "tag",
									"source": 7,
									"value": "193"
								},
								{
									"begin": 9648,
									"end": 9894,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9919,
									"end": 9961,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9957,
									"end": 9960,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9947,
									"end": 9955,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9941,
									"end": 9945,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9938,
									"end": 9939,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 9919,
									"end": 9961,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 9919,
									"end": 9961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9919,
									"end": 9961,
									"name": "tag",
									"source": 7,
									"value": "196"
								},
								{
									"begin": 9919,
									"end": 9961,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9904,
									"end": 9961,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9904,
									"end": 9961,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9904,
									"end": 9961,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9904,
									"end": 9961,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9993,
									"end": 9997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9988,
									"end": 9991,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9984,
									"end": 9998,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 9977,
									"end": 9982,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 9974,
									"end": 9999,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 9971,
									"end": 10022,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 9971,
									"end": 10022,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9971,
									"end": 10022,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10002,
									"end": 10020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 10002,
									"end": 10020,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 10002,
									"end": 10020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10002,
									"end": 10020,
									"name": "tag",
									"source": 7,
									"value": "198"
								},
								{
									"begin": 10002,
									"end": 10020,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9971,
									"end": 10022,
									"name": "tag",
									"source": 7,
									"value": "197"
								},
								{
									"begin": 9971,
									"end": 10022,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10051,
									"end": 10055,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10044,
									"end": 10049,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10040,
									"end": 10056,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10031,
									"end": 10056,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10031,
									"end": 10056,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8989,
									"end": 10062,
									"name": "tag",
									"source": 7,
									"value": "183"
								},
								{
									"begin": 8989,
									"end": 10062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8989,
									"end": 10062,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8989,
									"end": 10062,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8989,
									"end": 10062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8989,
									"end": 10062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8989,
									"end": 10062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8989,
									"end": 10062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10154,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 10068,
									"end": 10154,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10103,
									"end": 10110,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10143,
									"end": 10147,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 10136,
									"end": 10141,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10132,
									"end": 10148,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 10121,
									"end": 10148,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10121,
									"end": 10148,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10154,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10154,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10154,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10068,
									"end": 10154,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10160,
									"end": 10441,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 10160,
									"end": 10441,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10218,
									"end": 10223,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10242,
									"end": 10265,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10260,
									"end": 10264,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10242,
									"end": 10265,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 10242,
									"end": 10265,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10242,
									"end": 10265,
									"name": "tag",
									"source": 7,
									"value": "201"
								},
								{
									"begin": 10242,
									"end": 10265,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10234,
									"end": 10265,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10286,
									"end": 10311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10302,
									"end": 10310,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10286,
									"end": 10311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 10286,
									"end": 10311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10286,
									"end": 10311,
									"name": "tag",
									"source": 7,
									"value": "202"
								},
								{
									"begin": 10286,
									"end": 10311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10274,
									"end": 10311,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10274,
									"end": 10311,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10330,
									"end": 10434,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10367,
									"end": 10433,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10357,
									"end": 10365,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10351,
									"end": 10355,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10330,
									"end": 10434,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "79"
								},
								{
									"begin": 10330,
									"end": 10434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10330,
									"end": 10434,
									"name": "tag",
									"source": 7,
									"value": "203"
								},
								{
									"begin": 10330,
									"end": 10434,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10321,
									"end": 10434,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10321,
									"end": 10434,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10160,
									"end": 10441,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10160,
									"end": 10441,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10160,
									"end": 10441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10160,
									"end": 10441,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10160,
									"end": 10441,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10857,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 10447,
									"end": 10857,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10487,
									"end": 10494,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10510,
									"end": 10530,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10528,
									"end": 10529,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10510,
									"end": 10530,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 10510,
									"end": 10530,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10510,
									"end": 10530,
									"name": "tag",
									"source": 7,
									"value": "205"
								},
								{
									"begin": 10510,
									"end": 10530,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10505,
									"end": 10530,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10505,
									"end": 10530,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10544,
									"end": 10564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10562,
									"end": 10563,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10544,
									"end": 10564,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 10544,
									"end": 10564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10544,
									"end": 10564,
									"name": "tag",
									"source": 7,
									"value": "206"
								},
								{
									"begin": 10544,
									"end": 10564,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10564,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10539,
									"end": 10564,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10599,
									"end": 10600,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10596,
									"end": 10597,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10592,
									"end": 10601,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 10621,
									"end": 10651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 10639,
									"end": 10650,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 10621,
									"end": 10651,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 10621,
									"end": 10651,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10621,
									"end": 10651,
									"name": "tag",
									"source": 7,
									"value": "207"
								},
								{
									"begin": 10621,
									"end": 10651,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10610,
									"end": 10651,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10610,
									"end": 10651,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10800,
									"end": 10801,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10791,
									"end": 10798,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10787,
									"end": 10802,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 10781,
									"end": 10803,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 10761,
									"end": 10762,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10754,
									"end": 10763,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 10734,
									"end": 10817,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10850,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10711,
									"end": 10850,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 10830,
									"end": 10848,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10830,
									"end": 10848,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 10830,
									"end": 10848,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10830,
									"end": 10848,
									"name": "tag",
									"source": 7,
									"value": "209"
								},
								{
									"begin": 10830,
									"end": 10848,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10711,
									"end": 10850,
									"name": "tag",
									"source": 7,
									"value": "208"
								},
								{
									"begin": 10711,
									"end": 10850,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10495,
									"end": 10857,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10857,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10857,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10857,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10857,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10447,
									"end": 10857,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10863,
									"end": 11054,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 10863,
									"end": 11054,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10903,
									"end": 10906,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 10922,
									"end": 10942,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10940,
									"end": 10941,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10922,
									"end": 10942,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 10922,
									"end": 10942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10922,
									"end": 10942,
									"name": "tag",
									"source": 7,
									"value": "211"
								},
								{
									"begin": 10922,
									"end": 10942,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10917,
									"end": 10942,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10917,
									"end": 10942,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10956,
									"end": 10976,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10974,
									"end": 10975,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 10956,
									"end": 10976,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 10956,
									"end": 10976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 10956,
									"end": 10976,
									"name": "tag",
									"source": 7,
									"value": "212"
								},
								{
									"begin": 10956,
									"end": 10976,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10951,
									"end": 10976,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10951,
									"end": 10976,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10999,
									"end": 11000,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10996,
									"end": 10997,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 10992,
									"end": 11001,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 10985,
									"end": 11001,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 10985,
									"end": 11001,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11020,
									"end": 11023,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 11017,
									"end": 11018,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11014,
									"end": 11024,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 11011,
									"end": 11047,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 11011,
									"end": 11047,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 11011,
									"end": 11047,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 11027,
									"end": 11045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 11027,
									"end": 11045,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 11027,
									"end": 11045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11027,
									"end": 11045,
									"name": "tag",
									"source": 7,
									"value": "214"
								},
								{
									"begin": 11027,
									"end": 11045,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11011,
									"end": 11047,
									"name": "tag",
									"source": 7,
									"value": "213"
								},
								{
									"begin": 11011,
									"end": 11047,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 10863,
									"end": 11054,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 10863,
									"end": 11054,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 10863,
									"end": 11054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10863,
									"end": 11054,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 10863,
									"end": 11054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11060,
									"end": 11178,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 11060,
									"end": 11178,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11147,
									"end": 11171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 11165,
									"end": 11170,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 11147,
									"end": 11171,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 11147,
									"end": 11171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11147,
									"end": 11171,
									"name": "tag",
									"source": 7,
									"value": "216"
								},
								{
									"begin": 11147,
									"end": 11171,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11142,
									"end": 11145,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11135,
									"end": 11172,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 11060,
									"end": 11178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11060,
									"end": 11178,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11060,
									"end": 11178,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11626,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 11184,
									"end": 11626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11333,
									"end": 11337,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11371,
									"end": 11373,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 11360,
									"end": 11369,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11356,
									"end": 11374,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11348,
									"end": 11374,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11348,
									"end": 11374,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11384,
									"end": 11455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11452,
									"end": 11453,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11441,
									"end": 11450,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11437,
									"end": 11454,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11428,
									"end": 11434,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 11384,
									"end": 11455,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 11384,
									"end": 11455,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11384,
									"end": 11455,
									"name": "tag",
									"source": 7,
									"value": "218"
								},
								{
									"begin": 11384,
									"end": 11455,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11465,
									"end": 11537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11533,
									"end": 11535,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11522,
									"end": 11531,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11518,
									"end": 11536,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11509,
									"end": 11515,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 11465,
									"end": 11537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 11465,
									"end": 11537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11465,
									"end": 11537,
									"name": "tag",
									"source": 7,
									"value": "219"
								},
								{
									"begin": 11465,
									"end": 11537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11547,
									"end": 11619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 11615,
									"end": 11617,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 11604,
									"end": 11613,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11600,
									"end": 11618,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11591,
									"end": 11597,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11547,
									"end": 11619,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 11547,
									"end": 11619,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11547,
									"end": 11619,
									"name": "tag",
									"source": 7,
									"value": "220"
								},
								{
									"begin": 11547,
									"end": 11619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11626,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11626,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11626,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11184,
									"end": 11626,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11632,
									"end": 11854,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 11632,
									"end": 11854,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11725,
									"end": 11729,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11763,
									"end": 11765,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 11752,
									"end": 11761,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 11748,
									"end": 11766,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11740,
									"end": 11766,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 11740,
									"end": 11766,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11776,
									"end": 11847,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 11844,
									"end": 11845,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 11833,
									"end": 11842,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 11829,
									"end": 11846,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 11820,
									"end": 11826,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 11776,
									"end": 11847,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 11776,
									"end": 11847,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 11776,
									"end": 11847,
									"name": "tag",
									"source": 7,
									"value": "222"
								},
								{
									"begin": 11776,
									"end": 11847,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 11632,
									"end": 11854,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 11632,
									"end": 11854,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 11632,
									"end": 11854,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11632,
									"end": 11854,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 11632,
									"end": 11854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 6582,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205b8261fbf9076c95717db49b9f217f790da4799398c44e3f5ff665f300deb38064736f6c634300081a0033",
									".code": [
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "7547C7A3"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "F8102E68"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "F9931855"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "F9A81AF7"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "CCE29EA7"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "CEC297A0"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "D0FEBE4C"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "D348B409"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "9B19251A"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "9CA423B3"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "A09C4CF4"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "A5CE413B"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "7547C7A3"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "7C613B2F"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "8265324D"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "8F0794FE"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "2C663960"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "4F3FC2DF"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "4F3FC2DF"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "518AB2A8"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "7165D19B"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "2C663960"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "30F72CD4"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "329A27E7"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "4405DF4A"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "D505541"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "D505541"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "1D0806AE"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "27E235E3"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "3E293A3"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "6D65AF3"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 6582,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 363,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 363,
											"end": 394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 255,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 255,
											"end": 286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6328,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6328,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 6328,
											"end": 6575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 329,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 329,
											"end": 356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 820,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 820,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 820,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 820,
											"end": 863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2572,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2572,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2572,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 221,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 221,
											"end": 248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5270,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 5270,
											"end": 5367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3874,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3874,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 514,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 514,
											"end": 546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 441,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 441,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 401,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 401,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5377,
											"end": 5781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5377,
											"end": 5781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2886,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 2408,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2408,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2408,
											"end": 2564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 607,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 607,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 607,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 607,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 665,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 665,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 665,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 713,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 713,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 713,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1915,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1915,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5789,
											"end": 6320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 293,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 293,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 293,
											"end": 322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 764,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 764,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 764,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 5266,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4641,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4641,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4641,
											"end": 5266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 5266,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4641,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 5266,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4188,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4188,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 507,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 473,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 473,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 553,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 553,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 553,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3427,
											"end": 3865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3427,
											"end": 3865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6395,
											"end": 6402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6415,
											"end": 6434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6489,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 6456,
											"end": 6472,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6473,
											"end": 6477,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6456,
											"end": 6478,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6438,
											"end": 6453,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6438,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6438,
											"end": 6478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6438,
											"end": 6478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6438,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 6438,
											"end": 6478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6438,
											"end": 6478,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 6438,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6437,
											"end": 6489,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6437,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6437,
											"end": 6489,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 6437,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6567,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6529,
											"end": 6546,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 6529,
											"end": 6546,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6520,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6521,
											"end": 6525,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6526,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6508,
											"end": 6546,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6546,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6508,
											"end": 6546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6546,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 6508,
											"end": 6546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6508,
											"end": 6560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 6508,
											"end": 6560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6508,
											"end": 6560,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 6508,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6507,
											"end": 6567,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6567,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 6507,
											"end": 6567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6507,
											"end": 6567,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 6507,
											"end": 6567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6567,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6500,
											"end": 6567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 820,
											"end": 863,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 820,
											"end": 863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2708,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2708,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2680,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2804,
											"end": 2810,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 2791,
											"end": 2800,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2788,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2781,
											"end": 2800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 2781,
											"end": 2800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2800,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 2781,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 2780,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2780,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2868,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2868,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5319,
											"end": 5326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5349,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5360,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5341,
											"end": 5361,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5270,
											"end": 5367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3968,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4025,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3970,
											"end": 4026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4026,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 3970,
											"end": 4026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3948,
											"end": 4026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4098,
											"end": 4110,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4082,
											"end": 4094,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4082,
											"end": 4094,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4063,
											"end": 4079,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4063,
											"end": 4094,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4094,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4063,
											"end": 4094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4063,
											"end": 4094,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4063,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4062,
											"end": 4110,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4110,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4062,
											"end": 4110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4110,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 4062,
											"end": 4110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4061,
											"end": 4133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4061,
											"end": 4133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4133,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4061,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4151,
											"end": 4164,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4164,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 4172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5451,
											"end": 5452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5442,
											"end": 5452,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 5434,
											"end": 5490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5434,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5534,
											"end": 5540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5519,
											"end": 5529,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5509,
											"end": 5530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5530,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 5509,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5540,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5509,
											"end": 5540,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5501,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5501,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5589,
											"end": 5599,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5613,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5622,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 5579,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5623,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5579,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5662,
											"end": 5668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5646,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5647,
											"end": 5657,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5634,
											"end": 5668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5634,
											"end": 5668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5710,
											"end": 5725,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5695,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5696,
											"end": 5706,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5707,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5725,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5725,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5679,
											"end": 5725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5754,
											"end": 5764,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "PUSH",
											"source": 6,
											"value": "B539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF"
										},
										{
											"begin": 5766,
											"end": 5772,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 5741,
											"end": 5773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2886,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2948,
											"end": 2969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2969,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 2940,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 2940,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 3034,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3069,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 3034,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3069,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3069,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3108,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 3084,
											"end": 3133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 3084,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3154,
											"end": 3164,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3153,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 3148,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3179,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 3148,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3208,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3219,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3220,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3224,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "F0BC0A70FE19EF2D8DC1E1948B338A1184184FB1EA3AC836F24065828816D68D"
										},
										{
											"begin": 3277,
											"end": 3289,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3244,
											"end": 3290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3244,
											"end": 3290,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2925,
											"end": 3302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2886,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2546,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2546,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 2546,
											"end": 2556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2556,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 2546,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2542,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2540,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2540,
											"end": 2556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 2540,
											"end": 2556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2556,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 2540,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2537,
											"name": "PUSH",
											"source": 6,
											"value": "1F4"
										},
										{
											"begin": 2507,
											"end": 2521,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2530,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2531,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 2507,
											"end": 2537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2507,
											"end": 2537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2537,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 2507,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2507,
											"end": 2556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 2507,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 607,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 1999,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2010,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1990,
											"end": 2011,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1989,
											"end": 2011,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 1981,
											"end": 2035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 1981,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2054,
											"end": 2076,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2064,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2054,
											"end": 2076,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2076,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 2046,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 2046,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2147,
											"end": 2151,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2143,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2144,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2123,
											"end": 2151,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2196,
											"end": 2197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2198,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2221,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2221,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 2176,
											"end": 2221,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2211,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2220,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2202,
											"end": 2221,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2176,
											"end": 2221,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 2176,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2258,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2314,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2285,
											"end": 2299,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2308,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2285,
											"end": 2314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2172,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2387,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2377,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "4BC18AA4B0095C9A3B5CDF42D2322D5A145591B04045988A995A5DA426075457"
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2351,
											"end": 2388,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 2396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 5789,
											"end": 6320,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5851,
											"end": 5863,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5874,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5903,
											"end": 5904,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5894,
											"end": 5900,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 5904,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 5886,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 5886,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5995,
											"end": 6002,
											"name": "PUSH",
											"source": 6,
											"value": "24EA00"
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5981,
											"end": 5991,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5992,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 5964,
											"end": 6002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 6002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 6002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5964,
											"end": 6002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 6002,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 5964,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 5960,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6002,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5945,
											"end": 6002,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 5937,
											"end": 6034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 5937,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6069,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 6095,
											"end": 6105,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6072,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 6072,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6072,
											"end": 6106,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 6072,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6055,
											"end": 6106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6144,
											"end": 6145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6117,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6130,
											"end": 6140,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6117,
											"end": 6141,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6145,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6117,
											"end": 6145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6172,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6173,
											"end": 6183,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6184,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6188,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6156,
											"end": 6188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 6219,
											"end": 6223,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6226,
											"end": 6236,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6247,
											"end": 6253,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6244,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 6238,
											"end": 6253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6238,
											"end": 6253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6238,
											"end": 6253,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 6238,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 6201,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6201,
											"end": 6254,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 6201,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6285,
											"end": 6295,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "PUSH",
											"source": 6,
											"value": "6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336"
										},
										{
											"begin": 6297,
											"end": 6303,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6311,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 6270,
											"end": 6312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6270,
											"end": 6312,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 6320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5823,
											"end": 6320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5789,
											"end": 6320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 293,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 5266,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 4641,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4694,
											"end": 4709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 4686,
											"end": 4730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 4686,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4758,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4745,
											"end": 4758,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 4737,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 4737,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 4823,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4823,
											"end": 4839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4839,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 4823,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4800,
											"end": 4839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4884,
											"end": 4903,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 4933,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 4933,
											"end": 4943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4933,
											"end": 4943,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 4933,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4919,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 4919,
											"end": 4944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 4919,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4919,
											"end": 4944,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 4919,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4916,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 4907,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 4907,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 4906,
											"end": 4960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4906,
											"end": 4960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4960,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 4906,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4884,
											"end": 4960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4884,
											"end": 4960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5014,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 4993,
											"end": 4997,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4975,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 4975,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 5014,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4975,
											"end": 5014,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 4967,
											"end": 5047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 4967,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5089,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5062,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5063,
											"end": 5073,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5054,
											"end": 5089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5054,
											"end": 5089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 5114,
											"end": 5118,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5121,
											"end": 5131,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5133,
											"end": 5144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 5096,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5096,
											"end": 5145,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 5096,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5166,
											"end": 5177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5162,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5152,
											"end": 5162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5152,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5215,
											"end": 5225,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5208,
											"end": 5212,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5227,
											"end": 5238,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 5191,
											"end": 5239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5239,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 5266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 5266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4641,
											"end": 5266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4235,
											"end": 4242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4263,
											"end": 4278,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 4255,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 4255,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4340,
											"end": 4354,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4340,
											"end": 4354,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4337,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4322,
											"end": 4354,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4317,
											"end": 4406,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4317,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4317,
											"end": 4406,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4394,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4378,
											"end": 4394,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 4371,
											"end": 4394,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4317,
											"end": 4406,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 4317,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 4442,
											"end": 4464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4442,
											"end": 4466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4512,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4500,
											"end": 4512,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 4500,
											"end": 4526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4500,
											"end": 4526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4500,
											"end": 4526,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 4500,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4477,
											"end": 4526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4544,
											"end": 4556,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4537,
											"end": 4556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 507,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3627,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3611,
											"end": 3640,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3640,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3640,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3611,
											"end": 3640,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3705,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 3688,
											"end": 3702,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3688,
											"end": 3712,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 3688,
											"end": 3712,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3684,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3668,
											"end": 3684,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 3668,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3668,
											"end": 3713,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3713,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 3668,
											"end": 3713,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3651,
											"end": 3713,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3713,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3713,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3746,
											"end": 3760,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3724,
											"end": 3760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3760,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3760,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3760,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3771,
											"end": 3786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3771,
											"end": 3786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3844853BE672B18D859394AA37E05615B95B78E66B4DC37DCA98D1DB1B05EA7D"
										},
										{
											"begin": 3824,
											"end": 3840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3824,
											"end": 3840,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3842,
											"end": 3856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3842,
											"end": 3856,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3809,
											"end": 3857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3857,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "380"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "385"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "378"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "410"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "409"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "412"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "414"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 442,
											"end": 541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 494,
											"end": 500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 533,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 522,
											"end": 534,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 512,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 442,
											"end": 541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 547,
											"end": 716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 631,
											"end": 642,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 653,
											"end": 672,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 681,
											"end": 710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 547,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 722,
											"end": 861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 811,
											"end": 817,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 801,
											"end": 804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 795,
											"end": 818,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 852,
											"end": 853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 849,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 838,
											"end": 841,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 834,
											"end": 850,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 827,
											"end": 854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 722,
											"end": 861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 867,
											"end": 969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 908,
											"end": 914,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 962,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 950,
											"end": 952,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 943,
											"end": 948,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 939,
											"end": 953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 935,
											"end": 963,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 925,
											"end": 963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 925,
											"end": 963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 867,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 1124,
											"end": 1129,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 1091,
											"end": 1130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 1091,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 1210,
											"end": 1216,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1208,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 1146,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 1146,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 1284,
											"end": 1290,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1282,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 1226,
											"end": 1291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 1226,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 1338,
											"end": 1344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 1316,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 1316,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1311,
											"end": 1314,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1307,
											"end": 1346,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1067,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 975,
											"end": 1352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1494,
											"end": 1512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1486,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1556,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1568,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1545,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1529,
											"end": 1546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1522,
											"end": 1569,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 1659,
											"end": 1663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 1586,
											"end": 1664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 1586,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1664,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1358,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 1758,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2123,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2070,
											"end": 2124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2004,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 2220,
											"end": 2225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 2202,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 2202,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2191,
											"end": 2226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 2311,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 2311,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2304,
											"end": 2309,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2336,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2350,
											"end": 2351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2347,
											"end": 2348,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2340,
											"end": 2352,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 2291,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2360,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2238,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2412,
											"end": 2417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2457,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2428,
											"end": 2457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 2493,
											"end": 2498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 2466,
											"end": 2499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 2466,
											"end": 2499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 2602,
											"end": 2607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 2584,
											"end": 2608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 2584,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2577,
											"end": 2582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2609,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2613,
											"end": 2625,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 2564,
											"end": 2627,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2685,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2730,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2730,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 2766,
											"end": 2771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 2739,
											"end": 2772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 2739,
											"end": 2772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2639,
											"end": 2778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2866,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2909,
											"end": 2911,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2897,
											"end": 2906,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2884,
											"end": 2907,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2912,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 2915,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 2915,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 2877,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3035,
											"end": 3036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3096,
											"end": 3102,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3081,
											"end": 3103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 3060,
											"end": 3113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 3060,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3006,
											"end": 3123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3213,
											"end": 3222,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 3188,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 3188,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3178,
											"end": 3241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2784,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3298,
											"end": 3305,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3347,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3348,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3264,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 3441,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3436,
											"end": 3439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3429,
											"end": 3463,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3589,
											"end": 3598,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3603,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 3613,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 3613,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4103,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4168,
											"end": 4170,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4147,
											"end": 4154,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4143,
											"end": 4166,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4139,
											"end": 4171,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 4174,
											"end": 4253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 4174,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 4136,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 4364,
											"end": 4371,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4353,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4362,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 4319,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 4319,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4309,
											"end": 4372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4421,
											"end": 4423,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 4492,
											"end": 4499,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 4447,
											"end": 4500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 4447,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4392,
											"end": 4510,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4549,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 4620,
											"end": 4627,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4611,
											"end": 4617,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4600,
											"end": 4609,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4596,
											"end": 4618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 4575,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 4575,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4565,
											"end": 4628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4520,
											"end": 4638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4725,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4727,
											"end": 4733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4778,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4764,
											"end": 4773,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4751,
											"end": 4774,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4747,
											"end": 4779,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 4782,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 4782,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 4744,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4902,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 4972,
											"end": 4979,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4952,
											"end": 4961,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 4927,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 4927,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4917,
											"end": 4980,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4873,
											"end": 4990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5029,
											"end": 5031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 5100,
											"end": 5107,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5091,
											"end": 5097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5089,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5076,
											"end": 5098,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 5055,
											"end": 5108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 5055,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5108,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4651,
											"end": 5125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5166,
											"end": 5173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5206,
											"end": 5210,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5199,
											"end": 5204,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5195,
											"end": 5211,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5211,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5131,
											"end": 5217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5335,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 5223,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 5322,
											"end": 5327,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 5306,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 5306,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5294,
											"end": 5329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5335,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5468,
											"end": 5470,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5457,
											"end": 5466,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5453,
											"end": 5471,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5445,
											"end": 5471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5543,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5547,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 5481,
											"end": 5548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 5481,
											"end": 5548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5555,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5620,
											"end": 5626,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5669,
											"end": 5671,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5657,
											"end": 5666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5644,
											"end": 5667,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 5675,
											"end": 5754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 5675,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 5637,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 5865,
											"end": 5872,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5845,
											"end": 5854,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5863,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 5820,
											"end": 5873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 5820,
											"end": 5873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5873,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5766,
											"end": 5883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5561,
											"end": 5890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 6001,
											"end": 6006,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 5983,
											"end": 6007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 5983,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 5981,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5971,
											"end": 6008,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 6014,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5896,
											"end": 6014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6113,
											"end": 6117,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6153,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6140,
											"end": 6149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6154,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6128,
											"end": 6154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6221,
											"end": 6230,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6234,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6208,
											"end": 6214,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 6164,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6235,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 6164,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6020,
											"end": 6242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6316,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6330,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6373,
											"end": 6375,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6361,
											"end": 6370,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6359,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6348,
											"end": 6371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6344,
											"end": 6376,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 6379,
											"end": 6458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 6379,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "tag",
											"source": 7,
											"value": "545"
										},
										{
											"begin": 6341,
											"end": 6460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6499,
											"end": 6500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 6569,
											"end": 6576,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6560,
											"end": 6566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6549,
											"end": 6558,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6545,
											"end": 6567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 6524,
											"end": 6577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 6524,
											"end": 6577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6577,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6514,
											"end": 6577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6626,
											"end": 6628,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 6697,
											"end": 6704,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6686,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6695,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 6652,
											"end": 6705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 6652,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6597,
											"end": 6715,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6728,
											"end": 6908,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 6728,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6776,
											"end": 6853,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6773,
											"end": 6774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6766,
											"end": 6854,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6863,
											"end": 6878,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6901,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6894,
											"end": 6895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6902,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7234,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 6914,
											"end": 7234,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6958,
											"end": 6964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 6996,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6989,
											"end": 6993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6985,
											"end": 6997,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 6997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 6997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7043,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7036,
											"end": 7040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7044,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7063,
											"end": 7081,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7053,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 7053,
											"end": 7134,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7123,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7107,
											"end": 7124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7097,
											"end": 7124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7053,
											"end": 7134,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 7053,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7181,
											"end": 7183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7173,
											"end": 7179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7170,
											"end": 7184,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7150,
											"end": 7168,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7147,
											"end": 7185,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7144,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 7144,
											"end": 7228,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7200,
											"end": 7218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7144,
											"end": 7228,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 7144,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6965,
											"end": 7234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7234,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 7234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7240,
											"end": 7420,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7240,
											"end": 7420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7288,
											"end": 7365,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7285,
											"end": 7286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7389,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 7382,
											"end": 7383,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7409,
											"end": 7413,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7406,
											"end": 7407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7399,
											"end": 7414,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7620,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7426,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 7470,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 7504,
											"end": 7505,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7486,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 7486,
											"end": 7506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7486,
											"end": 7506,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 7486,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7520,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 7538,
											"end": 7539,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7520,
											"end": 7540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 7520,
											"end": 7540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7520,
											"end": 7540,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 7520,
											"end": 7540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7515,
											"end": 7540,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7515,
											"end": 7540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7564,
											"end": 7565,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7561,
											"end": 7562,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7557,
											"end": 7566,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7588,
											"end": 7589,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7579,
											"end": 7590,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7576,
											"end": 7613,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7576,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 7576,
											"end": 7613,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7576,
											"end": 7613,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 7576,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7620,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7620,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7426,
											"end": 7620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7626,
											"end": 7806,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7626,
											"end": 7806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7751,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7671,
											"end": 7672,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7752,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7771,
											"end": 7775,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7768,
											"end": 7769,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7761,
											"end": 7776,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7795,
											"end": 7799,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7792,
											"end": 7793,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7800,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7997,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7812,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7852,
											"end": 7853,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 7887,
											"end": 7888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 7869,
											"end": 7889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 7869,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7864,
											"end": 7889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 7903,
											"end": 7923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7903,
											"end": 7923,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 7903,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7923,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7898,
											"end": 7923,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7942,
											"end": 7943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 7932,
											"end": 7967,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7947,
											"end": 7965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 7947,
											"end": 7965,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7932,
											"end": 7967,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 7932,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 7990,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7986,
											"end": 7987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7977,
											"end": 7991,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7977,
											"end": 7991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7997,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8413,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 8003,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8043,
											"end": 8050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 8084,
											"end": 8085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 8066,
											"end": 8086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 8066,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8061,
											"end": 8086,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8061,
											"end": 8086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8100,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 8118,
											"end": 8119,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8100,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 8100,
											"end": 8120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8100,
											"end": 8120,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 8100,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8120,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8095,
											"end": 8120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8152,
											"end": 8153,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8148,
											"end": 8157,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 8195,
											"end": 8206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 8177,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8177,
											"end": 8207,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 8177,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8347,
											"end": 8354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8343,
											"end": 8358,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8340,
											"end": 8341,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8337,
											"end": 8359,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8317,
											"end": 8318,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8319,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8373,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8267,
											"end": 8406,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 8267,
											"end": 8406,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8386,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 8386,
											"end": 8404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 8386,
											"end": 8404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8386,
											"end": 8404,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 8386,
											"end": 8404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8267,
											"end": 8406,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 8267,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8051,
											"end": 8413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8413,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8413,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8639,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 8419,
											"end": 8639,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8559,
											"end": 8593,
											"name": "PUSH",
											"source": 7,
											"value": "456E642074696D65206D7573742062652061667465722073746172742074696D"
										},
										{
											"begin": 8555,
											"end": 8556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8547,
											"end": 8553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8543,
											"end": 8557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8536,
											"end": 8594,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8628,
											"end": 8631,
											"name": "PUSH",
											"source": 7,
											"value": "6500000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8623,
											"end": 8625,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8615,
											"end": 8621,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 8626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 8632,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8419,
											"end": 8639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8645,
											"end": 9011,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 8645,
											"end": 9011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8787,
											"end": 8790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8808,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 8867,
											"end": 8870,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 8808,
											"end": 8875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8875,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 8808,
											"end": 8875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 8875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8801,
											"end": 8875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 8973,
											"end": 8976,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 8884,
											"end": 8977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8977,
											"name": "tag",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 8884,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9002,
											"end": 9004,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8997,
											"end": 9000,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8993,
											"end": 9005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 9005,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 9005,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8645,
											"end": 9011,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8645,
											"end": 9011,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8645,
											"end": 9011,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8645,
											"end": 9011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9436,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9017,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9183,
											"end": 9187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9223,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9210,
											"end": 9219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9206,
											"end": 9224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9198,
											"end": 9224,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9198,
											"end": 9224,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9270,
											"end": 9279,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9264,
											"end": 9268,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9260,
											"end": 9280,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9256,
											"end": 9257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9254,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9241,
											"end": 9258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9234,
											"end": 9281,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 9424,
											"end": 9428,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 9298,
											"end": 9429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9429,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 9298,
											"end": 9429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9290,
											"end": 9429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9442,
											"end": 9662,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 9442,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9582,
											"end": 9616,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 9578,
											"end": 9579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9576,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9566,
											"end": 9580,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9617,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9654,
											"name": "PUSH",
											"source": 7,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9646,
											"end": 9648,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9638,
											"end": 9644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9627,
											"end": 9655,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9442,
											"end": 9662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9442,
											"end": 9662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 10034,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 9668,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9831,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 9895,
											"end": 9897,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 9890,
											"end": 9893,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9831,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9831,
											"end": 9898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9831,
											"end": 9898,
											"name": "tag",
											"source": 7,
											"value": "580"
										},
										{
											"begin": 9831,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9824,
											"end": 9898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 9996,
											"end": 9999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 10000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 9907,
											"end": 10000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 10000,
											"name": "tag",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 9907,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10025,
											"end": 10027,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10020,
											"end": 10023,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10016,
											"end": 10028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10009,
											"end": 10028,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10009,
											"end": 10028,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 10034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 10034,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 10034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10459,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 10040,
											"end": 10459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10206,
											"end": 10210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10246,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10233,
											"end": 10242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10229,
											"end": 10247,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10221,
											"end": 10247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10221,
											"end": 10247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10293,
											"end": 10302,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10287,
											"end": 10291,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10283,
											"end": 10303,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10279,
											"end": 10280,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10268,
											"end": 10277,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10264,
											"end": 10281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 10447,
											"end": 10451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 10321,
											"end": 10452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10321,
											"end": 10452,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 10321,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10313,
											"end": 10452,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10313,
											"end": 10452,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10459,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10459,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10040,
											"end": 10459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10465,
											"end": 10636,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 10465,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10628,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742062616C616E63652E0000000000000000000000"
										},
										{
											"begin": 10601,
											"end": 10602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10599,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10589,
											"end": 10603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10582,
											"end": 10629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10465,
											"end": 10636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10465,
											"end": 10636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 11008,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 10642,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10784,
											"end": 10787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10805,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 10869,
											"end": 10871,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 10864,
											"end": 10867,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10805,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 10805,
											"end": 10872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10805,
											"end": 10872,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 10805,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10798,
											"end": 10872,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10798,
											"end": 10872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 10970,
											"end": 10973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 10881,
											"end": 10974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10881,
											"end": 10974,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 10881,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10999,
											"end": 11001,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10994,
											"end": 10997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10990,
											"end": 11002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10983,
											"end": 11002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10983,
											"end": 11002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 11008,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 11008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 11008,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10642,
											"end": 11008,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11014,
											"end": 11433,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 11014,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11180,
											"end": 11184,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11218,
											"end": 11220,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11207,
											"end": 11216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11203,
											"end": 11221,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11221,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11267,
											"end": 11276,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11261,
											"end": 11265,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11257,
											"end": 11277,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11242,
											"end": 11251,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11238,
											"end": 11255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11231,
											"end": 11278,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11295,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 11421,
											"end": 11425,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11295,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11295,
											"end": 11426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11295,
											"end": 11426,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 11295,
											"end": 11426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11287,
											"end": 11426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11287,
											"end": 11426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11014,
											"end": 11433,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11014,
											"end": 11433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11014,
											"end": 11433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11014,
											"end": 11433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11439,
											"end": 11630,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 11439,
											"end": 11630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11479,
											"end": 11482,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11498,
											"end": 11518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 11516,
											"end": 11517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11498,
											"end": 11518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 11498,
											"end": 11518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11498,
											"end": 11518,
											"name": "tag",
											"source": 7,
											"value": "591"
										},
										{
											"begin": 11498,
											"end": 11518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11493,
											"end": 11518,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11493,
											"end": 11518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11532,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 11550,
											"end": 11551,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11532,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 11532,
											"end": 11552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11532,
											"end": 11552,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 11532,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11527,
											"end": 11552,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11527,
											"end": 11552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11575,
											"end": 11576,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11572,
											"end": 11573,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11568,
											"end": 11577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11561,
											"end": 11577,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11561,
											"end": 11577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11596,
											"end": 11599,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11593,
											"end": 11594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11590,
											"end": 11600,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11587,
											"end": 11623,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11587,
											"end": 11623,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 11587,
											"end": 11623,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 11603,
											"end": 11621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "tag",
											"source": 7,
											"value": "594"
										},
										{
											"begin": 11603,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11587,
											"end": 11623,
											"name": "tag",
											"source": 7,
											"value": "593"
										},
										{
											"begin": 11587,
											"end": 11623,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11439,
											"end": 11630,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11439,
											"end": 11630,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11439,
											"end": 11630,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11439,
											"end": 11630,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11439,
											"end": 11630,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11636,
											"end": 11809,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11636,
											"end": 11809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11776,
											"end": 11801,
											"name": "PUSH",
											"source": 7,
											"value": "50726573616C65206E6F74207374617274656420796574000000000000000000"
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11770,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11760,
											"end": 11774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11753,
											"end": 11802,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11636,
											"end": 11809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11636,
											"end": 11809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11815,
											"end": 12181,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 11815,
											"end": 12181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11957,
											"end": 11960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11978,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 12042,
											"end": 12044,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 12037,
											"end": 12040,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 11978,
											"end": 12045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11978,
											"end": 12045,
											"name": "tag",
											"source": 7,
											"value": "597"
										},
										{
											"begin": 11978,
											"end": 12045,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11971,
											"end": 12045,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11971,
											"end": 12045,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12054,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 12143,
											"end": 12146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12054,
											"end": 12147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 12054,
											"end": 12147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12054,
											"end": 12147,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 12054,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12172,
											"end": 12174,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12167,
											"end": 12170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12163,
											"end": 12175,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12156,
											"end": 12175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12156,
											"end": 12175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11815,
											"end": 12181,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11815,
											"end": 12181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11815,
											"end": 12181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11815,
											"end": 12181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12187,
											"end": 12606,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 12187,
											"end": 12606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12353,
											"end": 12357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12391,
											"end": 12393,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12380,
											"end": 12389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12376,
											"end": 12394,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12368,
											"end": 12394,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12368,
											"end": 12394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12440,
											"end": 12449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12434,
											"end": 12438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12430,
											"end": 12450,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12427,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12415,
											"end": 12424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12411,
											"end": 12428,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12404,
											"end": 12451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12468,
											"end": 12599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 12594,
											"end": 12598,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12468,
											"end": 12599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 12468,
											"end": 12599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12468,
											"end": 12599,
											"name": "tag",
											"source": 7,
											"value": "600"
										},
										{
											"begin": 12468,
											"end": 12599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12460,
											"end": 12599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12460,
											"end": 12599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12187,
											"end": 12606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12187,
											"end": 12606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12187,
											"end": 12606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12187,
											"end": 12606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12612,
											"end": 12782,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 12612,
											"end": 12782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12752,
											"end": 12774,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F207265776172647320617661696C61626C65000000000000000000000000"
										},
										{
											"begin": 12748,
											"end": 12749,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12740,
											"end": 12746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12736,
											"end": 12750,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12729,
											"end": 12775,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12612,
											"end": 12782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12612,
											"end": 12782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12930,
											"end": 12933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12951,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 13015,
											"end": 13017,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 13010,
											"end": 13013,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12951,
											"end": 13018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 12951,
											"end": 13018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12951,
											"end": 13018,
											"name": "tag",
											"source": 7,
											"value": "603"
										},
										{
											"begin": 12951,
											"end": 13018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12944,
											"end": 13018,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12944,
											"end": 13018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 13116,
											"end": 13119,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 13027,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13120,
											"name": "tag",
											"source": 7,
											"value": "604"
										},
										{
											"begin": 13027,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13145,
											"end": 13147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13140,
											"end": 13143,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13136,
											"end": 13148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13129,
											"end": 13148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13129,
											"end": 13148,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12788,
											"end": 13154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12788,
											"end": 13154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13326,
											"end": 13330,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13364,
											"end": 13366,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13353,
											"end": 13362,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13349,
											"end": 13367,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13341,
											"end": 13367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13341,
											"end": 13367,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13413,
											"end": 13422,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13407,
											"end": 13411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13403,
											"end": 13423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13399,
											"end": 13400,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13388,
											"end": 13397,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13384,
											"end": 13401,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13377,
											"end": 13424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13441,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 13567,
											"end": 13571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13441,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 13441,
											"end": 13572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13441,
											"end": 13572,
											"name": "tag",
											"source": 7,
											"value": "606"
										},
										{
											"begin": 13441,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13433,
											"end": 13572,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13433,
											"end": 13572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13160,
											"end": 13579,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13160,
											"end": 13579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13585,
											"end": 13687,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 13585,
											"end": 13687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13627,
											"end": 13635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13674,
											"end": 13679,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13671,
											"end": 13672,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13667,
											"end": 13680,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 13646,
											"end": 13680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13646,
											"end": 13680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13585,
											"end": 13687,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13585,
											"end": 13687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13585,
											"end": 13687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13585,
											"end": 13687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 14541,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 13693,
											"end": 14541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13754,
											"end": 13759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13761,
											"end": 13765,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13785,
											"end": 13791,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13776,
											"end": 13791,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13776,
											"end": 13791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13809,
											"end": 13814,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13800,
											"end": 13814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13800,
											"end": 13814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 14535,
											"name": "tag",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 13823,
											"end": 14535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13844,
											"end": 13845,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13834,
											"end": 13842,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13831,
											"end": 13846,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 14535,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 13823,
											"end": 14535,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13939,
											"end": 13943,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13934,
											"end": 13937,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13930,
											"end": 13944,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 13924,
											"end": 13928,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13921,
											"end": 13945,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13918,
											"end": 13968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13918,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 13918,
											"end": 13968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13948,
											"end": 13966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 13948,
											"end": 13966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 13948,
											"end": 13966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13948,
											"end": 13966,
											"name": "tag",
											"source": 7,
											"value": "613"
										},
										{
											"begin": 13948,
											"end": 13966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13918,
											"end": 13968,
											"name": "tag",
											"source": 7,
											"value": "612"
										},
										{
											"begin": 13918,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13998,
											"end": 13999,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 13988,
											"end": 13996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13984,
											"end": 14000,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 13981,
											"end": 14432,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13981,
											"end": 14432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 13981,
											"end": 14432,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14413,
											"end": 14417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14406,
											"end": 14411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14402,
											"end": 14418,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14393,
											"end": 14418,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14393,
											"end": 14418,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13981,
											"end": 14432,
											"name": "tag",
											"source": 7,
											"value": "614"
										},
										{
											"begin": 13981,
											"end": 14432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14463,
											"end": 14467,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 14457,
											"end": 14461,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14453,
											"end": 14468,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 14445,
											"end": 14468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14445,
											"end": 14468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14493,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 14516,
											"end": 14524,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 14493,
											"end": 14525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 14493,
											"end": 14525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14493,
											"end": 14525,
											"name": "tag",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 14493,
											"end": 14525,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14481,
											"end": 14525,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 14481,
											"end": 14525,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 14535,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "609"
										},
										{
											"begin": 13823,
											"end": 14535,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 14535,
											"name": "tag",
											"source": 7,
											"value": "611"
										},
										{
											"begin": 13823,
											"end": 14535,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 14541,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 14541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 14541,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 14541,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 14541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 14541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 14541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13693,
											"end": 14541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 15620,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 14547,
											"end": 15620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14601,
											"end": 14606,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14792,
											"end": 14800,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "617"
										},
										{
											"begin": 14782,
											"end": 14822,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14813,
											"end": 14814,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14804,
											"end": 14814,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14804,
											"end": 14814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14815,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 14815,
											"end": 14820,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14782,
											"end": 14822,
											"name": "tag",
											"source": 7,
											"value": "617"
										},
										{
											"begin": 14782,
											"end": 14822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14841,
											"end": 14845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14831,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 14831,
											"end": 14867,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14858,
											"end": 14859,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14849,
											"end": 14859,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14849,
											"end": 14859,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14860,
											"end": 14865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 14860,
											"end": 14865,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14831,
											"end": 14867,
											"name": "tag",
											"source": 7,
											"value": "618"
										},
										{
											"begin": 14831,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14927,
											"end": 14931,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14975,
											"end": 14976,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14970,
											"end": 14997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 14997,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 14997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 14970,
											"end": 14997,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15011,
											"end": 15012,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 15006,
											"end": 15197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15006,
											"end": 15197,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 15006,
											"end": 15197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 15006,
											"end": 15197,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 14920,
											"end": 15197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 14920,
											"end": 15197,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14970,
											"end": 14997,
											"name": "tag",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 14970,
											"end": 14997,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14988,
											"end": 14989,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 14979,
											"end": 14989,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14979,
											"end": 14989,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14990,
											"end": 14995,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14990,
											"end": 14995,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 14990,
											"end": 14995,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15006,
											"end": 15197,
											"name": "tag",
											"source": 7,
											"value": "621"
										},
										{
											"begin": 15006,
											"end": 15197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15051,
											"end": 15054,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 15041,
											"end": 15049,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15038,
											"end": 15055,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15035,
											"end": 15078,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15035,
											"end": 15078,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "622"
										},
										{
											"begin": 15035,
											"end": 15078,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 15058,
											"end": 15076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "tag",
											"source": 7,
											"value": "623"
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15035,
											"end": 15078,
											"name": "tag",
											"source": 7,
											"value": "622"
										},
										{
											"begin": 15035,
											"end": 15078,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15107,
											"end": 15115,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15104,
											"end": 15105,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 15100,
											"end": 15116,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 15091,
											"end": 15116,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15091,
											"end": 15116,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15142,
											"end": 15145,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15135,
											"end": 15140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15132,
											"end": 15146,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15129,
											"end": 15169,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15129,
											"end": 15169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 15129,
											"end": 15169,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15149,
											"end": 15167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "625"
										},
										{
											"begin": 15149,
											"end": 15167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 15149,
											"end": 15167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15149,
											"end": 15167,
											"name": "tag",
											"source": 7,
											"value": "625"
										},
										{
											"begin": 15149,
											"end": 15167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15129,
											"end": 15169,
											"name": "tag",
											"source": 7,
											"value": "624"
										},
										{
											"begin": 15129,
											"end": 15169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15182,
											"end": 15187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15182,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 15182,
											"end": 15187,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14920,
											"end": 15197,
											"name": "tag",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 14920,
											"end": 15197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14920,
											"end": 15197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15306,
											"end": 15308,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15296,
											"end": 15304,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15293,
											"end": 15309,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15287,
											"end": 15290,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 15281,
											"end": 15285,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15278,
											"end": 15291,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15274,
											"end": 15310,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15256,
											"end": 15258,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 15246,
											"end": 15254,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15243,
											"end": 15259,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15238,
											"end": 15240,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 15232,
											"end": 15236,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15229,
											"end": 15241,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 15225,
											"end": 15260,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 15209,
											"end": 15320,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 15206,
											"end": 15452,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15206,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 15206,
											"end": 15452,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15362,
											"end": 15370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15356,
											"end": 15360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15352,
											"end": 15371,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15343,
											"end": 15371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15397,
											"end": 15400,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15390,
											"end": 15395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15387,
											"end": 15401,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15384,
											"end": 15424,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15384,
											"end": 15424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 15384,
											"end": 15424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "628"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 15404,
											"end": 15422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "tag",
											"source": 7,
											"value": "628"
										},
										{
											"begin": 15404,
											"end": 15422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15384,
											"end": 15424,
											"name": "tag",
											"source": 7,
											"value": "627"
										},
										{
											"begin": 15384,
											"end": 15424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15437,
											"end": 15442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 15437,
											"end": 15442,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15206,
											"end": 15452,
											"name": "tag",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 15206,
											"end": 15452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15477,
											"end": 15519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 15515,
											"end": 15518,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15505,
											"end": 15513,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15499,
											"end": 15503,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15496,
											"end": 15497,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 15477,
											"end": 15519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 15477,
											"end": 15519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15477,
											"end": 15519,
											"name": "tag",
											"source": 7,
											"value": "629"
										},
										{
											"begin": 15477,
											"end": 15519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15462,
											"end": 15519,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15462,
											"end": 15519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15462,
											"end": 15519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15462,
											"end": 15519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15551,
											"end": 15555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15546,
											"end": 15549,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15542,
											"end": 15556,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 15535,
											"end": 15540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15532,
											"end": 15557,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15580,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 15529,
											"end": 15580,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 15560,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "631"
										},
										{
											"begin": 15560,
											"end": 15578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 15560,
											"end": 15578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15560,
											"end": 15578,
											"name": "tag",
											"source": 7,
											"value": "631"
										},
										{
											"begin": 15560,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15529,
											"end": 15580,
											"name": "tag",
											"source": 7,
											"value": "630"
										},
										{
											"begin": 15529,
											"end": 15580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15609,
											"end": 15613,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15602,
											"end": 15607,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15598,
											"end": 15614,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 15589,
											"end": 15614,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15589,
											"end": 15614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 15620,
											"name": "tag",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 14547,
											"end": 15620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 15620,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 15620,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 15620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 15620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 15620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14547,
											"end": 15620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15626,
											"end": 15907,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 15626,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15684,
											"end": 15689,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15708,
											"end": 15731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "633"
										},
										{
											"begin": 15726,
											"end": 15730,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15708,
											"end": 15731,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 15708,
											"end": 15731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15708,
											"end": 15731,
											"name": "tag",
											"source": 7,
											"value": "633"
										},
										{
											"begin": 15708,
											"end": 15731,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15700,
											"end": 15731,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15700,
											"end": 15731,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15752,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 15768,
											"end": 15776,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15752,
											"end": 15777,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 15752,
											"end": 15777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15752,
											"end": 15777,
											"name": "tag",
											"source": 7,
											"value": "634"
										},
										{
											"begin": 15752,
											"end": 15777,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15740,
											"end": 15777,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15740,
											"end": 15777,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15796,
											"end": 15900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 15833,
											"end": 15899,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15823,
											"end": 15831,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15817,
											"end": 15821,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 15796,
											"end": 15900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 15796,
											"end": 15900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15796,
											"end": 15900,
											"name": "tag",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 15796,
											"end": 15900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15787,
											"end": 15900,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15787,
											"end": 15900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15626,
											"end": 15907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 15626,
											"end": 15907,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15626,
											"end": 15907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15626,
											"end": 15907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15626,
											"end": 15907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15913,
											"end": 16082,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 15913,
											"end": 16082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16053,
											"end": 16074,
											"name": "PUSH",
											"source": 7,
											"value": "416C72656164792077686974656C697374656400000000000000000000000000"
										},
										{
											"begin": 16049,
											"end": 16050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16041,
											"end": 16047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16037,
											"end": 16051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16030,
											"end": 16075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15913,
											"end": 16082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15913,
											"end": 16082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16088,
											"end": 16454,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 16088,
											"end": 16454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16230,
											"end": 16233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16251,
											"end": 16318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "638"
										},
										{
											"begin": 16315,
											"end": 16317,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 16310,
											"end": 16313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16251,
											"end": 16318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 16251,
											"end": 16318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16251,
											"end": 16318,
											"name": "tag",
											"source": 7,
											"value": "638"
										},
										{
											"begin": 16251,
											"end": 16318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16244,
											"end": 16318,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16244,
											"end": 16318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16327,
											"end": 16420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "639"
										},
										{
											"begin": 16416,
											"end": 16419,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16327,
											"end": 16420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 16327,
											"end": 16420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16327,
											"end": 16420,
											"name": "tag",
											"source": 7,
											"value": "639"
										},
										{
											"begin": 16327,
											"end": 16420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16445,
											"end": 16447,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16440,
											"end": 16443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16436,
											"end": 16448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16429,
											"end": 16448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16429,
											"end": 16448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16088,
											"end": 16454,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16088,
											"end": 16454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16088,
											"end": 16454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16088,
											"end": 16454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16460,
											"end": 16879,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 16460,
											"end": 16879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16626,
											"end": 16630,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16664,
											"end": 16666,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16653,
											"end": 16662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16649,
											"end": 16667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16641,
											"end": 16667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16641,
											"end": 16667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16713,
											"end": 16722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16707,
											"end": 16711,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16703,
											"end": 16723,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16699,
											"end": 16700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16688,
											"end": 16697,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16684,
											"end": 16701,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16677,
											"end": 16724,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16741,
											"end": 16872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 16867,
											"end": 16871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16741,
											"end": 16872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 16741,
											"end": 16872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16741,
											"end": 16872,
											"name": "tag",
											"source": 7,
											"value": "641"
										},
										{
											"begin": 16741,
											"end": 16872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16733,
											"end": 16872,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16733,
											"end": 16872,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16460,
											"end": 16879,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16460,
											"end": 16879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16460,
											"end": 16879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16460,
											"end": 16879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16885,
											"end": 17056,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 16885,
											"end": 17056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17025,
											"end": 17048,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F7420726566657220796F757273656C660000000000000000000000"
										},
										{
											"begin": 17021,
											"end": 17022,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17013,
											"end": 17019,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17009,
											"end": 17023,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17002,
											"end": 17049,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16885,
											"end": 17056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16885,
											"end": 17056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17062,
											"end": 17428,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 17062,
											"end": 17428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17204,
											"end": 17207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17225,
											"end": 17292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 17289,
											"end": 17291,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 17284,
											"end": 17287,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17225,
											"end": 17292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 17225,
											"end": 17292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17225,
											"end": 17292,
											"name": "tag",
											"source": 7,
											"value": "644"
										},
										{
											"begin": 17225,
											"end": 17292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17218,
											"end": 17292,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17218,
											"end": 17292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17301,
											"end": 17394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 17390,
											"end": 17393,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17301,
											"end": 17394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 17301,
											"end": 17394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17301,
											"end": 17394,
											"name": "tag",
											"source": 7,
											"value": "645"
										},
										{
											"begin": 17301,
											"end": 17394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17419,
											"end": 17421,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17414,
											"end": 17417,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17410,
											"end": 17422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17403,
											"end": 17422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17403,
											"end": 17422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17062,
											"end": 17428,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17062,
											"end": 17428,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17062,
											"end": 17428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17062,
											"end": 17428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17434,
											"end": 17853,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 17434,
											"end": 17853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17600,
											"end": 17604,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17638,
											"end": 17640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17627,
											"end": 17636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17623,
											"end": 17641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17615,
											"end": 17641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17687,
											"end": 17696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17681,
											"end": 17685,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17677,
											"end": 17697,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17673,
											"end": 17674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17662,
											"end": 17671,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17658,
											"end": 17675,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17651,
											"end": 17698,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17715,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 17841,
											"end": 17845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17715,
											"end": 17846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 17715,
											"end": 17846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17715,
											"end": 17846,
											"name": "tag",
											"source": 7,
											"value": "647"
										},
										{
											"begin": 17715,
											"end": 17846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17707,
											"end": 17846,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17707,
											"end": 17846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17434,
											"end": 17853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17434,
											"end": 17853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17434,
											"end": 17853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17434,
											"end": 17853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17859,
											"end": 18026,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 17859,
											"end": 18026,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17999,
											"end": 18018,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F20746F6B656E73207374616B65642E000000000000000000000000000000"
										},
										{
											"begin": 17995,
											"end": 17996,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17987,
											"end": 17993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17983,
											"end": 17997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17976,
											"end": 18019,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17859,
											"end": 18026,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17859,
											"end": 18026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18032,
											"end": 18398,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 18032,
											"end": 18398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18174,
											"end": 18177,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18195,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 18259,
											"end": 18261,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 18254,
											"end": 18257,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18195,
											"end": 18262,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 18195,
											"end": 18262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18195,
											"end": 18262,
											"name": "tag",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 18195,
											"end": 18262,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18188,
											"end": 18262,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18188,
											"end": 18262,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18271,
											"end": 18364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 18360,
											"end": 18363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18271,
											"end": 18364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 18271,
											"end": 18364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18271,
											"end": 18364,
											"name": "tag",
											"source": 7,
											"value": "651"
										},
										{
											"begin": 18271,
											"end": 18364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18389,
											"end": 18391,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18384,
											"end": 18387,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18380,
											"end": 18392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18373,
											"end": 18392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18373,
											"end": 18392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18032,
											"end": 18398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18032,
											"end": 18398,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18032,
											"end": 18398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18032,
											"end": 18398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18404,
											"end": 18823,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 18404,
											"end": 18823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18570,
											"end": 18574,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18608,
											"end": 18610,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18597,
											"end": 18606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18593,
											"end": 18611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18585,
											"end": 18611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18585,
											"end": 18611,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18657,
											"end": 18666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18651,
											"end": 18655,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18647,
											"end": 18667,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18643,
											"end": 18644,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18632,
											"end": 18641,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18628,
											"end": 18645,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18621,
											"end": 18668,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18685,
											"end": 18816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 18811,
											"end": 18815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18685,
											"end": 18816,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 18685,
											"end": 18816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18685,
											"end": 18816,
											"name": "tag",
											"source": 7,
											"value": "653"
										},
										{
											"begin": 18685,
											"end": 18816,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18677,
											"end": 18816,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18677,
											"end": 18816,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18404,
											"end": 18823,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18404,
											"end": 18823,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18404,
											"end": 18823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18404,
											"end": 18823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18829,
											"end": 19006,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 18829,
											"end": 19006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18969,
											"end": 18998,
											"name": "PUSH",
											"source": 7,
											"value": "556E7374616B65206F6E6C792061667465722034207765656B732E0000000000"
										},
										{
											"begin": 18965,
											"end": 18966,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18957,
											"end": 18963,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18953,
											"end": 18967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18946,
											"end": 18999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18829,
											"end": 19006,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18829,
											"end": 19006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19012,
											"end": 19378,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 19012,
											"end": 19378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19154,
											"end": 19157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19175,
											"end": 19242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 19239,
											"end": 19241,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 19234,
											"end": 19237,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19175,
											"end": 19242,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 19175,
											"end": 19242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19175,
											"end": 19242,
											"name": "tag",
											"source": 7,
											"value": "656"
										},
										{
											"begin": 19175,
											"end": 19242,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19168,
											"end": 19242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19168,
											"end": 19242,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19251,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "657"
										},
										{
											"begin": 19340,
											"end": 19343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19251,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 19251,
											"end": 19344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19251,
											"end": 19344,
											"name": "tag",
											"source": 7,
											"value": "657"
										},
										{
											"begin": 19251,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19369,
											"end": 19371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19364,
											"end": 19367,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19360,
											"end": 19372,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19353,
											"end": 19372,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19353,
											"end": 19372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19012,
											"end": 19378,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19012,
											"end": 19378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19012,
											"end": 19378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19012,
											"end": 19378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19384,
											"end": 19803,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 19384,
											"end": 19803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19550,
											"end": 19554,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19588,
											"end": 19590,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19577,
											"end": 19586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19573,
											"end": 19591,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19565,
											"end": 19591,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19565,
											"end": 19591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19637,
											"end": 19646,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19631,
											"end": 19635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19627,
											"end": 19647,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 19623,
											"end": 19624,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19612,
											"end": 19621,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19608,
											"end": 19625,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19601,
											"end": 19648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19665,
											"end": 19796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "659"
										},
										{
											"begin": 19791,
											"end": 19795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 19665,
											"end": 19796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 19665,
											"end": 19796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19665,
											"end": 19796,
											"name": "tag",
											"source": 7,
											"value": "659"
										},
										{
											"begin": 19665,
											"end": 19796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19657,
											"end": 19796,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19657,
											"end": 19796,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19384,
											"end": 19803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19384,
											"end": 19803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19384,
											"end": 19803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19384,
											"end": 19803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19809,
											"end": 20141,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 19809,
											"end": 20141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19930,
											"end": 19934,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19968,
											"end": 19970,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19957,
											"end": 19966,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19953,
											"end": 19971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19945,
											"end": 19971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19945,
											"end": 19971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19981,
											"end": 20052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 20049,
											"end": 20050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20038,
											"end": 20047,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20034,
											"end": 20051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20025,
											"end": 20031,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19981,
											"end": 20052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 19981,
											"end": 20052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19981,
											"end": 20052,
											"name": "tag",
											"source": 7,
											"value": "661"
										},
										{
											"begin": 19981,
											"end": 20052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20062,
											"end": 20134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 20130,
											"end": 20132,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20119,
											"end": 20128,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20115,
											"end": 20133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20106,
											"end": 20112,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 20062,
											"end": 20134,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 20062,
											"end": 20134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20062,
											"end": 20134,
											"name": "tag",
											"source": 7,
											"value": "662"
										},
										{
											"begin": 20062,
											"end": 20134,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19809,
											"end": 20141,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19809,
											"end": 20141,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19809,
											"end": 20141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19809,
											"end": 20141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19809,
											"end": 20141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19809,
											"end": 20141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20147,
											"end": 20313,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 20147,
											"end": 20313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20287,
											"end": 20305,
											"name": "PUSH",
											"source": 7,
											"value": "53616C65206E6F74206163746976652E00000000000000000000000000000000"
										},
										{
											"begin": 20283,
											"end": 20284,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20275,
											"end": 20281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20271,
											"end": 20285,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20264,
											"end": 20306,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20147,
											"end": 20313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20147,
											"end": 20313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20319,
											"end": 20685,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 20319,
											"end": 20685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20461,
											"end": 20464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20482,
											"end": 20549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 20546,
											"end": 20548,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 20541,
											"end": 20544,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20482,
											"end": 20549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 20482,
											"end": 20549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20482,
											"end": 20549,
											"name": "tag",
											"source": 7,
											"value": "665"
										},
										{
											"begin": 20482,
											"end": 20549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20475,
											"end": 20549,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20475,
											"end": 20549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20558,
											"end": 20651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 20647,
											"end": 20650,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20558,
											"end": 20651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 20558,
											"end": 20651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20558,
											"end": 20651,
											"name": "tag",
											"source": 7,
											"value": "666"
										},
										{
											"begin": 20558,
											"end": 20651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20676,
											"end": 20678,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20671,
											"end": 20674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20667,
											"end": 20679,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20660,
											"end": 20679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20660,
											"end": 20679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20319,
											"end": 20685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20319,
											"end": 20685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20319,
											"end": 20685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20319,
											"end": 20685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20691,
											"end": 21110,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 20691,
											"end": 21110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20857,
											"end": 20861,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20895,
											"end": 20897,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20884,
											"end": 20893,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20880,
											"end": 20898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20872,
											"end": 20898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20872,
											"end": 20898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20944,
											"end": 20953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20938,
											"end": 20942,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20934,
											"end": 20954,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20930,
											"end": 20931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20919,
											"end": 20928,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20915,
											"end": 20932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20908,
											"end": 20955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20972,
											"end": 21103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "668"
										},
										{
											"begin": 21098,
											"end": 21102,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20972,
											"end": 21103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 20972,
											"end": 21103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20972,
											"end": 21103,
											"name": "tag",
											"source": 7,
											"value": "668"
										},
										{
											"begin": 20972,
											"end": 21103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20964,
											"end": 21103,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20964,
											"end": 21103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20691,
											"end": 21110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20691,
											"end": 21110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20691,
											"end": 21110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20691,
											"end": 21110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21294,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 21116,
											"end": 21294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21256,
											"end": 21286,
											"name": "PUSH",
											"source": 7,
											"value": "4D7573742073656E642045544820746F2062757920746F6B656E732E00000000"
										},
										{
											"begin": 21252,
											"end": 21253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21244,
											"end": 21250,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21240,
											"end": 21254,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21233,
											"end": 21287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21116,
											"end": 21294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21300,
											"end": 21666,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 21300,
											"end": 21666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21442,
											"end": 21445,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21463,
											"end": 21530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 21527,
											"end": 21529,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 21522,
											"end": 21525,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21463,
											"end": 21530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 21463,
											"end": 21530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21463,
											"end": 21530,
											"name": "tag",
											"source": 7,
											"value": "671"
										},
										{
											"begin": 21463,
											"end": 21530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21456,
											"end": 21530,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21456,
											"end": 21530,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21539,
											"end": 21632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 21628,
											"end": 21631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21539,
											"end": 21632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 21539,
											"end": 21632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21539,
											"end": 21632,
											"name": "tag",
											"source": 7,
											"value": "672"
										},
										{
											"begin": 21539,
											"end": 21632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21657,
											"end": 21659,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21652,
											"end": 21655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21648,
											"end": 21660,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21641,
											"end": 21660,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21641,
											"end": 21660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21300,
											"end": 21666,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21300,
											"end": 21666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21300,
											"end": 21666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21300,
											"end": 21666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21672,
											"end": 22091,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 21672,
											"end": 22091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21838,
											"end": 21842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21876,
											"end": 21878,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21865,
											"end": 21874,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21861,
											"end": 21879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21853,
											"end": 21879,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21853,
											"end": 21879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21925,
											"end": 21934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21919,
											"end": 21923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21915,
											"end": 21935,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21911,
											"end": 21912,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21900,
											"end": 21909,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21896,
											"end": 21913,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21889,
											"end": 21936,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21953,
											"end": 22084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "674"
										},
										{
											"begin": 22079,
											"end": 22083,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21953,
											"end": 22084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 21953,
											"end": 22084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21953,
											"end": 22084,
											"name": "tag",
											"source": 7,
											"value": "674"
										},
										{
											"begin": 21953,
											"end": 22084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21945,
											"end": 22084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21945,
											"end": 22084,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21672,
											"end": 22091,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21672,
											"end": 22091,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21672,
											"end": 22091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21672,
											"end": 22091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22097,
											"end": 22382,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 22097,
											"end": 22382,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22157,
											"end": 22162,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22181,
											"end": 22204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "676"
										},
										{
											"begin": 22199,
											"end": 22203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22181,
											"end": 22204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 22181,
											"end": 22204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22181,
											"end": 22204,
											"name": "tag",
											"source": 7,
											"value": "676"
										},
										{
											"begin": 22181,
											"end": 22204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22173,
											"end": 22204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22173,
											"end": 22204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22225,
											"end": 22252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "677"
										},
										{
											"begin": 22243,
											"end": 22251,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22225,
											"end": 22252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 22225,
											"end": 22252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22225,
											"end": 22252,
											"name": "tag",
											"source": 7,
											"value": "677"
										},
										{
											"begin": 22225,
											"end": 22252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22213,
											"end": 22252,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22213,
											"end": 22252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22271,
											"end": 22375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "678"
										},
										{
											"begin": 22308,
											"end": 22374,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22298,
											"end": 22306,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22292,
											"end": 22296,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22271,
											"end": 22375,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 22271,
											"end": 22375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22271,
											"end": 22375,
											"name": "tag",
											"source": 7,
											"value": "678"
										},
										{
											"begin": 22271,
											"end": 22375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22262,
											"end": 22375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22262,
											"end": 22375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22097,
											"end": 22382,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 22097,
											"end": 22382,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22097,
											"end": 22382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22097,
											"end": 22382,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22097,
											"end": 22382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22388,
											"end": 22566,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 22388,
											"end": 22566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22528,
											"end": 22558,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000"
										},
										{
											"begin": 22524,
											"end": 22525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22516,
											"end": 22522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22512,
											"end": 22526,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22505,
											"end": 22559,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22388,
											"end": 22566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22388,
											"end": 22566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22572,
											"end": 22938,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 22572,
											"end": 22938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22714,
											"end": 22717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22735,
											"end": 22802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 22799,
											"end": 22801,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 22794,
											"end": 22797,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22735,
											"end": 22802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 22735,
											"end": 22802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22735,
											"end": 22802,
											"name": "tag",
											"source": 7,
											"value": "681"
										},
										{
											"begin": 22735,
											"end": 22802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22728,
											"end": 22802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22728,
											"end": 22802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22811,
											"end": 22904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "682"
										},
										{
											"begin": 22900,
											"end": 22903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22811,
											"end": 22904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 22811,
											"end": 22904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22811,
											"end": 22904,
											"name": "tag",
											"source": 7,
											"value": "682"
										},
										{
											"begin": 22811,
											"end": 22904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22929,
											"end": 22931,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22924,
											"end": 22927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22920,
											"end": 22932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22913,
											"end": 22932,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22913,
											"end": 22932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22572,
											"end": 22938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22572,
											"end": 22938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22572,
											"end": 22938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22572,
											"end": 22938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22944,
											"end": 23363,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 22944,
											"end": 23363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23110,
											"end": 23114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23148,
											"end": 23150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23137,
											"end": 23146,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23133,
											"end": 23151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23125,
											"end": 23151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23125,
											"end": 23151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23197,
											"end": 23206,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23191,
											"end": 23195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23187,
											"end": 23207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 23183,
											"end": 23184,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23172,
											"end": 23181,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23168,
											"end": 23185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23161,
											"end": 23208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23225,
											"end": 23356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 23351,
											"end": 23355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23225,
											"end": 23356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 23225,
											"end": 23356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23225,
											"end": 23356,
											"name": "tag",
											"source": 7,
											"value": "684"
										},
										{
											"begin": 23225,
											"end": 23356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23217,
											"end": 23356,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23217,
											"end": 23356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22944,
											"end": 23363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22944,
											"end": 23363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22944,
											"end": 23363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22944,
											"end": 23363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23369,
											"end": 23543,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 23369,
											"end": 23543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23509,
											"end": 23535,
											"name": "PUSH",
											"source": 7,
											"value": "5072652D73616C65206E6F742073746172746564207965740000000000000000"
										},
										{
											"begin": 23505,
											"end": 23506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23497,
											"end": 23503,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23493,
											"end": 23507,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23486,
											"end": 23536,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23369,
											"end": 23543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23369,
											"end": 23543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23549,
											"end": 23915,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 23549,
											"end": 23915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23691,
											"end": 23694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23712,
											"end": 23779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "687"
										},
										{
											"begin": 23776,
											"end": 23778,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 23771,
											"end": 23774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23712,
											"end": 23779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 23712,
											"end": 23779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23712,
											"end": 23779,
											"name": "tag",
											"source": 7,
											"value": "687"
										},
										{
											"begin": 23712,
											"end": 23779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23705,
											"end": 23779,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23705,
											"end": 23779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23788,
											"end": 23881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "688"
										},
										{
											"begin": 23877,
											"end": 23880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23788,
											"end": 23881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 23788,
											"end": 23881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23788,
											"end": 23881,
											"name": "tag",
											"source": 7,
											"value": "688"
										},
										{
											"begin": 23788,
											"end": 23881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23906,
											"end": 23908,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23901,
											"end": 23904,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23897,
											"end": 23909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23890,
											"end": 23909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23890,
											"end": 23909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23549,
											"end": 23915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23549,
											"end": 23915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23549,
											"end": 23915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23549,
											"end": 23915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23921,
											"end": 24340,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 23921,
											"end": 24340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24087,
											"end": 24091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24125,
											"end": 24127,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24114,
											"end": 24123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24110,
											"end": 24128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24102,
											"end": 24128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24102,
											"end": 24128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24174,
											"end": 24183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24168,
											"end": 24172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24164,
											"end": 24184,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 24160,
											"end": 24161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24149,
											"end": 24158,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24145,
											"end": 24162,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24138,
											"end": 24185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24202,
											"end": 24333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "690"
										},
										{
											"begin": 24328,
											"end": 24332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24202,
											"end": 24333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 24202,
											"end": 24333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24202,
											"end": 24333,
											"name": "tag",
											"source": 7,
											"value": "690"
										},
										{
											"begin": 24202,
											"end": 24333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24194,
											"end": 24333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24194,
											"end": 24333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23921,
											"end": 24340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23921,
											"end": 24340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23921,
											"end": 24340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23921,
											"end": 24340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24346,
											"end": 24788,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 24346,
											"end": 24788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24495,
											"end": 24499,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24533,
											"end": 24535,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 24522,
											"end": 24531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24518,
											"end": 24536,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24510,
											"end": 24536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24510,
											"end": 24536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24546,
											"end": 24617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "692"
										},
										{
											"begin": 24614,
											"end": 24615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24603,
											"end": 24612,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24599,
											"end": 24616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24590,
											"end": 24596,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 24546,
											"end": 24617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 24546,
											"end": 24617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24546,
											"end": 24617,
											"name": "tag",
											"source": 7,
											"value": "692"
										},
										{
											"begin": 24546,
											"end": 24617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 24699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "693"
										},
										{
											"begin": 24695,
											"end": 24697,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24684,
											"end": 24693,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24680,
											"end": 24698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24671,
											"end": 24677,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 24699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 24627,
											"end": 24699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24627,
											"end": 24699,
											"name": "tag",
											"source": 7,
											"value": "693"
										},
										{
											"begin": 24627,
											"end": 24699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24709,
											"end": 24781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "694"
										},
										{
											"begin": 24777,
											"end": 24779,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 24766,
											"end": 24775,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24762,
											"end": 24780,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24753,
											"end": 24759,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24709,
											"end": 24781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 24709,
											"end": 24781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24709,
											"end": 24781,
											"name": "tag",
											"source": 7,
											"value": "694"
										},
										{
											"begin": 24709,
											"end": 24781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24346,
											"end": 24788,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 24346,
											"end": 24788,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 24346,
											"end": 24788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24346,
											"end": 24788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24346,
											"end": 24788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24346,
											"end": 24788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24346,
											"end": 24788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SimpleToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"buyTokens()": "d0febe4c",
							"calculatePrice()": "d348b409",
							"calculatePriceIncrease()": "4405df4a",
							"calculateReferralReward(address)": "8265324d",
							"calculateStakingReward(address)": "0d505541",
							"calculateWeeksElapsed(uint256,uint256)": "2c663960",
							"decimals()": "313ce567",
							"getWalletBalance()": "329a27e7",
							"initialPrice()": "1d0806ae",
							"mintReferralReward()": "7c613b2f",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"preSaleEndTime()": "cce29ea7",
							"preSaleStartTime()": "06d65af3",
							"preSaleWeeksInWeeks()": "f8102e68",
							"presaleIsActive()": "30f72cd4",
							"referralCounts(address)": "cec297a0",
							"referrals(address)": "9ca423b3",
							"regularSalePrice()": "03e293a3",
							"renounceOwnership()": "715018a6",
							"signUpForWhitelist(address)": "a09c4cf4",
							"stakeTokens(uint256)": "7547c7a3",
							"stakedAmount(address)": "f9931855",
							"stakingRewardRate()": "4f3fc2df",
							"stakingTimestamp(address)": "8f0794fe",
							"startPreSale(uint256,uint256)": "f9a81af7",
							"symbol()": "95d89b41",
							"tokensSold()": "518ab2a8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unstakeTokens()": "a5ce413b",
							"weeklyIncreaseRate()": "7165d19b",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeklyIncreaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_regularSalePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"PreSaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"PreSaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"ReferralRewardMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"UserWhitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculatePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculatePriceIncrease\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"calculateReferralReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"calculateWeeksElapsed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWalletBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintReferralReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleWeeksInWeeks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleIsActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regularSalePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"signUpForWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_durationWeeks\",\"type\":\"uint256\"}],\"name\":\"startPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weeklyIncreaseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startPreSale(uint256,uint256)\":{\"params\":{\"_durationWeeks\":\"Duration of the pre-sale in weeks\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyTokens()\":{\"notice\":\"Buy tokens during the presale or regular sale.\"},\"startPreSale(uint256,uint256)\":{\"notice\":\"Start the pre-sale\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleToken.sol\":\"TokenPreSale\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SimpleToken.sol\":{\"keccak256\":\"0x602193a9cbd602f1ff0395540ef67e9fa9c6af5d41e4988b0afd3c5fe05bd7b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42081b2e7feb52cb68054497ea0652b4d1a1aee565efe95eb17ed53dcf54cbc3\",\"dweb:/ipfs/QmXwSjUioNtXemAFdJMyKqiZFgMLY54LNzPBEDgX4mF489\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "presaleIsActive",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 945,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "preSaleStartTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 947,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "preSaleEndTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 949,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "initialPrice",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 951,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "regularSalePrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "weeklyIncreaseRate",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 955,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "tokensSold",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 957,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "preSaleWeeksInWeeks",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 959,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingRewardRate",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 963,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakedAmount",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 967,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingTimestamp",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 971,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "whitelist",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 975,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "referrals",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 979,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "referralCounts",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 983,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "balances",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"buyTokens()": {
								"notice": "Buy tokens during the presale or regular sale."
							},
							"startPreSale(uint256,uint256)": {
								"notice": "Start the pre-sale"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/SimpleToken.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"TokenPreSale": [
							1582
						]
					},
					"id": 1583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1583,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1583,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"199:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "199:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "199:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"206:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "206:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:6"
								}
							],
							"canonicalName": "TokenPreSale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1582,
							"linearizedBaseContracts": [
								1582,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "TokenPreSale",
							"nameLocation": "183:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "30f72cd4",
									"id": 943,
									"mutability": "mutable",
									"name": "presaleIsActive",
									"nameLocation": "233:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "221:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 942,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "221:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06d65af3",
									"id": 945,
									"mutability": "mutable",
									"name": "preSaleStartTime",
									"nameLocation": "270:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "255:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "255:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cce29ea7",
									"id": 947,
									"mutability": "mutable",
									"name": "preSaleEndTime",
									"nameLocation": "308:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "293:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "293:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d0806ae",
									"id": 949,
									"mutability": "mutable",
									"name": "initialPrice",
									"nameLocation": "344:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "329:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "03e293a3",
									"id": 951,
									"mutability": "mutable",
									"name": "regularSalePrice",
									"nameLocation": "378:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "363:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7165d19b",
									"id": 953,
									"mutability": "mutable",
									"name": "weeklyIncreaseRate",
									"nameLocation": "416:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "401:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "401:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "518ab2a8",
									"id": 955,
									"mutability": "mutable",
									"name": "tokensSold",
									"nameLocation": "456:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "441:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8102e68",
									"id": 957,
									"mutability": "mutable",
									"name": "preSaleWeeksInWeeks",
									"nameLocation": "488:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "473:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "473:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f3fc2df",
									"id": 959,
									"mutability": "mutable",
									"name": "stakingRewardRate",
									"nameLocation": "529:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "514:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "514:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9931855",
									"id": 963,
									"mutability": "mutable",
									"name": "stakedAmount",
									"nameLocation": "588:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "553:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 962,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 960,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "561:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "553:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 961,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "572:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f0794fe",
									"id": 967,
									"mutability": "mutable",
									"name": "stakingTimestamp",
									"nameLocation": "642:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "607:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 966,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 964,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "615:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "607:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 965,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "626:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 971,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "697:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "665:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 970,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 968,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "673:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "665:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 969,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "684:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ca423b3",
									"id": 975,
									"mutability": "mutable",
									"name": "referrals",
									"nameLocation": "748:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "713:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 974,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 972,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "721:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "713:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 973,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cec297a0",
									"id": 979,
									"mutability": "mutable",
									"name": "referralCounts",
									"nameLocation": "799:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "764:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 978,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 976,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "772:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "764:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 977,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "783:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 983,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "855:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1582,
									"src": "820:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 982,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 980,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "828:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "820:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 981,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "839:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457",
									"id": 989,
									"name": "UserWhitelisted",
									"nameLocation": "878:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "910:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "894:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "932:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 989,
												"src": "916:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "893:48:6"
									},
									"src": "872:70:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d",
									"id": 995,
									"name": "ReferralRewardMinted",
									"nameLocation": "954:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "991:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "975:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1009:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "1001:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1001:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "974:48:6"
									},
									"src": "948:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef",
									"id": 1001,
									"name": "TokensStaked",
									"nameLocation": "1039:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1068:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1052:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1082:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1074:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:38:6"
									},
									"src": "1033:57:6"
								},
								{
									"anonymous": false,
									"eventSelector": "6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336",
									"id": 1009,
									"name": "TokensUnstaked",
									"nameLocation": "1102:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1133:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1117:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1139:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1163:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "1155:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1116:54:6"
									},
									"src": "1096:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 1017,
									"name": "TokensPurchased",
									"nameLocation": "1183:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1215:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1199:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1230:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1222:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "cost",
												"nameLocation": "1246:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1238:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:53:6"
									},
									"src": "1177:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d",
									"id": 1023,
									"name": "PreSaleStarted",
									"nameLocation": "1264:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1287:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "1279:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1279:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1306:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "1298:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1278:36:6"
									},
									"src": "1258:57:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e4e5d76599bd74efd04c1863d19fbf494d72c23a3276b9a5916804bfaa8b6e79",
									"id": 1027,
									"name": "PreSaleEnded",
									"nameLocation": "1327:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1348:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1340:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1339:17:6"
									},
									"src": "1321:36:6"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "1609:291:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1052,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1634:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1626:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1050,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1626:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1626:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1054,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1031,
																"src": "1641:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1655:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1056,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1661:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1661:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1655:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1641:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1049,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1620:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1620:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "1620:52:6"
											},
											{
												"expression": {
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1062,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1683:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1063,
														"name": "_initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "1698:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1683:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1683:28:6"
											},
											{
												"expression": {
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1066,
														"name": "weeklyIncreaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1722:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1067,
														"name": "_weeklyIncreaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "1743:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1722:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "1722:40:6"
											},
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1070,
														"name": "regularSalePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "1773:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1071,
														"name": "_regularSalePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "1792:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1773:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "1773:36:6"
											},
											{
												"expression": {
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1074,
														"name": "stakingRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "1820:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1075,
														"name": "_stakingRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "1840:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1820:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "1820:38:6"
											},
											{
												"expression": {
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1078,
														"name": "presaleIsActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "1869:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1887:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1869:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "1869:23:6"
											}
										]
									},
									"id": 1083,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e6174757265546f6b656e",
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1549:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d5ee8fd3c5f6584b265d5b0813f0e0aba2b11e4095f7ca2f0c140668f3acc419",
														"typeString": "literal_string \"NatureToken\""
													},
													"value": "NatureToken"
												},
												{
													"hexValue": "4e5452",
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1564:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_694d85ce3f345a420974bcb998758484b397dcf49ebe818a3483badd3fd4fecd",
														"typeString": "literal_string \"NTR\""
													},
													"value": "NTR"
												}
											],
											"id": 1044,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1041,
												"name": "ERC20",
												"nameLocations": [
													"1543:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1543:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1543:27:6"
										},
										{
											"arguments": [
												{
													"id": 1046,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1029,
													"src": "1589:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1047,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1045,
												"name": "Ownable",
												"nameLocations": [
													"1581:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1581:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1581:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1391:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1383:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "1413:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1405:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1405:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_initialPrice",
												"nameLocation": "1434:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1426:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_weeklyIncreaseRate",
												"nameLocation": "1457:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1449:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "_regularSalePrice",
												"nameLocation": "1486:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1478:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "_stakingRewardRate",
												"nameLocation": "1513:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "1505:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:150:6"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1609:0:6"
									},
									"scope": 1582,
									"src": "1371:529:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "1970:426:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1989:22:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1089,
																	"name": "whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "1990:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1092,
																"indexExpression": {
																	"expression": {
																		"id": 1090,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2000:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2004:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2000:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1990:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792077686974656c6973746564",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2013:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																"typeString": "literal_string \"Already whitelisted\""
															},
															"value": "Already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																"typeString": "literal_string \"Already whitelisted\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1981:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "1981:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1098,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2054:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2058:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2054:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1100,
																"name": "referral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1085,
																"src": "2068:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2054:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726566657220796f757273656c66",
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2078:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															},
															"value": "Cannot refer yourself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															}
														],
														"id": 1097,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2046:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2046:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "2046:56:6"
											},
											{
												"expression": {
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1105,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "2123:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1108,
														"indexExpression": {
															"expression": {
																"id": 1106,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2133:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2137:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2133:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2123:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2147:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2123:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "2123:28:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1112,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "2176:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2196:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2188:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1113,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2188:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2188:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2176:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"baseExpression": {
															"id": 1118,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "2202:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1120,
														"indexExpression": {
															"id": 1119,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "2212:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2202:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2176:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "2172:154:6",
												"trueBody": {
													"id": 1135,
													"nodeType": "Block",
													"src": "2223:103:6",
													"statements": [
														{
															"expression": {
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1122,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "2238:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1125,
																	"indexExpression": {
																		"expression": {
																			"id": 1123,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2248:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2252:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2248:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2238:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1126,
																	"name": "referral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "2262:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2238:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1128,
															"nodeType": "ExpressionStatement",
															"src": "2238:32:6"
														},
														{
															"expression": {
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1129,
																		"name": "referralCounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "2285:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1131,
																	"indexExpression": {
																		"id": 1130,
																		"name": "referral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "2300:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2285:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2313:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2285:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1134,
															"nodeType": "ExpressionStatement",
															"src": "2285:29:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1138,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2367:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2371:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2367:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1140,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "2379:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1137,
														"name": "UserWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "2351:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2351:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "EmitStatement",
												"src": "2346:42:6"
											}
										]
									},
									"functionSelector": "a09c4cf4",
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signUpForWhitelist",
									"nameLocation": "1924:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "1951:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "1943:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:18:6"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1970:0:6"
									},
									"scope": 1582,
									"src": "1915:481:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "2489:75:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1151,
																"name": "referralCounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "2507:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1153,
															"indexExpression": {
																"id": 1152,
																"name": "referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "2522:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2507:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "353030",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														"src": "2507:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2540:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1157,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "2546:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2546:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2540:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2507:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1161,
												"nodeType": "Return",
												"src": "2500:56:6"
											}
										]
									},
									"functionSelector": "8265324d",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReferralReward",
									"nameLocation": "2417:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "2449:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2441:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:18:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "2480:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:9:6"
									},
									"scope": 1582,
									"src": "2408:156:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "2669:207:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1173,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "2688:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1174,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "2699:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2688:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e642074696d65206d7573742062652061667465722073746172742074696d65",
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2710:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
																"typeString": "literal_string \"End time must be after start time\""
															},
															"value": "End time must be after start time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
																"typeString": "literal_string \"End time must be after start time\""
															}
														],
														"id": 1172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2680:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "2680:66:6"
											},
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "weeksElapsed",
														"nameLocation": "2765:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "2757:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2757:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1187,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1181,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1167,
																	"src": "2781:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1182,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "2791:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2781:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1184,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2780:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "363034383030",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2804:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "604800"
													},
													"src": "2780:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2757:53:6"
											},
											{
												"expression": {
													"id": 1188,
													"name": "weeksElapsed",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1180,
													"src": "2856:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1189,
												"nodeType": "Return",
												"src": "2849:19:6"
											}
										]
									},
									"functionSelector": "2c663960",
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateWeeksElapsed",
									"nameLocation": "2581:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "2611:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2603:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "2630:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2622:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2602:36:6"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "2660:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2660:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2659:9:6"
									},
									"scope": 1582,
									"src": "2572:304:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "2925:377:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1195,
																"name": "presaleIsActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "2948:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2965:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2948:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206e6f74207374617274656420796574",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2970:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f",
																"typeString": "literal_string \"Presale not started yet\""
															},
															"value": "Presale not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f",
																"typeString": "literal_string \"Presale not started yet\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2940:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2940:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "2940:56:6"
											},
											{
												"assignments": [
													1202
												],
												"declarations": [
													{
														"constant": false,
														"id": 1202,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "3019:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1234,
														"src": "3011:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3011:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3058:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3062:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3058:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1203,
														"name": "calculateReferralReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3034:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3034:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3011:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1209,
																"name": "rewardAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1202,
																"src": "3092:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3107:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3092:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320617661696c61626c65",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3110:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															},
															"value": "No rewards available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															}
														],
														"id": 1208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3084:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3084:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "3084:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1216,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3154:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3158:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3154:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "3166:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1215,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "3148:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3148:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "3148:31:6"
											},
											{
												"expression": {
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1221,
															"name": "referralCounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3194:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1224,
														"indexExpression": {
															"expression": {
																"id": 1222,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3209:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3213:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3209:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3194:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3223:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3194:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "3194:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1229,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3265:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3269:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3265:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1231,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1202,
															"src": "3277:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1228,
														"name": "ReferralRewardMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "3244:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3244:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "EmitStatement",
												"src": "3239:51:6"
											}
										]
									},
									"functionSelector": "7c613b2f",
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintReferralReward",
									"nameLocation": "2895:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:6"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2925:0:6"
									},
									"scope": 1582,
									"src": "2886:416:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "3512:353:6",
										"statements": [
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1245,
														"name": "preSaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "3611:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1246,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "3630:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3611:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "3611:29:6"
											},
											{
												"expression": {
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "preSaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "3651:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1250,
															"name": "preSaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3668:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1251,
																		"name": "_durationWeeks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "3688:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3705:7:6",
																		"subdenomination": "weeks",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_604800_by_1",
																			"typeString": "int_const 604800"
																		},
																		"value": "1"
																	},
																	"src": "3688:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1254,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3687:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3668:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3651:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1257,
												"nodeType": "ExpressionStatement",
												"src": "3651:62:6"
											},
											{
												"expression": {
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1258,
														"name": "preSaleWeeksInWeeks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3724:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1259,
														"name": "_durationWeeks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "3746:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3724:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "3724:36:6"
											},
											{
												"expression": {
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1262,
														"name": "presaleIsActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3771:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1263,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3789:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3771:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "3771:22:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1267,
															"name": "preSaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3824:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1268,
															"name": "preSaleEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "3842:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1266,
														"name": "PreSaleStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "3809:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3809:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1270,
												"nodeType": "EmitStatement",
												"src": "3804:53:6"
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "3310:111:6",
										"text": " @notice Start the pre-sale\n @param _durationWeeks Duration of the pre-sale in weeks"
									},
									"functionSelector": "f9a81af7",
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1242,
												"name": "onlyOwner",
												"nameLocations": [
													"3502:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3502:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3502:9:6"
										}
									],
									"name": "startPreSale",
									"nameLocation": "3436:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "3457:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "3449:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_durationWeeks",
												"nameLocation": "3477:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "3469:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:44:6"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3512:0:6"
									},
									"scope": 1582,
									"src": "3427:438:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "3937:235:6",
										"statements": [
											{
												"assignments": [
													1278
												],
												"declarations": [
													{
														"constant": false,
														"id": 1278,
														"mutability": "mutable",
														"name": "weeksElapsed",
														"nameLocation": "3956:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1299,
														"src": "3948:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3948:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"arguments": [
														{
															"id": 1280,
															"name": "preSaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3992:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1281,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4010:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4016:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4010:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1279,
														"name": "calculateWeeksElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "3970:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3970:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3948:78:6"
											},
											{
												"assignments": [
													1286
												],
												"declarations": [
													{
														"constant": false,
														"id": 1286,
														"mutability": "mutable",
														"name": "priceIncrease",
														"nameLocation": "4045:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1299,
														"src": "4037:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1285,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4037:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1287,
																				"name": "regularSalePrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 951,
																				"src": "4063:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1288,
																				"name": "initialPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 949,
																				"src": "4082:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4063:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1290,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4062:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1291,
																	"name": "weeksElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1278,
																	"src": "4098:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4062:48:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1293,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4061:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1294,
														"name": "preSaleWeeksInWeeks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "4114:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4061:72:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4037:96:6"
											},
											{
												"expression": {
													"id": 1297,
													"name": "priceIncrease",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1286,
													"src": "4151:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1276,
												"id": 1298,
												"nodeType": "Return",
												"src": "4144:20:6"
											}
										]
									},
									"functionSelector": "4405df4a",
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePriceIncrease",
									"nameLocation": "3883:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3905:2:6"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "3929:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3929:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3928:9:6"
									},
									"scope": 1582,
									"src": "3874:298:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "4244:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1306,
															"name": "presaleIsActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4263:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072652d73616c65206e6f74207374617274656420796574",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4279:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82",
																"typeString": "literal_string \"Pre-sale not started yet\""
															},
															"value": "Pre-sale not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82",
																"typeString": "literal_string \"Pre-sale not started yet\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4255:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "4255:51:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1310,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4322:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4328:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4322:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1312,
														"name": "preSaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4340:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4322:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1317,
												"nodeType": "IfStatement",
												"src": "4317:89:6",
												"trueBody": {
													"id": 1316,
													"nodeType": "Block",
													"src": "4356:50:6",
													"statements": [
														{
															"expression": {
																"id": 1314,
																"name": "regularSalePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "4378:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1304,
															"id": 1315,
															"nodeType": "Return",
															"src": "4371:23:6"
														}
													]
												}
											},
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "priceIncrease",
														"nameLocation": "4426:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "4418:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4418:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1320,
														"name": "calculatePriceIncrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1300,
														"src": "4442:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4442:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4418:48:6"
											},
											{
												"assignments": [
													1324
												],
												"declarations": [
													{
														"constant": false,
														"id": 1324,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "4485:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1331,
														"src": "4477:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1323,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4477:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1328,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1325,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4500:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1326,
														"name": "priceIncrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "4513:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4500:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4477:49:6"
											},
											{
												"expression": {
													"id": 1329,
													"name": "currentPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1324,
													"src": "4544:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1304,
												"id": 1330,
												"nodeType": "Return",
												"src": "4537:19:6"
											}
										]
									},
									"functionSelector": "d348b409",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePrice",
									"nameLocation": "4197:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4211:2:6"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "4235:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4234:9:6"
									},
									"scope": 1582,
									"src": "4188:376:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "4679:587:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1337,
															"name": "presaleIsActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4694:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206e6f74206163746976652e",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4711:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd",
																"typeString": "literal_string \"Sale not active.\""
															},
															"value": "Sale not active."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd",
																"typeString": "literal_string \"Sale not active.\""
															}
														],
														"id": 1336,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4686:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "4686:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1342,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4749:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4745:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4757:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4745:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642045544820746f2062757920746f6b656e732e",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4760:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76",
																"typeString": "literal_string \"Must send ETH to buy tokens.\""
															},
															"value": "Must send ETH to buy tokens."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76",
																"typeString": "literal_string \"Must send ETH to buy tokens.\""
															}
														],
														"id": 1341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4737:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4737:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "4737:54:6"
											},
											{
												"assignments": [
													1350
												],
												"declarations": [
													{
														"constant": false,
														"id": 1350,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "4808:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "4800:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4800:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1353,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1351,
														"name": "calculatePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "4823:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4800:39:6"
											},
											{
												"assignments": [
													1355
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "4892:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1413,
														"src": "4884:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1354,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4884:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1369,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1356,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4907:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4911:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "4907:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4919:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1361,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 363,
																					"src": "4933:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																						"typeString": "function () view returns (uint8)"
																					}
																				},
																				"id": 1362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4933:10:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4925:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1359,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "4925:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4925:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4919:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4907:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1366,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4906:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1367,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "4948:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4906:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4884:76:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1374,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4993:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																					"typeString": "contract TokenPreSale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																					"typeString": "contract TokenPreSale"
																				}
																			],
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4985:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1372,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4985:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4985:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1371,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "4975:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4975:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1377,
																"name": "tokensToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "5003:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4975:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5016:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																"typeString": "literal_string \"Not enough tokens available.\""
															},
															"value": "Not enough tokens available."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																"typeString": "literal_string \"Not enough tokens available.\""
															}
														],
														"id": 1370,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4967:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4967:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "4967:80:6"
											},
											{
												"expression": {
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1382,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "5054:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1385,
														"indexExpression": {
															"expression": {
																"id": 1383,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5063:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5067:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5063:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5054:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1386,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "5078:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5054:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "5054:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1392,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5114:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5106:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1390,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5106:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5106:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1394,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5121:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5125:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5121:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1396,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "5133:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1389,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5096:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5096:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "5096:49:6"
											},
											{
												"expression": {
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1399,
														"name": "tokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "5152:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1400,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "5166:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5152:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "5152:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1406,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5208:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5200:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5200:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5200:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1408,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5215:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5219:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5215:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1410,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "5227:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1403,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "5191:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5191:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "EmitStatement",
												"src": "5186:53:6"
											}
										]
									},
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "4572:67:6",
										"text": " @notice Buy tokens during the presale or regular sale."
									},
									"functionSelector": "d0febe4c",
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "4650:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4659:2:6"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4679:0:6"
									},
									"scope": 1582,
									"src": "4641:625:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "5327:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1419,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "5341:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1422,
													"indexExpression": {
														"expression": {
															"id": 1420,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5350:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5354:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5350:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5341:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1418,
												"id": 1423,
												"nodeType": "Return",
												"src": "5334:27:6"
											}
										]
									},
									"functionSelector": "329a27e7",
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWalletBalance",
									"nameLocation": "5279:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5295:2:6"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1425,
												"src": "5319:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5319:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:9:6"
									},
									"scope": 1582,
									"src": "5270:97:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1478,
										"nodeType": "Block",
										"src": "5423:358:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "5442:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5451:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5442:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5454:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
																"typeString": "literal_string \"Amount must be greater than zero.\""
															},
															"value": "Amount must be greater than zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
																"typeString": "literal_string \"Amount must be greater than zero.\""
															}
														],
														"id": 1430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5434:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5434:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "5434:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1439,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5519:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5523:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5519:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1438,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "5509:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5509:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1442,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1427,
																"src": "5534:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5509:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e63652e",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5542:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															},
															"value": "Insufficient balance."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															}
														],
														"id": 1437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5501:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5501:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1446,
												"nodeType": "ExpressionStatement",
												"src": "5501:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1448,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5589:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5593:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5589:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1452,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5609:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5601:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5601:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5601:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1454,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "5616:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1447,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5579:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5579:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1456,
												"nodeType": "ExpressionStatement",
												"src": "5579:44:6"
											},
											{
												"expression": {
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1457,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5634:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1460,
														"indexExpression": {
															"expression": {
																"id": 1458,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5647:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5651:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5647:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5634:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1461,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "5662:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5634:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "5634:34:6"
											},
											{
												"expression": {
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1464,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "5679:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1467,
														"indexExpression": {
															"expression": {
																"id": 1465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5696:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5700:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5696:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5679:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1468,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5710:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5710:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5679:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "5679:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1473,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5754:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5758:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5754:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "5766:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1472,
														"name": "TokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "5741:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "EmitStatement",
												"src": "5736:37:6"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 1479,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeTokens",
									"nameLocation": "5386:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5406:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "5398:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5397:16:6"
									},
									"returnParameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5423:0:6"
									},
									"scope": 1582,
									"src": "5377:404:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1549,
										"nodeType": "Block",
										"src": "5823:497:6",
										"statements": [
											{
												"assignments": [
													1483
												],
												"declarations": [
													{
														"constant": false,
														"id": 1483,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5842:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1549,
														"src": "5834:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1482,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5834:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1488,
												"initialValue": {
													"baseExpression": {
														"id": 1484,
														"name": "stakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "5851:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1487,
													"indexExpression": {
														"expression": {
															"id": 1485,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5864:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5868:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5864:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5851:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5834:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1490,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "5894:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5903:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5894:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73207374616b65642e",
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5906:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
																"typeString": "literal_string \"No tokens staked.\""
															},
															"value": "No tokens staked."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
																"typeString": "literal_string \"No tokens staked.\""
															}
														],
														"id": 1489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5886:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1495,
												"nodeType": "ExpressionStatement",
												"src": "5886:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1497,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5945:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5951:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5945:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1499,
																		"name": "stakingTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "5964:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1502,
																	"indexExpression": {
																		"expression": {
																			"id": 1500,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5981:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5985:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5981:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5964:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5995:7:6",
																	"subdenomination": "weeks",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2419200_by_1",
																		"typeString": "int_const 2419200"
																	},
																	"value": "4"
																},
																"src": "5964:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5945:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b65206f6e6c792061667465722034207765656b732e",
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6004:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254",
																"typeString": "literal_string \"Unstake only after 4 weeks.\""
															},
															"value": "Unstake only after 4 weeks."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254",
																"typeString": "literal_string \"Unstake only after 4 weeks.\""
															}
														],
														"id": 1496,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5937:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5937:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "5937:97:6"
											},
											{
												"assignments": [
													1510
												],
												"declarations": [
													{
														"constant": false,
														"id": 1510,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6063:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1549,
														"src": "6055:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1509,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6055:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1515,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1512,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6095:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6099:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6095:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1511,
														"name": "calculateStakingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "6072:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6072:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6055:51:6"
											},
											{
												"expression": {
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1516,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "6117:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1519,
														"indexExpression": {
															"expression": {
																"id": 1517,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6130:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6134:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6130:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6117:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6144:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6117:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "6117:28:6"
											},
											{
												"expression": {
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1523,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "6156:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1526,
														"indexExpression": {
															"expression": {
																"id": 1524,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6173:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6177:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6173:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6156:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6187:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6156:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "6156:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1533,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6219:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1582",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6211:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1531,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6211:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6211:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1535,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6226:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6230:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6226:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1537,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1483,
																"src": "6238:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1538,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "6247:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6238:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1530,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "6201:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "6201:53:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1543,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6285:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6289:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6285:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "6297:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1546,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "6305:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1542,
														"name": "TokensUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "6270:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6270:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1548,
												"nodeType": "EmitStatement",
												"src": "6265:47:6"
											}
										]
									},
									"functionSelector": "a5ce413b",
									"id": 1550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeTokens",
									"nameLocation": "5798:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5811:2:6"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5823:0:6"
									},
									"scope": 1582,
									"src": "5789:531:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "6404:171:6",
										"statements": [
											{
												"assignments": [
													1558
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"mutability": "mutable",
														"name": "weeksStaked",
														"nameLocation": "6423:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "6415:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6415:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1568,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1559,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6438:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6444:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6438:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1561,
																		"name": "stakingTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "6456:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1563,
																	"indexExpression": {
																		"id": 1562,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "6473:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6456:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6438:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1565,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6437:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6482:7:6",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "1"
													},
													"src": "6437:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6415:74:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1569,
																			"name": "stakedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 963,
																			"src": "6508:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1571,
																		"indexExpression": {
																			"id": 1570,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1552,
																			"src": "6521:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6508:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1572,
																		"name": "stakingRewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "6529:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6508:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1574,
																	"name": "weeksStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "6549:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6508:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1576,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6507:54:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6564:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "6507:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1556,
												"id": 1579,
												"nodeType": "Return",
												"src": "6500:67:6"
											}
										]
									},
									"functionSelector": "0d505541",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingReward",
									"nameLocation": "6337:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6368:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "6360:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6360:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6359:14:6"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "6395:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6395:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6394:9:6"
									},
									"scope": 1582,
									"src": "6328:247:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1583,
							"src": "174:6408:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								989,
								995,
								1001,
								1009,
								1017,
								1023,
								1027
							]
						}
					],
					"src": "33:6551:6"
				},
				"id": 6
			}
		}
	}
}