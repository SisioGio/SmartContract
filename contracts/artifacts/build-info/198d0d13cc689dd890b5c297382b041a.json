{
	"id": "198d0d13cc689dd890b5c297382b041a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TokenPreSale is ERC20, Ownable {\r\n    bool public presaleIsActive;\r\n    uint256 public preSaleStartTime;\r\n    uint256 public preSaleEndTime;\r\n    uint256 public initialPrice;\r\n    uint256 public regularSalePrice;\r\n    \r\n    uint256 public tokensSold;\r\n    uint256 public preSaleSteps;\r\n    uint256 public stakingRewardRate;\r\n    uint256 public minUnstakingPeriod;\r\n    uint256 public stakingRewardFrequency;\r\n\r\n    mapping(address => uint256) public stakedAmount;\r\n    mapping(address => uint256) public stakingTimestamp;\r\n    mapping(address => bool) public whitelist;\r\n    mapping(address => address) public referrals;\r\n    mapping(address => uint256) public referralCounts;\r\n    mapping(address => uint256) public balances;\r\n\r\n    event UserWhitelisted(address indexed user, address indexed referral);\r\n    event ReferralRewardMinted(address indexed referrer, uint256 rewardAmount);\r\n\r\n\r\n    event TokensStaked(address indexed user, uint256 amount);\r\n    event TokensUnstaked(address indexed user, uint256 amount, uint256 reward);\r\n    event TokensPurchased(address indexed buyer, uint256 amount, uint256 cost);\r\n    event PreSaleStarted(uint256 startTime, uint256 endTime);\r\n    event PreSaleEnded(uint256 endTime);\r\n\r\n    \r\n    constructor(address initialOwner, uint256 totalSupply, uint256 _initialPrice, uint256 _regularSalePrice, uint256 _stakingRewardRate,uint256 _minUnstakingPeriod,uint256 _stakingRewardFrequency ) \r\n        ERC20(\"NatureToken\", \"NTR\") \r\n        Ownable(initialOwner) \r\n    {\r\n        _mint(address(this), totalSupply );\r\n        initialPrice = _initialPrice;\r\n        regularSalePrice = _regularSalePrice;\r\n        stakingRewardRate = _stakingRewardRate;\r\n        presaleIsActive = false;\r\n        minUnstakingPeriod  = _minUnstakingPeriod;\r\n        stakingRewardFrequency = _stakingRewardFrequency;\r\n    }\r\n\r\n    \r\n\r\n     function signUpForWhitelist(address referral) external {\r\n        require(!whitelist[msg.sender], \"Already whitelisted\");\r\n        require(msg.sender != referral, \"Cannot refer yourself\");\r\n        \r\n        whitelist[msg.sender] = true;\r\n        \r\n        if (referral != address(0) && whitelist[referral]) {\r\n            referrals[msg.sender] = referral;\r\n            referralCounts[referral] += 1;\r\n        }\r\n        \r\n        emit UserWhitelisted(msg.sender, referral);\r\n    }\r\n    \r\n    function calculateReferralReward() public view returns (uint256) {\r\n\r\n        return referralCounts[msg.sender] * 500 * 10 ** decimals();\r\n    }\r\n\r\n    function mintReferralReward() external {\r\n            require(presaleIsActive==true,\"Presale not started yet\");\r\n            uint256 rewardAmount = calculateReferralReward();\r\n            require(rewardAmount > 0, \"No rewards available\");\r\n            _mint(msg.sender, rewardAmount);\r\n            referralCounts[msg.sender] = 0;\r\n            emit ReferralRewardMinted(msg.sender, rewardAmount);\r\n        }\r\n\r\n    /**\r\n     * @notice Start the pre-sale\r\n     */\r\n    function startPreSale(uint256 _startTime, uint256 _endTime, uint256 steps) external onlyOwner {\r\n        // require(_startTime >= block.timestamp, \"Start time must be in the future\");\r\n        preSaleStartTime = _startTime;\r\n        preSaleEndTime = _endTime;\r\n        preSaleSteps = steps;\r\n        \r\n        presaleIsActive = true;\r\n        emit PreSaleStarted(preSaleStartTime, preSaleEndTime);\r\n    } \r\n    function calculateStepsElapsed(uint256 startTime, uint256 endTime) public view returns (uint256) {\r\n            require(endTime >= startTime, \"End time must be after start time\");\r\n            uint256 stepsElapsed = (endTime - startTime) / (preSaleEndTime-preSaleStartTime)/preSaleSteps; \r\n            return stepsElapsed;\r\n        }\r\n    function getCurrentStep() public view returns (uint256){\r\n        require(block.timestamp >= preSaleStartTime, \"End time must be after start time\");\r\n            uint256 stepsElapsed = (block.timestamp - preSaleStartTime) / (preSaleEndTime-preSaleStartTime)/preSaleSteps;\r\n            return stepsElapsed;\r\n    }\r\n    function calculatePriceIncrease() public view returns (uint256){\r\n        uint256 stepsElapsed =calculateStepsElapsed(preSaleStartTime, block.timestamp);\r\n        uint256 priceIncrease = ((regularSalePrice - initialPrice) * stepsElapsed) / preSaleSteps;\r\n        return priceIncrease;\r\n    }\r\n\r\n\r\n    \r\n    function calculatePrice() public view returns (uint256) {\r\n        require(presaleIsActive,\"Pre-sale not started yet\");\r\n        if ( block.timestamp > preSaleEndTime) {\r\n            return regularSalePrice;\r\n        }\r\n\r\n        uint256 priceIncrease = calculatePriceIncrease();\r\n        uint256 currentPrice = initialPrice+priceIncrease;\r\n        return currentPrice;\r\n    }\r\n\r\n    /**\r\n    * @notice Buy tokens during the presale or regular sale.\r\n    */\r\n    function buyTokens() external payable {\r\n        require(presaleIsActive, \"Sale not active.\");\r\n        require(msg.value > 0, \"Must send ETH to buy tokens.\");\r\n\r\n        uint256 currentPrice = calculatePrice(); // Call the calculatePrice function\r\n\r\n        uint256 tokensToBuy = (msg.value) / currentPrice;\r\n        require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\");\r\n        balances[msg.sender] += tokensToBuy;\r\n        _transfer(address(this), msg.sender, tokensToBuy);\r\n        tokensSold += tokensToBuy;\r\n\r\n        emit Transfer(address(this), msg.sender, tokensToBuy); // Emit transfer event\r\n    }\r\n\r\n\r\n    function getBalance() public view returns (uint256){\r\n        return balanceOf(msg.sender);\r\n\r\n    }\r\n\r\n    function stakeTokens(uint256 amount) external {\r\n        require(amount > 0, \"Amount must be greater than zero.\");\r\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\");\r\n\r\n        _transfer(msg.sender, address(this), amount);\r\n        stakedAmount[msg.sender] += amount;\r\n        stakingTimestamp[msg.sender] = block.timestamp;\r\n        emit TokensStaked(msg.sender, amount);\r\n    }\r\n\r\n    function unstakeTokens() external {\r\n        uint256 amount = stakedAmount[msg.sender];\r\n        require(amount > 0, \"No tokens staked.\");\r\n        require(block.timestamp >= stakingTimestamp[msg.sender] + minUnstakingPeriod, \"Unstake only after 4 weeks.\");\r\n        \r\n        uint256 reward = calculateStakingReward();\r\n        stakedAmount[msg.sender] = 0;\r\n        stakingTimestamp[msg.sender] = 0;\r\n\r\n        _transfer(address(this), msg.sender, amount + reward);\r\n        emit TokensUnstaked(msg.sender, amount, reward);\r\n    }\r\n\r\n    function calculateStakingReward() public view returns (uint256) {\r\n        uint256 periodsStaked = (block.timestamp - stakingTimestamp[msg.sender]) / stakingRewardFrequency;\r\n        return (stakedAmount[msg.sender] * stakingRewardRate * periodsStaked) / 100;\r\n    }\r\n\r\n    function getStackedTokens() public view returns (uint256) {\r\n            \r\n            return stakedAmount[msg.sender];\r\n    }\r\n\r\n    function getStackingPeriod() public view returns (uint256) {\r\n            \r\n            return stakingTimestamp[msg.sender] + minUnstakingPeriod;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SimpleToken.sol": {
				"TokenPreSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_initialPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_regularSalePrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakingRewardRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minUnstakingPeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakingRewardFrequency",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "PreSaleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "PreSaleStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "ReferralRewardMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "TokensUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referral",
									"type": "address"
								}
							],
							"name": "UserWhitelisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculatePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculatePriceIncrease",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateReferralReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculateStakingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "calculateStepsElapsed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentStep",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStackedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStackingPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minUnstakingPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintReferralReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleSteps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleIsActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referralCounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referrals",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "regularSalePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referral",
									"type": "address"
								}
							],
							"name": "signUpForWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingRewardFrequency",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_endTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "steps",
									"type": "uint256"
								}
							],
							"name": "startPreSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleToken.sol\":174:7256  contract TokenPreSale is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleToken.sol\":1416:2019  constructor(address initialOwner, uint256 totalSupply, uint256 _initialPrice, uint256 _regularSalePrice, uint256 _stakingRewardRate,uint256 _minUnstakingPeriod,uint256 _stakingRewardFrequency ) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SimpleToken.sol\":1666:1678  initialOwner */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa9, 0x2730ba3ab932aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe9, 0x272a29)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3778:3829   */\n  mstore\n    /* \"#utility.yul\":3751:3769   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/SimpleToken.sol\":1697:1731  _mint(address(this), totalSupply ) */\n  tag_18\n    /* \"contracts/SimpleToken.sol\":1711:1715  this */\n  address\n    /* \"contracts/SimpleToken.sol\":1718:1729  totalSupply */\n  dup8\n    /* \"contracts/SimpleToken.sol\":1697:1702  _mint */\n  tag_19\n    /* \"contracts/SimpleToken.sol\":1697:1731  _mint(address(this), totalSupply ) */\n  jump\t// in\ntag_18:\n    /* \"contracts/SimpleToken.sol\":1742:1754  initialPrice */\n  0x08\n    /* \"contracts/SimpleToken.sol\":1742:1770  initialPrice = _initialPrice */\n  swap5\n  swap1\n  swap5\n  sstore\n    /* \"contracts/SimpleToken.sol\":1781:1797  regularSalePrice */\n  0x09\n    /* \"contracts/SimpleToken.sol\":1781:1817  regularSalePrice = _regularSalePrice */\n  swap3\n  swap1\n  swap3\n  sstore\n    /* \"contracts/SimpleToken.sol\":1828:1845  stakingRewardRate */\n  0x0c\n    /* \"contracts/SimpleToken.sol\":1828:1866  stakingRewardRate = _stakingRewardRate */\n  sstore\n    /* \"contracts/SimpleToken.sol\":1877:1892  presaleIsActive */\n  0x05\n    /* \"contracts/SimpleToken.sol\":1877:1900  presaleIsActive = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/SimpleToken.sol\":1911:1929  minUnstakingPeriod */\n  0x0d\n    /* \"contracts/SimpleToken.sol\":1911:1952  minUnstakingPeriod  = _minUnstakingPeriod */\n  sstore\n    /* \"contracts/SimpleToken.sol\":1963:1985  stakingRewardFrequency */\n  0x0e\n    /* \"contracts/SimpleToken.sol\":1963:2011  stakingRewardFrequency = _stakingRewardFrequency */\n  sstore\n  pop\n    /* \"contracts/SimpleToken.sol\":174:7256  contract TokenPreSale is ERC20, Ownable {... */\n  tag_44\n  swap1\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3778:3829   */\n  mstore\n    /* \"#utility.yul\":3751:3769   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":3632:3835   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_26\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_31\n  swap1\n  pop\n  jump\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4287:4319   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4269:4320   */\n  mstore\n    /* \"#utility.yul\":4336:4354   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":4329:4363   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":4379:4397   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":4372:4406   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4242:4260   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":4067:4412   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_32:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n    /* \"#utility.yul\":4563:4588   */\n  dup2\n  mstore\n    /* \"#utility.yul\":4551:4553   */\n  0x20\n    /* \"#utility.yul\":4536:4554   */\n  add\n  swap1\n    /* \"#utility.yul\":4417:4594   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:986   */\ntag_3:\n    /* \"#utility.yul\":138:144   */\n  0x00\n    /* \"#utility.yul\":146:152   */\n  dup1\n    /* \"#utility.yul\":154:160   */\n  0x00\n    /* \"#utility.yul\":162:168   */\n  dup1\n    /* \"#utility.yul\":170:176   */\n  0x00\n    /* \"#utility.yul\":178:184   */\n  dup1\n    /* \"#utility.yul\":186:192   */\n  0x00\n    /* \"#utility.yul\":239:242   */\n  0xe0\n    /* \"#utility.yul\":227:236   */\n  dup9\n    /* \"#utility.yul\":218:225   */\n  dup11\n    /* \"#utility.yul\":214:237   */\n  sub\n    /* \"#utility.yul\":210:243   */\n  slt\n    /* \"#utility.yul\":207:260   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":256:257   */\n  0x00\n    /* \"#utility.yul\":253:254   */\n  dup1\n    /* \"#utility.yul\":246:258   */\n  revert\n    /* \"#utility.yul\":207:260   */\ntag_46:\n    /* \"#utility.yul\":282:298   */\n  dup8\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":327:358   */\n  dup2\n  and\n    /* \"#utility.yul\":317:359   */\n  dup2\n  eq\n    /* \"#utility.yul\":307:377   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":373:374   */\n  0x00\n    /* \"#utility.yul\":370:371   */\n  dup1\n    /* \"#utility.yul\":363:375   */\n  revert\n    /* \"#utility.yul\":307:377   */\ntag_47:\n    /* \"#utility.yul\":467:469   */\n  0x20\n    /* \"#utility.yul\":452:470   */\n  dup10\n  add\n    /* \"#utility.yul\":446:471   */\n  mload\n    /* \"#utility.yul\":563:565   */\n  0x40\n    /* \"#utility.yul\":548:566   */\n  dup11\n  add\n    /* \"#utility.yul\":542:567   */\n  mload\n    /* \"#utility.yul\":659:661   */\n  0x60\n    /* \"#utility.yul\":644:662   */\n  dup12\n  add\n    /* \"#utility.yul\":638:663   */\n  mload\n    /* \"#utility.yul\":755:758   */\n  0x80\n    /* \"#utility.yul\":740:759   */\n  dup13\n  add\n    /* \"#utility.yul\":734:760   */\n  mload\n    /* \"#utility.yul\":852:855   */\n  0xa0\n    /* \"#utility.yul\":837:856   */\n  dup14\n  add\n    /* \"#utility.yul\":831:857   */\n  mload\n    /* \"#utility.yul\":949:952   */\n  0xc0\n    /* \"#utility.yul\":934:953   */\n  swap1\n  swap14\n  add\n    /* \"#utility.yul\":928:954   */\n  mload\n    /* \"#utility.yul\":396:401   */\n  swap5\n  swap15\n    /* \"#utility.yul\":446:471   */\n  swap4\n  swap14\n  pop\n    /* \"#utility.yul\":542:567   */\n  swap2\n  swap12\n    /* \"#utility.yul\":638:663   */\n  swap1\n  swap11\n  pop\n    /* \"#utility.yul\":734:760   */\n  swap1\n  swap9\n  pop\n    /* \"#utility.yul\":831:857   */\n  swap7\n  pop\n    /* \"#utility.yul\":928:954   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":14:986   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1118   */\ntag_39:\n    /* \"#utility.yul\":1052:1062   */\n  0x4e487b71\n    /* \"#utility.yul\":1047:1050   */\n  0xe0\n    /* \"#utility.yul\":1043:1063   */\n  shl\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1033:1064   */\n  mstore\n    /* \"#utility.yul\":1083:1087   */\n  0x41\n    /* \"#utility.yul\":1080:1081   */\n  0x04\n    /* \"#utility.yul\":1073:1088   */\n  mstore\n    /* \"#utility.yul\":1107:1111   */\n  0x24\n    /* \"#utility.yul\":1104:1105   */\n  0x00\n    /* \"#utility.yul\":1097:1112   */\n  revert\n    /* \"#utility.yul\":1123:1503   */\ntag_40:\n    /* \"#utility.yul\":1202:1203   */\n  0x01\n    /* \"#utility.yul\":1198:1210   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1245:1257   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1266:1327   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1320:1324   */\n  0x7f\n    /* \"#utility.yul\":1312:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1325   */\n  and\n    /* \"#utility.yul\":1298:1325   */\n  swap2\n  pop\n    /* \"#utility.yul\":1266:1327   */\ntag_50:\n    /* \"#utility.yul\":1373:1375   */\n  0x20\n    /* \"#utility.yul\":1365:1371   */\n  dup3\n    /* \"#utility.yul\":1362:1376   */\n  lt\n    /* \"#utility.yul\":1342:1360   */\n  dup2\n    /* \"#utility.yul\":1339:1377   */\n  sub\n    /* \"#utility.yul\":1336:1497   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1419:1429   */\n  0x4e487b71\n    /* \"#utility.yul\":1414:1417   */\n  0xe0\n    /* \"#utility.yul\":1410:1430   */\n  shl\n    /* \"#utility.yul\":1407:1408   */\n  0x00\n    /* \"#utility.yul\":1400:1431   */\n  mstore\n    /* \"#utility.yul\":1454:1458   */\n  0x22\n    /* \"#utility.yul\":1451:1452   */\n  0x04\n    /* \"#utility.yul\":1444:1459   */\n  mstore\n    /* \"#utility.yul\":1482:1486   */\n  0x24\n    /* \"#utility.yul\":1479:1480   */\n  0x00\n    /* \"#utility.yul\":1472:1487   */\n  revert\n    /* \"#utility.yul\":1336:1497   */\ntag_51:\n  pop\n    /* \"#utility.yul\":1123:1503   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1634:2152   */\ntag_42:\n    /* \"#utility.yul\":1736:1738   */\n  0x1f\n    /* \"#utility.yul\":1731:1734   */\n  dup3\n    /* \"#utility.yul\":1728:1739   */\n  gt\n    /* \"#utility.yul\":1725:2146   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1772:1777   */\n  dup1\n    /* \"#utility.yul\":1769:1770   */\n  0x00\n    /* \"#utility.yul\":1762:1778   */\n  mstore\n    /* \"#utility.yul\":1816:1820   */\n  0x20\n    /* \"#utility.yul\":1813:1814   */\n  0x00\n    /* \"#utility.yul\":1803:1821   */\n  keccak256\n    /* \"#utility.yul\":1886:1888   */\n  0x1f\n    /* \"#utility.yul\":1874:1884   */\n  dup5\n    /* \"#utility.yul\":1870:1889   */\n  add\n    /* \"#utility.yul\":1867:1868   */\n  0x05\n    /* \"#utility.yul\":1863:1890   */\n  shr\n    /* \"#utility.yul\":1857:1861   */\n  dup2\n    /* \"#utility.yul\":1853:1891   */\n  add\n    /* \"#utility.yul\":1922:1926   */\n  0x20\n    /* \"#utility.yul\":1910:1920   */\n  dup6\n    /* \"#utility.yul\":1907:1927   */\n  lt\n    /* \"#utility.yul\":1904:1951   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":1945:1949   */\n  dup1\n    /* \"#utility.yul\":1904:1951   */\ntag_55:\n    /* \"#utility.yul\":2000:2002   */\n  0x1f\n    /* \"#utility.yul\":1995:1998   */\n  dup5\n    /* \"#utility.yul\":1991:2003   */\n  add\n    /* \"#utility.yul\":1988:1989   */\n  0x05\n    /* \"#utility.yul\":1984:2004   */\n  shr\n    /* \"#utility.yul\":1978:1982   */\n  dup3\n    /* \"#utility.yul\":1974:2005   */\n  add\n    /* \"#utility.yul\":1964:2005   */\n  swap2\n  pop\n    /* \"#utility.yul\":2055:2136   */\ntag_56:\n    /* \"#utility.yul\":2073:2075   */\n  dup2\n    /* \"#utility.yul\":2066:2071   */\n  dup2\n    /* \"#utility.yul\":2063:2076   */\n  lt\n    /* \"#utility.yul\":2055:2136   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2132:2133   */\n  0x00\n    /* \"#utility.yul\":2118:2134   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2099:2100   */\n  0x01\n    /* \"#utility.yul\":2088:2101   */\n  add\n    /* \"#utility.yul\":2055:2136   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":2059:2062   */\n  pop\n  pop\n    /* \"#utility.yul\":1725:2146   */\ntag_54:\n    /* \"#utility.yul\":1634:2152   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2328:3627   */\ntag_9:\n    /* \"#utility.yul\":2448:2458   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2470:2500   */\n  dup2\n  gt\n    /* \"#utility.yul\":2467:2523   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2503:2521   */\n  tag_62\n  tag_39\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2532:2629   */\n  tag_63\n    /* \"#utility.yul\":2622:2628   */\n  dup2\n    /* \"#utility.yul\":2582:2620   */\n  tag_64\n    /* \"#utility.yul\":2614:2618   */\n  dup5\n    /* \"#utility.yul\":2608:2619   */\n  sload\n    /* \"#utility.yul\":2582:2620   */\n  tag_40\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2576:2580   */\n  dup5\n    /* \"#utility.yul\":2532:2629   */\n  tag_42\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2678:2682   */\n  0x20\n    /* \"#utility.yul\":2709:2711   */\n  0x1f\n    /* \"#utility.yul\":2698:2712   */\n  dup3\n  gt\n    /* \"#utility.yul\":2726:2727   */\n  0x01\n    /* \"#utility.yul\":2721:3370   */\n  dup2\n  eq\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3414:3415   */\n  0x00\n    /* \"#utility.yul\":3431:3437   */\n  dup4\n    /* \"#utility.yul\":3428:3517   */\n  iszero\n  tag_67\n  jumpi\n  pop\n    /* \"#utility.yul\":3483:3502   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3477:3503   */\n  mload\n    /* \"#utility.yul\":3428:3517   */\ntag_67:\n  not(0x00)\n    /* \"#utility.yul\":2285:2286   */\n  0x03\n    /* \"#utility.yul\":2281:2292   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2277:2301   */\n  shr\n    /* \"#utility.yul\":2273:2302   */\n  not\n    /* \"#utility.yul\":2263:2303   */\n  and\n    /* \"#utility.yul\":2309:2310   */\n  0x01\n    /* \"#utility.yul\":2305:2316   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2260:2317   */\n  or\n    /* \"#utility.yul\":3530:3611   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2691:3621   */\n  jump(tag_58)\n    /* \"#utility.yul\":2721:3370   */\ntag_66:\n    /* \"#utility.yul\":1581:1582   */\n  0x00\n    /* \"#utility.yul\":1574:1588   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1618:1622   */\n  0x20\n    /* \"#utility.yul\":1605:1623   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2757:2777   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2875:3097   */\ntag_70:\n    /* \"#utility.yul\":2889:2896   */\n  dup3\n    /* \"#utility.yul\":2886:2887   */\n  dup2\n    /* \"#utility.yul\":2883:2897   */\n  lt\n    /* \"#utility.yul\":2875:3097   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2971:2990   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2965:2991   */\n  mload\n    /* \"#utility.yul\":2950:2992   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3078:3082   */\n  0x20\n    /* \"#utility.yul\":3063:3083   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3031:3032   */\n  0x01\n    /* \"#utility.yul\":3019:3033   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2905:2917   */\n  add\n    /* \"#utility.yul\":2875:3097   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":2879:2882   */\n  pop\n    /* \"#utility.yul\":3125:3131   */\n  dup5\n    /* \"#utility.yul\":3116:3123   */\n  dup3\n    /* \"#utility.yul\":3113:3132   */\n  lt\n    /* \"#utility.yul\":3110:3311   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":3186:3205   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3180:3206   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3269:3270   */\n  0x03\n    /* \"#utility.yul\":3265:3279   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3281:3284   */\n  0xf8\n    /* \"#utility.yul\":3261:3285   */\n  and\n    /* \"#utility.yul\":3257:3294   */\n  shr\n    /* \"#utility.yul\":3253:3295   */\n  not\n    /* \"#utility.yul\":3238:3296   */\n  and\n    /* \"#utility.yul\":3223:3297   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3110:3311   */\ntag_73:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3357:3358   */\n  0x01\n    /* \"#utility.yul\":3341:3355   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3337:3359   */\n  add\n    /* \"#utility.yul\":3324:3360   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2328:3627   */\n  jump\t// out\n    /* \"#utility.yul\":3840:4062   */\ntag_30:\n    /* \"#utility.yul\":3905:3914   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3926:3936   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3923:4056   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3978:3988   */\n  0x4e487b71\n    /* \"#utility.yul\":3973:3976   */\n  0xe0\n    /* \"#utility.yul\":3969:3989   */\n  shl\n    /* \"#utility.yul\":3966:3967   */\n  0x00\n    /* \"#utility.yul\":3959:3990   */\n  mstore\n    /* \"#utility.yul\":4013:4017   */\n  0x11\n    /* \"#utility.yul\":4010:4011   */\n  0x04\n    /* \"#utility.yul\":4003:4018   */\n  mstore\n    /* \"#utility.yul\":4041:4045   */\n  0x24\n    /* \"#utility.yul\":4038:4039   */\n  0x00\n    /* \"#utility.yul\":4031:4046   */\n  revert\n    /* \"#utility.yul\":3923:4056   */\ntag_76:\n    /* \"#utility.yul\":3840:4062   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4417:4594   */\ntag_44:\n    /* \"contracts/SimpleToken.sol\":174:7256  contract TokenPreSale is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleToken.sol\":174:7256  contract TokenPreSale is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xc6a1f80a\n      gt\n      tag_46\n      jumpi\n      dup1\n      0xd348b409\n      gt\n      tag_47\n      jumpi\n      dup1\n      0xd348b409\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xdc07c8a3\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xebbef6f6\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xf9931855\n      eq\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0xc6a1f80a\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xcce29ea7\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xcec297a0\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xcf5f971b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0x9ca423b3\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x9ca423b3\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xa09c4cf4\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xa5ce413b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xa8297d46\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xb290d570\n      eq\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8f0794fe\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x967ed8f3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x27e235e3\n      gt\n      tag_49\n      jumpi\n      dup1\n      0x518ab2a8\n      gt\n      tag_50\n      jumpi\n      dup1\n      0x518ab2a8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x639a5c87\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x7547c7a3\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x7c613b2f\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0x27e235e3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x30f72cd4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4405df4a\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4f3fc2df\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x12065fe0\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x12065fe0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1d0806ae\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x1d3824ea\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0x03e293a3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06d65af3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0fb4ce58\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SimpleToken.sol\":363:394  uint256 public regularSalePrice */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      sload(0x09)\n      dup2\n      jump\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/SimpleToken.sol\":363:394  uint256 public regularSalePrice */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":255:286  uint256 public preSaleStartTime */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_53\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n        /* \"#utility.yul\":1267:1281   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1260:1282   */\n      iszero\n        /* \"#utility.yul\":1242:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1230:1232   */\n      0x20\n        /* \"#utility.yul\":1215:1233   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_55\n        /* \"#utility.yul\":1102:1289   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2529:2673  function calculateReferralReward() public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_53\n      tag_75\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":5633:5733  function getBalance() public view returns (uint256){... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n        /* \"contracts/SimpleToken.sol\":5712:5722  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5676:5683  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5633:5733  function getBalance() public view returns (uint256){... */\n      tag_53\n        /* \"contracts/SimpleToken.sol\":2529:2673  function calculateReferralReward() public view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_53)\n        /* \"contracts/SimpleToken.sol\":329:356  uint256 public initialPrice */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_53\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":3898:4210  function getCurrentStep() public view returns (uint256){... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_53\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_67\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":865:908  mapping(address => uint256) public balances */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_53\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      mstore(0x20, 0x14)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":221:248  bool public presaleIsActive */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      sload(0x05)\n      tag_67\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":2006:2042   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1994:1996   */\n      0x20\n        /* \"#utility.yul\":1979:1997   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_55\n        /* \"#utility.yul\":1864:2048   */\n      jump\n        /* \"contracts/SimpleToken.sol\":4216:4507  function calculatePriceIncrease() public view returns (uint256){... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_53\n      tag_116\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":473:505  uint256 public stakingRewardRate */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_53\n      sload(0x0c)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":407:432  uint256 public tokensSold */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_53\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":3148:3552  function startPreSale(uint256 _startTime, uint256 _endTime, uint256 steps) external onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_127\n      tag_128\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n    tag_127:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_53\n      tag_133\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_127\n      tag_138\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":5741:6145  function stakeTokens(uint256 amount) external {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_127\n      tag_141\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":2681:3087  function mintReferralReward() external {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_127\n      tag_146\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_147\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_147:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_148:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2919:2951   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2901:2952   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2889:2891   */\n      0x20\n        /* \"#utility.yul\":2874:2892   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_55\n        /* \"#utility.yul\":2755:2958   */\n      jump\n        /* \"contracts/SimpleToken.sol\":652:703  mapping(address => uint256) public stakingTimestamp */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_53\n      tag_154\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_154:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_62\n      tag_159\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":6693:6959  function calculateStakingReward() public view returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_53\n      tag_163\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":710:751  mapping(address => bool) public whitelist */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_67\n      tag_167\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_167:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":758:802  mapping(address => address) public referrals */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_148\n      tag_172\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_172:\n      mstore(0x20, 0x12)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":2036:2517  function signUpForWhitelist(address referral) external {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      tag_127\n      tag_177\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_177:\n      tag_178\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":6153:6685  function unstakeTokens() external {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      tag_127\n      tag_181\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":552:589  uint256 public stakingRewardFrequency */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_53\n      sload(0x0e)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n      pop\n      tag_67\n      tag_188\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_188:\n      tag_189\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":7101:7253  function getStackingPeriod() public view returns (uint256) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_191\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_191:\n      pop\n      tag_53\n      tag_193\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":512:545  uint256 public minUnstakingPeriod */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      tag_53\n      sload(0x0d)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":293:322  uint256 public preSaleEndTime */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n      pop\n      tag_53\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":809:858  mapping(address => uint256) public referralCounts */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_203\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_203:\n      pop\n      tag_53\n      tag_205\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_205:\n      mstore(0x20, 0x13)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":3559:3892  function calculateStepsElapsed(uint256 startTime, uint256 endTime) public view returns (uint256) {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_208\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_208:\n      pop\n      tag_53\n      tag_210\n      calldatasize\n      0x04\n      tag_211\n      jump\t// in\n    tag_210:\n      tag_212\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":4986:5623  function buyTokens() external payable {... */\n    tag_38:\n      tag_127\n      tag_215\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":4523:4899  function calculatePrice() public view returns (uint256) {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      tag_53\n      tag_218\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":439:466  uint256 public preSaleSteps */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      tag_53\n      sload(0x0b)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      tag_53\n      tag_226\n      calldatasize\n      0x04\n      tag_227\n      jump\t// in\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/SimpleToken.sol\":6967:7093  function getStackedTokens() public view returns (uint256) {... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_230\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_230:\n      pop\n        /* \"contracts/SimpleToken.sol\":7074:7084  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":7016:7023  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":7061:7085  stakedAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":7061:7073  stakedAmount */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":7061:7085  stakedAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":6967:7093  function getStackedTokens() public view returns (uint256) {... */\n      jump(tag_53)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      pop\n      tag_127\n      tag_236\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_236:\n      tag_237\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":598:645  mapping(address => uint256) public stakedAmount */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n      pop\n      tag_53\n      tag_240\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_240:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_246\n      swap1\n      tag_245\n      jump\t// in\n    tag_246:\n      dup1\n      iszero\n      tag_247\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_248\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_247)\n    tag_248:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_249:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_249\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_253\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_250:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":2529:2673  function calculateReferralReward() public view returns (uint256) {... */\n    tag_75:\n        /* \"contracts/SimpleToken.sol\":2585:2592  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2649:2665  10 ** decimals() */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"contracts/SimpleToken.sol\":2649:2651  10 */\n      0x0a\n        /* \"contracts/SimpleToken.sol\":2649:2665  10 ** decimals() */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"contracts/SimpleToken.sol\":2629:2639  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2614:2640  referralCounts[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2614:2628  referralCounts */\n      0x13\n        /* \"contracts/SimpleToken.sol\":2614:2640  referralCounts[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":2614:2646  referralCounts[msg.sender] * 500 */\n      tag_259\n      swap1\n        /* \"contracts/SimpleToken.sol\":2643:2646  500 */\n      0x01f4\n        /* \"contracts/SimpleToken.sol\":2614:2646  referralCounts[msg.sender] * 500 */\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"contracts/SimpleToken.sol\":2614:2665  referralCounts[msg.sender] * 500 * 10 ** decimals() */\n      tag_261\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_261:\n        /* \"contracts/SimpleToken.sol\":2607:2665  return referralCounts[msg.sender] * 500 * 10 ** decimals() */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":2529:2673  function calculateReferralReward() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":3898:4210  function getCurrentStep() public view returns (uint256){... */\n    tag_91:\n        /* \"contracts/SimpleToken.sol\":3945:3952  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3991:4007  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":3972:3987  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":3972:4007  block.timestamp >= preSaleStartTime */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":3964:4045  require(block.timestamp >= preSaleStartTime, \"End time must be after start time\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"contracts/SimpleToken.sol\":4060:4080  uint256 stepsElapsed */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4156:4168  preSaleSteps */\n      sload(0x0b)\n        /* \"contracts/SimpleToken.sol\":4138:4154  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":4123:4137  preSaleEndTime */\n      sload(0x07)\n        /* \"contracts/SimpleToken.sol\":4123:4154  preSaleEndTime-preSaleStartTime */\n      tag_269\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_269:\n        /* \"contracts/SimpleToken.sol\":4102:4118  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":4084:4118  block.timestamp - preSaleStartTime */\n      tag_271\n      swap1\n        /* \"contracts/SimpleToken.sol\":4084:4099  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":4084:4118  block.timestamp - preSaleStartTime */\n      tag_270\n      jump\t// in\n    tag_271:\n        /* \"contracts/SimpleToken.sol\":4083:4155  (block.timestamp - preSaleStartTime) / (preSaleEndTime-preSaleStartTime) */\n      tag_272\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"contracts/SimpleToken.sol\":4083:4168  (block.timestamp - preSaleStartTime) / (preSaleEndTime-preSaleStartTime)/preSaleSteps */\n      tag_250\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_278\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_279\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_279:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":4216:4507  function calculatePriceIncrease() public view returns (uint256){... */\n    tag_116:\n        /* \"contracts/SimpleToken.sol\":4271:4278  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4290:4310  uint256 stepsElapsed */\n      dup1\n        /* \"contracts/SimpleToken.sol\":4312:4368  calculateStepsElapsed(preSaleStartTime, block.timestamp) */\n      tag_283\n        /* \"contracts/SimpleToken.sol\":4334:4350  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":4352:4367  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":4312:4333  calculateStepsElapsed */\n      tag_212\n        /* \"contracts/SimpleToken.sol\":4312:4368  calculateStepsElapsed(preSaleStartTime, block.timestamp) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/SimpleToken.sol\":4290:4368  uint256 stepsElapsed =calculateStepsElapsed(preSaleStartTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4379:4400  uint256 priceIncrease */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4456:4468  preSaleSteps */\n      sload(0x0b)\n        /* \"contracts/SimpleToken.sol\":4440:4452  stepsElapsed */\n      dup3\n        /* \"contracts/SimpleToken.sol\":4424:4436  initialPrice */\n      sload(0x08)\n        /* \"contracts/SimpleToken.sol\":4405:4421  regularSalePrice */\n      sload(0x09)\n        /* \"contracts/SimpleToken.sol\":4405:4436  regularSalePrice - initialPrice */\n      tag_284\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_284:\n        /* \"contracts/SimpleToken.sol\":4404:4452  (regularSalePrice - initialPrice) * stepsElapsed */\n      tag_285\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_285:\n        /* \"contracts/SimpleToken.sol\":4403:4468  ((regularSalePrice - initialPrice) * stepsElapsed) / preSaleSteps */\n      tag_286\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_286:\n        /* \"contracts/SimpleToken.sol\":4379:4468  uint256 priceIncrease = ((regularSalePrice - initialPrice) * stepsElapsed) / preSaleSteps */\n      swap4\n        /* \"contracts/SimpleToken.sol\":4216:4507  function calculatePriceIncrease() public view returns (uint256){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":3148:3552  function startPreSale(uint256 _startTime, uint256 _endTime, uint256 steps) external onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_288\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_288:\n        /* \"contracts/SimpleToken.sol\":3341:3357  preSaleStartTime */\n      0x06\n        /* \"contracts/SimpleToken.sol\":3341:3370  preSaleStartTime = _startTime */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":3381:3395  preSaleEndTime */\n      0x07\n        /* \"contracts/SimpleToken.sol\":3381:3406  preSaleEndTime = _endTime */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":3417:3429  preSaleSteps */\n      0x0b\n        /* \"contracts/SimpleToken.sol\":3417:3437  preSaleSteps = steps */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":3458:3473  presaleIsActive */\n      0x05\n        /* \"contracts/SimpleToken.sol\":3458:3480  presaleIsActive = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":3496:3544  PreSaleStarted(preSaleStartTime, preSaleEndTime) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6632:6657   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":6688:6690   */\n      0x20\n        /* \"#utility.yul\":6673:6691   */\n      dup2\n      add\n        /* \"#utility.yul\":6666:6700   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/SimpleToken.sol\":3496:3544  PreSaleStarted(preSaleStartTime, preSaleEndTime) */\n      0x3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d\n      swap2\n        /* \"#utility.yul\":6605:6623   */\n      add\n        /* \"contracts/SimpleToken.sol\":3496:3544  PreSaleStarted(preSaleStartTime, preSaleEndTime) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SimpleToken.sol\":3148:3552  function startPreSale(uint256 _startTime, uint256 _endTime, uint256 steps) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_295\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_297\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_298\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":5741:6145  function stakeTokens(uint256 amount) external {... */\n    tag_143:\n        /* \"contracts/SimpleToken.sol\":5815:5816  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5806:5812  amount */\n      dup2\n        /* \"contracts/SimpleToken.sol\":5806:5816  amount > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":5798:5854  require(amount > 0, \"Amount must be greater than zero.\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6913:6915   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":5798:5854  require(amount > 0, \"Amount must be greater than zero.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6895:6916   */\n      mstore\n        /* \"#utility.yul\":6952:6954   */\n      0x21\n        /* \"#utility.yul\":6932:6950   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6925:6955   */\n      mstore\n        /* \"#utility.yul\":6991:7025   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":6971:6989   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6964:7026   */\n      mstore\n      shl(0xf9, 0x17)\n        /* \"#utility.yul\":7042:7060   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7035:7066   */\n      mstore\n        /* \"#utility.yul\":7083:7102   */\n      0x84\n      add\n        /* \"contracts/SimpleToken.sol\":5798:5854  require(amount > 0, \"Amount must be greater than zero.\") */\n      tag_267\n        /* \"#utility.yul\":6711:7108   */\n      jump\n        /* \"contracts/SimpleToken.sol\":5798:5854  require(amount > 0, \"Amount must be greater than zero.\") */\n    tag_300:\n        /* \"contracts/SimpleToken.sol\":5883:5893  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5898:5904  amount */\n      dup2\n      gt\n        /* \"contracts/SimpleToken.sol\":5873:5904  balanceOf(msg.sender) >= amount */\n      iszero\n        /* \"contracts/SimpleToken.sol\":5865:5930  require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7315:7317   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":5865:5930  require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7297:7318   */\n      mstore\n        /* \"#utility.yul\":7354:7356   */\n      0x15\n        /* \"#utility.yul\":7334:7352   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7327:7357   */\n      mstore\n      shl(0x59, 0x24b739bab33334b1b4b2b73a103130b630b731b297)\n        /* \"#utility.yul\":7373:7391   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7366:7417   */\n      mstore\n        /* \"#utility.yul\":7434:7452   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":5865:5930  require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\") */\n      tag_267\n        /* \"#utility.yul\":7113:7458   */\n      jump\n        /* \"contracts/SimpleToken.sol\":5865:5930  require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\") */\n    tag_304:\n        /* \"contracts/SimpleToken.sol\":5943:5987  _transfer(msg.sender, address(this), amount) */\n      tag_307\n        /* \"contracts/SimpleToken.sol\":5953:5963  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5973:5977  this */\n      address\n        /* \"contracts/SimpleToken.sol\":5980:5986  amount */\n      dup4\n        /* \"contracts/SimpleToken.sol\":5943:5952  _transfer */\n      tag_280\n        /* \"contracts/SimpleToken.sol\":5943:5987  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_307:\n        /* \"contracts/SimpleToken.sol\":6011:6021  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5998:6022  stakedAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":5998:6010  stakedAmount */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":5998:6022  stakedAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/SimpleToken.sol\":5998:6032  stakedAmount[msg.sender] += amount */\n      dup1\n      sload\n        /* \"contracts/SimpleToken.sol\":6026:6032  amount */\n      dup4\n      swap3\n        /* \"contracts/SimpleToken.sol\":5998:6022  stakedAmount[msg.sender] */\n      swap1\n        /* \"contracts/SimpleToken.sol\":5998:6032  stakedAmount[msg.sender] += amount */\n      tag_308\n      swap1\n        /* \"contracts/SimpleToken.sol\":6026:6032  amount */\n      dup5\n      swap1\n        /* \"contracts/SimpleToken.sol\":5998:6032  stakedAmount[msg.sender] += amount */\n      tag_309\n      jump\t// in\n    tag_308:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":6060:6070  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6043:6071  stakingTimestamp[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":6043:6059  stakingTimestamp */\n      0x10\n        /* \"contracts/SimpleToken.sol\":6043:6071  stakingTimestamp[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/SimpleToken.sol\":6074:6089  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":6043:6089  stakingTimestamp[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":6105:6137  TokensStaked(msg.sender, amount) */\n      mload\n      0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef\n      swap1\n      tag_310\n      swap1\n        /* \"contracts/SimpleToken.sol\":6130:6136  amount */\n      dup5\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/SimpleToken.sol\":6105:6137  TokensStaked(msg.sender, amount) */\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SimpleToken.sol\":5741:6145  function stakeTokens(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":2681:3087  function mintReferralReward() external {... */\n    tag_146:\n        /* \"contracts/SimpleToken.sol\":2743:2758  presaleIsActive */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":2743:2764  presaleIsActive==true */\n      iszero\n      iszero\n        /* \"contracts/SimpleToken.sol\":2760:2764  true */\n      0x01\n        /* \"contracts/SimpleToken.sol\":2743:2764  presaleIsActive==true */\n      eq\n        /* \"contracts/SimpleToken.sol\":2735:2791  require(presaleIsActive==true,\"Presale not started yet\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7795:7797   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":2735:2791  require(presaleIsActive==true,\"Presale not started yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7777:7798   */\n      mstore\n        /* \"#utility.yul\":7834:7836   */\n      0x17\n        /* \"#utility.yul\":7814:7832   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7807:7837   */\n      mstore\n        /* \"#utility.yul\":7873:7898   */\n      0x50726573616c65206e6f74207374617274656420796574000000000000000000\n        /* \"#utility.yul\":7853:7871   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7846:7899   */\n      mstore\n        /* \"#utility.yul\":7916:7934   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":2735:2791  require(presaleIsActive==true,\"Presale not started yet\") */\n      tag_267\n        /* \"#utility.yul\":7593:7940   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2735:2791  require(presaleIsActive==true,\"Presale not started yet\") */\n    tag_312:\n        /* \"contracts/SimpleToken.sol\":2806:2826  uint256 rewardAmount */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2829:2854  calculateReferralReward() */\n      tag_315\n        /* \"contracts/SimpleToken.sol\":2829:2852  calculateReferralReward */\n      tag_75\n        /* \"contracts/SimpleToken.sol\":2829:2854  calculateReferralReward() */\n      jump\t// in\n    tag_315:\n        /* \"contracts/SimpleToken.sol\":2806:2854  uint256 rewardAmount = calculateReferralReward() */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":2892:2893  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2877:2889  rewardAmount */\n      dup2\n        /* \"contracts/SimpleToken.sol\":2877:2893  rewardAmount > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":2869:2918  require(rewardAmount > 0, \"No rewards available\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8147:8149   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":2869:2918  require(rewardAmount > 0, \"No rewards available\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8129:8150   */\n      mstore\n        /* \"#utility.yul\":8186:8188   */\n      0x14\n        /* \"#utility.yul\":8166:8184   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8159:8189   */\n      mstore\n      shl(0x60, 0x4e6f207265776172647320617661696c61626c65)\n        /* \"#utility.yul\":8205:8223   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8198:8248   */\n      mstore\n        /* \"#utility.yul\":8265:8283   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":2869:2918  require(rewardAmount > 0, \"No rewards available\") */\n      tag_267\n        /* \"#utility.yul\":7945:8289   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2869:2918  require(rewardAmount > 0, \"No rewards available\") */\n    tag_316:\n        /* \"contracts/SimpleToken.sol\":2933:2964  _mint(msg.sender, rewardAmount) */\n      tag_319\n        /* \"contracts/SimpleToken.sol\":2939:2949  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2951:2963  rewardAmount */\n      dup3\n        /* \"contracts/SimpleToken.sol\":2933:2938  _mint */\n      tag_320\n        /* \"contracts/SimpleToken.sol\":2933:2964  _mint(msg.sender, rewardAmount) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/SimpleToken.sol\":2994:3004  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":3008:3009  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2979:3005  referralCounts[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2979:2993  referralCounts */\n      0x13\n        /* \"contracts/SimpleToken.sol\":2979:3005  referralCounts[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2979:3009  referralCounts[msg.sender] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/SimpleToken.sol\":3029:3075  ReferralRewardMinted(msg.sender, rewardAmount) */\n      mload\n      0xf0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d\n      swap1\n      tag_310\n      swap1\n        /* \"contracts/SimpleToken.sol\":3062:3074  rewardAmount */\n      dup5\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_244\n      swap1\n      tag_245\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":6693:6959  function calculateStakingReward() public view returns (uint256) {... */\n    tag_163:\n        /* \"contracts/SimpleToken.sol\":6843:6865  stakingRewardFrequency */\n      sload(0x0e)\n        /* \"contracts/SimpleToken.sol\":6828:6838  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6748:6755  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6811:6839  stakingTimestamp[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":6811:6827  stakingTimestamp */\n      0x10\n        /* \"contracts/SimpleToken.sol\":6811:6839  stakingTimestamp[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":6748:6755  uint256 */\n      swap1\n      swap2\n      dup3\n      swap2\n        /* \"contracts/SimpleToken.sol\":6793:6839  block.timestamp - stakingTimestamp[msg.sender] */\n      tag_330\n      swap1\n        /* \"contracts/SimpleToken.sol\":6793:6808  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":6793:6839  block.timestamp - stakingTimestamp[msg.sender] */\n      tag_270\n      jump\t// in\n    tag_330:\n        /* \"contracts/SimpleToken.sol\":6792:6865  (block.timestamp - stakingTimestamp[msg.sender]) / stakingRewardFrequency */\n      tag_331\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_331:\n        /* \"contracts/SimpleToken.sol\":6911:6928  stakingRewardRate */\n      sload(0x0c)\n        /* \"contracts/SimpleToken.sol\":6897:6907  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6884:6908  stakedAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":6884:6896  stakedAmount */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":6884:6908  stakedAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":6768:6865  uint256 periodsStaked = (block.timestamp - stakingTimestamp[msg.sender]) / stakingRewardFrequency */\n      swap2\n      swap3\n      pop\n        /* \"contracts/SimpleToken.sol\":6948:6951  100 */\n      0x64\n      swap2\n        /* \"contracts/SimpleToken.sol\":6768:6865  uint256 periodsStaked = (block.timestamp - stakingTimestamp[msg.sender]) / stakingRewardFrequency */\n      dup4\n      swap2\n        /* \"contracts/SimpleToken.sol\":6884:6928  stakedAmount[msg.sender] * stakingRewardRate */\n      tag_332\n      swap2\n      tag_260\n      jump\t// in\n    tag_332:\n        /* \"contracts/SimpleToken.sol\":6884:6944  stakedAmount[msg.sender] * stakingRewardRate * periodsStaked */\n      tag_333\n      swap2\n      swap1\n      tag_260\n      jump\t// in\n    tag_333:\n        /* \"contracts/SimpleToken.sol\":6883:6951  (stakedAmount[msg.sender] * stakingRewardRate * periodsStaked) / 100 */\n      tag_334\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_334:\n        /* \"contracts/SimpleToken.sol\":6876:6951  return (stakedAmount[msg.sender] * stakingRewardRate * periodsStaked) / 100 */\n      swap2\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":6693:6959  function calculateStakingReward() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":2036:2517  function signUpForWhitelist(address referral) external {... */\n    tag_178:\n        /* \"contracts/SimpleToken.sol\":2121:2131  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2111:2132  whitelist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2111:2120  whitelist */\n      0x11\n        /* \"contracts/SimpleToken.sol\":2111:2132  whitelist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":2110:2132  !whitelist[msg.sender] */\n      iszero\n        /* \"contracts/SimpleToken.sol\":2102:2156  require(!whitelist[msg.sender], \"Already whitelisted\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8496:8498   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":2102:2156  require(!whitelist[msg.sender], \"Already whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8478:8499   */\n      mstore\n        /* \"#utility.yul\":8535:8537   */\n      0x13\n        /* \"#utility.yul\":8515:8533   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8508:8538   */\n      mstore\n      shl(0x6a, 0x105b1c9958591e481dda1a5d195b1a5cdd1959)\n        /* \"#utility.yul\":8554:8572   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8547:8596   */\n      mstore\n        /* \"#utility.yul\":8613:8631   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":2102:2156  require(!whitelist[msg.sender], \"Already whitelisted\") */\n      tag_267\n        /* \"#utility.yul\":8294:8637   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2102:2156  require(!whitelist[msg.sender], \"Already whitelisted\") */\n    tag_336:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":2175:2197  msg.sender != referral */\n      dup2\n      and\n        /* \"contracts/SimpleToken.sol\":2175:2185  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2175:2197  msg.sender != referral */\n      sub\n        /* \"contracts/SimpleToken.sol\":2167:2223  require(msg.sender != referral, \"Cannot refer yourself\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8844:8846   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":2167:2223  require(msg.sender != referral, \"Cannot refer yourself\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8826:8847   */\n      mstore\n        /* \"#utility.yul\":8883:8885   */\n      0x15\n        /* \"#utility.yul\":8863:8881   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8856:8886   */\n      mstore\n      shl(0x59, 0x21b0b73737ba103932b332b9103cb7bab939b2b633)\n        /* \"#utility.yul\":8902:8920   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8895:8946   */\n      mstore\n        /* \"#utility.yul\":8963:8981   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":2167:2223  require(msg.sender != referral, \"Cannot refer yourself\") */\n      tag_267\n        /* \"#utility.yul\":8642:8987   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2167:2223  require(msg.sender != referral, \"Cannot refer yourself\") */\n    tag_339:\n        /* \"contracts/SimpleToken.sol\":2254:2264  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2244:2265  whitelist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2244:2253  whitelist */\n      0x11\n        /* \"contracts/SimpleToken.sol\":2244:2265  whitelist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2244:2272  whitelist[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/SimpleToken.sol\":2268:2272  true */\n      0x01\n        /* \"contracts/SimpleToken.sol\":2244:2272  whitelist[msg.sender] = true */\n      or\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":2297:2319  referral != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/SimpleToken.sol\":2297:2342  referral != address(0) && whitelist[referral] */\n      tag_342\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":2323:2342  whitelist[referral] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2323:2332  whitelist */\n      0x11\n        /* \"contracts/SimpleToken.sol\":2323:2342  whitelist[referral] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":2297:2342  referral != address(0) && whitelist[referral] */\n    tag_342:\n        /* \"contracts/SimpleToken.sol\":2293:2447  if (referral != address(0) && whitelist[referral]) {... */\n      iszero\n      tag_343\n      jumpi\n        /* \"contracts/SimpleToken.sol\":2369:2379  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2359:2380  referrals[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2359:2368  referrals */\n      0x12\n        /* \"contracts/SimpleToken.sol\":2359:2380  referrals[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2359:2391  referrals[msg.sender] = referral */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/SimpleToken.sol\":2406:2430  referralCounts[referral] */\n      dup4\n      mstore\n        /* \"contracts/SimpleToken.sol\":2406:2420  referralCounts */\n      0x13\n        /* \"contracts/SimpleToken.sol\":2406:2430  referralCounts[referral] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2406:2435  referralCounts[referral] += 1 */\n      dup1\n      sload\n      0x01\n      swap3\n        /* \"contracts/SimpleToken.sol\":2359:2380  referrals[msg.sender] */\n      swap1\n        /* \"contracts/SimpleToken.sol\":2406:2435  referralCounts[referral] += 1 */\n      tag_344\n      swap1\n      dup5\n      swap1\n      tag_309\n      jump\t// in\n    tag_344:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":2293:2447  if (referral != address(0) && whitelist[referral]) {... */\n    tag_343:\n        /* \"contracts/SimpleToken.sol\":2472:2509  UserWhitelisted(msg.sender, referral) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n        /* \"contracts/SimpleToken.sol\":2488:2498  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SimpleToken.sol\":2472:2509  UserWhitelisted(msg.sender, referral) */\n      0x4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/SimpleToken.sol\":2036:2517  function signUpForWhitelist(address referral) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":6153:6685  function unstakeTokens() external {... */\n    tag_181:\n        /* \"contracts/SimpleToken.sol\":6228:6238  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6198:6212  uint256 amount */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6215:6239  stakedAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":6215:6227  stakedAmount */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":6215:6239  stakedAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":6258:6268  amount > 0 */\n      dup1\n        /* \"contracts/SimpleToken.sol\":6250:6290  require(amount > 0, \"No tokens staked.\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9194:9196   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":6250:6290  require(amount > 0, \"No tokens staked.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9176:9197   */\n      mstore\n        /* \"#utility.yul\":9233:9235   */\n      0x11\n        /* \"#utility.yul\":9213:9231   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9206:9236   */\n      mstore\n      shl(0x79, 0x2737903a37b5b2b7399039ba30b5b2b217)\n        /* \"#utility.yul\":9252:9270   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9245:9292   */\n      mstore\n        /* \"#utility.yul\":9309:9327   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":6250:6290  require(amount > 0, \"No tokens staked.\") */\n      tag_267\n        /* \"#utility.yul\":8992:9333   */\n      jump\n        /* \"contracts/SimpleToken.sol\":6250:6290  require(amount > 0, \"No tokens staked.\") */\n    tag_346:\n        /* \"contracts/SimpleToken.sol\":6359:6377  minUnstakingPeriod */\n      sload(0x0d)\n        /* \"contracts/SimpleToken.sol\":6345:6355  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6328:6356  stakingTimestamp[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":6328:6344  stakingTimestamp */\n      0x10\n        /* \"contracts/SimpleToken.sol\":6328:6356  stakingTimestamp[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":6328:6377  stakingTimestamp[msg.sender] + minUnstakingPeriod */\n      tag_349\n      swap2\n        /* \"contracts/SimpleToken.sol\":6359:6377  minUnstakingPeriod */\n      swap1\n        /* \"contracts/SimpleToken.sol\":6328:6377  stakingTimestamp[msg.sender] + minUnstakingPeriod */\n      tag_309\n      jump\t// in\n    tag_349:\n        /* \"contracts/SimpleToken.sol\":6309:6324  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":6309:6377  block.timestamp >= stakingTimestamp[msg.sender] + minUnstakingPeriod */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":6301:6409  require(block.timestamp >= stakingTimestamp[msg.sender] + minUnstakingPeriod, \"Unstake only after 4 weeks.\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9540:9542   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":6301:6409  require(block.timestamp >= stakingTimestamp[msg.sender] + minUnstakingPeriod, \"Unstake only after 4 weeks.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9522:9543   */\n      mstore\n        /* \"#utility.yul\":9579:9581   */\n      0x1b\n        /* \"#utility.yul\":9559:9577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9552:9582   */\n      mstore\n        /* \"#utility.yul\":9618:9647   */\n      0x556e7374616b65206f6e6c792061667465722034207765656b732e0000000000\n        /* \"#utility.yul\":9598:9616   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9591:9648   */\n      mstore\n        /* \"#utility.yul\":9665:9683   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":6301:6409  require(block.timestamp >= stakingTimestamp[msg.sender] + minUnstakingPeriod, \"Unstake only after 4 weeks.\") */\n      tag_267\n        /* \"#utility.yul\":9338:9689   */\n      jump\n        /* \"contracts/SimpleToken.sol\":6301:6409  require(block.timestamp >= stakingTimestamp[msg.sender] + minUnstakingPeriod, \"Unstake only after 4 weeks.\") */\n    tag_350:\n        /* \"contracts/SimpleToken.sol\":6430:6444  uint256 reward */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6447:6471  calculateStakingReward() */\n      tag_353\n        /* \"contracts/SimpleToken.sol\":6447:6469  calculateStakingReward */\n      tag_163\n        /* \"contracts/SimpleToken.sol\":6447:6471  calculateStakingReward() */\n      jump\t// in\n    tag_353:\n        /* \"contracts/SimpleToken.sol\":6495:6505  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":6509:6510  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":6482:6506  stakedAmount[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":6482:6494  stakedAmount */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":6482:6506  stakedAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SimpleToken.sol\":6482:6510  stakedAmount[msg.sender] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":6521:6537  stakingTimestamp */\n      0x10\n        /* \"contracts/SimpleToken.sol\":6521:6549  stakingTimestamp[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/SimpleToken.sol\":6521:6553  stakingTimestamp[msg.sender] = 0 */\n      sstore\n        /* \"contracts/SimpleToken.sol\":6430:6471  uint256 reward = calculateStakingReward() */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SimpleToken.sol\":6566:6619  _transfer(address(this), msg.sender, amount + reward) */\n      tag_354\n      swap1\n        /* \"contracts/SimpleToken.sol\":6584:6588  this */\n      address\n      swap1\n        /* \"contracts/SimpleToken.sol\":6603:6618  amount + reward */\n      tag_355\n        /* \"contracts/SimpleToken.sol\":6430:6471  uint256 reward = calculateStakingReward() */\n      dup5\n        /* \"contracts/SimpleToken.sol\":6603:6609  amount */\n      dup7\n        /* \"contracts/SimpleToken.sol\":6603:6618  amount + reward */\n      tag_309\n      jump\t// in\n    tag_355:\n        /* \"contracts/SimpleToken.sol\":6566:6575  _transfer */\n      tag_280\n        /* \"contracts/SimpleToken.sol\":6566:6619  _transfer(address(this), msg.sender, amount + reward) */\n      jump\t// in\n    tag_354:\n        /* \"contracts/SimpleToken.sol\":6635:6677  TokensUnstaked(msg.sender, amount, reward) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":6632:6657   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6688:6690   */\n      0x20\n        /* \"#utility.yul\":6673:6691   */\n      dup2\n      add\n        /* \"#utility.yul\":6666:6700   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/SimpleToken.sol\":6650:6660  msg.sender */\n      caller\n      swap2\n        /* \"contracts/SimpleToken.sol\":6635:6677  TokensUnstaked(msg.sender, amount, reward) */\n      0x6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336\n      swap2\n        /* \"#utility.yul\":6605:6623   */\n      add\n        /* \"contracts/SimpleToken.sol\":6635:6677  TokensUnstaked(msg.sender, amount, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SimpleToken.sol\":6187:6685  {... */\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":6153:6685  function unstakeTokens() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_253\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_280\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":7101:7253  function getStackingPeriod() public view returns (uint256) {... */\n    tag_193:\n        /* \"contracts/SimpleToken.sol\":7227:7245  minUnstakingPeriod */\n      sload(0x0d)\n        /* \"contracts/SimpleToken.sol\":7213:7223  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":7151:7158  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":7196:7224  stakingTimestamp[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":7196:7212  stakingTimestamp */\n      0x10\n        /* \"contracts/SimpleToken.sol\":7196:7224  stakingTimestamp[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":7151:7158  uint256 */\n      swap1\n      swap2\n        /* \"contracts/SimpleToken.sol\":7196:7245  stakingTimestamp[msg.sender] + minUnstakingPeriod */\n      tag_261\n      swap2\n      tag_309\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":3559:3892  function calculateStepsElapsed(uint256 startTime, uint256 endTime) public view returns (uint256) {... */\n    tag_212:\n        /* \"contracts/SimpleToken.sol\":3647:3654  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3690:3699  startTime */\n      dup3\n        /* \"contracts/SimpleToken.sol\":3679:3686  endTime */\n      dup3\n        /* \"contracts/SimpleToken.sol\":3679:3699  endTime >= startTime */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":3671:3737  require(endTime >= startTime, \"End time must be after start time\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_363:\n        /* \"contracts/SimpleToken.sol\":3752:3772  uint256 stepsElapsed */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3833:3845  preSaleSteps */\n      sload(0x0b)\n        /* \"contracts/SimpleToken.sol\":3815:3831  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":3800:3814  preSaleEndTime */\n      sload(0x07)\n        /* \"contracts/SimpleToken.sol\":3800:3831  preSaleEndTime-preSaleStartTime */\n      tag_365\n      swap2\n      swap1\n      tag_270\n      jump\t// in\n    tag_365:\n        /* \"contracts/SimpleToken.sol\":3776:3795  endTime - startTime */\n      tag_366\n        /* \"contracts/SimpleToken.sol\":3786:3795  startTime */\n      dup7\n        /* \"contracts/SimpleToken.sol\":3776:3783  endTime */\n      dup7\n        /* \"contracts/SimpleToken.sol\":3776:3795  endTime - startTime */\n      tag_270\n      jump\t// in\n    tag_366:\n        /* \"contracts/SimpleToken.sol\":3775:3832  (endTime - startTime) / (preSaleEndTime-preSaleStartTime) */\n      tag_367\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_367:\n        /* \"contracts/SimpleToken.sol\":3775:3845  (endTime - startTime) / (preSaleEndTime-preSaleStartTime)/preSaleSteps */\n      tag_368\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_368:\n        /* \"contracts/SimpleToken.sol\":3752:3845  uint256 stepsElapsed = (endTime - startTime) / (preSaleEndTime-preSaleStartTime)/preSaleSteps */\n      swap5\n        /* \"contracts/SimpleToken.sol\":3559:3892  function calculateStepsElapsed(uint256 startTime, uint256 endTime) public view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":4986:5623  function buyTokens() external payable {... */\n    tag_215:\n        /* \"contracts/SimpleToken.sol\":5043:5058  presaleIsActive */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":5035:5079  require(presaleIsActive, \"Sale not active.\") */\n      tag_370\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9896:9898   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":5035:5079  require(presaleIsActive, \"Sale not active.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9878:9899   */\n      mstore\n        /* \"#utility.yul\":9935:9937   */\n      0x10\n        /* \"#utility.yul\":9915:9933   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9908:9938   */\n      mstore\n      shl(0x81, 0x29b0b632903737ba1030b1ba34bb3297)\n        /* \"#utility.yul\":9954:9972   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9947:9993   */\n      mstore\n        /* \"#utility.yul\":10010:10028   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":5035:5079  require(presaleIsActive, \"Sale not active.\") */\n      tag_267\n        /* \"#utility.yul\":9694:10034   */\n      jump\n        /* \"contracts/SimpleToken.sol\":5035:5079  require(presaleIsActive, \"Sale not active.\") */\n    tag_370:\n        /* \"contracts/SimpleToken.sol\":5110:5111  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5098:5107  msg.value */\n      callvalue\n        /* \"contracts/SimpleToken.sol\":5098:5111  msg.value > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":5090:5144  require(msg.value > 0, \"Must send ETH to buy tokens.\") */\n      tag_373\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10241:10243   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":5090:5144  require(msg.value > 0, \"Must send ETH to buy tokens.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10223:10244   */\n      mstore\n        /* \"#utility.yul\":10280:10282   */\n      0x1c\n        /* \"#utility.yul\":10260:10278   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10253:10283   */\n      mstore\n        /* \"#utility.yul\":10319:10349   */\n      0x4d7573742073656e642045544820746f2062757920746f6b656e732e00000000\n        /* \"#utility.yul\":10299:10317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10292:10350   */\n      mstore\n        /* \"#utility.yul\":10367:10385   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":5090:5144  require(msg.value > 0, \"Must send ETH to buy tokens.\") */\n      tag_267\n        /* \"#utility.yul\":10039:10391   */\n      jump\n        /* \"contracts/SimpleToken.sol\":5090:5144  require(msg.value > 0, \"Must send ETH to buy tokens.\") */\n    tag_373:\n        /* \"contracts/SimpleToken.sol\":5157:5177  uint256 currentPrice */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5180:5196  calculatePrice() */\n      tag_376\n        /* \"contracts/SimpleToken.sol\":5180:5194  calculatePrice */\n      tag_218\n        /* \"contracts/SimpleToken.sol\":5180:5196  calculatePrice() */\n      jump\t// in\n    tag_376:\n        /* \"contracts/SimpleToken.sol\":5157:5196  uint256 currentPrice = calculatePrice() */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":5245:5264  uint256 tokensToBuy */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5267:5293  (msg.value) / currentPrice */\n      tag_377\n        /* \"contracts/SimpleToken.sol\":5157:5196  uint256 currentPrice = calculatePrice() */\n      dup3\n        /* \"contracts/SimpleToken.sol\":5268:5277  msg.value */\n      callvalue\n        /* \"contracts/SimpleToken.sol\":5267:5293  (msg.value) / currentPrice */\n      tag_273\n      jump\t// in\n    tag_377:\n        /* \"contracts/SimpleToken.sol\":5330:5334  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5245:5293  uint256 tokensToBuy = (msg.value) / currentPrice */\n      swap1\n      swap2\n      pop\n      dup2\n      gt\n        /* \"contracts/SimpleToken.sol\":5312:5351  balanceOf(address(this)) >= tokensToBuy */\n      iszero\n        /* \"contracts/SimpleToken.sol\":5304:5384  require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10598:10600   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":5304:5384  require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10580:10601   */\n      mstore\n        /* \"#utility.yul\":10637:10639   */\n      0x1c\n        /* \"#utility.yul\":10617:10635   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10610:10640   */\n      mstore\n        /* \"#utility.yul\":10676:10706   */\n      0x4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e00000000\n        /* \"#utility.yul\":10656:10674   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10649:10707   */\n      mstore\n        /* \"#utility.yul\":10724:10742   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":5304:5384  require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\") */\n      tag_267\n        /* \"#utility.yul\":10396:10748   */\n      jump\n        /* \"contracts/SimpleToken.sol\":5304:5384  require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\") */\n    tag_379:\n        /* \"contracts/SimpleToken.sol\":5404:5414  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5395:5415  balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":5395:5403  balances */\n      0x14\n        /* \"contracts/SimpleToken.sol\":5395:5415  balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/SimpleToken.sol\":5395:5430  balances[msg.sender] += tokensToBuy */\n      dup1\n      sload\n        /* \"contracts/SimpleToken.sol\":5419:5430  tokensToBuy */\n      dup4\n      swap3\n        /* \"contracts/SimpleToken.sol\":5395:5415  balances[msg.sender] */\n      swap1\n        /* \"contracts/SimpleToken.sol\":5395:5430  balances[msg.sender] += tokensToBuy */\n      tag_382\n      swap1\n        /* \"contracts/SimpleToken.sol\":5419:5430  tokensToBuy */\n      dup5\n      swap1\n        /* \"contracts/SimpleToken.sol\":5395:5430  balances[msg.sender] += tokensToBuy */\n      tag_309\n      jump\t// in\n    tag_382:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/SimpleToken.sol\":5441:5490  _transfer(address(this), msg.sender, tokensToBuy) */\n      tag_383\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":5459:5463  this */\n      address\n        /* \"contracts/SimpleToken.sol\":5466:5476  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5478:5489  tokensToBuy */\n      dup4\n        /* \"contracts/SimpleToken.sol\":5441:5450  _transfer */\n      tag_280\n        /* \"contracts/SimpleToken.sol\":5441:5490  _transfer(address(this), msg.sender, tokensToBuy) */\n      jump\t// in\n    tag_383:\n        /* \"contracts/SimpleToken.sol\":5515:5526  tokensToBuy */\n      dup1\n        /* \"contracts/SimpleToken.sol\":5501:5511  tokensSold */\n      0x0a\n      0x00\n        /* \"contracts/SimpleToken.sol\":5501:5526  tokensSold += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_384\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_384:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":5544:5592  Transfer(address(this), msg.sender, tokensToBuy) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":5568:5578  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SimpleToken.sol\":5561:5565  this */\n      address\n      swap1\n        /* \"contracts/SimpleToken.sol\":5544:5592  Transfer(address(this), msg.sender, tokensToBuy) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/SimpleToken.sol\":5544:5592  Transfer(address(this), msg.sender, tokensToBuy) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SimpleToken.sol\":5024:5623  {... */\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":4986:5623  function buyTokens() external payable {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":4523:4899  function calculatePrice() public view returns (uint256) {... */\n    tag_218:\n        /* \"contracts/SimpleToken.sol\":4598:4613  presaleIsActive */\n      sload(0x05)\n        /* \"contracts/SimpleToken.sol\":4570:4577  uint256 */\n      0x00\n      swap1\n      shl(0xa0, 0x01)\n        /* \"contracts/SimpleToken.sol\":4598:4613  presaleIsActive */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":4590:4641  require(presaleIsActive,\"Pre-sale not started yet\") */\n      tag_387\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10955:10957   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":4590:4641  require(presaleIsActive,\"Pre-sale not started yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10937:10958   */\n      mstore\n        /* \"#utility.yul\":10994:10996   */\n      0x18\n        /* \"#utility.yul\":10974:10992   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10967:10997   */\n      mstore\n        /* \"#utility.yul\":11033:11059   */\n      0x5072652d73616c65206e6f742073746172746564207965740000000000000000\n        /* \"#utility.yul\":11013:11031   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11006:11060   */\n      mstore\n        /* \"#utility.yul\":11077:11095   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":4590:4641  require(presaleIsActive,\"Pre-sale not started yet\") */\n      tag_267\n        /* \"#utility.yul\":10753:11101   */\n      jump\n        /* \"contracts/SimpleToken.sol\":4590:4641  require(presaleIsActive,\"Pre-sale not started yet\") */\n    tag_387:\n        /* \"contracts/SimpleToken.sol\":4675:4689  preSaleEndTime */\n      sload(0x07)\n        /* \"contracts/SimpleToken.sol\":4657:4672  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":4657:4689  block.timestamp > preSaleEndTime */\n      gt\n        /* \"contracts/SimpleToken.sol\":4652:4741  if ( block.timestamp > preSaleEndTime) {... */\n      iszero\n      tag_390\n      jumpi\n      pop\n        /* \"contracts/SimpleToken.sol\":4713:4729  regularSalePrice */\n      sload(0x09)\n      swap1\n        /* \"contracts/SimpleToken.sol\":4523:4899  function calculatePrice() public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":4652:4741  if ( block.timestamp > preSaleEndTime) {... */\n    tag_390:\n        /* \"contracts/SimpleToken.sol\":4753:4774  uint256 priceIncrease */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4777:4801  calculatePriceIncrease() */\n      tag_391\n        /* \"contracts/SimpleToken.sol\":4777:4799  calculatePriceIncrease */\n      tag_116\n        /* \"contracts/SimpleToken.sol\":4777:4801  calculatePriceIncrease() */\n      jump\t// in\n    tag_391:\n        /* \"contracts/SimpleToken.sol\":4753:4801  uint256 priceIncrease = calculatePriceIncrease() */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4812:4832  uint256 currentPrice */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4848:4861  priceIncrease */\n      dup2\n        /* \"contracts/SimpleToken.sol\":4835:4847  initialPrice */\n      sload(0x08)\n        /* \"contracts/SimpleToken.sol\":4835:4861  initialPrice+priceIncrease */\n      tag_286\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_396\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_396:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_398\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2901:2952   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_267\n        /* \"#utility.yul\":2755:2958   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_398:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_400\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_298\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_403\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_404\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_278:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_411\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11326:11358   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11308:11359   */\n      mstore\n        /* \"#utility.yul\":11375:11393   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11368:11402   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":11418:11436   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11411:11445   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11281:11299   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_267\n        /* \"#utility.yul\":11106:11451   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_411\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_404\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_411:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_280:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2901:2952   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_267\n        /* \"#utility.yul\":2755:2958   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_413:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_415\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2901:2952   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_267\n        /* \"#utility.yul\":2755:2958   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_403\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_418\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2901:2952   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_267\n        /* \"#utility.yul\":2755:2958   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_298:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_427\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2901:2952   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      tag_267\n        /* \"#utility.yul\":2755:2958   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_427:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_429\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_418\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_429:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_404:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_431\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2901:2952   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_267\n        /* \"#utility.yul\":2755:2958   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_431:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_433\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2901:2952   */\n      mstore\n        /* \"#utility.yul\":2874:2892   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_267\n        /* \"#utility.yul\":2755:2958   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_433:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_411\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_436\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_436:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_418:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_438\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_439\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_439:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_440\n      swap1\n      pop\n      jump\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_441\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11326:11358   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11308:11359   */\n      mstore\n        /* \"#utility.yul\":11375:11393   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11368:11402   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":11418:11436   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11411:11445   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11281:11299   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_267\n        /* \"#utility.yul\":11106:11451   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_441:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_440:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_443\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_444)\n    tag_443:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_444:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_445\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_445:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:614   */\n    tag_65:\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup2\n        /* \"#utility.yul\":327:348   */\n      mstore\n        /* \"#utility.yul\":308:312   */\n      0x00\n        /* \"#utility.yul\":377:383   */\n      dup3\n        /* \"#utility.yul\":371:384   */\n      mload\n        /* \"#utility.yul\":420:426   */\n      dup1\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":404:413   */\n      dup5\n        /* \"#utility.yul\":400:418   */\n      add\n        /* \"#utility.yul\":393:427   */\n      mstore\n        /* \"#utility.yul\":479:485   */\n      dup1\n        /* \"#utility.yul\":474:476   */\n      0x20\n        /* \"#utility.yul\":466:472   */\n      dup6\n        /* \"#utility.yul\":462:477   */\n      add\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":446:455   */\n      dup6\n        /* \"#utility.yul\":442:460   */\n      add\n        /* \"#utility.yul\":436:486   */\n      mcopy\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":530:532   */\n      0x40\n        /* \"#utility.yul\":521:527   */\n      dup3\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:528   */\n      add\n        /* \"#utility.yul\":502:533   */\n      add\n        /* \"#utility.yul\":495:537   */\n      mstore\n        /* \"#utility.yul\":605:607   */\n      0x40\n        /* \"#utility.yul\":598:600   */\n      0x1f\n        /* \"#utility.yul\":594:601   */\n      not\n        /* \"#utility.yul\":589:591   */\n      0x1f\n        /* \"#utility.yul\":581:587   */\n      dup4\n        /* \"#utility.yul\":577:592   */\n      add\n        /* \"#utility.yul\":573:602   */\n      and\n        /* \"#utility.yul\":562:571   */\n      dup5\n        /* \"#utility.yul\":558:603   */\n      add\n        /* \"#utility.yul\":554:608   */\n      add\n        /* \"#utility.yul\":546:608   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":196:614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":619:792   */\n    tag_446:\n        /* \"#utility.yul\":687:707   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":736:767   */\n      dup2\n      and\n        /* \"#utility.yul\":726:768   */\n      dup2\n      eq\n        /* \"#utility.yul\":716:786   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":782:783   */\n      0x00\n        /* \"#utility.yul\":779:780   */\n      dup1\n        /* \"#utility.yul\":772:784   */\n      revert\n        /* \"#utility.yul\":716:786   */\n    tag_454:\n        /* \"#utility.yul\":619:792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":797:1097   */\n    tag_69:\n        /* \"#utility.yul\":865:871   */\n      0x00\n        /* \"#utility.yul\":873:879   */\n      dup1\n        /* \"#utility.yul\":926:928   */\n      0x40\n        /* \"#utility.yul\":914:923   */\n      dup4\n        /* \"#utility.yul\":905:912   */\n      dup6\n        /* \"#utility.yul\":901:924   */\n      sub\n        /* \"#utility.yul\":897:929   */\n      slt\n        /* \"#utility.yul\":894:946   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":942:943   */\n      0x00\n        /* \"#utility.yul\":939:940   */\n      dup1\n        /* \"#utility.yul\":932:944   */\n      revert\n        /* \"#utility.yul\":894:946   */\n    tag_456:\n        /* \"#utility.yul\":965:994   */\n      tag_457\n        /* \"#utility.yul\":984:993   */\n      dup4\n        /* \"#utility.yul\":965:994   */\n      tag_446\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":955:994   */\n      swap5\n        /* \"#utility.yul\":1063:1065   */\n      0x20\n        /* \"#utility.yul\":1048:1066   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1035:1067   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":797:1097   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_96:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      dup1\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      dup1\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_460:\n        /* \"#utility.yul\":1479:1508   */\n      tag_461\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_446\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_462\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_446\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1673:1859   */\n    tag_102:\n        /* \"#utility.yul\":1732:1738   */\n      0x00\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1773:1782   */\n      dup3\n        /* \"#utility.yul\":1764:1771   */\n      dup5\n        /* \"#utility.yul\":1760:1783   */\n      sub\n        /* \"#utility.yul\":1756:1788   */\n      slt\n        /* \"#utility.yul\":1753:1805   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":1801:1802   */\n      0x00\n        /* \"#utility.yul\":1798:1799   */\n      dup1\n        /* \"#utility.yul\":1791:1803   */\n      revert\n        /* \"#utility.yul\":1753:1805   */\n    tag_464:\n        /* \"#utility.yul\":1824:1853   */\n      tag_286\n        /* \"#utility.yul\":1843:1852   */\n      dup3\n        /* \"#utility.yul\":1824:1853   */\n      tag_446\n      jump\t// in\n        /* \"#utility.yul\":2053:2519   */\n    tag_129:\n        /* \"#utility.yul\":2130:2136   */\n      0x00\n        /* \"#utility.yul\":2138:2144   */\n      dup1\n        /* \"#utility.yul\":2146:2152   */\n      0x00\n        /* \"#utility.yul\":2199:2201   */\n      0x60\n        /* \"#utility.yul\":2187:2196   */\n      dup5\n        /* \"#utility.yul\":2178:2185   */\n      dup7\n        /* \"#utility.yul\":2174:2197   */\n      sub\n        /* \"#utility.yul\":2170:2202   */\n      slt\n        /* \"#utility.yul\":2167:2219   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":2215:2216   */\n      0x00\n        /* \"#utility.yul\":2212:2213   */\n      dup1\n        /* \"#utility.yul\":2205:2217   */\n      revert\n        /* \"#utility.yul\":2167:2219   */\n    tag_468:\n      pop\n      pop\n        /* \"#utility.yul\":2260:2283   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":2380:2382   */\n      0x20\n        /* \"#utility.yul\":2365:2383   */\n      dup4\n      add\n        /* \"#utility.yul\":2352:2384   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2483:2485   */\n      0x40\n        /* \"#utility.yul\":2468:2486   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2455:2487   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2053:2519   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2524:2750   */\n    tag_142:\n        /* \"#utility.yul\":2583:2589   */\n      0x00\n        /* \"#utility.yul\":2636:2638   */\n      0x20\n        /* \"#utility.yul\":2624:2633   */\n      dup3\n        /* \"#utility.yul\":2615:2622   */\n      dup5\n        /* \"#utility.yul\":2611:2634   */\n      sub\n        /* \"#utility.yul\":2607:2639   */\n      slt\n        /* \"#utility.yul\":2604:2656   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":2652:2653   */\n      0x00\n        /* \"#utility.yul\":2649:2650   */\n      dup1\n        /* \"#utility.yul\":2642:2654   */\n      revert\n        /* \"#utility.yul\":2604:2656   */\n    tag_470:\n      pop\n        /* \"#utility.yul\":2697:2720   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2524:2750   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2963:3309   */\n    tag_211:\n        /* \"#utility.yul\":3031:3037   */\n      0x00\n        /* \"#utility.yul\":3039:3045   */\n      dup1\n        /* \"#utility.yul\":3092:3094   */\n      0x40\n        /* \"#utility.yul\":3080:3089   */\n      dup4\n        /* \"#utility.yul\":3071:3078   */\n      dup6\n        /* \"#utility.yul\":3067:3090   */\n      sub\n        /* \"#utility.yul\":3063:3095   */\n      slt\n        /* \"#utility.yul\":3060:3112   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":3108:3109   */\n      0x00\n        /* \"#utility.yul\":3105:3106   */\n      dup1\n        /* \"#utility.yul\":3098:3110   */\n      revert\n        /* \"#utility.yul\":3060:3112   */\n    tag_473:\n      pop\n      pop\n        /* \"#utility.yul\":3153:3176   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3273:3275   */\n      0x20\n        /* \"#utility.yul\":3258:3276   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3245:3277   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2963:3309   */\n      jump\t// out\n        /* \"#utility.yul\":3314:3574   */\n    tag_227:\n        /* \"#utility.yul\":3382:3388   */\n      0x00\n        /* \"#utility.yul\":3390:3396   */\n      dup1\n        /* \"#utility.yul\":3443:3445   */\n      0x40\n        /* \"#utility.yul\":3431:3440   */\n      dup4\n        /* \"#utility.yul\":3422:3429   */\n      dup6\n        /* \"#utility.yul\":3418:3441   */\n      sub\n        /* \"#utility.yul\":3414:3446   */\n      slt\n        /* \"#utility.yul\":3411:3463   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":3459:3460   */\n      0x00\n        /* \"#utility.yul\":3456:3457   */\n      dup1\n        /* \"#utility.yul\":3449:3461   */\n      revert\n        /* \"#utility.yul\":3411:3463   */\n    tag_475:\n        /* \"#utility.yul\":3482:3511   */\n      tag_476\n        /* \"#utility.yul\":3501:3510   */\n      dup4\n        /* \"#utility.yul\":3482:3511   */\n      tag_446\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":3472:3511   */\n      swap2\n      pop\n        /* \"#utility.yul\":3530:3568   */\n      tag_477\n        /* \"#utility.yul\":3564:3566   */\n      0x20\n        /* \"#utility.yul\":3553:3562   */\n      dup5\n        /* \"#utility.yul\":3549:3567   */\n      add\n        /* \"#utility.yul\":3530:3568   */\n      tag_446\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":3520:3568   */\n      swap1\n      pop\n        /* \"#utility.yul\":3314:3574   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3579:3959   */\n    tag_245:\n        /* \"#utility.yul\":3658:3659   */\n      0x01\n        /* \"#utility.yul\":3654:3666   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3701:3713   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3722:3783   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":3776:3780   */\n      0x7f\n        /* \"#utility.yul\":3768:3774   */\n      dup3\n        /* \"#utility.yul\":3764:3781   */\n      and\n        /* \"#utility.yul\":3754:3781   */\n      swap2\n      pop\n        /* \"#utility.yul\":3722:3783   */\n    tag_479:\n        /* \"#utility.yul\":3829:3831   */\n      0x20\n        /* \"#utility.yul\":3821:3827   */\n      dup3\n        /* \"#utility.yul\":3818:3832   */\n      lt\n        /* \"#utility.yul\":3798:3816   */\n      dup2\n        /* \"#utility.yul\":3795:3833   */\n      sub\n        /* \"#utility.yul\":3792:3953   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":3875:3885   */\n      0x4e487b71\n        /* \"#utility.yul\":3870:3873   */\n      0xe0\n        /* \"#utility.yul\":3866:3886   */\n      shl\n        /* \"#utility.yul\":3863:3864   */\n      0x00\n        /* \"#utility.yul\":3856:3887   */\n      mstore\n        /* \"#utility.yul\":3910:3914   */\n      0x22\n        /* \"#utility.yul\":3907:3908   */\n      0x04\n        /* \"#utility.yul\":3900:3915   */\n      mstore\n        /* \"#utility.yul\":3938:3942   */\n      0x24\n        /* \"#utility.yul\":3935:3936   */\n      0x00\n        /* \"#utility.yul\":3928:3943   */\n      revert\n        /* \"#utility.yul\":3792:3953   */\n    tag_480:\n      pop\n        /* \"#utility.yul\":3579:3959   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3964:4091   */\n    tag_447:\n        /* \"#utility.yul\":4025:4035   */\n      0x4e487b71\n        /* \"#utility.yul\":4020:4023   */\n      0xe0\n        /* \"#utility.yul\":4016:4036   */\n      shl\n        /* \"#utility.yul\":4013:4014   */\n      0x00\n        /* \"#utility.yul\":4006:4037   */\n      mstore\n        /* \"#utility.yul\":4056:4060   */\n      0x11\n        /* \"#utility.yul\":4053:4054   */\n      0x04\n        /* \"#utility.yul\":4046:4061   */\n      mstore\n        /* \"#utility.yul\":4080:4084   */\n      0x24\n        /* \"#utility.yul\":4077:4078   */\n      0x00\n        /* \"#utility.yul\":4070:4085   */\n      revert\n        /* \"#utility.yul\":4096:4471   */\n    tag_448:\n        /* \"#utility.yul\":4184:4185   */\n      0x01\n        /* \"#utility.yul\":4202:4207   */\n      dup2\n        /* \"#utility.yul\":4216:4465   */\n    tag_483:\n        /* \"#utility.yul\":4237:4238   */\n      0x01\n        /* \"#utility.yul\":4227:4235   */\n      dup5\n        /* \"#utility.yul\":4224:4239   */\n      gt\n        /* \"#utility.yul\":4216:4465   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":4287:4291   */\n      dup1\n        /* \"#utility.yul\":4282:4285   */\n      dup6\n        /* \"#utility.yul\":4278:4292   */\n      div\n        /* \"#utility.yul\":4272:4276   */\n      dup2\n        /* \"#utility.yul\":4269:4293   */\n      gt\n        /* \"#utility.yul\":4266:4316   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":4296:4314   */\n      tag_487\n      tag_447\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":4346:4347   */\n      0x01\n        /* \"#utility.yul\":4336:4344   */\n      dup5\n        /* \"#utility.yul\":4332:4348   */\n      and\n        /* \"#utility.yul\":4329:4378   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":4360:4376   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":4329:4378   */\n    tag_488:\n        /* \"#utility.yul\":4443:4444   */\n      0x01\n        /* \"#utility.yul\":4439:4455   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":4399:4414   */\n      dup1\n      mul\n        /* \"#utility.yul\":4216:4465   */\n      jump(tag_483)\n    tag_485:\n        /* \"#utility.yul\":4096:4471   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4476:5378   */\n    tag_449:\n        /* \"#utility.yul\":4525:4530   */\n      0x00\n        /* \"#utility.yul\":4555:4563   */\n      dup3\n        /* \"#utility.yul\":4545:4625   */\n      tag_490\n      jumpi\n      pop\n        /* \"#utility.yul\":4596:4597   */\n      0x01\n        /* \"#utility.yul\":4610:4615   */\n      jump(tag_250)\n        /* \"#utility.yul\":4545:4625   */\n    tag_490:\n        /* \"#utility.yul\":4644:4648   */\n      dup2\n        /* \"#utility.yul\":4634:4710   */\n      tag_491\n      jumpi\n      pop\n        /* \"#utility.yul\":4681:4682   */\n      0x00\n        /* \"#utility.yul\":4695:4700   */\n      jump(tag_250)\n        /* \"#utility.yul\":4634:4710   */\n    tag_491:\n        /* \"#utility.yul\":4726:4730   */\n      dup2\n        /* \"#utility.yul\":4744:4745   */\n      0x01\n        /* \"#utility.yul\":4739:4798   */\n      dup2\n      eq\n      tag_493\n      jumpi\n        /* \"#utility.yul\":4812:4813   */\n      0x02\n        /* \"#utility.yul\":4807:4981   */\n      dup2\n      eq\n      tag_494\n      jumpi\n        /* \"#utility.yul\":4719:4981   */\n      jump(tag_492)\n        /* \"#utility.yul\":4739:4798   */\n    tag_493:\n        /* \"#utility.yul\":4769:4770   */\n      0x01\n        /* \"#utility.yul\":4760:4770   */\n      swap2\n      pop\n        /* \"#utility.yul\":4783:4788   */\n      pop\n      jump(tag_250)\n        /* \"#utility.yul\":4807:4981   */\n    tag_494:\n        /* \"#utility.yul\":4844:4847   */\n      0xff\n        /* \"#utility.yul\":4834:4842   */\n      dup5\n        /* \"#utility.yul\":4831:4848   */\n      gt\n        /* \"#utility.yul\":4828:4871   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":4851:4869   */\n      tag_496\n      tag_447\n      jump\t// in\n    tag_496:\n      pop\n      pop\n        /* \"#utility.yul\":4907:4908   */\n      0x01\n        /* \"#utility.yul\":4893:4909   */\n      dup3\n      shl\n        /* \"#utility.yul\":4966:4971   */\n      jump(tag_250)\n        /* \"#utility.yul\":4719:4981   */\n    tag_492:\n      pop\n        /* \"#utility.yul\":5065:5067   */\n      0x20\n        /* \"#utility.yul\":5055:5063   */\n      dup4\n        /* \"#utility.yul\":5052:5068   */\n      lt\n        /* \"#utility.yul\":5046:5049   */\n      0x0133\n        /* \"#utility.yul\":5040:5044   */\n      dup4\n        /* \"#utility.yul\":5037:5050   */\n      lt\n        /* \"#utility.yul\":5033:5069   */\n      and\n        /* \"#utility.yul\":5027:5029   */\n      0x4e\n        /* \"#utility.yul\":5017:5025   */\n      dup5\n        /* \"#utility.yul\":5014:5030   */\n      lt\n        /* \"#utility.yul\":5009:5011   */\n      0x0b\n        /* \"#utility.yul\":5003:5007   */\n      dup5\n        /* \"#utility.yul\":5000:5012   */\n      lt\n        /* \"#utility.yul\":4996:5031   */\n      and\n        /* \"#utility.yul\":4993:5070   */\n      or\n        /* \"#utility.yul\":4990:5193   */\n      iszero\n      tag_497\n      jumpi\n      pop\n        /* \"#utility.yul\":5102:5121   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":5178:5183   */\n      jump(tag_250)\n        /* \"#utility.yul\":4990:5193   */\n    tag_497:\n        /* \"#utility.yul\":5225:5267   */\n      tag_498\n      not(0x00)\n        /* \"#utility.yul\":5250:5258   */\n      dup5\n        /* \"#utility.yul\":5244:5248   */\n      dup5\n        /* \"#utility.yul\":5225:5267   */\n      tag_448\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":5303:5309   */\n      dup1\n        /* \"#utility.yul\":5299:5300   */\n      0x00\n        /* \"#utility.yul\":5295:5301   */\n      not\n        /* \"#utility.yul\":5291:5310   */\n      div\n        /* \"#utility.yul\":5282:5289   */\n      dup3\n        /* \"#utility.yul\":5279:5311   */\n      gt\n        /* \"#utility.yul\":5276:5334   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":5314:5332   */\n      tag_500\n      tag_447\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":5352:5372   */\n      mul\n      swap4\n        /* \"#utility.yul\":4476:5378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5383:5523   */\n    tag_258:\n        /* \"#utility.yul\":5441:5446   */\n      0x00\n        /* \"#utility.yul\":5470:5517   */\n      tag_286\n        /* \"#utility.yul\":5511:5515   */\n      0xff\n        /* \"#utility.yul\":5501:5509   */\n      dup5\n        /* \"#utility.yul\":5497:5516   */\n      and\n        /* \"#utility.yul\":5491:5495   */\n      dup4\n        /* \"#utility.yul\":5470:5517   */\n      tag_449\n      jump\t// in\n        /* \"#utility.yul\":5528:5696   */\n    tag_260:\n        /* \"#utility.yul\":5601:5610   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5632:5641   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5649:5664   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5643:5665   */\n      dup5\n      eq\n        /* \"#utility.yul\":5629:5666   */\n      or\n        /* \"#utility.yul\":5619:5690   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":5670:5688   */\n      tag_250\n      tag_447\n      jump\t// in\n        /* \"#utility.yul\":5701:6098   */\n    tag_268:\n        /* \"#utility.yul\":5903:5905   */\n      0x20\n        /* \"#utility.yul\":5885:5906   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5942:5944   */\n      0x21\n        /* \"#utility.yul\":5922:5940   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5915:5945   */\n      mstore\n        /* \"#utility.yul\":5981:6015   */\n      0x456e642074696d65206d7573742062652061667465722073746172742074696d\n        /* \"#utility.yul\":5976:5978   */\n      0x40\n        /* \"#utility.yul\":5961:5979   */\n      dup3\n      add\n        /* \"#utility.yul\":5954:6016   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":6047:6049   */\n      0x60\n        /* \"#utility.yul\":6032:6050   */\n      dup3\n      add\n        /* \"#utility.yul\":6025:6056   */\n      mstore\n        /* \"#utility.yul\":6088:6091   */\n      0x80\n        /* \"#utility.yul\":6073:6092   */\n      add\n      swap1\n        /* \"#utility.yul\":5701:6098   */\n      jump\t// out\n        /* \"#utility.yul\":6103:6231   */\n    tag_270:\n        /* \"#utility.yul\":6170:6179   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":6191:6202   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":6188:6225   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":6205:6223   */\n      tag_250\n      tag_447\n      jump\t// in\n        /* \"#utility.yul\":6236:6453   */\n    tag_273:\n        /* \"#utility.yul\":6276:6277   */\n      0x00\n        /* \"#utility.yul\":6302:6303   */\n      dup3\n        /* \"#utility.yul\":6292:6424   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":6346:6356   */\n      0x4e487b71\n        /* \"#utility.yul\":6341:6344   */\n      0xe0\n        /* \"#utility.yul\":6337:6357   */\n      shl\n        /* \"#utility.yul\":6334:6335   */\n      0x00\n        /* \"#utility.yul\":6327:6358   */\n      mstore\n        /* \"#utility.yul\":6381:6385   */\n      0x12\n        /* \"#utility.yul\":6378:6379   */\n      0x04\n        /* \"#utility.yul\":6371:6386   */\n      mstore\n        /* \"#utility.yul\":6409:6413   */\n      0x24\n        /* \"#utility.yul\":6406:6407   */\n      0x00\n        /* \"#utility.yul\":6399:6414   */\n      revert\n        /* \"#utility.yul\":6292:6424   */\n    tag_511:\n      pop\n        /* \"#utility.yul\":6438:6447   */\n      div\n      swap1\n        /* \"#utility.yul\":6236:6453   */\n      jump\t// out\n        /* \"#utility.yul\":7463:7588   */\n    tag_309:\n        /* \"#utility.yul\":7528:7537   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7549:7559   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7546:7582   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":7562:7580   */\n      tag_250\n      tag_447\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220e120603368e2c0c0936d4851e331f4c07119a724006374f0a481d76f7602f92464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1086": {
									"entryPoint": null,
									"id": 1086,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 331,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 250,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 387,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 856,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4596:7",
										"nodeType": "YulBlock",
										"src": "0:4596:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "197:789:7",
													"nodeType": "YulBlock",
													"src": "197:789:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "244:16:7",
																"nodeType": "YulBlock",
																"src": "244:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "253:1:7",
																					"nodeType": "YulLiteral",
																					"src": "253:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "256:1:7",
																					"nodeType": "YulLiteral",
																					"src": "256:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "246:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "246:6:7"
																			},
																			"nativeSrc": "246:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "246:12:7"
																		},
																		"nativeSrc": "246:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "246:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "218:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "218:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "227:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "227:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "214:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "214:3:7"
																		},
																		"nativeSrc": "214:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "214:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "239:3:7",
																		"nodeType": "YulLiteral",
																		"src": "239:3:7",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "210:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "210:3:7"
																},
																"nativeSrc": "210:33:7",
																"nodeType": "YulFunctionCall",
																"src": "210:33:7"
															},
															"nativeSrc": "207:53:7",
															"nodeType": "YulIf",
															"src": "207:53:7"
														},
														{
															"nativeSrc": "269:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "269:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "288:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "288:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "282:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "282:5:7"
																},
																"nativeSrc": "282:16:7",
																"nodeType": "YulFunctionCall",
																"src": "282:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "273:5:7",
																	"nodeType": "YulTypedName",
																	"src": "273:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "361:16:7",
																"nodeType": "YulBlock",
																"src": "361:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "370:1:7",
																					"nodeType": "YulLiteral",
																					"src": "370:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "373:1:7",
																					"nodeType": "YulLiteral",
																					"src": "373:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "363:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "363:6:7"
																			},
																			"nativeSrc": "363:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "363:12:7"
																		},
																		"nativeSrc": "363:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "363:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "320:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "320:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "331:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "331:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "346:3:7",
																										"nodeType": "YulLiteral",
																										"src": "346:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "351:1:7",
																										"nodeType": "YulLiteral",
																										"src": "351:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "342:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "342:3:7"
																								},
																								"nativeSrc": "342:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "342:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "355:1:7",
																								"nodeType": "YulLiteral",
																								"src": "355:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "338:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "338:3:7"
																						},
																						"nativeSrc": "338:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "338:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "327:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "327:3:7"
																				},
																				"nativeSrc": "327:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "327:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "317:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "317:2:7"
																		},
																		"nativeSrc": "317:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "317:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:50:7",
																"nodeType": "YulFunctionCall",
																"src": "310:50:7"
															},
															"nativeSrc": "307:70:7",
															"nodeType": "YulIf",
															"src": "307:70:7"
														},
														{
															"nativeSrc": "386:15:7",
															"nodeType": "YulAssignment",
															"src": "386:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "396:5:7",
																"nodeType": "YulIdentifier",
																"src": "396:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "386:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "386:6:7"
																}
															]
														},
														{
															"nativeSrc": "410:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "410:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "425:1:7",
																"nodeType": "YulLiteral",
																"src": "425:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "414:7:7",
																	"nodeType": "YulTypedName",
																	"src": "414:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "435:36:7",
															"nodeType": "YulAssignment",
															"src": "435:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "456:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "456:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "467:2:7",
																				"nodeType": "YulLiteral",
																				"src": "467:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "452:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "452:3:7"
																		},
																		"nativeSrc": "452:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "452:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "446:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "446:5:7"
																},
																"nativeSrc": "446:25:7",
																"nodeType": "YulFunctionCall",
																"src": "446:25:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "435:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "435:7:7"
																}
															]
														},
														{
															"nativeSrc": "480:17:7",
															"nodeType": "YulAssignment",
															"src": "480:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "490:7:7",
																"nodeType": "YulIdentifier",
																"src": "490:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "480:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "480:6:7"
																}
															]
														},
														{
															"nativeSrc": "506:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "506:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "521:1:7",
																"nodeType": "YulLiteral",
																"src": "521:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "510:7:7",
																	"nodeType": "YulTypedName",
																	"src": "510:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "531:36:7",
															"nodeType": "YulAssignment",
															"src": "531:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "552:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "552:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "563:2:7",
																				"nodeType": "YulLiteral",
																				"src": "563:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "548:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "548:3:7"
																		},
																		"nativeSrc": "548:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "548:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "542:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "542:5:7"
																},
																"nativeSrc": "542:25:7",
																"nodeType": "YulFunctionCall",
																"src": "542:25:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "531:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "531:7:7"
																}
															]
														},
														{
															"nativeSrc": "576:17:7",
															"nodeType": "YulAssignment",
															"src": "576:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "586:7:7",
																"nodeType": "YulIdentifier",
																"src": "586:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "576:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "576:6:7"
																}
															]
														},
														{
															"nativeSrc": "602:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "602:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "617:1:7",
																"nodeType": "YulLiteral",
																"src": "617:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "606:7:7",
																	"nodeType": "YulTypedName",
																	"src": "606:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "627:36:7",
															"nodeType": "YulAssignment",
															"src": "627:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "648:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "648:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "659:2:7",
																				"nodeType": "YulLiteral",
																				"src": "659:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "644:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "644:3:7"
																		},
																		"nativeSrc": "644:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "644:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "638:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "638:5:7"
																},
																"nativeSrc": "638:25:7",
																"nodeType": "YulFunctionCall",
																"src": "638:25:7"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "627:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "627:7:7"
																}
															]
														},
														{
															"nativeSrc": "672:17:7",
															"nodeType": "YulAssignment",
															"src": "672:17:7",
															"value": {
																"name": "value_3",
																"nativeSrc": "682:7:7",
																"nodeType": "YulIdentifier",
																"src": "682:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "672:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "672:6:7"
																}
															]
														},
														{
															"nativeSrc": "698:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "698:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "713:1:7",
																"nodeType": "YulLiteral",
																"src": "713:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "702:7:7",
																	"nodeType": "YulTypedName",
																	"src": "702:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "723:37:7",
															"nodeType": "YulAssignment",
															"src": "723:37:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "744:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "744:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "755:3:7",
																				"nodeType": "YulLiteral",
																				"src": "755:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "740:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "740:3:7"
																		},
																		"nativeSrc": "740:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "740:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "734:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "734:5:7"
																},
																"nativeSrc": "734:26:7",
																"nodeType": "YulFunctionCall",
																"src": "734:26:7"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "723:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "723:7:7"
																}
															]
														},
														{
															"nativeSrc": "769:17:7",
															"nodeType": "YulAssignment",
															"src": "769:17:7",
															"value": {
																"name": "value_4",
																"nativeSrc": "779:7:7",
																"nodeType": "YulIdentifier",
																"src": "779:7:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "769:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:6:7"
																}
															]
														},
														{
															"nativeSrc": "795:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "795:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "810:1:7",
																"nodeType": "YulLiteral",
																"src": "810:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "799:7:7",
																	"nodeType": "YulTypedName",
																	"src": "799:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "820:37:7",
															"nodeType": "YulAssignment",
															"src": "820:37:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "841:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "841:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "852:3:7",
																				"nodeType": "YulLiteral",
																				"src": "852:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "837:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "837:3:7"
																		},
																		"nativeSrc": "837:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "837:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "831:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "831:5:7"
																},
																"nativeSrc": "831:26:7",
																"nodeType": "YulFunctionCall",
																"src": "831:26:7"
															},
															"variableNames": [
																{
																	"name": "value_5",
																	"nativeSrc": "820:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "820:7:7"
																}
															]
														},
														{
															"nativeSrc": "866:17:7",
															"nodeType": "YulAssignment",
															"src": "866:17:7",
															"value": {
																"name": "value_5",
																"nativeSrc": "876:7:7",
																"nodeType": "YulIdentifier",
																"src": "876:7:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "866:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "866:6:7"
																}
															]
														},
														{
															"nativeSrc": "892:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "892:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "907:1:7",
																"nodeType": "YulLiteral",
																"src": "907:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_6",
																	"nativeSrc": "896:7:7",
																	"nodeType": "YulTypedName",
																	"src": "896:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "917:37:7",
															"nodeType": "YulAssignment",
															"src": "917:37:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "938:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "938:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "949:3:7",
																				"nodeType": "YulLiteral",
																				"src": "949:3:7",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "934:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "934:3:7"
																		},
																		"nativeSrc": "934:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "934:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "928:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "928:5:7"
																},
																"nativeSrc": "928:26:7",
																"nodeType": "YulFunctionCall",
																"src": "928:26:7"
															},
															"variableNames": [
																{
																	"name": "value_6",
																	"nativeSrc": "917:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "917:7:7"
																}
															]
														},
														{
															"nativeSrc": "963:17:7",
															"nodeType": "YulAssignment",
															"src": "963:17:7",
															"value": {
																"name": "value_6",
																"nativeSrc": "973:7:7",
																"nodeType": "YulIdentifier",
																"src": "973:7:7"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "963:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "963:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "14:972:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "115:9:7",
														"nodeType": "YulTypedName",
														"src": "115:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "126:7:7",
														"nodeType": "YulTypedName",
														"src": "126:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "138:6:7",
														"nodeType": "YulTypedName",
														"src": "138:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "146:6:7",
														"nodeType": "YulTypedName",
														"src": "146:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "154:6:7",
														"nodeType": "YulTypedName",
														"src": "154:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "162:6:7",
														"nodeType": "YulTypedName",
														"src": "162:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "170:6:7",
														"nodeType": "YulTypedName",
														"src": "170:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "178:6:7",
														"nodeType": "YulTypedName",
														"src": "178:6:7",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "186:6:7",
														"nodeType": "YulTypedName",
														"src": "186:6:7",
														"type": ""
													}
												],
												"src": "14:972:7"
											},
											{
												"body": {
													"nativeSrc": "1023:95:7",
													"nodeType": "YulBlock",
													"src": "1023:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1040:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1040:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1047:3:7",
																				"nodeType": "YulLiteral",
																				"src": "1047:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1052:10:7",
																				"nodeType": "YulLiteral",
																				"src": "1052:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1043:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1043:3:7"
																		},
																		"nativeSrc": "1043:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1043:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1033:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1033:6:7"
																},
																"nativeSrc": "1033:31:7",
																"nodeType": "YulFunctionCall",
																"src": "1033:31:7"
															},
															"nativeSrc": "1033:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "1033:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1080:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1080:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1083:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1083:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1073:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1073:6:7"
																},
																"nativeSrc": "1073:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1073:15:7"
															},
															"nativeSrc": "1073:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1073:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1104:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1104:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1107:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1107:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1097:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1097:6:7"
																},
																"nativeSrc": "1097:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1097:15:7"
															},
															"nativeSrc": "1097:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1097:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "991:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "991:127:7"
											},
											{
												"body": {
													"nativeSrc": "1178:325:7",
													"nodeType": "YulBlock",
													"src": "1178:325:7",
													"statements": [
														{
															"nativeSrc": "1188:22:7",
															"nodeType": "YulAssignment",
															"src": "1188:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1202:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1202:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1205:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1205:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1198:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1198:3:7"
																},
																"nativeSrc": "1198:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1198:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1188:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1188:6:7"
																}
															]
														},
														{
															"nativeSrc": "1219:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1219:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1249:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1249:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1255:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1255:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1245:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1245:3:7"
																},
																"nativeSrc": "1245:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1245:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1223:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1223:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1296:31:7",
																"nodeType": "YulBlock",
																"src": "1296:31:7",
																"statements": [
																	{
																		"nativeSrc": "1298:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1298:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1312:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1312:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1320:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1320:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1308:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1308:3:7"
																			},
																			"nativeSrc": "1308:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1308:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1298:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1298:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1276:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1276:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1269:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1269:6:7"
																},
																"nativeSrc": "1269:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1269:26:7"
															},
															"nativeSrc": "1266:61:7",
															"nodeType": "YulIf",
															"src": "1266:61:7"
														},
														{
															"body": {
																"nativeSrc": "1386:111:7",
																"nodeType": "YulBlock",
																"src": "1386:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1407:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1407:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1414:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1414:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1419:10:7",
																							"nodeType": "YulLiteral",
																							"src": "1419:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1410:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1410:3:7"
																					},
																					"nativeSrc": "1410:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1410:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1400:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1400:6:7"
																			},
																			"nativeSrc": "1400:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1400:31:7"
																		},
																		"nativeSrc": "1400:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1400:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1451:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1451:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1454:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1454:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1444:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1444:6:7"
																			},
																			"nativeSrc": "1444:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1444:15:7"
																		},
																		"nativeSrc": "1444:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1444:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1479:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1479:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1482:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1482:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1472:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1472:6:7"
																			},
																			"nativeSrc": "1472:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1472:15:7"
																		},
																		"nativeSrc": "1472:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1472:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1342:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1342:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1365:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1365:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1373:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1373:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1362:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1362:2:7"
																		},
																		"nativeSrc": "1362:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1362:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1339:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1339:2:7"
																},
																"nativeSrc": "1339:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1339:38:7"
															},
															"nativeSrc": "1336:161:7",
															"nodeType": "YulIf",
															"src": "1336:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1123:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1158:4:7",
														"nodeType": "YulTypedName",
														"src": "1158:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1167:6:7",
														"nodeType": "YulTypedName",
														"src": "1167:6:7",
														"type": ""
													}
												],
												"src": "1123:380:7"
											},
											{
												"body": {
													"nativeSrc": "1564:65:7",
													"nodeType": "YulBlock",
													"src": "1564:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1581:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1581:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1584:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1584:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1574:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1574:6:7"
																},
																"nativeSrc": "1574:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1574:14:7"
															},
															"nativeSrc": "1574:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1574:14:7"
														},
														{
															"nativeSrc": "1597:26:7",
															"nodeType": "YulAssignment",
															"src": "1597:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1615:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1615:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1618:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1618:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1605:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1605:9:7"
																},
																"nativeSrc": "1605:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1605:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1597:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1597:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1508:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1547:3:7",
														"nodeType": "YulTypedName",
														"src": "1547:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1555:4:7",
														"nodeType": "YulTypedName",
														"src": "1555:4:7",
														"type": ""
													}
												],
												"src": "1508:121:7"
											},
											{
												"body": {
													"nativeSrc": "1715:437:7",
													"nodeType": "YulBlock",
													"src": "1715:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1748:398:7",
																"nodeType": "YulBlock",
																"src": "1748:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1769:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1769:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1772:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1772:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1762:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1762:6:7"
																			},
																			"nativeSrc": "1762:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1762:16:7"
																		},
																		"nativeSrc": "1762:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1762:16:7"
																	},
																	{
																		"nativeSrc": "1791:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1791:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1813:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1813:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1816:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1816:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1803:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1803:9:7"
																			},
																			"nativeSrc": "1803:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1803:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1795:4:7",
																				"nodeType": "YulTypedName",
																				"src": "1795:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1834:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1834:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1857:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1857:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1867:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1867:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1874:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1874:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1886:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1886:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1870:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1870:3:7"
																							},
																							"nativeSrc": "1870:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1870:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1863:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1863:3:7"
																					},
																					"nativeSrc": "1863:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1863:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1853:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1853:3:7"
																			},
																			"nativeSrc": "1853:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1853:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1838:11:7",
																				"nodeType": "YulTypedName",
																				"src": "1838:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1928:23:7",
																			"nodeType": "YulBlock",
																			"src": "1928:23:7",
																			"statements": [
																				{
																					"nativeSrc": "1930:19:7",
																					"nodeType": "YulAssignment",
																					"src": "1930:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1945:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1945:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1930:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "1930:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1910:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "1910:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1922:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1922:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1907:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1907:2:7"
																			},
																			"nativeSrc": "1907:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1907:20:7"
																		},
																		"nativeSrc": "1904:47:7",
																		"nodeType": "YulIf",
																		"src": "1904:47:7"
																	},
																	{
																		"nativeSrc": "1964:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1964:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1978:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1978:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1988:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1988:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1995:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1995:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2000:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2000:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1991:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1991:3:7"
																							},
																							"nativeSrc": "1991:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1991:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1984:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1984:3:7"
																					},
																					"nativeSrc": "1984:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1984:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1974:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1974:3:7"
																			},
																			"nativeSrc": "1974:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1974:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1968:2:7",
																				"nodeType": "YulTypedName",
																				"src": "1968:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2018:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2018:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2031:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "2031:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2022:5:7",
																				"nodeType": "YulTypedName",
																				"src": "2022:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2116:20:7",
																			"nodeType": "YulBlock",
																			"src": "2116:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2125:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2125:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2132:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2132:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2118:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2118:6:7"
																						},
																						"nativeSrc": "2118:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2118:16:7"
																					},
																					"nativeSrc": "2118:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "2118:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2066:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2066:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2073:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "2073:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2063:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2063:2:7"
																			},
																			"nativeSrc": "2063:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2063:13:7"
																		},
																		"nativeSrc": "2055:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2077:26:7",
																			"nodeType": "YulBlock",
																			"src": "2077:26:7",
																			"statements": [
																				{
																					"nativeSrc": "2079:22:7",
																					"nodeType": "YulAssignment",
																					"src": "2079:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2092:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2092:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2099:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2099:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2088:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2088:3:7"
																						},
																						"nativeSrc": "2088:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2088:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2079:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "2079:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2059:3:7",
																			"nodeType": "YulBlock",
																			"src": "2059:3:7",
																			"statements": []
																		},
																		"src": "2055:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1731:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1731:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1736:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1736:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1728:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1728:2:7"
																},
																"nativeSrc": "1728:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1728:11:7"
															},
															"nativeSrc": "1725:421:7",
															"nodeType": "YulIf",
															"src": "1725:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1634:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1687:5:7",
														"nodeType": "YulTypedName",
														"src": "1687:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1694:3:7",
														"nodeType": "YulTypedName",
														"src": "1694:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1699:10:7",
														"nodeType": "YulTypedName",
														"src": "1699:10:7",
														"type": ""
													}
												],
												"src": "1634:518:7"
											},
											{
												"body": {
													"nativeSrc": "2242:81:7",
													"nodeType": "YulBlock",
													"src": "2242:81:7",
													"statements": [
														{
															"nativeSrc": "2252:65:7",
															"nodeType": "YulAssignment",
															"src": "2252:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2267:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2267:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2285:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2285:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2288:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2288:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2281:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2281:3:7"
																								},
																								"nativeSrc": "2281:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2281:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2298:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2298:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2294:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2294:3:7"
																								},
																								"nativeSrc": "2294:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2294:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2277:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2277:3:7"
																						},
																						"nativeSrc": "2277:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2277:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2273:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2273:3:7"
																				},
																				"nativeSrc": "2273:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2273:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2263:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2263:3:7"
																		},
																		"nativeSrc": "2263:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2263:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2309:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2309:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2312:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2312:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2305:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:7"
																		},
																		"nativeSrc": "2305:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2305:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2260:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2260:2:7"
																},
																"nativeSrc": "2260:57:7",
																"nodeType": "YulFunctionCall",
																"src": "2260:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2252:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2252:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2157:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2219:4:7",
														"nodeType": "YulTypedName",
														"src": "2219:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2225:3:7",
														"nodeType": "YulTypedName",
														"src": "2225:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2233:4:7",
														"nodeType": "YulTypedName",
														"src": "2233:4:7",
														"type": ""
													}
												],
												"src": "2157:166:7"
											},
											{
												"body": {
													"nativeSrc": "2424:1203:7",
													"nodeType": "YulBlock",
													"src": "2424:1203:7",
													"statements": [
														{
															"nativeSrc": "2434:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2434:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2454:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2454:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2448:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2448:5:7"
																},
																"nativeSrc": "2448:10:7",
																"nodeType": "YulFunctionCall",
																"src": "2448:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2438:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2501:22:7",
																"nodeType": "YulBlock",
																"src": "2501:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2503:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2503:16:7"
																			},
																			"nativeSrc": "2503:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:18:7"
																		},
																		"nativeSrc": "2503:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2503:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2473:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2473:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2489:2:7",
																						"nodeType": "YulLiteral",
																						"src": "2489:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2493:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2493:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2485:3:7"
																				},
																				"nativeSrc": "2485:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2485:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2497:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2497:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:7"
																		},
																		"nativeSrc": "2481:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2470:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2470:2:7"
																},
																"nativeSrc": "2470:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2470:30:7"
															},
															"nativeSrc": "2467:56:7",
															"nodeType": "YulIf",
															"src": "2467:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2576:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2576:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2614:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2614:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2608:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2608:5:7"
																				},
																				"nativeSrc": "2608:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2608:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2582:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "2582:25:7"
																		},
																		"nativeSrc": "2582:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2582:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2622:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2622:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2532:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2532:43:7"
																},
																"nativeSrc": "2532:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2532:97:7"
															},
															"nativeSrc": "2532:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "2532:97:7"
														},
														{
															"nativeSrc": "2638:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2638:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2655:1:7",
																"nodeType": "YulLiteral",
																"src": "2655:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2642:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2642:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2665:17:7",
															"nodeType": "YulAssignment",
															"src": "2665:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2678:4:7",
																"nodeType": "YulLiteral",
																"src": "2678:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2665:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2665:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2728:642:7",
																		"nodeType": "YulBlock",
																		"src": "2728:642:7",
																		"statements": [
																			{
																				"nativeSrc": "2742:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2742:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2761:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2761:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2773:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2773:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2769:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2769:3:7"
																							},
																							"nativeSrc": "2769:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2769:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2757:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2757:3:7"
																					},
																					"nativeSrc": "2757:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2757:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2746:7:7",
																						"nodeType": "YulTypedName",
																						"src": "2746:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2790:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2790:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2834:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2834:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2804:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "2804:29:7"
																					},
																					"nativeSrc": "2804:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2804:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2794:6:7",
																						"nodeType": "YulTypedName",
																						"src": "2794:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2852:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2852:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2861:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2861:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2856:1:7",
																						"nodeType": "YulTypedName",
																						"src": "2856:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2932:165:7",
																					"nodeType": "YulBlock",
																					"src": "2932:165:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2957:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2957:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2975:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "2975:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2980:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "2980:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2971:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2971:3:7"
																												},
																												"nativeSrc": "2971:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2971:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2965:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "2965:5:7"
																										},
																										"nativeSrc": "2965:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2965:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2950:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2950:6:7"
																								},
																								"nativeSrc": "2950:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2950:42:7"
																							},
																							"nativeSrc": "2950:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2950:42:7"
																						},
																						{
																							"nativeSrc": "3009:24:7",
																							"nodeType": "YulAssignment",
																							"src": "3009:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3023:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3023:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3031:1:7",
																										"nodeType": "YulLiteral",
																										"src": "3031:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3019:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3019:3:7"
																								},
																								"nativeSrc": "3019:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3019:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3009:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3009:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3050:33:7",
																							"nodeType": "YulAssignment",
																							"src": "3050:33:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3067:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "3067:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3078:4:7",
																										"nodeType": "YulLiteral",
																										"src": "3078:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3063:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "3063:3:7"
																								},
																								"nativeSrc": "3063:20:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3063:20:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3050:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "3050:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2886:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2886:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2889:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2889:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2883:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2883:2:7"
																					},
																					"nativeSrc": "2883:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2883:14:7"
																				},
																				"nativeSrc": "2875:222:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2898:21:7",
																					"nodeType": "YulBlock",
																					"src": "2898:21:7",
																					"statements": [
																						{
																							"nativeSrc": "2900:17:7",
																							"nodeType": "YulAssignment",
																							"src": "2900:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2909:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "2909:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2912:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2912:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2905:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2905:3:7"
																								},
																								"nativeSrc": "2905:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2905:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2900:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2900:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2879:3:7",
																					"nodeType": "YulBlock",
																					"src": "2879:3:7",
																					"statements": []
																				},
																				"src": "2875:222:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "3145:166:7",
																					"nodeType": "YulBlock",
																					"src": "3145:166:7",
																					"statements": [
																						{
																							"nativeSrc": "3163:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3163:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3190:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3190:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3195:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3195:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3186:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3186:3:7"
																										},
																										"nativeSrc": "3186:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3186:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3180:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3180:5:7"
																								},
																								"nativeSrc": "3180:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3180:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3167:9:7",
																									"nodeType": "YulTypedName",
																									"src": "3167:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3230:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3230:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3242:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3242:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3269:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "3269:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3272:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "3272:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3265:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "3265:3:7"
																																		},
																																		"nativeSrc": "3265:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3265:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3281:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3281:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3261:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3261:3:7"
																																},
																																"nativeSrc": "3261:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3261:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3291:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3291:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3287:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3287:3:7"
																																},
																																"nativeSrc": "3287:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3287:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3257:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "3257:3:7"
																														},
																														"nativeSrc": "3257:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "3257:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3253:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3253:3:7"
																												},
																												"nativeSrc": "3253:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3253:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3238:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3238:3:7"
																										},
																										"nativeSrc": "3238:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3238:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3223:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3223:6:7"
																								},
																								"nativeSrc": "3223:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3223:74:7"
																							},
																							"nativeSrc": "3223:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3223:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3116:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3116:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3125:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3125:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3113:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "3113:2:7"
																					},
																					"nativeSrc": "3113:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3113:19:7"
																				},
																				"nativeSrc": "3110:201:7",
																				"nodeType": "YulIf",
																				"src": "3110:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3331:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3331:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3345:1:7",
																											"nodeType": "YulLiteral",
																											"src": "3345:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3348:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "3348:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3341:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "3341:3:7"
																									},
																									"nativeSrc": "3341:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "3341:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3357:1:7",
																									"nodeType": "YulLiteral",
																									"src": "3357:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3337:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3337:3:7"
																							},
																							"nativeSrc": "3337:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3337:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3324:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3324:6:7"
																					},
																					"nativeSrc": "3324:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3324:36:7"
																				},
																				"nativeSrc": "3324:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3324:36:7"
																			}
																		]
																	},
																	"nativeSrc": "2721:649:7",
																	"nodeType": "YulCase",
																	"src": "2721:649:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2726:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2726:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3387:234:7",
																		"nodeType": "YulBlock",
																		"src": "3387:234:7",
																		"statements": [
																			{
																				"nativeSrc": "3401:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3401:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3414:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3414:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3405:5:7",
																						"nodeType": "YulTypedName",
																						"src": "3405:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3450:67:7",
																					"nodeType": "YulBlock",
																					"src": "3450:67:7",
																					"statements": [
																						{
																							"nativeSrc": "3468:35:7",
																							"nodeType": "YulAssignment",
																							"src": "3468:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3487:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3487:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3492:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3492:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3483:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3483:3:7"
																										},
																										"nativeSrc": "3483:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3483:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3477:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3477:5:7"
																								},
																								"nativeSrc": "3477:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3477:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3468:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3468:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3431:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3431:6:7"
																				},
																				"nativeSrc": "3428:89:7",
																				"nodeType": "YulIf",
																				"src": "3428:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3537:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3537:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3596:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3596:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3603:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3603:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3543:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "3543:52:7"
																							},
																							"nativeSrc": "3543:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3543:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3530:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3530:6:7"
																					},
																					"nativeSrc": "3530:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3530:81:7"
																				},
																				"nativeSrc": "3530:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3530:81:7"
																			}
																		]
																	},
																	"nativeSrc": "3379:242:7",
																	"nodeType": "YulCase",
																	"src": "3379:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2701:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2709:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2709:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2698:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2698:2:7"
																},
																"nativeSrc": "2698:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2698:14:7"
															},
															"nativeSrc": "2691:930:7",
															"nodeType": "YulSwitch",
															"src": "2691:930:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2328:1299:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2409:4:7",
														"nodeType": "YulTypedName",
														"src": "2409:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2415:3:7",
														"nodeType": "YulTypedName",
														"src": "2415:3:7",
														"type": ""
													}
												],
												"src": "2328:1299:7"
											},
											{
												"body": {
													"nativeSrc": "3733:102:7",
													"nodeType": "YulBlock",
													"src": "3733:102:7",
													"statements": [
														{
															"nativeSrc": "3743:26:7",
															"nodeType": "YulAssignment",
															"src": "3743:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3755:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3755:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3766:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3766:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3751:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3751:3:7"
																},
																"nativeSrc": "3751:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3751:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3743:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3743:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3785:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3785:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3800:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3800:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3816:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3816:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3821:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3821:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3812:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3812:3:7"
																						},
																						"nativeSrc": "3812:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3812:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3825:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3825:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3808:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3808:3:7"
																				},
																				"nativeSrc": "3808:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3808:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3796:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3796:3:7"
																		},
																		"nativeSrc": "3796:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3796:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3778:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:7"
																},
																"nativeSrc": "3778:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3778:51:7"
															},
															"nativeSrc": "3778:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3778:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3632:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3702:9:7",
														"nodeType": "YulTypedName",
														"src": "3702:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3713:6:7",
														"nodeType": "YulTypedName",
														"src": "3713:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3724:4:7",
														"nodeType": "YulTypedName",
														"src": "3724:4:7",
														"type": ""
													}
												],
												"src": "3632:203:7"
											},
											{
												"body": {
													"nativeSrc": "3888:174:7",
													"nodeType": "YulBlock",
													"src": "3888:174:7",
													"statements": [
														{
															"nativeSrc": "3898:16:7",
															"nodeType": "YulAssignment",
															"src": "3898:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3909:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3909:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3912:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3912:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3905:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3905:3:7"
																},
																"nativeSrc": "3905:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3905:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3898:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3945:111:7",
																"nodeType": "YulBlock",
																"src": "3945:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3966:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3966:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3973:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3973:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3978:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3978:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3969:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3969:3:7"
																					},
																					"nativeSrc": "3969:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3969:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3959:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3959:6:7"
																			},
																			"nativeSrc": "3959:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3959:31:7"
																		},
																		"nativeSrc": "3959:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3959:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4010:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4010:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4013:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4013:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4003:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4003:6:7"
																			},
																			"nativeSrc": "4003:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4003:15:7"
																		},
																		"nativeSrc": "4003:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4003:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4038:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4038:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4041:4:7",
																					"nodeType": "YulLiteral",
																					"src": "4041:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4031:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4031:6:7"
																			},
																			"nativeSrc": "4031:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4031:15:7"
																		},
																		"nativeSrc": "4031:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4031:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3929:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3929:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3932:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3932:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3926:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3926:2:7"
																},
																"nativeSrc": "3926:10:7",
																"nodeType": "YulFunctionCall",
																"src": "3926:10:7"
															},
															"nativeSrc": "3923:133:7",
															"nodeType": "YulIf",
															"src": "3923:133:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3840:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3871:1:7",
														"nodeType": "YulTypedName",
														"src": "3871:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3874:1:7",
														"nodeType": "YulTypedName",
														"src": "3874:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3880:3:7",
														"nodeType": "YulTypedName",
														"src": "3880:3:7",
														"type": ""
													}
												],
												"src": "3840:222:7"
											},
											{
												"body": {
													"nativeSrc": "4224:188:7",
													"nodeType": "YulBlock",
													"src": "4224:188:7",
													"statements": [
														{
															"nativeSrc": "4234:26:7",
															"nodeType": "YulAssignment",
															"src": "4234:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4246:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4246:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4257:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4257:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4242:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4242:3:7"
																},
																"nativeSrc": "4242:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4242:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4234:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4234:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4276:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4276:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4291:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4291:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4307:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4307:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4312:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4312:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4303:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4303:3:7"
																						},
																						"nativeSrc": "4303:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4303:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4316:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4316:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4299:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4299:3:7"
																				},
																				"nativeSrc": "4299:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4299:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4287:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4287:3:7"
																		},
																		"nativeSrc": "4287:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4287:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4269:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4269:6:7"
																},
																"nativeSrc": "4269:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4269:51:7"
															},
															"nativeSrc": "4269:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4269:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4340:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4340:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4351:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4351:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4336:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4336:3:7"
																		},
																		"nativeSrc": "4336:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4356:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4356:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4329:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:7"
																},
																"nativeSrc": "4329:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4329:34:7"
															},
															"nativeSrc": "4329:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4329:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4383:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4383:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4394:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4394:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4379:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:7"
																		},
																		"nativeSrc": "4379:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4379:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4399:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4399:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4372:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4372:6:7"
																},
																"nativeSrc": "4372:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4372:34:7"
															},
															"nativeSrc": "4372:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4372:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4067:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4177:9:7",
														"nodeType": "YulTypedName",
														"src": "4177:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4188:6:7",
														"nodeType": "YulTypedName",
														"src": "4188:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4196:6:7",
														"nodeType": "YulTypedName",
														"src": "4196:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4204:6:7",
														"nodeType": "YulTypedName",
														"src": "4204:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4215:4:7",
														"nodeType": "YulTypedName",
														"src": "4215:4:7",
														"type": ""
													}
												],
												"src": "4067:345:7"
											},
											{
												"body": {
													"nativeSrc": "4518:76:7",
													"nodeType": "YulBlock",
													"src": "4518:76:7",
													"statements": [
														{
															"nativeSrc": "4528:26:7",
															"nodeType": "YulAssignment",
															"src": "4528:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4540:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4540:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4551:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4551:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4536:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4536:3:7"
																},
																"nativeSrc": "4536:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4536:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4528:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4528:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4570:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4570:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4581:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4581:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4563:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4563:6:7"
																},
																"nativeSrc": "4563:25:7",
																"nodeType": "YulFunctionCall",
																"src": "4563:25:7"
															},
															"nativeSrc": "4563:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "4563:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4417:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4487:9:7",
														"nodeType": "YulTypedName",
														"src": "4487:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4498:6:7",
														"nodeType": "YulTypedName",
														"src": "4498:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4509:4:7",
														"nodeType": "YulTypedName",
														"src": "4509:4:7",
														"type": ""
													}
												],
												"src": "4417:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := 0\n        value_4 := mload(add(headStart, 128))\n        value4 := value_4\n        let value_5 := 0\n        value_5 := mload(add(headStart, 160))\n        value5 := value_5\n        let value_6 := 0\n        value_6 := mload(add(headStart, 192))\n        value6 := value_6\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611d42380380611d4283398101604081905261002e916102a9565b866040518060400160405280600b81526020016a2730ba3ab932aa37b5b2b760a91b81525060405180604001604052806003815260200162272a2960e91b815250816003908161007e91906103a4565b50600461008b82826103a4565b5050506001600160a01b0381166100bc57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100c5816100fa565b506100d0308761014b565b600894909455600992909255600c556005805460ff60a01b19169055600d55600e55506104839050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166101745760405163ec442f0560e01b81525f60048201526024016100b3565b61017f5f8383610183565b5050565b6001600160a01b0383166101ad578060025f8282546101a2919061045e565b9091555061021d9050565b6001600160a01b0383165f90815260208190526040902054818110156101ff5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100b3565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661023957600280548290039055610257565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161029c91815260200190565b60405180910390a3505050565b5f805f805f805f60e0888a0312156102bf575f80fd5b87516001600160a01b03811681146102d5575f80fd5b602089015160408a015160608b015160808c015160a08d015160c0909d0151949e939d50919b909a50909850965090945092505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061033457607f821691505b60208210810361035257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561039f57805f5260205f20601f840160051c8101602085101561037d5750805b601f840160051c820191505b8181101561039c575f8155600101610389565b50505b505050565b81516001600160401b038111156103bd576103bd61030c565b6103d1816103cb8454610320565b84610358565b6020601f821160018114610403575f83156103ec5750848201515b5f19600385901b1c1916600184901b17845561039c565b5f84815260208120601f198516915b828110156104325787850151825560209485019460019092019101610412565b508482101561044f57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b8082018082111561047d57634e487b7160e01b5f52601160045260245ffd5b92915050565b6118b2806104905f395ff3fe608060405260043610610254575f3560e01c80638da5cb5b1161013f578063c6a1f80a116100b3578063d348b40911610078578063d348b40914610692578063dc07c8a3146106a6578063dd62ed3e146106bb578063ebbef6f6146106ff578063f2fde38b1461071f578063f99318551461073e575f80fd5b8063c6a1f80a14610616578063cce29ea71461062b578063cec297a014610640578063cf5f971b1461066b578063d0febe4c1461068a575f80fd5b80639ca423b3116101045780639ca423b314610567578063a09c4cf41461059b578063a5ce413b146105ba578063a8297d46146105ce578063a9059cbb146105e3578063b290d57014610602575f80fd5b80638da5cb5b146104b55780638f0794fe146104e657806395d89b4114610511578063967ed8f3146105255780639b19251a14610539575f80fd5b806327e235e3116101d6578063518ab2a81161019b578063518ab2a814610404578063639a5c871461041957806370a082311461043a578063715018a61461046e5780637547c7a3146104825780637c613b2f146104a1575f80fd5b806327e235e31461037557806330f72cd4146103a0578063313ce567146103c05780634405df4a146103db5780634f3fc2df146103ef575f80fd5b806312065fe01161021c57806312065fe0146102f957806318160ddd146103195780631d0806ae1461032d5780631d3824ea1461034257806323b872dd14610356575f80fd5b806303e293a31461025857806306d65af31461028057806306fdde0314610295578063095ea7b3146102b65780630fb4ce58146102e5575b5f80fd5b348015610263575f80fd5b5061026d60095481565b6040519081526020015b60405180910390f35b34801561028b575f80fd5b5061026d60065481565b3480156102a0575f80fd5b506102a9610769565b6040516102779190611546565b3480156102c1575f80fd5b506102d56102d0366004611596565b6107f9565b6040519015158152602001610277565b3480156102f0575f80fd5b5061026d610812565b348015610304575f80fd5b50335f9081526020819052604090205461026d565b348015610324575f80fd5b5060025461026d565b348015610338575f80fd5b5061026d60085481565b34801561034d575f80fd5b5061026d610849565b348015610361575f80fd5b506102d56103703660046115be565b6108aa565b348015610380575f80fd5b5061026d61038f3660046115f8565b60146020525f908152604090205481565b3480156103ab575f80fd5b506005546102d590600160a01b900460ff1681565b3480156103cb575f80fd5b5060405160128152602001610277565b3480156103e6575f80fd5b5061026d6108cd565b3480156103fa575f80fd5b5061026d600c5481565b34801561040f575f80fd5b5061026d600a5481565b348015610424575f80fd5b50610438610433366004611611565b61090d565b005b348015610445575f80fd5b5061026d6104543660046115f8565b6001600160a01b03165f9081526020819052604090205490565b348015610479575f80fd5b50610438610975565b34801561048d575f80fd5b5061043861049c36600461163a565b610988565b3480156104ac575f80fd5b50610438610ab3565b3480156104c0575f80fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610277565b3480156104f1575f80fd5b5061026d6105003660046115f8565b60106020525f908152604090205481565b34801561051c575f80fd5b506102a9610baf565b348015610530575f80fd5b5061026d610bbe565b348015610544575f80fd5b506102d56105533660046115f8565b60116020525f908152604090205460ff1681565b348015610572575f80fd5b506104ce6105813660046115f8565b60126020525f90815260409020546001600160a01b031681565b3480156105a6575f80fd5b506104386105b53660046115f8565b610c25565b3480156105c5575f80fd5b50610438610d9c565b3480156105d9575f80fd5b5061026d600e5481565b3480156105ee575f80fd5b506102d56105fd366004611596565b610ed3565b34801561060d575f80fd5b5061026d610ee0565b348015610621575f80fd5b5061026d600d5481565b348015610636575f80fd5b5061026d60075481565b34801561064b575f80fd5b5061026d61065a3660046115f8565b60136020525f908152604090205481565b348015610676575f80fd5b5061026d610685366004611651565b610efd565b610438610f58565b34801561069d575f80fd5b5061026d6110ea565b3480156106b1575f80fd5b5061026d600b5481565b3480156106c6575f80fd5b5061026d6106d5366004611671565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b34801561070a575f80fd5b50335f908152600f602052604090205461026d565b34801561072a575f80fd5b506104386107393660046115f8565b611170565b348015610749575f80fd5b5061026d6107583660046115f8565b600f6020525f908152604090205481565b606060038054610778906116a2565b80601f01602080910402602001604051908101604052809291908181526020018280546107a4906116a2565b80156107ef5780601f106107c6576101008083540402835291602001916107ef565b820191905f5260205f20905b8154815290600101906020018083116107d257829003601f168201915b5050505050905090565b5f336108068185856111ad565b60019150505b92915050565b5f61081f6012600a6117d1565b335f9081526013602052604090205461083a906101f46117df565b61084491906117df565b905090565b5f6006544210156108755760405162461bcd60e51b815260040161086c906117f6565b60405180910390fd5b5f600b546006546007546108899190611837565b6006546108969042611837565b6108a0919061184a565b61080c919061184a565b5f336108b78582856111bf565b6108c285858561123b565b506001949350505050565b5f806108db60065442610efd565b90505f600b54826008546009546108f29190611837565b6108fc91906117df565b610906919061184a565b9392505050565b610915611298565b60068390556007829055600b8190556005805460ff60a01b1916600160a01b17905560408051848152602081018490527f3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d910160405180910390a1505050565b61097d611298565b6109865f6112c5565b565b5f81116109e15760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b606482015260840161086c565b335f90815260208190526040902054811115610a375760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b604482015260640161086c565b610a4233308361123b565b335f908152600f602052604081208054839290610a60908490611869565b9091555050335f8181526010602052604090819020429055517fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef90610aa89084815260200190565b60405180910390a250565b600554600160a01b900460ff161515600114610b115760405162461bcd60e51b815260206004820152601760248201527f50726573616c65206e6f74207374617274656420796574000000000000000000604482015260640161086c565b5f610b1a610812565b90505f8111610b625760405162461bcd60e51b81526020600482015260146024820152734e6f207265776172647320617661696c61626c6560601b604482015260640161086c565b610b6c3382611316565b335f8181526013602052604080822091909155517ff0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d90610aa89084815260200190565b606060048054610778906116a2565b600e54335f9081526010602052604081205490918291610bde9042611837565b610be8919061184a565b600c54335f908152600f60205260409020549192506064918391610c0b916117df565b610c1591906117df565b610c1f919061184a565b91505090565b335f9081526011602052604090205460ff1615610c7a5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481dda1a5d195b1a5cdd1959606a1b604482015260640161086c565b6001600160a01b0381163303610cca5760405162461bcd60e51b815260206004820152601560248201527421b0b73737ba103932b332b9103cb7bab939b2b63360591b604482015260640161086c565b335f908152601160205260409020805460ff191660011790556001600160a01b03811615801590610d1257506001600160a01b0381165f9081526011602052604090205460ff165b15610d6457335f90815260126020908152604080832080546001600160a01b0319166001600160a01b038616908117909155835260139091528120805460019290610d5e908490611869565b90915550505b6040516001600160a01b0382169033907f4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457905f90a350565b335f908152600f602052604090205480610dec5760405162461bcd60e51b81526020600482015260116024820152702737903a37b5b2b7399039ba30b5b2b21760791b604482015260640161086c565b600d54335f90815260106020526040902054610e089190611869565b421015610e575760405162461bcd60e51b815260206004820152601b60248201527f556e7374616b65206f6e6c792061667465722034207765656b732e0000000000604482015260640161086c565b5f610e60610bbe565b335f818152600f602090815260408083208390556010909152812055909150610e94903090610e8f8486611869565b61123b565b604080518381526020810183905233917f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336910160405180910390a25050565b5f3361080681858561123b565b600d54335f90815260106020526040812054909161084491611869565b5f82821015610f1e5760405162461bcd60e51b815260040161086c906117f6565b5f600b54600654600754610f329190611837565b610f3c8686611837565b610f46919061184a565b610f50919061184a565b949350505050565b600554600160a01b900460ff16610fa45760405162461bcd60e51b815260206004820152601060248201526f29b0b632903737ba1030b1ba34bb329760811b604482015260640161086c565b5f3411610ff35760405162461bcd60e51b815260206004820152601c60248201527f4d7573742073656e642045544820746f2062757920746f6b656e732e00000000604482015260640161086c565b5f610ffc6110ea565b90505f611009823461184a565b305f9081526020819052604090205490915081111561106a5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e00000000604482015260640161086c565b335f9081526014602052604081208054839290611088908490611869565b90915550611099905030338361123b565b80600a5f8282546110aa9190611869565b9091555050604051818152339030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6005545f90600160a01b900460ff166111455760405162461bcd60e51b815260206004820152601860248201527f5072652d73616c65206e6f742073746172746564207965740000000000000000604482015260640161086c565b600754421115611156575060095490565b5f61115f6108cd565b90505f816008546109069190611869565b611178611298565b6001600160a01b0381166111a157604051631e4fbdf760e01b81525f600482015260240161086c565b6111aa816112c5565b50565b6111ba838383600161134e565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015611235578181101561122757604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161086c565b61123584848484035f61134e565b50505050565b6001600160a01b03831661126457604051634b637e8f60e11b81525f600482015260240161086c565b6001600160a01b03821661128d5760405163ec442f0560e01b81525f600482015260240161086c565b6111ba838383611420565b6005546001600160a01b031633146109865760405163118cdaa760e01b815233600482015260240161086c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03821661133f5760405163ec442f0560e01b81525f600482015260240161086c565b61134a5f8383611420565b5050565b6001600160a01b0384166113775760405163e602df0560e01b81525f600482015260240161086c565b6001600160a01b0383166113a057604051634a1406b160e11b81525f600482015260240161086c565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561123557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161141291815260200190565b60405180910390a350505050565b6001600160a01b03831661144a578060025f82825461143f9190611869565b909155506114ba9050565b6001600160a01b0383165f908152602081905260409020548181101561149c5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161086c565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166114d6576002805482900390556114f4565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161153991815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611591575f80fd5b919050565b5f80604083850312156115a7575f80fd5b6115b08361157b565b946020939093013593505050565b5f805f606084860312156115d0575f80fd5b6115d98461157b565b92506115e76020850161157b565b929592945050506040919091013590565b5f60208284031215611608575f80fd5b6109068261157b565b5f805f60608486031215611623575f80fd5b505081359360208301359350604090920135919050565b5f6020828403121561164a575f80fd5b5035919050565b5f8060408385031215611662575f80fd5b50508035926020909101359150565b5f8060408385031215611682575f80fd5b61168b8361157b565b91506116996020840161157b565b90509250929050565b600181811c908216806116b657607f821691505b6020821081036116d457634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156117295780850481111561170d5761170d6116da565b600184161561171b57908102905b60019390931c9280026116f2565b935093915050565b5f8261173f5750600161080c565b8161174b57505f61080c565b8160018114611761576002811461176b57611787565b600191505061080c565b60ff84111561177c5761177c6116da565b50506001821b61080c565b5060208310610133831016604e8410600b84101617156117aa575081810a61080c565b6117b65f1984846116ee565b805f19048211156117c9576117c96116da565b029392505050565b5f61090660ff841683611731565b808202811582820484141761080c5761080c6116da565b60208082526021908201527f456e642074696d65206d7573742062652061667465722073746172742074696d6040820152606560f81b606082015260800190565b8181038181111561080c5761080c6116da565b5f8261186457634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561080c5761080c6116da56fea2646970667358221220e120603368e2c0c0936d4851e331f4c07119a724006374f0a481d76f7602f92464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1D42 CODESIZE SUB DUP1 PUSH2 0x1D42 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x2A9 JUMP JUMPDEST DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x2730BA3AB932AA37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x272A29 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x3A4 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8B DUP3 DUP3 PUSH2 0x3A4 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5 DUP2 PUSH2 0xFA JUMP JUMPDEST POP PUSH2 0xD0 ADDRESS DUP8 PUSH2 0x14B JUMP JUMPDEST PUSH1 0x8 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x9 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xC SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0xD SSTORE PUSH1 0xE SSTORE POP PUSH2 0x483 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0x17F PUSH0 DUP4 DUP4 PUSH2 0x183 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1AD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A2 SWAP2 SWAP1 PUSH2 0x45E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x21D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1FF JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x239 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x257 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2BF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0x40 DUP11 ADD MLOAD PUSH1 0x60 DUP12 ADD MLOAD PUSH1 0x80 DUP13 ADD MLOAD PUSH1 0xA0 DUP14 ADD MLOAD PUSH1 0xC0 SWAP1 SWAP14 ADD MLOAD SWAP5 SWAP15 SWAP4 SWAP14 POP SWAP2 SWAP12 SWAP1 SWAP11 POP SWAP1 SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x334 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x352 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x39F JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x37D JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39C JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x389 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3BD JUMPI PUSH2 0x3BD PUSH2 0x30C JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x3CB DUP5 SLOAD PUSH2 0x320 JUMP JUMPDEST DUP5 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x403 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x3EC JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x39C JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x432 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x412 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x44F JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x47D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18B2 DUP1 PUSH2 0x490 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x254 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x13F JUMPI DUP1 PUSH4 0xC6A1F80A GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xD348B409 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xD348B409 EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0xDC07C8A3 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0xEBBEF6F6 EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x73E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6A1F80A EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xCCE29EA7 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xCEC297A0 EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0xCF5F971B EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x68A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CA423B3 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x9CA423B3 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xA09C4CF4 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xA8297D46 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xB290D570 EQ PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0x8F0794FE EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x967ED8F3 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x539 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27E235E3 GT PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x518AB2A8 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x639A5C87 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x7C613B2F EQ PUSH2 0x4A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x30F72CD4 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4405DF4A EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x4F3FC2DF EQ PUSH2 0x3EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12065FE0 GT PUSH2 0x21C JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x1D3824EA EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E293A3 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x6D65AF3 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xFB4CE58 EQ PUSH2 0x2E5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x26D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x849 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2D5 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x8CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x975 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x163A JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0xAB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH2 0xBAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0xBBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x572 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CE PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0xD9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0xED3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0xEE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x65A CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x685 CALLDATASIZE PUSH1 0x4 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x438 PUSH2 0xF58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x10EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x739 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x1170 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x758 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x778 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A4 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x806 DUP2 DUP6 DUP6 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x81F PUSH1 0x12 PUSH1 0xA PUSH2 0x17D1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x83A SWAP1 PUSH2 0x1F4 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86C SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x896 SWAP1 TIMESTAMP PUSH2 0x1837 JUMP JUMPDEST PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8B7 DUP6 DUP3 DUP6 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x8C2 DUP6 DUP6 DUP6 PUSH2 0x123B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8DB PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xEFD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB SLOAD DUP3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x915 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x6 DUP4 SWAP1 SSTORE PUSH1 0x7 DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x3844853BE672B18D859394AA37E05615B95B78E66B4DC37DCA98D1DB1B05EA7D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x97D PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x986 PUSH0 PUSH2 0x12C5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xA37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0xA42 CALLER ADDRESS DUP4 PUSH2 0x123B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA60 SWAP1 DUP5 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF SWAP1 PUSH2 0xAA8 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726573616C65206E6F74207374617274656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH0 PUSH2 0xB1A PUSH2 0x812 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F207265776172647320617661696C61626C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0xB6C CALLER DUP3 PUSH2 0x1316 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xF0BC0A70FE19EF2D8DC1E1948B338A1184184FB1EA3AC836F24065828816D68D SWAP1 PUSH2 0xAA8 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x778 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0xE SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0xBDE SWAP1 TIMESTAMP PUSH2 0x1837 JUMP JUMPDEST PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0xC SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0x64 SWAP2 DUP4 SWAP2 PUSH2 0xC0B SWAP2 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481DDA1A5D195B1A5CDD1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0xCCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x21B0B73737BA103932B332B9103CB7BAB939B2B633 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD12 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xD64 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x13 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD5E SWAP1 DUP5 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER SWAP1 PUSH32 0x4BC18AA4B0095C9A3B5CDF42D2322D5A145591B04045988A995A5DA426075457 SWAP1 PUSH0 SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xDEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737903A37B5B2B7399039BA30B5B2B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0xD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE08 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xE57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B65206F6E6C792061667465722034207765656B732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH0 PUSH2 0xE60 PUSH2 0xBBE JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE SWAP1 SWAP2 POP PUSH2 0xE94 SWAP1 ADDRESS SWAP1 PUSH2 0xE8F DUP5 DUP7 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x806 DUP2 DUP6 DUP6 PUSH2 0x123B JUMP JUMPDEST PUSH1 0xD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x844 SWAP2 PUSH2 0x1869 JUMP JUMPDEST PUSH0 DUP3 DUP3 LT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86C SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0xF3C DUP7 DUP7 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0xF46 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x29B0B632903737BA1030B1BA34BB3297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E732E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH0 PUSH2 0xFFC PUSH2 0x10EA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1009 DUP3 CALLVALUE PUSH2 0x184A JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1088 SWAP1 DUP5 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1099 SWAP1 POP ADDRESS CALLER DUP4 PUSH2 0x123B JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 ADDRESS SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1145 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072652D73616C65206E6F742073746172746564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1156 JUMPI POP PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x115F PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x8 SLOAD PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x1178 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0x11AA DUP2 PUSH2 0x12C5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11BA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x134E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x1235 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1227 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0x1235 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x134E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0x11BA DUP4 DUP4 DUP4 PUSH2 0x1420 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0x134A PUSH0 DUP4 DUP4 PUSH2 0x1420 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1377 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1235 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1412 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x144A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x14BA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x149C JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14D6 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1539 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1591 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15B0 DUP4 PUSH2 0x157B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15D9 DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP3 POP PUSH2 0x15E7 PUSH1 0x20 DUP6 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1608 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x906 DUP3 PUSH2 0x157B JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1623 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1662 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1682 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x168B DUP4 PUSH2 0x157B JUMP JUMPDEST SWAP2 POP PUSH2 0x1699 PUSH1 0x20 DUP5 ADD PUSH2 0x157B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1729 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x170D JUMPI PUSH2 0x170D PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x171B JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x16F2 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x173F JUMPI POP PUSH1 0x1 PUSH2 0x80C JUMP JUMPDEST DUP2 PUSH2 0x174B JUMPI POP PUSH0 PUSH2 0x80C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1761 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x176B JUMPI PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x80C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x177C JUMPI PUSH2 0x177C PUSH2 0x16DA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x80C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x17AA JUMPI POP DUP2 DUP2 EXP PUSH2 0x80C JUMP JUMPDEST PUSH2 0x17B6 PUSH0 NOT DUP5 DUP5 PUSH2 0x16EE JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x17C9 JUMPI PUSH2 0x17C9 PUSH2 0x16DA JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x906 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1731 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x80C JUMPI PUSH2 0x80C PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80C PUSH2 0x16DA JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1864 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80C PUSH2 0x16DA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 KECCAK256 PUSH1 0x33 PUSH9 0xE2C0C0936D4851E331 DELEGATECALL 0xC0 PUSH18 0x19A724006374F0A481D76F7602F92464736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "174:7082:6:-:0;;;1416:603;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1666:12;1601:113:2;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:2;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3778:51:7;3751:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1697:34:6::2;1711:4;1718:11:::0;1697:5:::2;:34::i;:::-;1742:12;:28:::0;;;;1781:16:::2;:36:::0;;;;1828:17:::2;:38:::0;1877:15:::2;:23:::0;;-1:-1:-1;;;;1877:23:6::2;::::0;;1911:18:::2;:41:::0;1963:22:::2;:48:::0;-1:-1:-1;174:7082:6;;-1:-1:-1;174:7082:6;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:2:-;-1:-1:-1;;;;;7528:21:2;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:2;;7601:1;7572:32;;;3778:51:7;3751:18;;7572:32:2;3632:203:7;7524:91:2;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;4287:32:7;;6386:50:2;;;4269:51:7;4336:18;;;4329:34;;;4379:18;;;4372:34;;;4242:18;;6386:50:2;4067:345:7;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;4563::7;;4551:2;4536:18;;4417:177;7083:25:2;;;;;;;;6008:1107;;;:::o;14:972:7:-;138:6;146;154;162;170;178;186;239:3;227:9;218:7;214:23;210:33;207:53;;;256:1;253;246:12;207:53;282:16;;-1:-1:-1;;;;;327:31:7;;317:42;;307:70;;373:1;370;363:12;307:70;467:2;452:18;;446:25;563:2;548:18;;542:25;659:2;644:18;;638:25;755:3;740:19;;734:26;852:3;837:19;;831:26;949:3;934:19;;;928:26;396:5;;446:25;;-1:-1:-1;542:25:7;;638;;-1:-1:-1;734:26:7;;-1:-1:-1;831:26:7;-1:-1:-1;928:26:7;;-1:-1:-1;14:972:7;-1:-1:-1;;;14:972:7:o;991:127::-;1052:10;1047:3;1043:20;1040:1;1033:31;1083:4;1080:1;1073:15;1107:4;1104:1;1097:15;1123:380;1202:1;1198:12;;;;1245;;;1266:61;;1320:4;1312:6;1308:17;1298:27;;1266:61;1373:2;1365:6;1362:14;1342:18;1339:38;1336:161;;1419:10;1414:3;1410:20;1407:1;1400:31;1454:4;1451:1;1444:15;1482:4;1479:1;1472:15;1336:161;;1123:380;;;:::o;1634:518::-;1736:2;1731:3;1728:11;1725:421;;;1772:5;1769:1;1762:16;1816:4;1813:1;1803:18;1886:2;1874:10;1870:19;1867:1;1863:27;1857:4;1853:38;1922:4;1910:10;1907:20;1904:47;;;-1:-1:-1;1945:4:7;1904:47;2000:2;1995:3;1991:12;1988:1;1984:20;1978:4;1974:31;1964:41;;2055:81;2073:2;2066:5;2063:13;2055:81;;;2132:1;2118:16;;2099:1;2088:13;2055:81;;;2059:3;;1725:421;1634:518;;;:::o;2328:1299::-;2448:10;;-1:-1:-1;;;;;2470:30:7;;2467:56;;;2503:18;;:::i;:::-;2532:97;2622:6;2582:38;2614:4;2608:11;2582:38;:::i;:::-;2576:4;2532:97;:::i;:::-;2678:4;2709:2;2698:14;;2726:1;2721:649;;;;3414:1;3431:6;3428:89;;;-1:-1:-1;3483:19:7;;;3477:26;3428:89;-1:-1:-1;;2285:1:7;2281:11;;;2277:24;2273:29;2263:40;2309:1;2305:11;;;2260:57;3530:81;;2691:930;;2721:649;1581:1;1574:14;;;1618:4;1605:18;;-1:-1:-1;;2757:20:7;;;2875:222;2889:7;2886:1;2883:14;2875:222;;;2971:19;;;2965:26;2950:42;;3078:4;3063:20;;;;3031:1;3019:14;;;;2905:12;2875:222;;;2879:3;3125:6;3116:7;3113:19;3110:201;;;3186:19;;;3180:26;-1:-1:-1;;3269:1:7;3265:14;;;3281:3;3261:24;3257:37;3253:42;3238:58;3223:74;;3110:201;-1:-1:-1;;;;3357:1:7;3341:14;;;3337:22;3324:36;;-1:-1:-1;2328:1299:7:o;3840:222::-;3905:9;;;3926:10;;;3923:133;;;3978:10;3973:3;3969:20;3966:1;3959:31;4013:4;4010:1;4003:15;4041:4;4038:1;4031:15;3923:133;3840:222;;;;:::o;4417:177::-;174:7082:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 4525,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4942,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4760,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4886,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 4543,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4805,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4667,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 5152,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 2041,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balances_985": {
									"entryPoint": null,
									"id": 985,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokens_1439": {
									"entryPoint": 3928,
									"id": 1439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculatePriceIncrease_1333": {
									"entryPoint": 2253,
									"id": 1333,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculatePrice_1365": {
									"entryPoint": 4330,
									"id": 1365,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateReferralReward_1165": {
									"entryPoint": 2066,
									"id": 1165,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateStakingReward_1604": {
									"entryPoint": 3006,
									"id": 1604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateStepsElapsed_1274": {
									"entryPoint": 3837,
									"id": 1274,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalance_1450": {
									"entryPoint": null,
									"id": 1450,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurrentStep_1305": {
									"entryPoint": 2121,
									"id": 1305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStackedTokens_1615": {
									"entryPoint": null,
									"id": 1615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getStackingPeriod_1628": {
									"entryPoint": 3808,
									"id": 1628,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialPrice_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minUnstakingPeriod_959": {
									"entryPoint": null,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintReferralReward_1207": {
									"entryPoint": 2739,
									"id": 1207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1897,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@preSaleEndTime_947": {
									"entryPoint": null,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleStartTime_945": {
									"entryPoint": null,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleSteps_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleIsActive_943": {
									"entryPoint": null,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referralCounts_981": {
									"entryPoint": null,
									"id": 981,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referrals_977": {
									"entryPoint": null,
									"id": 977,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@regularSalePrice_951": {
									"entryPoint": null,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2421,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signUpForWhitelist_1147": {
									"entryPoint": 3109,
									"id": 1147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeTokens_1504": {
									"entryPoint": 2440,
									"id": 1504,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_965": {
									"entryPoint": null,
									"id": 965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingRewardFrequency_961": {
									"entryPoint": null,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingRewardRate_957": {
									"entryPoint": null,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTimestamp_969": {
									"entryPoint": null,
									"id": 969,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPreSale_1241": {
									"entryPoint": 2317,
									"id": 1241,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2991,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokensSold_953": {
									"entryPoint": null,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2218,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 4464,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 3795,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstakeTokens_1573": {
									"entryPoint": 3484,
									"id": 1573,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whitelist_973": {
									"entryPoint": null,
									"id": 973,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 5649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5870,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 6097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11453:7",
										"nodeType": "YulBlock",
										"src": "0:11453:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "317:297:7",
													"nodeType": "YulBlock",
													"src": "317:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:7"
																},
																"nativeSrc": "327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "327:21:7"
															},
															"nativeSrc": "327:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "327:21:7"
														},
														{
															"nativeSrc": "357:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "357:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "377:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "377:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "371:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "371:5:7"
																},
																"nativeSrc": "371:13:7",
																"nodeType": "YulFunctionCall",
																"src": "371:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "361:6:7",
																	"nodeType": "YulTypedName",
																	"src": "361:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "404:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "404:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "415:2:7",
																				"nodeType": "YulLiteral",
																				"src": "415:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "400:3:7"
																		},
																		"nativeSrc": "400:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "400:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "420:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "420:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:7"
																},
																"nativeSrc": "393:34:7",
																"nodeType": "YulFunctionCall",
																"src": "393:34:7"
															},
															"nativeSrc": "393:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "393:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "446:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "446:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:7",
																				"nodeType": "YulLiteral",
																				"src": "457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "442:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:7"
																		},
																		"nativeSrc": "442:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "442:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "466:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "466:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "474:2:7",
																				"nodeType": "YulLiteral",
																				"src": "474:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "462:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "462:3:7"
																		},
																		"nativeSrc": "462:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "462:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "479:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "479:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "436:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:7"
																},
																"nativeSrc": "436:50:7",
																"nodeType": "YulFunctionCall",
																"src": "436:50:7"
															},
															"nativeSrc": "436:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "436:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "510:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "506:3:7"
																				},
																				"nativeSrc": "506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "506:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "530:2:7",
																				"nodeType": "YulLiteral",
																				"src": "530:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "502:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "502:3:7"
																		},
																		"nativeSrc": "502:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "502:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "535:1:7",
																		"nodeType": "YulLiteral",
																		"src": "535:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:7"
																},
																"nativeSrc": "495:42:7",
																"nodeType": "YulFunctionCall",
																"src": "495:42:7"
															},
															"nativeSrc": "495:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "495:42:7"
														},
														{
															"nativeSrc": "546:62:7",
															"nodeType": "YulAssignment",
															"src": "546:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "581:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "581:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "589:2:7",
																								"nodeType": "YulLiteral",
																								"src": "589:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "577:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "577:3:7"
																						},
																						"nativeSrc": "577:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "577:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "598:2:7",
																								"nodeType": "YulLiteral",
																								"src": "598:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "594:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "594:3:7"
																						},
																						"nativeSrc": "594:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "594:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "573:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "573:3:7"
																				},
																				"nativeSrc": "573:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "573:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:7"
																		},
																		"nativeSrc": "558:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "558:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "605:2:7",
																		"nodeType": "YulLiteral",
																		"src": "605:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "554:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "554:3:7"
																},
																"nativeSrc": "554:54:7",
																"nodeType": "YulFunctionCall",
																"src": "554:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "546:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "546:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "196:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "286:9:7",
														"nodeType": "YulTypedName",
														"src": "286:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "297:6:7",
														"nodeType": "YulTypedName",
														"src": "297:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "308:4:7",
														"nodeType": "YulTypedName",
														"src": "308:4:7",
														"type": ""
													}
												],
												"src": "196:418:7"
											},
											{
												"body": {
													"nativeSrc": "668:124:7",
													"nodeType": "YulBlock",
													"src": "668:124:7",
													"statements": [
														{
															"nativeSrc": "678:29:7",
															"nodeType": "YulAssignment",
															"src": "678:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "700:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "700:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "687:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "687:12:7"
																},
																"nativeSrc": "687:20:7",
																"nodeType": "YulFunctionCall",
																"src": "687:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "678:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "678:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "770:16:7",
																"nodeType": "YulBlock",
																"src": "770:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "779:1:7",
																					"nodeType": "YulLiteral",
																					"src": "779:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "782:1:7",
																					"nodeType": "YulLiteral",
																					"src": "782:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "772:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "772:6:7"
																			},
																			"nativeSrc": "772:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "772:12:7"
																		},
																		"nativeSrc": "772:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "772:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "729:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "729:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "740:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "740:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "755:3:7",
																										"nodeType": "YulLiteral",
																										"src": "755:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "760:1:7",
																										"nodeType": "YulLiteral",
																										"src": "760:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "751:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "751:3:7"
																								},
																								"nativeSrc": "751:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "751:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "764:1:7",
																								"nodeType": "YulLiteral",
																								"src": "764:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "747:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "747:3:7"
																						},
																						"nativeSrc": "747:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "747:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "736:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "736:3:7"
																				},
																				"nativeSrc": "736:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "736:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "726:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "726:2:7"
																		},
																		"nativeSrc": "726:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "726:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "719:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:7"
																},
																"nativeSrc": "719:50:7",
																"nodeType": "YulFunctionCall",
																"src": "719:50:7"
															},
															"nativeSrc": "716:70:7",
															"nodeType": "YulIf",
															"src": "716:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "619:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "647:6:7",
														"nodeType": "YulTypedName",
														"src": "647:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "658:5:7",
														"nodeType": "YulTypedName",
														"src": "658:5:7",
														"type": ""
													}
												],
												"src": "619:173:7"
											},
											{
												"body": {
													"nativeSrc": "884:213:7",
													"nodeType": "YulBlock",
													"src": "884:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "930:16:7",
																"nodeType": "YulBlock",
																"src": "930:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "939:1:7",
																					"nodeType": "YulLiteral",
																					"src": "939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "942:1:7",
																					"nodeType": "YulLiteral",
																					"src": "942:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "932:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "932:6:7"
																			},
																			"nativeSrc": "932:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "932:12:7"
																		},
																		"nativeSrc": "932:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "932:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "905:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "905:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "914:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "914:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:7"
																		},
																		"nativeSrc": "901:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "901:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "926:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "897:3:7"
																},
																"nativeSrc": "897:32:7",
																"nodeType": "YulFunctionCall",
																"src": "897:32:7"
															},
															"nativeSrc": "894:52:7",
															"nodeType": "YulIf",
															"src": "894:52:7"
														},
														{
															"nativeSrc": "955:39:7",
															"nodeType": "YulAssignment",
															"src": "955:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "984:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "984:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "965:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "965:18:7"
																},
																"nativeSrc": "965:29:7",
																"nodeType": "YulFunctionCall",
																"src": "965:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:7"
																}
															]
														},
														{
															"nativeSrc": "1003:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1003:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1016:1:7",
																"nodeType": "YulLiteral",
																"src": "1016:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1007:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1007:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1026:41:7",
															"nodeType": "YulAssignment",
															"src": "1026:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1052:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1063:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1063:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1048:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:7"
																		},
																		"nativeSrc": "1048:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1048:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1035:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1035:12:7"
																},
																"nativeSrc": "1035:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1035:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1026:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1026:5:7"
																}
															]
														},
														{
															"nativeSrc": "1076:15:7",
															"nodeType": "YulAssignment",
															"src": "1076:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1086:5:7",
																"nodeType": "YulIdentifier",
																"src": "1086:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1076:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "797:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "842:9:7",
														"nodeType": "YulTypedName",
														"src": "842:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "853:7:7",
														"nodeType": "YulTypedName",
														"src": "853:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "865:6:7",
														"nodeType": "YulTypedName",
														"src": "865:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "873:6:7",
														"nodeType": "YulTypedName",
														"src": "873:6:7",
														"type": ""
													}
												],
												"src": "797:300:7"
											},
											{
												"body": {
													"nativeSrc": "1197:92:7",
													"nodeType": "YulBlock",
													"src": "1197:92:7",
													"statements": [
														{
															"nativeSrc": "1207:26:7",
															"nodeType": "YulAssignment",
															"src": "1207:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1219:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1230:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1230:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:7"
																},
																"nativeSrc": "1215:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1215:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1207:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1207:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1249:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1274:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1274:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1267:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1267:6:7"
																				},
																				"nativeSrc": "1267:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1267:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1260:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1260:6:7"
																		},
																		"nativeSrc": "1260:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1260:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1242:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:7"
																},
																"nativeSrc": "1242:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1242:41:7"
															},
															"nativeSrc": "1242:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1242:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1102:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1166:9:7",
														"nodeType": "YulTypedName",
														"src": "1166:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1177:6:7",
														"nodeType": "YulTypedName",
														"src": "1177:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1188:4:7",
														"nodeType": "YulTypedName",
														"src": "1188:4:7",
														"type": ""
													}
												],
												"src": "1102:187:7"
											},
											{
												"body": {
													"nativeSrc": "1398:270:7",
													"nodeType": "YulBlock",
													"src": "1398:270:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:7",
																"nodeType": "YulBlock",
																"src": "1444:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:7"
																			},
																			"nativeSrc": "1446:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:7"
																		},
																		"nativeSrc": "1446:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:7"
																		},
																		"nativeSrc": "1415:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:7"
																},
																"nativeSrc": "1411:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:7"
															},
															"nativeSrc": "1408:52:7",
															"nodeType": "YulIf",
															"src": "1408:52:7"
														},
														{
															"nativeSrc": "1469:39:7",
															"nodeType": "YulAssignment",
															"src": "1469:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:7"
																},
																"nativeSrc": "1479:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:7"
																}
															]
														},
														{
															"nativeSrc": "1517:48:7",
															"nodeType": "YulAssignment",
															"src": "1517:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:7"
																		},
																		"nativeSrc": "1546:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:7"
																},
																"nativeSrc": "1527:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:7"
																}
															]
														},
														{
															"nativeSrc": "1574:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:7",
																"nodeType": "YulLiteral",
																"src": "1587:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:7",
															"nodeType": "YulAssignment",
															"src": "1597:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:7"
																		},
																		"nativeSrc": "1619:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:7"
																},
																"nativeSrc": "1606:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:7"
																}
															]
														},
														{
															"nativeSrc": "1647:15:7",
															"nodeType": "YulAssignment",
															"src": "1647:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:7",
																"nodeType": "YulIdentifier",
																"src": "1657:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:7",
														"nodeType": "YulTypedName",
														"src": "1348:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:7",
														"nodeType": "YulTypedName",
														"src": "1359:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:7",
														"nodeType": "YulTypedName",
														"src": "1371:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:7",
														"nodeType": "YulTypedName",
														"src": "1379:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:7",
														"nodeType": "YulTypedName",
														"src": "1387:6:7",
														"type": ""
													}
												],
												"src": "1294:374:7"
											},
											{
												"body": {
													"nativeSrc": "1743:116:7",
													"nodeType": "YulBlock",
													"src": "1743:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1789:16:7",
																"nodeType": "YulBlock",
																"src": "1789:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1798:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1798:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1801:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1801:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1791:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1791:6:7"
																			},
																			"nativeSrc": "1791:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1791:12:7"
																		},
																		"nativeSrc": "1791:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1791:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1764:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1764:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1773:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1760:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:7"
																		},
																		"nativeSrc": "1760:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1760:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1785:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1756:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:7"
																},
																"nativeSrc": "1756:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1756:32:7"
															},
															"nativeSrc": "1753:52:7",
															"nodeType": "YulIf",
															"src": "1753:52:7"
														},
														{
															"nativeSrc": "1814:39:7",
															"nodeType": "YulAssignment",
															"src": "1814:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1843:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1843:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1824:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1824:18:7"
																},
																"nativeSrc": "1824:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1824:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1814:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1814:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1673:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1709:9:7",
														"nodeType": "YulTypedName",
														"src": "1709:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1720:7:7",
														"nodeType": "YulTypedName",
														"src": "1720:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1732:6:7",
														"nodeType": "YulTypedName",
														"src": "1732:6:7",
														"type": ""
													}
												],
												"src": "1673:186:7"
											},
											{
												"body": {
													"nativeSrc": "1961:87:7",
													"nodeType": "YulBlock",
													"src": "1961:87:7",
													"statements": [
														{
															"nativeSrc": "1971:26:7",
															"nodeType": "YulAssignment",
															"src": "1971:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1994:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:7"
																},
																"nativeSrc": "1979:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1979:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1971:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1971:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2013:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2028:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2036:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2036:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2024:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:7"
																		},
																		"nativeSrc": "2024:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2006:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:7"
																},
																"nativeSrc": "2006:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2006:36:7"
															},
															"nativeSrc": "2006:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2006:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1864:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1930:9:7",
														"nodeType": "YulTypedName",
														"src": "1930:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1941:6:7",
														"nodeType": "YulTypedName",
														"src": "1941:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1952:4:7",
														"nodeType": "YulTypedName",
														"src": "1952:4:7",
														"type": ""
													}
												],
												"src": "1864:184:7"
											},
											{
												"body": {
													"nativeSrc": "2157:362:7",
													"nodeType": "YulBlock",
													"src": "2157:362:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2203:16:7",
																"nodeType": "YulBlock",
																"src": "2203:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2212:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2212:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2215:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2215:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2205:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:7"
																			},
																			"nativeSrc": "2205:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2205:12:7"
																		},
																		"nativeSrc": "2205:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2205:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2187:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2187:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2174:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2174:3:7"
																		},
																		"nativeSrc": "2174:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2174:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2199:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2199:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2170:3:7"
																},
																"nativeSrc": "2170:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2170:32:7"
															},
															"nativeSrc": "2167:52:7",
															"nodeType": "YulIf",
															"src": "2167:52:7"
														},
														{
															"nativeSrc": "2228:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2228:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2241:1:7",
																"nodeType": "YulLiteral",
																"src": "2241:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2232:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2232:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2251:32:7",
															"nodeType": "YulAssignment",
															"src": "2251:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2273:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2273:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2260:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2260:12:7"
																},
																"nativeSrc": "2260:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2260:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2251:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2251:5:7"
																}
															]
														},
														{
															"nativeSrc": "2292:15:7",
															"nodeType": "YulAssignment",
															"src": "2292:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2302:5:7",
																"nodeType": "YulIdentifier",
																"src": "2302:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:7"
																}
															]
														},
														{
															"nativeSrc": "2316:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2316:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2331:1:7",
																"nodeType": "YulLiteral",
																"src": "2331:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2320:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2320:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2341:43:7",
															"nodeType": "YulAssignment",
															"src": "2341:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2369:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2369:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2380:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2380:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2365:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2365:3:7"
																		},
																		"nativeSrc": "2365:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2365:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2352:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2352:12:7"
																},
																"nativeSrc": "2352:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2352:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2341:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2341:7:7"
																}
															]
														},
														{
															"nativeSrc": "2393:17:7",
															"nodeType": "YulAssignment",
															"src": "2393:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "2403:7:7",
																"nodeType": "YulIdentifier",
																"src": "2403:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:7"
																}
															]
														},
														{
															"nativeSrc": "2419:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2419:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2434:1:7",
																"nodeType": "YulLiteral",
																"src": "2434:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "2423:7:7",
																	"nodeType": "YulTypedName",
																	"src": "2423:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2444:43:7",
															"nodeType": "YulAssignment",
															"src": "2444:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2472:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2472:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2483:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2483:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2468:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2468:3:7"
																		},
																		"nativeSrc": "2468:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2468:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2455:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2455:12:7"
																},
																"nativeSrc": "2455:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2455:32:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "2444:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2444:7:7"
																}
															]
														},
														{
															"nativeSrc": "2496:17:7",
															"nodeType": "YulAssignment",
															"src": "2496:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "2506:7:7",
																"nodeType": "YulIdentifier",
																"src": "2506:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2496:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "2053:466:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2107:9:7",
														"nodeType": "YulTypedName",
														"src": "2107:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2118:7:7",
														"nodeType": "YulTypedName",
														"src": "2118:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2130:6:7",
														"nodeType": "YulTypedName",
														"src": "2130:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2138:6:7",
														"nodeType": "YulTypedName",
														"src": "2138:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2146:6:7",
														"nodeType": "YulTypedName",
														"src": "2146:6:7",
														"type": ""
													}
												],
												"src": "2053:466:7"
											},
											{
												"body": {
													"nativeSrc": "2594:156:7",
													"nodeType": "YulBlock",
													"src": "2594:156:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2640:16:7",
																"nodeType": "YulBlock",
																"src": "2640:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2649:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2649:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2652:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2652:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2642:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2642:6:7"
																			},
																			"nativeSrc": "2642:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2642:12:7"
																		},
																		"nativeSrc": "2642:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2642:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2615:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2615:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2624:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2624:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2611:3:7"
																		},
																		"nativeSrc": "2611:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2611:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2636:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2636:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2607:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2607:3:7"
																},
																"nativeSrc": "2607:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2607:32:7"
															},
															"nativeSrc": "2604:52:7",
															"nodeType": "YulIf",
															"src": "2604:52:7"
														},
														{
															"nativeSrc": "2665:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2665:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2678:1:7",
																"nodeType": "YulLiteral",
																"src": "2678:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2669:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2669:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2688:32:7",
															"nodeType": "YulAssignment",
															"src": "2688:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2710:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2710:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2697:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2697:12:7"
																},
																"nativeSrc": "2697:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2697:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2688:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2688:5:7"
																}
															]
														},
														{
															"nativeSrc": "2729:15:7",
															"nodeType": "YulAssignment",
															"src": "2729:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2739:5:7",
																"nodeType": "YulIdentifier",
																"src": "2739:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2729:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2729:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2524:226:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2560:9:7",
														"nodeType": "YulTypedName",
														"src": "2560:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2571:7:7",
														"nodeType": "YulTypedName",
														"src": "2571:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2583:6:7",
														"nodeType": "YulTypedName",
														"src": "2583:6:7",
														"type": ""
													}
												],
												"src": "2524:226:7"
											},
											{
												"body": {
													"nativeSrc": "2856:102:7",
													"nodeType": "YulBlock",
													"src": "2856:102:7",
													"statements": [
														{
															"nativeSrc": "2866:26:7",
															"nodeType": "YulAssignment",
															"src": "2866:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2878:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2878:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2889:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2874:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2874:3:7"
																},
																"nativeSrc": "2874:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2874:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2866:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2866:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2908:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2908:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2923:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2923:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2939:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2939:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2944:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2944:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2935:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2935:3:7"
																						},
																						"nativeSrc": "2935:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2935:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2948:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2948:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2931:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2931:3:7"
																				},
																				"nativeSrc": "2931:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2931:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2919:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2919:3:7"
																		},
																		"nativeSrc": "2919:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2919:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2901:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:7"
																},
																"nativeSrc": "2901:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2901:51:7"
															},
															"nativeSrc": "2901:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2901:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2755:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2825:9:7",
														"nodeType": "YulTypedName",
														"src": "2825:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2836:6:7",
														"nodeType": "YulTypedName",
														"src": "2836:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2847:4:7",
														"nodeType": "YulTypedName",
														"src": "2847:4:7",
														"type": ""
													}
												],
												"src": "2755:203:7"
											},
											{
												"body": {
													"nativeSrc": "3050:259:7",
													"nodeType": "YulBlock",
													"src": "3050:259:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3096:16:7",
																"nodeType": "YulBlock",
																"src": "3096:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3105:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3108:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3108:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3098:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:7"
																			},
																			"nativeSrc": "3098:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3098:12:7"
																		},
																		"nativeSrc": "3098:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3071:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3071:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3080:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3080:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3067:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3067:3:7"
																		},
																		"nativeSrc": "3067:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3067:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3092:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3092:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3063:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3063:3:7"
																},
																"nativeSrc": "3063:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3063:32:7"
															},
															"nativeSrc": "3060:52:7",
															"nodeType": "YulIf",
															"src": "3060:52:7"
														},
														{
															"nativeSrc": "3121:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3121:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3134:1:7",
																"nodeType": "YulLiteral",
																"src": "3134:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3125:5:7",
																	"nodeType": "YulTypedName",
																	"src": "3125:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3144:32:7",
															"nodeType": "YulAssignment",
															"src": "3144:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3166:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3166:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3153:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3153:12:7"
																},
																"nativeSrc": "3153:23:7",
																"nodeType": "YulFunctionCall",
																"src": "3153:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3144:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3144:5:7"
																}
															]
														},
														{
															"nativeSrc": "3185:15:7",
															"nodeType": "YulAssignment",
															"src": "3185:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "3195:5:7",
																"nodeType": "YulIdentifier",
																"src": "3195:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3185:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3185:6:7"
																}
															]
														},
														{
															"nativeSrc": "3209:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3209:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3224:1:7",
																"nodeType": "YulLiteral",
																"src": "3224:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3213:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3213:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3234:43:7",
															"nodeType": "YulAssignment",
															"src": "3234:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3262:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3273:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3273:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3258:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3258:3:7"
																		},
																		"nativeSrc": "3258:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3258:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3245:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3245:12:7"
																},
																"nativeSrc": "3245:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3245:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3234:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3234:7:7"
																}
															]
														},
														{
															"nativeSrc": "3286:17:7",
															"nodeType": "YulAssignment",
															"src": "3286:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "3296:7:7",
																"nodeType": "YulIdentifier",
																"src": "3296:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3286:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3286:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2963:346:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3008:9:7",
														"nodeType": "YulTypedName",
														"src": "3008:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3019:7:7",
														"nodeType": "YulTypedName",
														"src": "3019:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3031:6:7",
														"nodeType": "YulTypedName",
														"src": "3031:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3039:6:7",
														"nodeType": "YulTypedName",
														"src": "3039:6:7",
														"type": ""
													}
												],
												"src": "2963:346:7"
											},
											{
												"body": {
													"nativeSrc": "3401:173:7",
													"nodeType": "YulBlock",
													"src": "3401:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3447:16:7",
																"nodeType": "YulBlock",
																"src": "3447:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3456:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3456:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3459:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3459:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3449:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3449:6:7"
																			},
																			"nativeSrc": "3449:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3449:12:7"
																		},
																		"nativeSrc": "3449:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3449:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3422:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3422:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3431:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3431:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3418:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3418:3:7"
																		},
																		"nativeSrc": "3418:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3418:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3443:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3414:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:3:7"
																},
																"nativeSrc": "3414:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:32:7"
															},
															"nativeSrc": "3411:52:7",
															"nodeType": "YulIf",
															"src": "3411:52:7"
														},
														{
															"nativeSrc": "3472:39:7",
															"nodeType": "YulAssignment",
															"src": "3472:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3501:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3501:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3482:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3482:18:7"
																},
																"nativeSrc": "3482:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3482:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3472:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3472:6:7"
																}
															]
														},
														{
															"nativeSrc": "3520:48:7",
															"nodeType": "YulAssignment",
															"src": "3520:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3553:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3553:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3564:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3564:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3549:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3549:3:7"
																		},
																		"nativeSrc": "3549:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3530:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3530:18:7"
																},
																"nativeSrc": "3530:38:7",
																"nodeType": "YulFunctionCall",
																"src": "3530:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3520:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3314:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3359:9:7",
														"nodeType": "YulTypedName",
														"src": "3359:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3370:7:7",
														"nodeType": "YulTypedName",
														"src": "3370:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3382:6:7",
														"nodeType": "YulTypedName",
														"src": "3382:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3390:6:7",
														"nodeType": "YulTypedName",
														"src": "3390:6:7",
														"type": ""
													}
												],
												"src": "3314:260:7"
											},
											{
												"body": {
													"nativeSrc": "3634:325:7",
													"nodeType": "YulBlock",
													"src": "3634:325:7",
													"statements": [
														{
															"nativeSrc": "3644:22:7",
															"nodeType": "YulAssignment",
															"src": "3644:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3658:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3658:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3661:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3661:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3654:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3654:3:7"
																},
																"nativeSrc": "3654:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3654:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3644:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3644:6:7"
																}
															]
														},
														{
															"nativeSrc": "3675:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3675:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3705:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3705:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3711:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3711:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3701:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3701:3:7"
																},
																"nativeSrc": "3701:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3701:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3679:18:7",
																	"nodeType": "YulTypedName",
																	"src": "3679:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3752:31:7",
																"nodeType": "YulBlock",
																"src": "3752:31:7",
																"statements": [
																	{
																		"nativeSrc": "3754:27:7",
																		"nodeType": "YulAssignment",
																		"src": "3754:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3768:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3768:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3776:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3776:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3764:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3764:3:7"
																			},
																			"nativeSrc": "3764:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3764:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3754:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3732:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "3732:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3725:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3725:6:7"
																},
																"nativeSrc": "3725:26:7",
																"nodeType": "YulFunctionCall",
																"src": "3725:26:7"
															},
															"nativeSrc": "3722:61:7",
															"nodeType": "YulIf",
															"src": "3722:61:7"
														},
														{
															"body": {
																"nativeSrc": "3842:111:7",
																"nodeType": "YulBlock",
																"src": "3842:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3863:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3863:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3870:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3870:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3875:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3875:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3866:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3866:3:7"
																					},
																					"nativeSrc": "3866:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3866:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3856:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3856:6:7"
																			},
																			"nativeSrc": "3856:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3856:31:7"
																		},
																		"nativeSrc": "3856:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3856:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3907:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3907:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3910:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3910:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3900:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3900:6:7"
																			},
																			"nativeSrc": "3900:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3900:15:7"
																		},
																		"nativeSrc": "3900:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3900:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3935:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3935:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3938:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3938:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3928:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3928:6:7"
																			},
																			"nativeSrc": "3928:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3928:15:7"
																		},
																		"nativeSrc": "3928:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3928:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3798:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "3798:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3821:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3829:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3829:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3818:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3818:2:7"
																		},
																		"nativeSrc": "3818:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3818:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3795:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3795:2:7"
																},
																"nativeSrc": "3795:38:7",
																"nodeType": "YulFunctionCall",
																"src": "3795:38:7"
															},
															"nativeSrc": "3792:161:7",
															"nodeType": "YulIf",
															"src": "3792:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3579:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3614:4:7",
														"nodeType": "YulTypedName",
														"src": "3614:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3623:6:7",
														"nodeType": "YulTypedName",
														"src": "3623:6:7",
														"type": ""
													}
												],
												"src": "3579:380:7"
											},
											{
												"body": {
													"nativeSrc": "3996:95:7",
													"nodeType": "YulBlock",
													"src": "3996:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4013:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4013:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4020:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4020:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4025:10:7",
																				"nodeType": "YulLiteral",
																				"src": "4025:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4016:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4016:3:7"
																		},
																		"nativeSrc": "4016:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4016:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4006:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:7"
																},
																"nativeSrc": "4006:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4006:31:7"
															},
															"nativeSrc": "4006:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4006:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4053:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4053:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4056:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4056:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:7"
																},
																"nativeSrc": "4046:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4046:15:7"
															},
															"nativeSrc": "4046:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4046:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4077:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4080:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4080:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4070:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4070:6:7"
																},
																"nativeSrc": "4070:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4070:15:7"
															},
															"nativeSrc": "4070:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4070:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3964:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3964:127:7"
											},
											{
												"body": {
													"nativeSrc": "4165:306:7",
													"nodeType": "YulBlock",
													"src": "4165:306:7",
													"statements": [
														{
															"nativeSrc": "4175:10:7",
															"nodeType": "YulAssignment",
															"src": "4175:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "4184:1:7",
																"nodeType": "YulLiteral",
																"src": "4184:1:7",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4175:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "4175:5:7"
																}
															]
														},
														{
															"nativeSrc": "4194:13:7",
															"nodeType": "YulAssignment",
															"src": "4194:13:7",
															"value": {
																"name": "_base",
																"nativeSrc": "4202:5:7",
																"nodeType": "YulIdentifier",
																"src": "4202:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4194:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4194:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4252:213:7",
																"nodeType": "YulBlock",
																"src": "4252:213:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "4294:22:7",
																			"nodeType": "YulBlock",
																			"src": "4294:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4296:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "4296:16:7"
																						},
																						"nativeSrc": "4296:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4296:18:7"
																					},
																					"nativeSrc": "4296:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "4296:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4272:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4272:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "4282:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4282:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "4287:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4287:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4278:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4278:3:7"
																					},
																					"nativeSrc": "4278:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4278:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4269:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:7"
																			},
																			"nativeSrc": "4269:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:24:7"
																		},
																		"nativeSrc": "4266:50:7",
																		"nodeType": "YulIf",
																		"src": "4266:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "4349:29:7",
																			"nodeType": "YulBlock",
																			"src": "4349:29:7",
																			"statements": [
																				{
																					"nativeSrc": "4351:25:7",
																					"nodeType": "YulAssignment",
																					"src": "4351:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "4364:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "4364:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "4371:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "4371:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "4360:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4360:3:7"
																						},
																						"nativeSrc": "4360:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4360:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "4351:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "4351:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "4336:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4336:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4346:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4346:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4332:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4332:3:7"
																			},
																			"nativeSrc": "4332:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4332:16:7"
																		},
																		"nativeSrc": "4329:49:7",
																		"nodeType": "YulIf",
																		"src": "4329:49:7"
																	},
																	{
																		"nativeSrc": "4391:23:7",
																		"nodeType": "YulAssignment",
																		"src": "4391:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4403:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4403:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "4409:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4409:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "4399:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4399:3:7"
																			},
																			"nativeSrc": "4399:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4399:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "4391:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4391:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4427:28:7",
																		"nodeType": "YulAssignment",
																		"src": "4427:28:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4443:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4443:1:7",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4446:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4446:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "4439:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4439:3:7"
																			},
																			"nativeSrc": "4439:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4439:16:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4427:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "4427:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4227:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "4227:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4237:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4237:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4224:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4224:2:7"
																},
																"nativeSrc": "4224:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4224:15:7"
															},
															"nativeSrc": "4216:249:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4240:3:7",
																"nodeType": "YulBlock",
																"src": "4240:3:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "4220:3:7",
																"nodeType": "YulBlock",
																"src": "4220:3:7",
																"statements": []
															},
															"src": "4216:249:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "4096:375:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "4124:5:7",
														"nodeType": "YulTypedName",
														"src": "4124:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4131:8:7",
														"nodeType": "YulTypedName",
														"src": "4131:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "4141:3:7",
														"nodeType": "YulTypedName",
														"src": "4141:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4149:5:7",
														"nodeType": "YulTypedName",
														"src": "4149:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "4156:4:7",
														"nodeType": "YulTypedName",
														"src": "4156:4:7",
														"type": ""
													}
												],
												"src": "4096:375:7"
											},
											{
												"body": {
													"nativeSrc": "4535:843:7",
													"nodeType": "YulBlock",
													"src": "4535:843:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4573:52:7",
																"nodeType": "YulBlock",
																"src": "4573:52:7",
																"statements": [
																	{
																		"nativeSrc": "4587:10:7",
																		"nodeType": "YulAssignment",
																		"src": "4587:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4596:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4596:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4587:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4587:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4610:5:7",
																		"nodeType": "YulLeave",
																		"src": "4610:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4555:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "4555:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4548:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:7"
																},
																"nativeSrc": "4548:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4548:16:7"
															},
															"nativeSrc": "4545:80:7",
															"nodeType": "YulIf",
															"src": "4545:80:7"
														},
														{
															"body": {
																"nativeSrc": "4658:52:7",
																"nodeType": "YulBlock",
																"src": "4658:52:7",
																"statements": [
																	{
																		"nativeSrc": "4672:10:7",
																		"nodeType": "YulAssignment",
																		"src": "4672:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4681:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4681:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4672:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4672:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4695:5:7",
																		"nodeType": "YulLeave",
																		"src": "4695:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4644:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4644:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4637:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4637:6:7"
																},
																"nativeSrc": "4637:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4637:12:7"
															},
															"nativeSrc": "4634:76:7",
															"nodeType": "YulIf",
															"src": "4634:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4746:52:7",
																		"nodeType": "YulBlock",
																		"src": "4746:52:7",
																		"statements": [
																			{
																				"nativeSrc": "4760:10:7",
																				"nodeType": "YulAssignment",
																				"src": "4760:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4769:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4769:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4760:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4760:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4783:5:7",
																				"nodeType": "YulLeave",
																				"src": "4783:5:7"
																			}
																		]
																	},
																	"nativeSrc": "4739:59:7",
																	"nodeType": "YulCase",
																	"src": "4739:59:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4744:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4744:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4814:167:7",
																		"nodeType": "YulBlock",
																		"src": "4814:167:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4849:22:7",
																					"nodeType": "YulBlock",
																					"src": "4849:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4851:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "4851:16:7"
																								},
																								"nativeSrc": "4851:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4851:18:7"
																							},
																							"nativeSrc": "4851:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4851:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4834:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4834:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4844:3:7",
																							"nodeType": "YulLiteral",
																							"src": "4844:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4831:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4831:2:7"
																					},
																					"nativeSrc": "4831:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4831:17:7"
																				},
																				"nativeSrc": "4828:43:7",
																				"nodeType": "YulIf",
																				"src": "4828:43:7"
																			},
																			{
																				"nativeSrc": "4884:25:7",
																				"nodeType": "YulAssignment",
																				"src": "4884:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4897:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4897:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4907:1:7",
																							"nodeType": "YulLiteral",
																							"src": "4907:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4893:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4893:3:7"
																					},
																					"nativeSrc": "4893:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4893:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4884:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4884:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4922:11:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4922:11:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4932:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4932:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "4926:2:7",
																						"nodeType": "YulTypedName",
																						"src": "4926:2:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4946:7:7",
																				"nodeType": "YulAssignment",
																				"src": "4946:7:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4952:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4952:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "4946:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4946:2:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4966:5:7",
																				"nodeType": "YulLeave",
																				"src": "4966:5:7"
																			}
																		]
																	},
																	"nativeSrc": "4807:174:7",
																	"nodeType": "YulCase",
																	"src": "4807:174:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4812:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4812:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4726:4:7",
																"nodeType": "YulIdentifier",
																"src": "4726:4:7"
															},
															"nativeSrc": "4719:262:7",
															"nodeType": "YulSwitch",
															"src": "4719:262:7"
														},
														{
															"body": {
																"nativeSrc": "5079:114:7",
																"nodeType": "YulBlock",
																"src": "5079:114:7",
																"statements": [
																	{
																		"nativeSrc": "5093:28:7",
																		"nodeType": "YulAssignment",
																		"src": "5093:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5106:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "5106:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5112:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "5112:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "5102:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5102:3:7"
																			},
																			"nativeSrc": "5102:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5102:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5093:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5093:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5134:11:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5134:11:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5144:1:7",
																			"nodeType": "YulLiteral",
																			"src": "5144:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "5138:2:7",
																				"nodeType": "YulTypedName",
																				"src": "5138:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5158:7:7",
																		"nodeType": "YulAssignment",
																		"src": "5158:7:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5164:1:7",
																			"nodeType": "YulLiteral",
																			"src": "5164:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "5158:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "5158:2:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5178:5:7",
																		"nodeType": "YulLeave",
																		"src": "5178:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5003:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "5003:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5009:2:7",
																						"nodeType": "YulLiteral",
																						"src": "5009:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5000:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5000:2:7"
																				},
																				"nativeSrc": "5000:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5000:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5017:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "5017:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5027:2:7",
																						"nodeType": "YulLiteral",
																						"src": "5027:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5014:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5014:2:7"
																				},
																				"nativeSrc": "5014:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5014:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4996:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4996:3:7"
																		},
																		"nativeSrc": "4996:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4996:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5040:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "5040:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5046:3:7",
																						"nodeType": "YulLiteral",
																						"src": "5046:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5037:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5037:2:7"
																				},
																				"nativeSrc": "5037:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5037:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5055:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "5055:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5065:2:7",
																						"nodeType": "YulLiteral",
																						"src": "5065:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5052:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5052:2:7"
																				},
																				"nativeSrc": "5052:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5052:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5033:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5033:3:7"
																		},
																		"nativeSrc": "5033:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4993:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4993:2:7"
																},
																"nativeSrc": "4993:77:7",
																"nodeType": "YulFunctionCall",
																"src": "4993:77:7"
															},
															"nativeSrc": "4990:203:7",
															"nodeType": "YulIf",
															"src": "4990:203:7"
														},
														{
															"nativeSrc": "5202:65:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5202:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5244:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5244:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5250:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5250:8:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5264:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5264:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5260:3:7"
																		},
																		"nativeSrc": "5260:6:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5260:6:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "5225:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5225:18:7"
																},
																"nativeSrc": "5225:42:7",
																"nodeType": "YulFunctionCall",
																"src": "5225:42:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "5206:7:7",
																	"nodeType": "YulTypedName",
																	"src": "5206:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "5215:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5215:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5312:22:7",
																"nodeType": "YulBlock",
																"src": "5312:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5314:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5314:16:7"
																			},
																			"nativeSrc": "5314:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5314:18:7"
																		},
																		"nativeSrc": "5314:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5314:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5282:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5282:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5299:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5299:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5295:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5295:3:7"
																				},
																				"nativeSrc": "5295:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5295:6:7"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "5303:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5303:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "5291:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5291:3:7"
																		},
																		"nativeSrc": "5291:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5291:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5279:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5279:2:7"
																},
																"nativeSrc": "5279:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5279:32:7"
															},
															"nativeSrc": "5276:58:7",
															"nodeType": "YulIf",
															"src": "5276:58:7"
														},
														{
															"nativeSrc": "5343:29:7",
															"nodeType": "YulAssignment",
															"src": "5343:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5356:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5356:7:7"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "5365:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5365:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5352:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5352:3:7"
																},
																"nativeSrc": "5352:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5352:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5343:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5343:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "4476:902:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4506:4:7",
														"nodeType": "YulTypedName",
														"src": "4506:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4512:8:7",
														"nodeType": "YulTypedName",
														"src": "4512:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4525:5:7",
														"nodeType": "YulTypedName",
														"src": "4525:5:7",
														"type": ""
													}
												],
												"src": "4476:902:7"
											},
											{
												"body": {
													"nativeSrc": "5451:72:7",
													"nodeType": "YulBlock",
													"src": "5451:72:7",
													"statements": [
														{
															"nativeSrc": "5461:56:7",
															"nodeType": "YulAssignment",
															"src": "5461:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5491:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5491:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5501:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5501:8:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5511:4:7",
																				"nodeType": "YulLiteral",
																				"src": "5511:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5497:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5497:3:7"
																		},
																		"nativeSrc": "5497:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5497:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "5470:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "5470:20:7"
																},
																"nativeSrc": "5470:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5470:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5461:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5461:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "5383:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5422:4:7",
														"nodeType": "YulTypedName",
														"src": "5422:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5428:8:7",
														"nodeType": "YulTypedName",
														"src": "5428:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5441:5:7",
														"nodeType": "YulTypedName",
														"src": "5441:5:7",
														"type": ""
													}
												],
												"src": "5383:140:7"
											},
											{
												"body": {
													"nativeSrc": "5580:116:7",
													"nodeType": "YulBlock",
													"src": "5580:116:7",
													"statements": [
														{
															"nativeSrc": "5590:20:7",
															"nodeType": "YulAssignment",
															"src": "5590:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5605:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5605:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5608:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5608:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5601:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5601:3:7"
																},
																"nativeSrc": "5601:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5601:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5590:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5590:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5668:22:7",
																"nodeType": "YulBlock",
																"src": "5668:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5670:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5670:16:7"
																			},
																			"nativeSrc": "5670:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5670:18:7"
																		},
																		"nativeSrc": "5670:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5670:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5639:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "5639:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5632:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5632:6:7"
																				},
																				"nativeSrc": "5632:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5632:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5646:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "5646:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5653:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "5653:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5662:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "5662:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5649:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5649:3:7"
																						},
																						"nativeSrc": "5649:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5649:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5643:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5643:2:7"
																				},
																				"nativeSrc": "5643:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5643:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5629:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5629:2:7"
																		},
																		"nativeSrc": "5629:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5629:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5622:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5622:6:7"
																},
																"nativeSrc": "5622:45:7",
																"nodeType": "YulFunctionCall",
																"src": "5622:45:7"
															},
															"nativeSrc": "5619:71:7",
															"nodeType": "YulIf",
															"src": "5619:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5528:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5559:1:7",
														"nodeType": "YulTypedName",
														"src": "5559:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5562:1:7",
														"nodeType": "YulTypedName",
														"src": "5562:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5568:7:7",
														"nodeType": "YulTypedName",
														"src": "5568:7:7",
														"type": ""
													}
												],
												"src": "5528:168:7"
											},
											{
												"body": {
													"nativeSrc": "5875:223:7",
													"nodeType": "YulBlock",
													"src": "5875:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5892:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5892:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5903:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5903:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5885:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5885:6:7"
																},
																"nativeSrc": "5885:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5885:21:7"
															},
															"nativeSrc": "5885:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5885:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5926:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5926:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5937:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5937:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5922:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5922:3:7"
																		},
																		"nativeSrc": "5922:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5922:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5942:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5942:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5915:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5915:6:7"
																},
																"nativeSrc": "5915:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5915:30:7"
															},
															"nativeSrc": "5915:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5915:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5965:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5965:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5976:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5976:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5961:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5961:3:7"
																		},
																		"nativeSrc": "5961:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5961:18:7"
																	},
																	{
																		"hexValue": "456e642074696d65206d7573742062652061667465722073746172742074696d",
																		"kind": "string",
																		"nativeSrc": "5981:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5981:34:7",
																		"type": "",
																		"value": "End time must be after start tim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5954:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5954:6:7"
																},
																"nativeSrc": "5954:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5954:62:7"
															},
															"nativeSrc": "5954:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "5954:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6036:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6036:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6047:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6047:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6032:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:7"
																		},
																		"nativeSrc": "6032:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:18:7"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nativeSrc": "6052:3:7",
																		"nodeType": "YulLiteral",
																		"src": "6052:3:7",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6025:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6025:6:7"
																},
																"nativeSrc": "6025:31:7",
																"nodeType": "YulFunctionCall",
																"src": "6025:31:7"
															},
															"nativeSrc": "6025:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "6025:31:7"
														},
														{
															"nativeSrc": "6065:27:7",
															"nodeType": "YulAssignment",
															"src": "6065:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6077:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6077:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6088:3:7",
																		"nodeType": "YulLiteral",
																		"src": "6088:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6073:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6073:3:7"
																},
																"nativeSrc": "6073:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6073:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6065:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6065:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5701:397:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5852:9:7",
														"nodeType": "YulTypedName",
														"src": "5852:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5866:4:7",
														"nodeType": "YulTypedName",
														"src": "5866:4:7",
														"type": ""
													}
												],
												"src": "5701:397:7"
											},
											{
												"body": {
													"nativeSrc": "6152:79:7",
													"nodeType": "YulBlock",
													"src": "6152:79:7",
													"statements": [
														{
															"nativeSrc": "6162:17:7",
															"nodeType": "YulAssignment",
															"src": "6162:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6174:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6174:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6177:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6177:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:7"
																},
																"nativeSrc": "6170:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6162:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6162:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6203:22:7",
																"nodeType": "YulBlock",
																"src": "6203:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6205:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6205:16:7"
																			},
																			"nativeSrc": "6205:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6205:18:7"
																		},
																		"nativeSrc": "6205:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6205:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6194:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6194:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6200:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6200:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6191:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6191:2:7"
																},
																"nativeSrc": "6191:11:7",
																"nodeType": "YulFunctionCall",
																"src": "6191:11:7"
															},
															"nativeSrc": "6188:37:7",
															"nodeType": "YulIf",
															"src": "6188:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6103:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6134:1:7",
														"nodeType": "YulTypedName",
														"src": "6134:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6137:1:7",
														"nodeType": "YulTypedName",
														"src": "6137:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6143:4:7",
														"nodeType": "YulTypedName",
														"src": "6143:4:7",
														"type": ""
													}
												],
												"src": "6103:128:7"
											},
											{
												"body": {
													"nativeSrc": "6282:171:7",
													"nodeType": "YulBlock",
													"src": "6282:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6313:111:7",
																"nodeType": "YulBlock",
																"src": "6313:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6334:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6334:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6341:3:7",
																							"nodeType": "YulLiteral",
																							"src": "6341:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6346:10:7",
																							"nodeType": "YulLiteral",
																							"src": "6346:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6337:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6337:3:7"
																					},
																					"nativeSrc": "6337:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6337:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6327:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6327:6:7"
																			},
																			"nativeSrc": "6327:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6327:31:7"
																		},
																		"nativeSrc": "6327:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6327:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6378:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6381:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6381:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6371:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6371:6:7"
																			},
																			"nativeSrc": "6371:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6371:15:7"
																		},
																		"nativeSrc": "6371:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6371:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6406:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6406:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6409:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6409:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6399:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6399:6:7"
																			},
																			"nativeSrc": "6399:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6399:15:7"
																		},
																		"nativeSrc": "6399:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6399:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6302:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6302:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6295:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:7"
																},
																"nativeSrc": "6295:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6295:9:7"
															},
															"nativeSrc": "6292:132:7",
															"nodeType": "YulIf",
															"src": "6292:132:7"
														},
														{
															"nativeSrc": "6433:14:7",
															"nodeType": "YulAssignment",
															"src": "6433:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6442:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6442:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6445:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6445:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6438:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6438:3:7"
																},
																"nativeSrc": "6438:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6438:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6433:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6433:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6236:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6267:1:7",
														"nodeType": "YulTypedName",
														"src": "6267:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6270:1:7",
														"nodeType": "YulTypedName",
														"src": "6270:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6276:1:7",
														"nodeType": "YulTypedName",
														"src": "6276:1:7",
														"type": ""
													}
												],
												"src": "6236:217:7"
											},
											{
												"body": {
													"nativeSrc": "6587:119:7",
													"nodeType": "YulBlock",
													"src": "6587:119:7",
													"statements": [
														{
															"nativeSrc": "6597:26:7",
															"nodeType": "YulAssignment",
															"src": "6597:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6609:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6609:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6620:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6620:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6605:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6605:3:7"
																},
																"nativeSrc": "6605:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6605:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6597:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6597:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6639:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6639:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6650:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6650:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6632:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6632:6:7"
																},
																"nativeSrc": "6632:25:7",
																"nodeType": "YulFunctionCall",
																"src": "6632:25:7"
															},
															"nativeSrc": "6632:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "6632:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6677:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6677:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6688:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6688:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6673:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6673:3:7"
																		},
																		"nativeSrc": "6673:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6673:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6693:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6693:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6666:6:7"
																},
																"nativeSrc": "6666:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6666:34:7"
															},
															"nativeSrc": "6666:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6666:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6458:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6548:9:7",
														"nodeType": "YulTypedName",
														"src": "6548:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6559:6:7",
														"nodeType": "YulTypedName",
														"src": "6559:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6567:6:7",
														"nodeType": "YulTypedName",
														"src": "6567:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6578:4:7",
														"nodeType": "YulTypedName",
														"src": "6578:4:7",
														"type": ""
													}
												],
												"src": "6458:248:7"
											},
											{
												"body": {
													"nativeSrc": "6885:223:7",
													"nodeType": "YulBlock",
													"src": "6885:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6902:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6902:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6913:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6913:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6895:6:7"
																},
																"nativeSrc": "6895:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6895:21:7"
															},
															"nativeSrc": "6895:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6895:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6936:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6936:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6947:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6947:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6932:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6932:3:7"
																		},
																		"nativeSrc": "6932:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6932:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6952:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6952:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6925:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6925:6:7"
																},
																"nativeSrc": "6925:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6925:30:7"
															},
															"nativeSrc": "6925:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6925:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6975:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6986:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6986:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6971:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6971:3:7"
																		},
																		"nativeSrc": "6971:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6971:18:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "6991:34:7",
																		"nodeType": "YulLiteral",
																		"src": "6991:34:7",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6964:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6964:6:7"
																},
																"nativeSrc": "6964:62:7",
																"nodeType": "YulFunctionCall",
																"src": "6964:62:7"
															},
															"nativeSrc": "6964:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "6964:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7046:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7046:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7057:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7057:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7042:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7042:3:7"
																		},
																		"nativeSrc": "7042:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7042:18:7"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "7062:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7062:3:7",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7035:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7035:6:7"
																},
																"nativeSrc": "7035:31:7",
																"nodeType": "YulFunctionCall",
																"src": "7035:31:7"
															},
															"nativeSrc": "7035:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "7035:31:7"
														},
														{
															"nativeSrc": "7075:27:7",
															"nodeType": "YulAssignment",
															"src": "7075:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7087:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7087:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7098:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7098:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7083:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7083:3:7"
																},
																"nativeSrc": "7083:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7083:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7075:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7075:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6711:397:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6862:9:7",
														"nodeType": "YulTypedName",
														"src": "6862:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6876:4:7",
														"nodeType": "YulTypedName",
														"src": "6876:4:7",
														"type": ""
													}
												],
												"src": "6711:397:7"
											},
											{
												"body": {
													"nativeSrc": "7287:171:7",
													"nodeType": "YulBlock",
													"src": "7287:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7304:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7304:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7315:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7315:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7297:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7297:6:7"
																},
																"nativeSrc": "7297:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7297:21:7"
															},
															"nativeSrc": "7297:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7297:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7338:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7338:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7349:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7349:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7334:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7334:3:7"
																		},
																		"nativeSrc": "7334:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7334:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7354:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7354:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7327:6:7"
																},
																"nativeSrc": "7327:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7327:30:7"
															},
															"nativeSrc": "7327:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7327:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7377:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7388:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7388:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7373:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:7"
																		},
																		"nativeSrc": "7373:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7373:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e63652e",
																		"kind": "string",
																		"nativeSrc": "7393:23:7",
																		"nodeType": "YulLiteral",
																		"src": "7393:23:7",
																		"type": "",
																		"value": "Insufficient balance."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7366:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:7"
																},
																"nativeSrc": "7366:51:7",
																"nodeType": "YulFunctionCall",
																"src": "7366:51:7"
															},
															"nativeSrc": "7366:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "7366:51:7"
														},
														{
															"nativeSrc": "7426:26:7",
															"nodeType": "YulAssignment",
															"src": "7426:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7438:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7438:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7449:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7449:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7434:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7434:3:7"
																},
																"nativeSrc": "7434:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7434:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7426:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7426:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7113:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7264:9:7",
														"nodeType": "YulTypedName",
														"src": "7264:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7278:4:7",
														"nodeType": "YulTypedName",
														"src": "7278:4:7",
														"type": ""
													}
												],
												"src": "7113:345:7"
											},
											{
												"body": {
													"nativeSrc": "7511:77:7",
													"nodeType": "YulBlock",
													"src": "7511:77:7",
													"statements": [
														{
															"nativeSrc": "7521:16:7",
															"nodeType": "YulAssignment",
															"src": "7521:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7532:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7532:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7535:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7535:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7528:3:7"
																},
																"nativeSrc": "7528:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7528:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7521:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7560:22:7",
																"nodeType": "YulBlock",
																"src": "7560:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7562:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7562:16:7"
																			},
																			"nativeSrc": "7562:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7562:18:7"
																		},
																		"nativeSrc": "7562:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7562:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7552:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7552:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7555:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7555:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7549:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7549:2:7"
																},
																"nativeSrc": "7549:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7549:10:7"
															},
															"nativeSrc": "7546:36:7",
															"nodeType": "YulIf",
															"src": "7546:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7463:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7494:1:7",
														"nodeType": "YulTypedName",
														"src": "7494:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7497:1:7",
														"nodeType": "YulTypedName",
														"src": "7497:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7503:3:7",
														"nodeType": "YulTypedName",
														"src": "7503:3:7",
														"type": ""
													}
												],
												"src": "7463:125:7"
											},
											{
												"body": {
													"nativeSrc": "7767:173:7",
													"nodeType": "YulBlock",
													"src": "7767:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7784:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7784:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7795:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7795:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7777:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7777:6:7"
																},
																"nativeSrc": "7777:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7777:21:7"
															},
															"nativeSrc": "7777:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7777:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7818:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7818:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7829:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7829:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7814:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7814:3:7"
																		},
																		"nativeSrc": "7814:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7814:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7834:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7834:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7807:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7807:6:7"
																},
																"nativeSrc": "7807:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7807:30:7"
															},
															"nativeSrc": "7807:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7807:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7857:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7857:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7868:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7868:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7853:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7853:3:7"
																		},
																		"nativeSrc": "7853:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7853:18:7"
																	},
																	{
																		"hexValue": "50726573616c65206e6f74207374617274656420796574",
																		"kind": "string",
																		"nativeSrc": "7873:25:7",
																		"nodeType": "YulLiteral",
																		"src": "7873:25:7",
																		"type": "",
																		"value": "Presale not started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7846:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7846:6:7"
																},
																"nativeSrc": "7846:53:7",
																"nodeType": "YulFunctionCall",
																"src": "7846:53:7"
															},
															"nativeSrc": "7846:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "7846:53:7"
														},
														{
															"nativeSrc": "7908:26:7",
															"nodeType": "YulAssignment",
															"src": "7908:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7920:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7920:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7931:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7931:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7916:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7916:3:7"
																},
																"nativeSrc": "7916:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7916:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7908:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7908:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7593:347:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7744:9:7",
														"nodeType": "YulTypedName",
														"src": "7744:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7758:4:7",
														"nodeType": "YulTypedName",
														"src": "7758:4:7",
														"type": ""
													}
												],
												"src": "7593:347:7"
											},
											{
												"body": {
													"nativeSrc": "8119:170:7",
													"nodeType": "YulBlock",
													"src": "8119:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8136:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8136:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8147:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8147:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8129:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8129:6:7"
																},
																"nativeSrc": "8129:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8129:21:7"
															},
															"nativeSrc": "8129:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8129:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8170:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8170:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8181:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8181:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8166:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8166:3:7"
																		},
																		"nativeSrc": "8166:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8166:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8186:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8186:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8159:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8159:6:7"
																},
																"nativeSrc": "8159:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8159:30:7"
															},
															"nativeSrc": "8159:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8159:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8209:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8209:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8220:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8220:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8205:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8205:3:7"
																		},
																		"nativeSrc": "8205:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8205:18:7"
																	},
																	{
																		"hexValue": "4e6f207265776172647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "8225:22:7",
																		"nodeType": "YulLiteral",
																		"src": "8225:22:7",
																		"type": "",
																		"value": "No rewards available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8198:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8198:6:7"
																},
																"nativeSrc": "8198:50:7",
																"nodeType": "YulFunctionCall",
																"src": "8198:50:7"
															},
															"nativeSrc": "8198:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "8198:50:7"
														},
														{
															"nativeSrc": "8257:26:7",
															"nodeType": "YulAssignment",
															"src": "8257:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8269:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8269:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8280:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8280:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8265:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8265:3:7"
																},
																"nativeSrc": "8265:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8265:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8257:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8257:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7945:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8096:9:7",
														"nodeType": "YulTypedName",
														"src": "8096:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8110:4:7",
														"nodeType": "YulTypedName",
														"src": "8110:4:7",
														"type": ""
													}
												],
												"src": "7945:344:7"
											},
											{
												"body": {
													"nativeSrc": "8468:169:7",
													"nodeType": "YulBlock",
													"src": "8468:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8485:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8485:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8496:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8496:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8478:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8478:6:7"
																},
																"nativeSrc": "8478:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8478:21:7"
															},
															"nativeSrc": "8478:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8478:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8519:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8519:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8530:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8530:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8515:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8515:3:7"
																		},
																		"nativeSrc": "8515:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8515:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8535:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8535:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8508:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8508:6:7"
																},
																"nativeSrc": "8508:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8508:30:7"
															},
															"nativeSrc": "8508:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8508:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8558:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8558:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8569:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8569:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8554:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8554:3:7"
																		},
																		"nativeSrc": "8554:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8554:18:7"
																	},
																	{
																		"hexValue": "416c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "8574:21:7",
																		"nodeType": "YulLiteral",
																		"src": "8574:21:7",
																		"type": "",
																		"value": "Already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8547:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8547:6:7"
																},
																"nativeSrc": "8547:49:7",
																"nodeType": "YulFunctionCall",
																"src": "8547:49:7"
															},
															"nativeSrc": "8547:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "8547:49:7"
														},
														{
															"nativeSrc": "8605:26:7",
															"nodeType": "YulAssignment",
															"src": "8605:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8617:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8617:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8628:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8628:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8613:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8613:3:7"
																},
																"nativeSrc": "8613:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8613:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8605:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8605:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8294:343:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8445:9:7",
														"nodeType": "YulTypedName",
														"src": "8445:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8459:4:7",
														"nodeType": "YulTypedName",
														"src": "8459:4:7",
														"type": ""
													}
												],
												"src": "8294:343:7"
											},
											{
												"body": {
													"nativeSrc": "8816:171:7",
													"nodeType": "YulBlock",
													"src": "8816:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8833:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8833:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8844:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8844:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8826:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8826:6:7"
																},
																"nativeSrc": "8826:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8826:21:7"
															},
															"nativeSrc": "8826:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8826:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8867:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8867:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8878:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8878:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8863:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8863:3:7"
																		},
																		"nativeSrc": "8863:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8863:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8883:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8883:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8856:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8856:6:7"
																},
																"nativeSrc": "8856:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8856:30:7"
															},
															"nativeSrc": "8856:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8856:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8906:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8906:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8917:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8917:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8902:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8902:3:7"
																		},
																		"nativeSrc": "8902:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8902:18:7"
																	},
																	{
																		"hexValue": "43616e6e6f7420726566657220796f757273656c66",
																		"kind": "string",
																		"nativeSrc": "8922:23:7",
																		"nodeType": "YulLiteral",
																		"src": "8922:23:7",
																		"type": "",
																		"value": "Cannot refer yourself"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8895:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:7"
																},
																"nativeSrc": "8895:51:7",
																"nodeType": "YulFunctionCall",
																"src": "8895:51:7"
															},
															"nativeSrc": "8895:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "8895:51:7"
														},
														{
															"nativeSrc": "8955:26:7",
															"nodeType": "YulAssignment",
															"src": "8955:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8967:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8967:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8978:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8978:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8963:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8963:3:7"
																},
																"nativeSrc": "8963:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8963:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8955:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8955:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8642:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8793:9:7",
														"nodeType": "YulTypedName",
														"src": "8793:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8807:4:7",
														"nodeType": "YulTypedName",
														"src": "8807:4:7",
														"type": ""
													}
												],
												"src": "8642:345:7"
											},
											{
												"body": {
													"nativeSrc": "9166:167:7",
													"nodeType": "YulBlock",
													"src": "9166:167:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9183:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9183:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9194:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9194:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9176:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9176:6:7"
																},
																"nativeSrc": "9176:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9176:21:7"
															},
															"nativeSrc": "9176:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9176:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9217:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9217:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9228:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9228:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9213:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9213:3:7"
																		},
																		"nativeSrc": "9213:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9213:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9233:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9233:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9206:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9206:6:7"
																},
																"nativeSrc": "9206:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9206:30:7"
															},
															"nativeSrc": "9206:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9206:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9256:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9256:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9267:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9267:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9252:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9252:3:7"
																		},
																		"nativeSrc": "9252:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9252:18:7"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73207374616b65642e",
																		"kind": "string",
																		"nativeSrc": "9272:19:7",
																		"nodeType": "YulLiteral",
																		"src": "9272:19:7",
																		"type": "",
																		"value": "No tokens staked."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9245:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9245:6:7"
																},
																"nativeSrc": "9245:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9245:47:7"
															},
															"nativeSrc": "9245:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9245:47:7"
														},
														{
															"nativeSrc": "9301:26:7",
															"nodeType": "YulAssignment",
															"src": "9301:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9313:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9313:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9324:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9324:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9309:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9309:3:7"
																},
																"nativeSrc": "9309:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9309:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9301:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9301:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8992:341:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9143:9:7",
														"nodeType": "YulTypedName",
														"src": "9143:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9157:4:7",
														"nodeType": "YulTypedName",
														"src": "9157:4:7",
														"type": ""
													}
												],
												"src": "8992:341:7"
											},
											{
												"body": {
													"nativeSrc": "9512:177:7",
													"nodeType": "YulBlock",
													"src": "9512:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9529:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9529:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9540:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9540:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9522:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9522:6:7"
																},
																"nativeSrc": "9522:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9522:21:7"
															},
															"nativeSrc": "9522:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9522:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9563:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9563:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9574:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9574:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9559:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9559:3:7"
																		},
																		"nativeSrc": "9559:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9559:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9579:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9579:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9552:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9552:6:7"
																},
																"nativeSrc": "9552:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9552:30:7"
															},
															"nativeSrc": "9552:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9552:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9602:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9602:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9613:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9613:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9598:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9598:3:7"
																		},
																		"nativeSrc": "9598:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9598:18:7"
																	},
																	{
																		"hexValue": "556e7374616b65206f6e6c792061667465722034207765656b732e",
																		"kind": "string",
																		"nativeSrc": "9618:29:7",
																		"nodeType": "YulLiteral",
																		"src": "9618:29:7",
																		"type": "",
																		"value": "Unstake only after 4 weeks."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9591:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9591:6:7"
																},
																"nativeSrc": "9591:57:7",
																"nodeType": "YulFunctionCall",
																"src": "9591:57:7"
															},
															"nativeSrc": "9591:57:7",
															"nodeType": "YulExpressionStatement",
															"src": "9591:57:7"
														},
														{
															"nativeSrc": "9657:26:7",
															"nodeType": "YulAssignment",
															"src": "9657:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9669:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9669:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9680:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9680:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9665:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9665:3:7"
																},
																"nativeSrc": "9665:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9665:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9657:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9657:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9338:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9489:9:7",
														"nodeType": "YulTypedName",
														"src": "9489:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9503:4:7",
														"nodeType": "YulTypedName",
														"src": "9503:4:7",
														"type": ""
													}
												],
												"src": "9338:351:7"
											},
											{
												"body": {
													"nativeSrc": "9868:166:7",
													"nodeType": "YulBlock",
													"src": "9868:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9885:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9885:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9896:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9896:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:7"
																},
																"nativeSrc": "9878:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9878:21:7"
															},
															"nativeSrc": "9878:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9878:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9919:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9919:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9930:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9930:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9915:3:7"
																		},
																		"nativeSrc": "9915:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9915:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9935:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9935:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9908:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9908:6:7"
																},
																"nativeSrc": "9908:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9908:30:7"
															},
															"nativeSrc": "9908:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9908:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9958:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9958:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9969:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9969:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9954:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9954:3:7"
																		},
																		"nativeSrc": "9954:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9954:18:7"
																	},
																	{
																		"hexValue": "53616c65206e6f74206163746976652e",
																		"kind": "string",
																		"nativeSrc": "9974:18:7",
																		"nodeType": "YulLiteral",
																		"src": "9974:18:7",
																		"type": "",
																		"value": "Sale not active."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9947:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:7"
																},
																"nativeSrc": "9947:46:7",
																"nodeType": "YulFunctionCall",
																"src": "9947:46:7"
															},
															"nativeSrc": "9947:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "9947:46:7"
														},
														{
															"nativeSrc": "10002:26:7",
															"nodeType": "YulAssignment",
															"src": "10002:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10014:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10014:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10025:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10025:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10010:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10010:3:7"
																},
																"nativeSrc": "10010:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10010:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10002:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10002:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9694:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9845:9:7",
														"nodeType": "YulTypedName",
														"src": "9845:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9859:4:7",
														"nodeType": "YulTypedName",
														"src": "9859:4:7",
														"type": ""
													}
												],
												"src": "9694:340:7"
											},
											{
												"body": {
													"nativeSrc": "10213:178:7",
													"nodeType": "YulBlock",
													"src": "10213:178:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10230:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10230:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10241:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10241:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10223:6:7"
																},
																"nativeSrc": "10223:21:7",
																"nodeType": "YulFunctionCall",
																"src": "10223:21:7"
															},
															"nativeSrc": "10223:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "10223:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10264:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10264:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10275:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10275:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10260:3:7"
																		},
																		"nativeSrc": "10260:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10260:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10280:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10280:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10253:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10253:6:7"
																},
																"nativeSrc": "10253:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10253:30:7"
															},
															"nativeSrc": "10253:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10253:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10303:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10303:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10314:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10314:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10299:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10299:3:7"
																		},
																		"nativeSrc": "10299:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10299:18:7"
																	},
																	{
																		"hexValue": "4d7573742073656e642045544820746f2062757920746f6b656e732e",
																		"kind": "string",
																		"nativeSrc": "10319:30:7",
																		"nodeType": "YulLiteral",
																		"src": "10319:30:7",
																		"type": "",
																		"value": "Must send ETH to buy tokens."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10292:6:7"
																},
																"nativeSrc": "10292:58:7",
																"nodeType": "YulFunctionCall",
																"src": "10292:58:7"
															},
															"nativeSrc": "10292:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "10292:58:7"
														},
														{
															"nativeSrc": "10359:26:7",
															"nodeType": "YulAssignment",
															"src": "10359:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10371:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10371:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10382:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10382:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10367:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10367:3:7"
																},
																"nativeSrc": "10367:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10367:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10359:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10359:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10039:352:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10190:9:7",
														"nodeType": "YulTypedName",
														"src": "10190:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10204:4:7",
														"nodeType": "YulTypedName",
														"src": "10204:4:7",
														"type": ""
													}
												],
												"src": "10039:352:7"
											},
											{
												"body": {
													"nativeSrc": "10570:178:7",
													"nodeType": "YulBlock",
													"src": "10570:178:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10587:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10587:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10598:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10598:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10580:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10580:6:7"
																},
																"nativeSrc": "10580:21:7",
																"nodeType": "YulFunctionCall",
																"src": "10580:21:7"
															},
															"nativeSrc": "10580:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "10580:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10621:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10621:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10632:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10632:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10617:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10617:3:7"
																		},
																		"nativeSrc": "10617:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10617:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10637:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10637:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10610:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:7"
																},
																"nativeSrc": "10610:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10610:30:7"
															},
															"nativeSrc": "10610:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10610:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10660:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10660:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10671:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10671:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10656:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10656:3:7"
																		},
																		"nativeSrc": "10656:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10656:18:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e",
																		"kind": "string",
																		"nativeSrc": "10676:30:7",
																		"nodeType": "YulLiteral",
																		"src": "10676:30:7",
																		"type": "",
																		"value": "Not enough tokens available."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10649:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:7"
																},
																"nativeSrc": "10649:58:7",
																"nodeType": "YulFunctionCall",
																"src": "10649:58:7"
															},
															"nativeSrc": "10649:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "10649:58:7"
														},
														{
															"nativeSrc": "10716:26:7",
															"nodeType": "YulAssignment",
															"src": "10716:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10728:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10728:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10739:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10739:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10724:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10724:3:7"
																},
																"nativeSrc": "10724:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10724:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10716:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10716:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10396:352:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10547:9:7",
														"nodeType": "YulTypedName",
														"src": "10547:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10561:4:7",
														"nodeType": "YulTypedName",
														"src": "10561:4:7",
														"type": ""
													}
												],
												"src": "10396:352:7"
											},
											{
												"body": {
													"nativeSrc": "10927:174:7",
													"nodeType": "YulBlock",
													"src": "10927:174:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10944:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10944:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10955:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10955:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10937:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10937:6:7"
																},
																"nativeSrc": "10937:21:7",
																"nodeType": "YulFunctionCall",
																"src": "10937:21:7"
															},
															"nativeSrc": "10937:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "10937:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10978:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10978:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10989:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10989:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10974:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10974:3:7"
																		},
																		"nativeSrc": "10974:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10974:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10994:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10994:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10967:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10967:6:7"
																},
																"nativeSrc": "10967:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10967:30:7"
															},
															"nativeSrc": "10967:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10967:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11017:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11017:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11028:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11028:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11013:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11013:3:7"
																		},
																		"nativeSrc": "11013:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11013:18:7"
																	},
																	{
																		"hexValue": "5072652d73616c65206e6f74207374617274656420796574",
																		"kind": "string",
																		"nativeSrc": "11033:26:7",
																		"nodeType": "YulLiteral",
																		"src": "11033:26:7",
																		"type": "",
																		"value": "Pre-sale not started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11006:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11006:6:7"
																},
																"nativeSrc": "11006:54:7",
																"nodeType": "YulFunctionCall",
																"src": "11006:54:7"
															},
															"nativeSrc": "11006:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "11006:54:7"
														},
														{
															"nativeSrc": "11069:26:7",
															"nodeType": "YulAssignment",
															"src": "11069:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11081:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11081:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11092:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11092:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11077:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11077:3:7"
																},
																"nativeSrc": "11077:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11077:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11069:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11069:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10753:348:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10904:9:7",
														"nodeType": "YulTypedName",
														"src": "10904:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10918:4:7",
														"nodeType": "YulTypedName",
														"src": "10918:4:7",
														"type": ""
													}
												],
												"src": "10753:348:7"
											},
											{
												"body": {
													"nativeSrc": "11263:188:7",
													"nodeType": "YulBlock",
													"src": "11263:188:7",
													"statements": [
														{
															"nativeSrc": "11273:26:7",
															"nodeType": "YulAssignment",
															"src": "11273:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11285:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11285:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11296:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11296:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11281:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11281:3:7"
																},
																"nativeSrc": "11281:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11281:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11273:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11273:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11315:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11315:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11330:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11330:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11346:3:7",
																								"nodeType": "YulLiteral",
																								"src": "11346:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11351:1:7",
																								"nodeType": "YulLiteral",
																								"src": "11351:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11342:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11342:3:7"
																						},
																						"nativeSrc": "11342:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11342:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11355:1:7",
																						"nodeType": "YulLiteral",
																						"src": "11355:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11338:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11338:3:7"
																				},
																				"nativeSrc": "11338:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11338:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11326:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11326:3:7"
																		},
																		"nativeSrc": "11326:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11326:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11308:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11308:6:7"
																},
																"nativeSrc": "11308:51:7",
																"nodeType": "YulFunctionCall",
																"src": "11308:51:7"
															},
															"nativeSrc": "11308:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "11308:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11379:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11379:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11390:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11390:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11375:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11375:3:7"
																		},
																		"nativeSrc": "11375:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11375:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11395:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11395:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11368:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11368:6:7"
																},
																"nativeSrc": "11368:34:7",
																"nodeType": "YulFunctionCall",
																"src": "11368:34:7"
															},
															"nativeSrc": "11368:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "11368:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11422:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11422:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11433:2:7",
																				"nodeType": "YulLiteral",
																				"src": "11433:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11418:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11418:3:7"
																		},
																		"nativeSrc": "11418:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11418:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11438:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11438:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11411:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11411:6:7"
																},
																"nativeSrc": "11411:34:7",
																"nodeType": "YulFunctionCall",
																"src": "11411:34:7"
															},
															"nativeSrc": "11411:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "11411:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11106:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11216:9:7",
														"nodeType": "YulTypedName",
														"src": "11216:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11227:6:7",
														"nodeType": "YulTypedName",
														"src": "11227:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11235:6:7",
														"nodeType": "YulTypedName",
														"src": "11235:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11243:6:7",
														"nodeType": "YulTypedName",
														"src": "11243:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11254:4:7",
														"nodeType": "YulTypedName",
														"src": "11254:4:7",
														"type": ""
													}
												],
												"src": "11106:345:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"End time must be after start tim\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient balance.\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Presale not started yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"No rewards available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Cannot refer yourself\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No tokens staked.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Unstake only after 4 weeks.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Sale not active.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Must send ETH to buy tokens.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Not enough tokens available.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Pre-sale not started yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610254575f3560e01c80638da5cb5b1161013f578063c6a1f80a116100b3578063d348b40911610078578063d348b40914610692578063dc07c8a3146106a6578063dd62ed3e146106bb578063ebbef6f6146106ff578063f2fde38b1461071f578063f99318551461073e575f80fd5b8063c6a1f80a14610616578063cce29ea71461062b578063cec297a014610640578063cf5f971b1461066b578063d0febe4c1461068a575f80fd5b80639ca423b3116101045780639ca423b314610567578063a09c4cf41461059b578063a5ce413b146105ba578063a8297d46146105ce578063a9059cbb146105e3578063b290d57014610602575f80fd5b80638da5cb5b146104b55780638f0794fe146104e657806395d89b4114610511578063967ed8f3146105255780639b19251a14610539575f80fd5b806327e235e3116101d6578063518ab2a81161019b578063518ab2a814610404578063639a5c871461041957806370a082311461043a578063715018a61461046e5780637547c7a3146104825780637c613b2f146104a1575f80fd5b806327e235e31461037557806330f72cd4146103a0578063313ce567146103c05780634405df4a146103db5780634f3fc2df146103ef575f80fd5b806312065fe01161021c57806312065fe0146102f957806318160ddd146103195780631d0806ae1461032d5780631d3824ea1461034257806323b872dd14610356575f80fd5b806303e293a31461025857806306d65af31461028057806306fdde0314610295578063095ea7b3146102b65780630fb4ce58146102e5575b5f80fd5b348015610263575f80fd5b5061026d60095481565b6040519081526020015b60405180910390f35b34801561028b575f80fd5b5061026d60065481565b3480156102a0575f80fd5b506102a9610769565b6040516102779190611546565b3480156102c1575f80fd5b506102d56102d0366004611596565b6107f9565b6040519015158152602001610277565b3480156102f0575f80fd5b5061026d610812565b348015610304575f80fd5b50335f9081526020819052604090205461026d565b348015610324575f80fd5b5060025461026d565b348015610338575f80fd5b5061026d60085481565b34801561034d575f80fd5b5061026d610849565b348015610361575f80fd5b506102d56103703660046115be565b6108aa565b348015610380575f80fd5b5061026d61038f3660046115f8565b60146020525f908152604090205481565b3480156103ab575f80fd5b506005546102d590600160a01b900460ff1681565b3480156103cb575f80fd5b5060405160128152602001610277565b3480156103e6575f80fd5b5061026d6108cd565b3480156103fa575f80fd5b5061026d600c5481565b34801561040f575f80fd5b5061026d600a5481565b348015610424575f80fd5b50610438610433366004611611565b61090d565b005b348015610445575f80fd5b5061026d6104543660046115f8565b6001600160a01b03165f9081526020819052604090205490565b348015610479575f80fd5b50610438610975565b34801561048d575f80fd5b5061043861049c36600461163a565b610988565b3480156104ac575f80fd5b50610438610ab3565b3480156104c0575f80fd5b506005546001600160a01b03165b6040516001600160a01b039091168152602001610277565b3480156104f1575f80fd5b5061026d6105003660046115f8565b60106020525f908152604090205481565b34801561051c575f80fd5b506102a9610baf565b348015610530575f80fd5b5061026d610bbe565b348015610544575f80fd5b506102d56105533660046115f8565b60116020525f908152604090205460ff1681565b348015610572575f80fd5b506104ce6105813660046115f8565b60126020525f90815260409020546001600160a01b031681565b3480156105a6575f80fd5b506104386105b53660046115f8565b610c25565b3480156105c5575f80fd5b50610438610d9c565b3480156105d9575f80fd5b5061026d600e5481565b3480156105ee575f80fd5b506102d56105fd366004611596565b610ed3565b34801561060d575f80fd5b5061026d610ee0565b348015610621575f80fd5b5061026d600d5481565b348015610636575f80fd5b5061026d60075481565b34801561064b575f80fd5b5061026d61065a3660046115f8565b60136020525f908152604090205481565b348015610676575f80fd5b5061026d610685366004611651565b610efd565b610438610f58565b34801561069d575f80fd5b5061026d6110ea565b3480156106b1575f80fd5b5061026d600b5481565b3480156106c6575f80fd5b5061026d6106d5366004611671565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b34801561070a575f80fd5b50335f908152600f602052604090205461026d565b34801561072a575f80fd5b506104386107393660046115f8565b611170565b348015610749575f80fd5b5061026d6107583660046115f8565b600f6020525f908152604090205481565b606060038054610778906116a2565b80601f01602080910402602001604051908101604052809291908181526020018280546107a4906116a2565b80156107ef5780601f106107c6576101008083540402835291602001916107ef565b820191905f5260205f20905b8154815290600101906020018083116107d257829003601f168201915b5050505050905090565b5f336108068185856111ad565b60019150505b92915050565b5f61081f6012600a6117d1565b335f9081526013602052604090205461083a906101f46117df565b61084491906117df565b905090565b5f6006544210156108755760405162461bcd60e51b815260040161086c906117f6565b60405180910390fd5b5f600b546006546007546108899190611837565b6006546108969042611837565b6108a0919061184a565b61080c919061184a565b5f336108b78582856111bf565b6108c285858561123b565b506001949350505050565b5f806108db60065442610efd565b90505f600b54826008546009546108f29190611837565b6108fc91906117df565b610906919061184a565b9392505050565b610915611298565b60068390556007829055600b8190556005805460ff60a01b1916600160a01b17905560408051848152602081018490527f3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d910160405180910390a1505050565b61097d611298565b6109865f6112c5565b565b5f81116109e15760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b606482015260840161086c565b335f90815260208190526040902054811115610a375760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b604482015260640161086c565b610a4233308361123b565b335f908152600f602052604081208054839290610a60908490611869565b9091555050335f8181526010602052604090819020429055517fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef90610aa89084815260200190565b60405180910390a250565b600554600160a01b900460ff161515600114610b115760405162461bcd60e51b815260206004820152601760248201527f50726573616c65206e6f74207374617274656420796574000000000000000000604482015260640161086c565b5f610b1a610812565b90505f8111610b625760405162461bcd60e51b81526020600482015260146024820152734e6f207265776172647320617661696c61626c6560601b604482015260640161086c565b610b6c3382611316565b335f8181526013602052604080822091909155517ff0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d90610aa89084815260200190565b606060048054610778906116a2565b600e54335f9081526010602052604081205490918291610bde9042611837565b610be8919061184a565b600c54335f908152600f60205260409020549192506064918391610c0b916117df565b610c1591906117df565b610c1f919061184a565b91505090565b335f9081526011602052604090205460ff1615610c7a5760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481dda1a5d195b1a5cdd1959606a1b604482015260640161086c565b6001600160a01b0381163303610cca5760405162461bcd60e51b815260206004820152601560248201527421b0b73737ba103932b332b9103cb7bab939b2b63360591b604482015260640161086c565b335f908152601160205260409020805460ff191660011790556001600160a01b03811615801590610d1257506001600160a01b0381165f9081526011602052604090205460ff165b15610d6457335f90815260126020908152604080832080546001600160a01b0319166001600160a01b038616908117909155835260139091528120805460019290610d5e908490611869565b90915550505b6040516001600160a01b0382169033907f4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457905f90a350565b335f908152600f602052604090205480610dec5760405162461bcd60e51b81526020600482015260116024820152702737903a37b5b2b7399039ba30b5b2b21760791b604482015260640161086c565b600d54335f90815260106020526040902054610e089190611869565b421015610e575760405162461bcd60e51b815260206004820152601b60248201527f556e7374616b65206f6e6c792061667465722034207765656b732e0000000000604482015260640161086c565b5f610e60610bbe565b335f818152600f602090815260408083208390556010909152812055909150610e94903090610e8f8486611869565b61123b565b604080518381526020810183905233917f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336910160405180910390a25050565b5f3361080681858561123b565b600d54335f90815260106020526040812054909161084491611869565b5f82821015610f1e5760405162461bcd60e51b815260040161086c906117f6565b5f600b54600654600754610f329190611837565b610f3c8686611837565b610f46919061184a565b610f50919061184a565b949350505050565b600554600160a01b900460ff16610fa45760405162461bcd60e51b815260206004820152601060248201526f29b0b632903737ba1030b1ba34bb329760811b604482015260640161086c565b5f3411610ff35760405162461bcd60e51b815260206004820152601c60248201527f4d7573742073656e642045544820746f2062757920746f6b656e732e00000000604482015260640161086c565b5f610ffc6110ea565b90505f611009823461184a565b305f9081526020819052604090205490915081111561106a5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e00000000604482015260640161086c565b335f9081526014602052604081208054839290611088908490611869565b90915550611099905030338361123b565b80600a5f8282546110aa9190611869565b9091555050604051818152339030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6005545f90600160a01b900460ff166111455760405162461bcd60e51b815260206004820152601860248201527f5072652d73616c65206e6f742073746172746564207965740000000000000000604482015260640161086c565b600754421115611156575060095490565b5f61115f6108cd565b90505f816008546109069190611869565b611178611298565b6001600160a01b0381166111a157604051631e4fbdf760e01b81525f600482015260240161086c565b6111aa816112c5565b50565b6111ba838383600161134e565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015611235578181101561122757604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161086c565b61123584848484035f61134e565b50505050565b6001600160a01b03831661126457604051634b637e8f60e11b81525f600482015260240161086c565b6001600160a01b03821661128d5760405163ec442f0560e01b81525f600482015260240161086c565b6111ba838383611420565b6005546001600160a01b031633146109865760405163118cdaa760e01b815233600482015260240161086c565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03821661133f5760405163ec442f0560e01b81525f600482015260240161086c565b61134a5f8383611420565b5050565b6001600160a01b0384166113775760405163e602df0560e01b81525f600482015260240161086c565b6001600160a01b0383166113a057604051634a1406b160e11b81525f600482015260240161086c565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561123557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161141291815260200190565b60405180910390a350505050565b6001600160a01b03831661144a578060025f82825461143f9190611869565b909155506114ba9050565b6001600160a01b0383165f908152602081905260409020548181101561149c5760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161086c565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166114d6576002805482900390556114f4565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161153991815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114611591575f80fd5b919050565b5f80604083850312156115a7575f80fd5b6115b08361157b565b946020939093013593505050565b5f805f606084860312156115d0575f80fd5b6115d98461157b565b92506115e76020850161157b565b929592945050506040919091013590565b5f60208284031215611608575f80fd5b6109068261157b565b5f805f60608486031215611623575f80fd5b505081359360208301359350604090920135919050565b5f6020828403121561164a575f80fd5b5035919050565b5f8060408385031215611662575f80fd5b50508035926020909101359150565b5f8060408385031215611682575f80fd5b61168b8361157b565b91506116996020840161157b565b90509250929050565b600181811c908216806116b657607f821691505b6020821081036116d457634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156117295780850481111561170d5761170d6116da565b600184161561171b57908102905b60019390931c9280026116f2565b935093915050565b5f8261173f5750600161080c565b8161174b57505f61080c565b8160018114611761576002811461176b57611787565b600191505061080c565b60ff84111561177c5761177c6116da565b50506001821b61080c565b5060208310610133831016604e8410600b84101617156117aa575081810a61080c565b6117b65f1984846116ee565b805f19048211156117c9576117c96116da565b029392505050565b5f61090660ff841683611731565b808202811582820484141761080c5761080c6116da565b60208082526021908201527f456e642074696d65206d7573742062652061667465722073746172742074696d6040820152606560f81b606082015260800190565b8181038181111561080c5761080c6116da565b5f8261186457634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561080c5761080c6116da56fea2646970667358221220e120603368e2c0c0936d4851e331f4c07119a724006374f0a481d76f7602f92464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x254 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x13F JUMPI DUP1 PUSH4 0xC6A1F80A GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xD348B409 GT PUSH2 0x78 JUMPI DUP1 PUSH4 0xD348B409 EQ PUSH2 0x692 JUMPI DUP1 PUSH4 0xDC07C8A3 EQ PUSH2 0x6A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0xEBBEF6F6 EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x71F JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x73E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC6A1F80A EQ PUSH2 0x616 JUMPI DUP1 PUSH4 0xCCE29EA7 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xCEC297A0 EQ PUSH2 0x640 JUMPI DUP1 PUSH4 0xCF5F971B EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x68A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CA423B3 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x9CA423B3 EQ PUSH2 0x567 JUMPI DUP1 PUSH4 0xA09C4CF4 EQ PUSH2 0x59B JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x5BA JUMPI DUP1 PUSH4 0xA8297D46 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x5E3 JUMPI DUP1 PUSH4 0xB290D570 EQ PUSH2 0x602 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B5 JUMPI DUP1 PUSH4 0x8F0794FE EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0x967ED8F3 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x539 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27E235E3 GT PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x518AB2A8 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x639A5C87 EQ PUSH2 0x419 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x46E JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0x7C613B2F EQ PUSH2 0x4A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x375 JUMPI DUP1 PUSH4 0x30F72CD4 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0x4405DF4A EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x4F3FC2DF EQ PUSH2 0x3EF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x12065FE0 GT PUSH2 0x21C JUMPI DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0x1D3824EA EQ PUSH2 0x342 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x356 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E293A3 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x6D65AF3 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xFB4CE58 EQ PUSH2 0x2E5 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1546 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0x7F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x812 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x26D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x338 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x849 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x15BE JUMP JUMPDEST PUSH2 0x8AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x380 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x38F CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x2D5 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x8CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x424 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x433 CALLDATASIZE PUSH1 0x4 PUSH2 0x1611 JUMP JUMPDEST PUSH2 0x90D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x479 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x975 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x49C CALLDATASIZE PUSH1 0x4 PUSH2 0x163A JUMP JUMPDEST PUSH2 0x988 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0xAB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A9 PUSH2 0xBAF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0xBBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x553 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x572 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CE PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0xC25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0xD9C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D5 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1596 JUMP JUMPDEST PUSH2 0xED3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0xEE0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x64B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x65A CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x676 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x685 CALLDATASIZE PUSH1 0x4 PUSH2 0x1651 JUMP JUMPDEST PUSH2 0xEFD JUMP JUMPDEST PUSH2 0x438 PUSH2 0xF58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x69D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x10EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x6D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x70A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x26D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x438 PUSH2 0x739 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH2 0x1170 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x749 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x758 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x778 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7A4 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x806 DUP2 DUP6 DUP6 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x81F PUSH1 0x12 PUSH1 0xA PUSH2 0x17D1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x83A SWAP1 PUSH2 0x1F4 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x844 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x875 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86C SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0x889 SWAP2 SWAP1 PUSH2 0x1837 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x896 SWAP1 TIMESTAMP PUSH2 0x1837 JUMP JUMPDEST PUSH2 0x8A0 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH2 0x80C SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH0 CALLER PUSH2 0x8B7 DUP6 DUP3 DUP6 PUSH2 0x11BF JUMP JUMPDEST PUSH2 0x8C2 DUP6 DUP6 DUP6 PUSH2 0x123B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8DB PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xEFD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xB SLOAD DUP3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0x8FC SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x915 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x6 DUP4 SWAP1 SSTORE PUSH1 0x7 DUP3 SWAP1 SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x3844853BE672B18D859394AA37E05615B95B78E66B4DC37DCA98D1DB1B05EA7D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x97D PUSH2 0x1298 JUMP JUMPDEST PUSH2 0x986 PUSH0 PUSH2 0x12C5 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x9E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x86C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xA37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0xA42 CALLER ADDRESS DUP4 PUSH2 0x123B JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA60 SWAP1 DUP5 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF SWAP1 PUSH2 0xAA8 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xB11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726573616C65206E6F74207374617274656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH0 PUSH2 0xB1A PUSH2 0x812 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0xB62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F207265776172647320617661696C61626C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0xB6C CALLER DUP3 PUSH2 0x1316 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xF0BC0A70FE19EF2D8DC1E1948B338A1184184FB1EA3AC836F24065828816D68D SWAP1 PUSH2 0xAA8 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x778 SWAP1 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0xE SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH2 0xBDE SWAP1 TIMESTAMP PUSH2 0x1837 JUMP JUMPDEST PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH1 0xC SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0x64 SWAP2 DUP4 SWAP2 PUSH2 0xC0B SWAP2 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0xC15 SWAP2 SWAP1 PUSH2 0x17DF JUMP JUMPDEST PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481DDA1A5D195B1A5CDD1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0xCCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x21B0B73737BA103932B332B9103CB7BAB939B2B633 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xD12 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xD64 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x13 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xD5E SWAP1 DUP5 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER SWAP1 PUSH32 0x4BC18AA4B0095C9A3B5CDF42D2322D5A145591B04045988A995A5DA426075457 SWAP1 PUSH0 SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xDEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737903A37B5B2B7399039BA30B5B2B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0xD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE08 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xE57 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B65206F6E6C792061667465722034207765656B732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH0 PUSH2 0xE60 PUSH2 0xBBE JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE SWAP1 SWAP2 POP PUSH2 0xE94 SWAP1 ADDRESS SWAP1 PUSH2 0xE8F DUP5 DUP7 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x123B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x806 DUP2 DUP6 DUP6 PUSH2 0x123B JUMP JUMPDEST PUSH1 0xD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x844 SWAP2 PUSH2 0x1869 JUMP JUMPDEST PUSH0 DUP3 DUP3 LT ISZERO PUSH2 0xF1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86C SWAP1 PUSH2 0x17F6 JUMP JUMPDEST PUSH0 PUSH1 0xB SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0xF3C DUP7 DUP7 PUSH2 0x1837 JUMP JUMPDEST PUSH2 0xF46 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH2 0xF50 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x29B0B632903737BA1030B1BA34BB3297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xFF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E732E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH0 PUSH2 0xFFC PUSH2 0x10EA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1009 DUP3 CALLVALUE PUSH2 0x184A JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1088 SWAP1 DUP5 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1099 SWAP1 POP ADDRESS CALLER DUP4 PUSH2 0x123B JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 ADDRESS SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH0 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1145 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072652D73616C65206E6F742073746172746564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1156 JUMPI POP PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x115F PUSH2 0x8CD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH1 0x8 SLOAD PUSH2 0x906 SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST PUSH2 0x1178 PUSH2 0x1298 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0x11AA DUP2 PUSH2 0x12C5 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x11BA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x134E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x1235 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1227 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0x1235 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x134E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1264 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x128D JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0x11BA DUP4 DUP4 DUP4 PUSH2 0x1420 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH2 0x134A PUSH0 DUP4 DUP4 PUSH2 0x1420 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1377 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x13A0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1235 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1412 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x144A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x143F SWAP2 SWAP1 PUSH2 0x1869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x14BA SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x149C JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x86C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x14D6 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1539 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1591 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15B0 DUP4 PUSH2 0x157B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15D9 DUP5 PUSH2 0x157B JUMP JUMPDEST SWAP3 POP PUSH2 0x15E7 PUSH1 0x20 DUP6 ADD PUSH2 0x157B JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1608 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x906 DUP3 PUSH2 0x157B JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1623 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x164A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1662 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1682 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x168B DUP4 PUSH2 0x157B JUMP JUMPDEST SWAP2 POP PUSH2 0x1699 PUSH1 0x20 DUP5 ADD PUSH2 0x157B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x16B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x1729 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x170D JUMPI PUSH2 0x170D PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x171B JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x16F2 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x173F JUMPI POP PUSH1 0x1 PUSH2 0x80C JUMP JUMPDEST DUP2 PUSH2 0x174B JUMPI POP PUSH0 PUSH2 0x80C JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1761 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x176B JUMPI PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x80C JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x177C JUMPI PUSH2 0x177C PUSH2 0x16DA JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x80C JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x17AA JUMPI POP DUP2 DUP2 EXP PUSH2 0x80C JUMP JUMPDEST PUSH2 0x17B6 PUSH0 NOT DUP5 DUP5 PUSH2 0x16EE JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x17C9 JUMPI PUSH2 0x17C9 PUSH2 0x16DA JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x906 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1731 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x80C JUMPI PUSH2 0x80C PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x456E642074696D65206D7573742062652061667465722073746172742074696D PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80C PUSH2 0x16DA JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1864 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x80C JUMPI PUSH2 0x80C PUSH2 0x16DA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 KECCAK256 PUSH1 0x33 PUSH9 0xE2C0C0936D4851E331 DELEGATECALL 0xC0 PUSH18 0x19A724006374F0A481D76F7602F92464736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "174:7082:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:31;;;;;;;;;;;;;;;;;;;160:25:7;;;148:2;133:18;363:31:6;;;;;;;;255;;;;;;;;;;;;;;;;1779:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3998:186::-;;;;;;;;;;-1:-1:-1;3998:186:2;;;;;:::i;:::-;;:::i;:::-;;;1267:14:7;;1260:22;1242:41;;1230:2;1215:18;3998:186:2;1102:187:7;2529:144:6;;;;;;;;;;;;;:::i;5633:100::-;;;;;;;;;;-1:-1:-1;5712:10:6;5676:7;3095:18:2;;;;;;;;;;;5633:100:6;2529:144;2849:97:2;;;;;;;;;;-1:-1:-1;2927:12:2;;2849:97;;329:27:6;;;;;;;;;;;;;;;;3898:312;;;;;;;;;;;;;:::i;4776:244:2:-;;;;;;;;;;-1:-1:-1;4776:244:2;;;;;:::i;:::-;;:::i;865:43:6:-;;;;;;;;;;-1:-1:-1;865:43:6;;;;;:::i;:::-;;;;;;;;;;;;;;221:27;;;;;;;;;;-1:-1:-1;221:27:6;;;;-1:-1:-1;;;221:27:6;;;;;;2707:82:2;;;;;;;;;;-1:-1:-1;2707:82:2;;2780:2;2006:36:7;;1994:2;1979:18;2707:82:2;1864:184:7;4216:291:6;;;;;;;;;;;;;:::i;473:32::-;;;;;;;;;;;;;;;;407:25;;;;;;;;;;;;;;;;3148:404;;;;;;;;;;-1:-1:-1;3148:404:6;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;-1:-1:-1;3004:116:2;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:2;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;;;;;;;;;;;:::i;5741:404:6:-;;;;;;;;;;-1:-1:-1;5741:404:6;;;;;:::i;:::-;;:::i;2681:406::-;;;;;;;;;;;;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2919:32:7;;;2901:51;;2889:2;2874:18;1638:85:0;2755:203:7;652:51:6;;;;;;;;;;-1:-1:-1;652:51:6;;;;;:::i;:::-;;;;;;;;;;;;;;1981:93:2;;;;;;;;;;;;;:::i;6693:266:6:-;;;;;;;;;;;;;:::i;710:41::-;;;;;;;;;;-1:-1:-1;710:41:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;758:44;;;;;;;;;;-1:-1:-1;758:44:6;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;758:44:6;;;2036:481;;;;;;;;;;-1:-1:-1;2036:481:6;;;;;:::i;:::-;;:::i;6153:532::-;;;;;;;;;;;;;:::i;552:37::-;;;;;;;;;;;;;;;;3315:178:2;;;;;;;;;;-1:-1:-1;3315:178:2;;;;;:::i;:::-;;:::i;7101:152:6:-;;;;;;;;;;;;;:::i;512:33::-;;;;;;;;;;;;;;;;293:29;;;;;;;;;;;;;;;;809:49;;;;;;;;;;-1:-1:-1;809:49:6;;;;;:::i;:::-;;;;;;;;;;;;;;3559:333;;;;;;;;;;-1:-1:-1;3559:333:6;;;;;:::i;:::-;;:::i;4986:637::-;;;:::i;4523:376::-;;;;;;;;;;;;;:::i;439:27::-;;;;;;;;;;;;;;;;3551:140:2;;;;;;;;;;-1:-1:-1;3551:140:2;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:2;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;6967:126:6;;;;;;;;;;-1:-1:-1;7074:10:6;7016:7;7061:24;;;:12;:24;;;;;;6967:126;;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;598:47:6:-;;;;;;;;;;-1:-1:-1;598:47:6;;;;;:::i;:::-;;;;;;;;;;;;;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:5;4125:31:2;735:10:5;4141:7:2;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;2529:144:6:-;2585:7;2649:16;2780:2:2;2649::6;:16;:::i;:::-;2629:10;2614:26;;;;:14;:26;;;;;;:32;;2643:3;2614:32;:::i;:::-;:51;;;;:::i;:::-;2607:58;;2529:144;:::o;3898:312::-;3945:7;3991:16;;3972:15;:35;;3964:81;;;;-1:-1:-1;;;3964:81:6;;;;;;;:::i;:::-;;;;;;;;;4060:20;4156:12;;4138:16;;4123:14;;:31;;;;:::i;:::-;4102:16;;4084:34;;:15;:34;:::i;:::-;4083:72;;;;:::i;:::-;:85;;;;:::i;4776:244:2:-;4863:4;735:10:5;4919:37:2;4935:4;735:10:5;4950:5:2;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:2;;4776:244;-1:-1:-1;;;;4776:244:2:o;4216:291:6:-;4271:7;4290:20;4312:56;4334:16;;4352:15;4312:21;:56::i;:::-;4290:78;;4379:21;4456:12;;4440;4424;;4405:16;;:31;;;;:::i;:::-;4404:48;;;;:::i;:::-;4403:65;;;;:::i;:::-;4379:89;4216:291;-1:-1:-1;;;4216:291:6:o;3148:404::-;1531:13:0;:11;:13::i;:::-;3341:16:6::1;:29:::0;;;3381:14:::1;:25:::0;;;3417:12:::1;:20:::0;;;3458:15:::1;:22:::0;;-1:-1:-1;;;;3458:22:6::1;-1:-1:-1::0;;;3458:22:6::1;::::0;;3496:48:::1;::::0;;6632:25:7;;;6688:2;6673:18;;6666:34;;;3496:48:6::1;::::0;6605:18:7;3496:48:6::1;;;;;;;3148:404:::0;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;5741:404:6:-;5815:1;5806:6;:10;5798:56;;;;-1:-1:-1;;;5798:56:6;;6913:2:7;5798:56:6;;;6895:21:7;6952:2;6932:18;;;6925:30;6991:34;6971:18;;;6964:62;-1:-1:-1;;;7042:18:7;;;7035:31;7083:19;;5798:56:6;6711:397:7;5798:56:6;5883:10;3069:7:2;3095:18;;;;;;;;;;;5898:6:6;-1:-1:-1;5873:31:6;5865:65;;;;-1:-1:-1;;;5865:65:6;;7315:2:7;5865:65:6;;;7297:21:7;7354:2;7334:18;;;7327:30;-1:-1:-1;;;7373:18:7;;;7366:51;7434:18;;5865:65:6;7113:345:7;5865:65:6;5943:44;5953:10;5973:4;5980:6;5943:9;:44::i;:::-;6011:10;5998:24;;;;:12;:24;;;;;:34;;6026:6;;5998:24;:34;;6026:6;;5998:34;:::i;:::-;;;;-1:-1:-1;;6060:10:6;6043:28;;;;:16;:28;;;;;;;6074:15;6043:46;;6105:32;;;;;6130:6;160:25:7;;148:2;133:18;;14:177;6105:32:6;;;;;;;;5741:404;:::o;2681:406::-;2743:15;;-1:-1:-1;;;2743:15:6;;;;:21;;2760:4;2743:21;2735:56;;;;-1:-1:-1;;;2735:56:6;;7795:2:7;2735:56:6;;;7777:21:7;7834:2;7814:18;;;7807:30;7873:25;7853:18;;;7846:53;7916:18;;2735:56:6;7593:347:7;2735:56:6;2806:20;2829:25;:23;:25::i;:::-;2806:48;;2892:1;2877:12;:16;2869:49;;;;-1:-1:-1;;;2869:49:6;;8147:2:7;2869:49:6;;;8129:21:7;8186:2;8166:18;;;8159:30;-1:-1:-1;;;8205:18:7;;;8198:50;8265:18;;2869:49:6;7945:344:7;2869:49:6;2933:31;2939:10;2951:12;2933:5;:31::i;:::-;2994:10;3008:1;2979:26;;;:14;:26;;;;;;:30;;;;3029:46;;;;;3062:12;160:25:7;;148:2;133:18;;14:177;1981:93:2;2028:13;2060:7;2053:14;;;;;:::i;6693:266:6:-;6843:22;;6828:10;6748:7;6811:28;;;:16;:28;;;;;;6748:7;;;;6793:46;;:15;:46;:::i;:::-;6792:73;;;;:::i;:::-;6911:17;;6897:10;6884:24;;;;:12;:24;;;;;;6768:97;;-1:-1:-1;6948:3:6;;6768:97;;6884:44;;;:::i;:::-;:60;;;;:::i;:::-;6883:68;;;;:::i;:::-;6876:75;;;6693:266;:::o;2036:481::-;2121:10;2111:21;;;;:9;:21;;;;;;;;2110:22;2102:54;;;;-1:-1:-1;;;2102:54:6;;8496:2:7;2102:54:6;;;8478:21:7;8535:2;8515:18;;;8508:30;-1:-1:-1;;;8554:18:7;;;8547:49;8613:18;;2102:54:6;8294:343:7;2102:54:6;-1:-1:-1;;;;;2175:22:6;;:10;:22;2167:56;;;;-1:-1:-1;;;2167:56:6;;8844:2:7;2167:56:6;;;8826:21:7;8883:2;8863:18;;;8856:30;-1:-1:-1;;;8902:18:7;;;8895:51;8963:18;;2167:56:6;8642:345:7;2167:56:6;2254:10;2244:21;;;;:9;:21;;;;;:28;;-1:-1:-1;;2244:28:6;2268:4;2244:28;;;-1:-1:-1;;;;;2297:22:6;;;;;;:45;;-1:-1:-1;;;;;;2323:19:6;;;;;;:9;:19;;;;;;;;2297:45;2293:154;;;2369:10;2359:21;;;;:9;:21;;;;;;;;:32;;-1:-1:-1;;;;;;2359:32:6;-1:-1:-1;;;;;2359:32:6;;;;;;;;2406:24;;:14;:24;;;;;:29;;-1:-1:-1;;2359:21:6;2406:29;;-1:-1:-1;;2406:29:6;:::i;:::-;;;;-1:-1:-1;;2293:154:6;2472:37;;-1:-1:-1;;;;;2472:37:6;;;2488:10;;2472:37;;;;;2036:481;:::o;6153:532::-;6228:10;6198:14;6215:24;;;:12;:24;;;;;;6258:10;6250:40;;;;-1:-1:-1;;;6250:40:6;;9194:2:7;6250:40:6;;;9176:21:7;9233:2;9213:18;;;9206:30;-1:-1:-1;;;9252:18:7;;;9245:47;9309:18;;6250:40:6;8992:341:7;6250:40:6;6359:18;;6345:10;6328:28;;;;:16;:28;;;;;;:49;;6359:18;6328:49;:::i;:::-;6309:15;:68;;6301:108;;;;-1:-1:-1;;;6301:108:6;;9540:2:7;6301:108:6;;;9522:21:7;9579:2;9559:18;;;9552:30;9618:29;9598:18;;;9591:57;9665:18;;6301:108:6;9338:351:7;6301:108:6;6430:14;6447:24;:22;:24::i;:::-;6495:10;6509:1;6482:24;;;:12;:24;;;;;;;;:28;;;6521:16;:28;;;;;:32;6430:41;;-1:-1:-1;6566:53:6;;6584:4;;6603:15;6430:41;6603:6;:15;:::i;:::-;6566:9;:53::i;:::-;6635:42;;;6632:25:7;;;6688:2;6673:18;;6666:34;;;6650:10:6;;6635:42;;6605:18:7;6635:42:6;;;;;;;6187:498;;6153:532::o;3315:178:2:-;3384:4;735:10:5;3438:27:2;735:10:5;3455:2:2;3459:5;3438:9;:27::i;7101:152:6:-;7227:18;;7213:10;7151:7;7196:28;;;:16;:28;;;;;;7151:7;;7196:49;;;:::i;3559:333::-;3647:7;3690:9;3679:7;:20;;3671:66;;;;-1:-1:-1;;;3671:66:6;;;;;;;:::i;:::-;3752:20;3833:12;;3815:16;;3800:14;;:31;;;;:::i;:::-;3776:19;3786:9;3776:7;:19;:::i;:::-;3775:57;;;;:::i;:::-;:70;;;;:::i;:::-;3752:93;3559:333;-1:-1:-1;;;;3559:333:6:o;4986:637::-;5043:15;;-1:-1:-1;;;5043:15:6;;;;5035:44;;;;-1:-1:-1;;;5035:44:6;;9896:2:7;5035:44:6;;;9878:21:7;9935:2;9915:18;;;9908:30;-1:-1:-1;;;9954:18:7;;;9947:46;10010:18;;5035:44:6;9694:340:7;5035:44:6;5110:1;5098:9;:13;5090:54;;;;-1:-1:-1;;;5090:54:6;;10241:2:7;5090:54:6;;;10223:21:7;10280:2;10260:18;;;10253:30;10319;10299:18;;;10292:58;10367:18;;5090:54:6;10039:352:7;5090:54:6;5157:20;5180:16;:14;:16::i;:::-;5157:39;-1:-1:-1;5245:19:6;5267:26;5157:39;5268:9;5267:26;:::i;:::-;5330:4;3069:7:2;3095:18;;;;;;;;;;;5245:48:6;;-1:-1:-1;5245:48:6;-1:-1:-1;5312:39:6;5304:80;;;;-1:-1:-1;;;5304:80:6;;10598:2:7;5304:80:6;;;10580:21:7;10637:2;10617:18;;;10610:30;10676;10656:18;;;10649:58;10724:18;;5304:80:6;10396:352:7;5304:80:6;5404:10;5395:20;;;;:8;:20;;;;;:35;;5419:11;;5395:20;:35;;5419:11;;5395:35;:::i;:::-;;;;-1:-1:-1;5441:49:6;;-1:-1:-1;5459:4:6;5466:10;5478:11;5441:9;:49::i;:::-;5515:11;5501:10;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;5544:48:6;;160:25:7;;;5568:10:6;;5561:4;;5544:48;;148:2:7;133:18;5544:48:6;;;;;;;5024:599;;4986:637::o;4523:376::-;4598:15;;4570:7;;-1:-1:-1;;;4598:15:6;;;;4590:51;;;;-1:-1:-1;;;4590:51:6;;10955:2:7;4590:51:6;;;10937:21:7;10994:2;10974:18;;;10967:30;11033:26;11013:18;;;11006:54;11077:18;;4590:51:6;10753:348:7;4590:51:6;4675:14;;4657:15;:32;4652:89;;;-1:-1:-1;4713:16:6;;;4523:376::o;4652:89::-;4753:21;4777:24;:22;:24::i;:::-;4753:48;;4812:20;4848:13;4835:12;;:26;;;;:::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2901:51:7::0;2874:18;;2672:31:0::1;2755:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:2;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:2;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:2;;-1:-1:-1;;;;;11326:32:7;;10687:60:2;;;11308:51:7;11375:18;;;11368:34;;;11418:18;;;11411:34;;;11281:18;;10687:60:2;11106:345:7;10632:130:2;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:2;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:2;;5544:1;5517:30;;;2901:51:7;2874:18;;5517:30:2;2755:203:7;5472:86:2;-1:-1:-1;;;;;5571:16:2;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:2;;5639:1;5610:32;;;2901:51:7;2874:18;;5610:32:2;2755:203:7;5567:86:2;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2901:51:7;2874:18;;1901:40:0;2755:203:7;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:2:-;-1:-1:-1;;;;;7528:21:2;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:2;;7601:1;7572:32;;;2901:51:7;2874:18;;7572:32:2;2755:203:7;7524:91:2;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;-1:-1:-1;;;;;9813:19:2;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:2;;9884:1;9855:32;;;2901:51:7;2874:18;;9855:32:2;2755:203:7;9809:89:2;-1:-1:-1;;;;;9911:21:2;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:2;;9983:1;9955:31;;;2901:51:7;2874:18;;9955:31:2;2755:203:7;9907:90:2;-1:-1:-1;;;;;10006:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:2;10094:5;-1:-1:-1;;;;;10085:31:2;;10110:5;10085:31;;;;160:25:7;;148:2;133:18;;14:177;10085:31:2;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;11326:32:7;;6386:50:2;;;11308:51:7;11375:18;;;11368:34;;;11418:18;;;11411:34;;;11281:18;;6386:50:2;11106:345:7;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;160::7;;148:2;133:18;;14:177;7083:25:2;;;;;;;;6008:1107;;;:::o;196:418:7:-;345:2;334:9;327:21;308:4;377:6;371:13;420:6;415:2;404:9;400:18;393:34;479:6;474:2;466:6;462:15;457:2;446:9;442:18;436:50;535:1;530:2;521:6;510:9;506:22;502:31;495:42;605:2;598;594:7;589:2;581:6;577:15;573:29;562:9;558:45;554:54;546:62;;;196:418;;;;:::o;619:173::-;687:20;;-1:-1:-1;;;;;736:31:7;;726:42;;716:70;;782:1;779;772:12;716:70;619:173;;;:::o;797:300::-;865:6;873;926:2;914:9;905:7;901:23;897:32;894:52;;;942:1;939;932:12;894:52;965:29;984:9;965:29;:::i;:::-;955:39;1063:2;1048:18;;;;1035:32;;-1:-1:-1;;;797:300:7:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:7;1619:18;;;;1606:32;;1294:374::o;1673:186::-;1732:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:52;;;1801:1;1798;1791:12;1753:52;1824:29;1843:9;1824:29;:::i;2053:466::-;2130:6;2138;2146;2199:2;2187:9;2178:7;2174:23;2170:32;2167:52;;;2215:1;2212;2205:12;2167:52;-1:-1:-1;;2260:23:7;;;2380:2;2365:18;;2352:32;;-1:-1:-1;2483:2:7;2468:18;;;2455:32;;2053:466;-1:-1:-1;2053:466:7:o;2524:226::-;2583:6;2636:2;2624:9;2615:7;2611:23;2607:32;2604:52;;;2652:1;2649;2642:12;2604:52;-1:-1:-1;2697:23:7;;2524:226;-1:-1:-1;2524:226:7:o;2963:346::-;3031:6;3039;3092:2;3080:9;3071:7;3067:23;3063:32;3060:52;;;3108:1;3105;3098:12;3060:52;-1:-1:-1;;3153:23:7;;;3273:2;3258:18;;;3245:32;;-1:-1:-1;2963:346:7:o;3314:260::-;3382:6;3390;3443:2;3431:9;3422:7;3418:23;3414:32;3411:52;;;3459:1;3456;3449:12;3411:52;3482:29;3501:9;3482:29;:::i;:::-;3472:39;;3530:38;3564:2;3553:9;3549:18;3530:38;:::i;:::-;3520:48;;3314:260;;;;;:::o;3579:380::-;3658:1;3654:12;;;;3701;;;3722:61;;3776:4;3768:6;3764:17;3754:27;;3722:61;3829:2;3821:6;3818:14;3798:18;3795:38;3792:161;;3875:10;3870:3;3866:20;3863:1;3856:31;3910:4;3907:1;3900:15;3938:4;3935:1;3928:15;3792:161;;3579:380;;;:::o;3964:127::-;4025:10;4020:3;4016:20;4013:1;4006:31;4056:4;4053:1;4046:15;4080:4;4077:1;4070:15;4096:375;4184:1;4202:5;4216:249;4237:1;4227:8;4224:15;4216:249;;;4287:4;4282:3;4278:14;4272:4;4269:24;4266:50;;;4296:18;;:::i;:::-;4346:1;4336:8;4332:16;4329:49;;;4360:16;;;;4329:49;4443:1;4439:16;;;;;4399:15;;4216:249;;;4096:375;;;;;;:::o;4476:902::-;4525:5;4555:8;4545:80;;-1:-1:-1;4596:1:7;4610:5;;4545:80;4644:4;4634:76;;-1:-1:-1;4681:1:7;4695:5;;4634:76;4726:4;4744:1;4739:59;;;;4812:1;4807:174;;;;4719:262;;4739:59;4769:1;4760:10;;4783:5;;;4807:174;4844:3;4834:8;4831:17;4828:43;;;4851:18;;:::i;:::-;-1:-1:-1;;4907:1:7;4893:16;;4966:5;;4719:262;;5065:2;5055:8;5052:16;5046:3;5040:4;5037:13;5033:36;5027:2;5017:8;5014:16;5009:2;5003:4;5000:12;4996:35;4993:77;4990:203;;;-1:-1:-1;5102:19:7;;;5178:5;;4990:203;5225:42;-1:-1:-1;;5250:8:7;5244:4;5225:42;:::i;:::-;5303:6;5299:1;5295:6;5291:19;5282:7;5279:32;5276:58;;;5314:18;;:::i;:::-;5352:20;;4476:902;-1:-1:-1;;;4476:902:7:o;5383:140::-;5441:5;5470:47;5511:4;5501:8;5497:19;5491:4;5470:47;:::i;5528:168::-;5601:9;;;5632;;5649:15;;;5643:22;;5629:37;5619:71;;5670:18;;:::i;5701:397::-;5903:2;5885:21;;;5942:2;5922:18;;;5915:30;5981:34;5976:2;5961:18;;5954:62;-1:-1:-1;;;6047:2:7;6032:18;;6025:31;6088:3;6073:19;;5701:397::o;6103:128::-;6170:9;;;6191:11;;;6188:37;;;6205:18;;:::i;6236:217::-;6276:1;6302;6292:132;;6346:10;6341:3;6337:20;6334:1;6327:31;6381:4;6378:1;6371:15;6409:4;6406:1;6399:15;6292:132;-1:-1:-1;6438:9:7;;6236:217::o;7463:125::-;7528:9;;;7549:10;;;7546:36;;;7562:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1264400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24825",
								"balanceOf(address)": "2615",
								"balances(address)": "2551",
								"buyTokens()": "infinite",
								"calculatePrice()": "infinite",
								"calculatePriceIncrease()": "infinite",
								"calculateReferralReward()": "infinite",
								"calculateStakingReward()": "infinite",
								"calculateStepsElapsed(uint256,uint256)": "infinite",
								"decimals()": "266",
								"getBalance()": "2396",
								"getCurrentStep()": "infinite",
								"getStackedTokens()": "2457",
								"getStackingPeriod()": "4703",
								"initialPrice()": "2373",
								"minUnstakingPeriod()": "2328",
								"mintReferralReward()": "infinite",
								"name()": "infinite",
								"owner()": "2365",
								"preSaleEndTime()": "2350",
								"preSaleStartTime()": "2352",
								"preSaleSteps()": "2349",
								"presaleIsActive()": "2394",
								"referralCounts(address)": "2594",
								"referrals(address)": "2600",
								"regularSalePrice()": "2330",
								"renounceOwnership()": "infinite",
								"signUpForWhitelist(address)": "79402",
								"stakeTokens(uint256)": "101375",
								"stakedAmount(address)": "2659",
								"stakingRewardFrequency()": "2394",
								"stakingRewardRate()": "2417",
								"stakingTimestamp(address)": "2573",
								"startPreSale(uint256,uint256,uint256)": "94398",
								"symbol()": "infinite",
								"tokensSold()": "2328",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51349",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28465",
								"unstakeTokens()": "infinite",
								"whitelist(address)": "2662"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 7256,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1416,
									"end": 2019,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1416,
									"end": 2019,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1678,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2730BA3AB932AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "272A29"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3778,
									"end": 3829,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3751,
									"end": 3769,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3751,
									"end": 3769,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1697,
									"end": 1731,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1711,
									"end": 1715,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1718,
									"end": 1729,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 1697,
									"end": 1702,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1697,
									"end": 1731,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1697,
									"end": 1731,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1697,
									"end": 1731,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1742,
									"end": 1754,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1742,
									"end": 1770,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1742,
									"end": 1770,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1742,
									"end": 1770,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 1742,
									"end": 1770,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1797,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1781,
									"end": 1817,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1817,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1817,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1781,
									"end": 1817,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1828,
									"end": 1845,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1877,
									"end": 1892,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1877,
									"end": 1900,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1877,
									"end": 1900,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1877,
									"end": 1900,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1877,
									"end": 1900,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1877,
									"end": 1900,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1911,
									"end": 1929,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 1911,
									"end": 1952,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1963,
									"end": 1985,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "E"
								},
								{
									"begin": 1963,
									"end": 2011,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3778,
									"end": 3829,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3751,
									"end": 3769,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3751,
									"end": 3769,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 3632,
									"end": 3835,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4287,
									"end": 4319,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4287,
									"end": 4319,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4269,
									"end": 4320,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4336,
									"end": 4354,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4336,
									"end": 4354,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4336,
									"end": 4354,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4329,
									"end": 4363,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4329,
									"end": 4363,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4329,
									"end": 4363,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4379,
									"end": 4397,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4379,
									"end": 4397,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4379,
									"end": 4397,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4406,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4406,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4372,
									"end": 4406,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4242,
									"end": 4260,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4242,
									"end": 4260,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 4067,
									"end": 4412,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4563,
									"end": 4588,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4563,
									"end": 4588,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4551,
									"end": 4553,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4536,
									"end": 4554,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4536,
									"end": 4554,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4594,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 986,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 138,
									"end": 144,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 152,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 154,
									"end": 160,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 168,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 170,
									"end": 176,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 184,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 186,
									"end": 192,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 242,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 227,
									"end": 236,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 218,
									"end": 225,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 214,
									"end": 237,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 210,
									"end": 243,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 207,
									"end": 260,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 207,
									"end": 260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 207,
									"end": 260,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 256,
									"end": 257,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 254,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 246,
									"end": 258,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 207,
									"end": 260,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 207,
									"end": 260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 282,
									"end": 298,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 282,
									"end": 298,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 327,
									"end": 358,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 327,
									"end": 358,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 317,
									"end": 359,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 317,
									"end": 359,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 307,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 307,
									"end": 377,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 373,
									"end": 374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 371,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 363,
									"end": 375,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 307,
									"end": 377,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 307,
									"end": 377,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 467,
									"end": 469,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 470,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 452,
									"end": 470,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 446,
									"end": 471,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 563,
									"end": 565,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 548,
									"end": 566,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 548,
									"end": 566,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 542,
									"end": 567,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 659,
									"end": 661,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 644,
									"end": 662,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 644,
									"end": 662,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 638,
									"end": 663,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 755,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 740,
									"end": 759,
									"name": "DUP13",
									"source": 7
								},
								{
									"begin": 740,
									"end": 759,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 734,
									"end": 760,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 852,
									"end": 855,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 837,
									"end": 856,
									"name": "DUP14",
									"source": 7
								},
								{
									"begin": 837,
									"end": 856,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 831,
									"end": 857,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 949,
									"end": 952,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 934,
									"end": 953,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 934,
									"end": 953,
									"name": "SWAP14",
									"source": 7
								},
								{
									"begin": 934,
									"end": 953,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 928,
									"end": 954,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 396,
									"end": 401,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 396,
									"end": 401,
									"name": "SWAP15",
									"source": 7
								},
								{
									"begin": 446,
									"end": 471,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 446,
									"end": 471,
									"name": "SWAP14",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 542,
									"end": 567,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 542,
									"end": 567,
									"name": "SWAP12",
									"source": 7
								},
								{
									"begin": 638,
									"end": 663,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 638,
									"end": 663,
									"name": "SWAP11",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 734,
									"end": 760,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 734,
									"end": 760,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 831,
									"end": 857,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 928,
									"end": 954,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 928,
									"end": 954,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 986,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1118,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 991,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1052,
									"end": 1062,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1047,
									"end": 1050,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1043,
									"end": 1063,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1033,
									"end": 1064,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1083,
									"end": 1087,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1080,
									"end": 1081,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1073,
									"end": 1088,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1107,
									"end": 1111,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1104,
									"end": 1105,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1097,
									"end": 1112,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1123,
									"end": 1503,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1123,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1203,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1198,
									"end": 1210,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1257,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1257,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1245,
									"end": 1257,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1320,
									"end": 1324,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1312,
									"end": 1318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1308,
									"end": 1325,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1298,
									"end": 1325,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1298,
									"end": 1325,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1266,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1375,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1365,
									"end": 1371,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1362,
									"end": 1376,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1342,
									"end": 1360,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1339,
									"end": 1377,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1336,
									"end": 1497,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1419,
									"end": 1429,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1414,
									"end": 1417,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1410,
									"end": 1430,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1408,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1400,
									"end": 1431,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1454,
									"end": 1458,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1451,
									"end": 1452,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1444,
									"end": 1459,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1486,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1479,
									"end": 1480,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1472,
									"end": 1487,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1497,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1336,
									"end": 1497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1336,
									"end": 1497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1123,
									"end": 1503,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1123,
									"end": 1503,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1123,
									"end": 1503,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1123,
									"end": 1503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1634,
									"end": 2152,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1634,
									"end": 2152,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1736,
									"end": 1738,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1731,
									"end": 1734,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1728,
									"end": 1739,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 2146,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 2146,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1725,
									"end": 2146,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1772,
									"end": 1777,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1769,
									"end": 1770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1762,
									"end": 1778,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1820,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1813,
									"end": 1814,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1803,
									"end": 1821,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1874,
									"end": 1884,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1870,
									"end": 1889,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1867,
									"end": 1868,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1863,
									"end": 1890,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1857,
									"end": 1861,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1891,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1922,
									"end": 1926,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1910,
									"end": 1920,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1907,
									"end": 1927,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1904,
									"end": 1951,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1904,
									"end": 1951,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1904,
									"end": 1951,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1945,
									"end": 1949,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1904,
									"end": 1951,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 1904,
									"end": 1951,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2000,
									"end": 2002,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1995,
									"end": 1998,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1991,
									"end": 2003,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1988,
									"end": 1989,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1984,
									"end": 2004,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1978,
									"end": 1982,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1974,
									"end": 2005,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2005,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1964,
									"end": 2005,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2136,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2055,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2073,
									"end": 2075,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2066,
									"end": 2071,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2063,
									"end": 2076,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2136,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2055,
									"end": 2136,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2132,
									"end": 2133,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2118,
									"end": 2134,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2118,
									"end": 2134,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2099,
									"end": 2100,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2088,
									"end": 2101,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2136,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2055,
									"end": 2136,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2055,
									"end": 2136,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2055,
									"end": 2136,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2059,
									"end": 2062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 2146,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 1725,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1634,
									"end": 2152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1634,
									"end": 2152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1634,
									"end": 2152,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1634,
									"end": 2152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2328,
									"end": 3627,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2328,
									"end": 3627,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2448,
									"end": 2458,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2448,
									"end": 2458,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2470,
									"end": 2500,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2500,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2467,
									"end": 2523,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2467,
									"end": 2523,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2467,
									"end": 2523,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2503,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2503,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2503,
									"end": 2521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2503,
									"end": 2521,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 2503,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2532,
									"end": 2629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2622,
									"end": 2628,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2582,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2614,
									"end": 2618,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2608,
									"end": 2619,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2582,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2582,
									"end": 2620,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2582,
									"end": 2620,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2582,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2576,
									"end": 2580,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2532,
									"end": 2629,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 2532,
									"end": 2629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2532,
									"end": 2629,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 2532,
									"end": 2629,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2678,
									"end": 2682,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2709,
									"end": 2711,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2698,
									"end": 2712,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2698,
									"end": 2712,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2726,
									"end": 2727,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2721,
									"end": 3370,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2721,
									"end": 3370,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2721,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2721,
									"end": 3370,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3414,
									"end": 3415,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3431,
									"end": 3437,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3428,
									"end": 3517,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3428,
									"end": 3517,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3428,
									"end": 3517,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3483,
									"end": 3502,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3502,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3483,
									"end": 3502,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3477,
									"end": 3503,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3428,
									"end": 3517,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 3428,
									"end": 3517,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2285,
									"end": 2286,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2281,
									"end": 2292,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2281,
									"end": 2292,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2281,
									"end": 2292,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2277,
									"end": 2301,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2273,
									"end": 2302,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2303,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2309,
									"end": 2310,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2305,
									"end": 2316,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2316,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2305,
									"end": 2316,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2260,
									"end": 2317,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3530,
									"end": 3611,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3530,
									"end": 3611,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2691,
									"end": 3621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2691,
									"end": 3621,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2721,
									"end": 3370,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 2721,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1581,
									"end": 1582,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1574,
									"end": 1588,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1588,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1574,
									"end": 1588,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1618,
									"end": 1622,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1605,
									"end": 1623,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1623,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2757,
									"end": 2777,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2757,
									"end": 2777,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2757,
									"end": 2777,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2875,
									"end": 3097,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2875,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2889,
									"end": 2896,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2886,
									"end": 2887,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2883,
									"end": 2897,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2875,
									"end": 3097,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2875,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2875,
									"end": 3097,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2971,
									"end": 2990,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2971,
									"end": 2990,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2971,
									"end": 2990,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2965,
									"end": 2991,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2950,
									"end": 2992,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2950,
									"end": 2992,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3078,
									"end": 3082,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3063,
									"end": 3083,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3083,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3083,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3083,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 3031,
									"end": 3032,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2905,
									"end": 2917,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2875,
									"end": 3097,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 2875,
									"end": 3097,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2875,
									"end": 3097,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2875,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2879,
									"end": 2882,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3125,
									"end": 3131,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3116,
									"end": 3123,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3113,
									"end": 3132,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3311,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3110,
									"end": 3311,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3186,
									"end": 3205,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3186,
									"end": 3205,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3186,
									"end": 3205,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3180,
									"end": 3206,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3269,
									"end": 3270,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3265,
									"end": 3279,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3265,
									"end": 3279,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3265,
									"end": 3279,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3281,
									"end": 3284,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3261,
									"end": 3285,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3257,
									"end": 3294,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3253,
									"end": 3295,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3238,
									"end": 3296,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3297,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3297,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3110,
									"end": 3311,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 3110,
									"end": 3311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3341,
									"end": 3355,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3341,
									"end": 3355,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3341,
									"end": 3355,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3337,
									"end": 3359,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3324,
									"end": 3360,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3324,
									"end": 3360,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2328,
									"end": 3627,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 4062,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 3840,
									"end": 4062,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3914,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3914,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3905,
									"end": 3914,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3926,
									"end": 3936,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3926,
									"end": 3936,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3926,
									"end": 3936,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3923,
									"end": 4056,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3923,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3923,
									"end": 4056,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 3988,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3973,
									"end": 3976,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3969,
									"end": 3989,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3966,
									"end": 3967,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3959,
									"end": 3990,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4013,
									"end": 4017,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 4010,
									"end": 4011,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 4003,
									"end": 4018,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4041,
									"end": 4045,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 4038,
									"end": 4039,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4031,
									"end": 4046,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3923,
									"end": 4056,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3923,
									"end": 4056,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 4062,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 4062,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 4062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 4062,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3840,
									"end": 4062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4417,
									"end": 4594,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 4417,
									"end": 4594,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 7256,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e120603368e2c0c0936d4851e331f4c07119a724006374f0a481d76f7602f92464736f6c634300081a0033",
									".code": [
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "C6A1F80A"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "D348B409"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "D348B409"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "DC07C8A3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "EBBEF6F6"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "F9931855"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "C6A1F80A"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "CCE29EA7"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "CEC297A0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "CF5F971B"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "D0FEBE4C"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "9CA423B3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "9CA423B3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "A09C4CF4"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "A5CE413B"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "A8297D46"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "B290D570"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "8F0794FE"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "967ED8F3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "9B19251A"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "27E235E3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "518AB2A8"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "518AB2A8"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "639A5C87"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "7547C7A3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "7C613B2F"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "27E235E3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "30F72CD4"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "4405DF4A"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "4F3FC2DF"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "12065FE0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "12065FE0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "1D0806AE"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "1D3824EA"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "3E293A3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "6D65AF3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "FB4CE58"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 7256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1281,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1102,
											"end": 1289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2529,
											"end": 2673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5712,
											"end": 5722,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5633,
											"end": 5733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3898,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 865,
											"end": 908,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 865,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 908,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1864,
											"end": 2048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4216,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 473,
											"end": 505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 473,
											"end": 505,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 473,
											"end": 505,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 473,
											"end": 505,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 473,
											"end": 505,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 473,
											"end": 505,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 473,
											"end": 505,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 407,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 407,
											"end": 432,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 432,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 407,
											"end": 432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 407,
											"end": 432,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 407,
											"end": 432,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 407,
											"end": 432,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3148,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3148,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5741,
											"end": 6145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5741,
											"end": 6145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2681,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2919,
											"end": 2951,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2951,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2919,
											"end": 2951,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2952,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2891,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2755,
											"end": 2958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 652,
											"end": 703,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 652,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 652,
											"end": 703,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6693,
											"end": 6959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 710,
											"end": 751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 710,
											"end": 751,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 710,
											"end": 751,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 758,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 758,
											"end": 802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 758,
											"end": 802,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 758,
											"end": 802,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2036,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2036,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6153,
											"end": 6685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 552,
											"end": 589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 552,
											"end": 589,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 552,
											"end": 589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 552,
											"end": 589,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 552,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 552,
											"end": 589,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 552,
											"end": 589,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7101,
											"end": 7253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 512,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 512,
											"end": 545,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 512,
											"end": 545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 512,
											"end": 545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 512,
											"end": 545,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 512,
											"end": 545,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 512,
											"end": 545,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 809,
											"end": 858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 809,
											"end": 858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 809,
											"end": 858,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3559,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3559,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5623,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4986,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4986,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4986,
											"end": 5623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4523,
											"end": 4899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 439,
											"end": 466,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 439,
											"end": 466,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7074,
											"end": 7084,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7016,
											"end": 7023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7061,
											"end": 7073,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7061,
											"end": 7085,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 6967,
											"end": 7093,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 598,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 598,
											"end": 645,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2585,
											"end": 2592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2649,
											"end": 2651,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2649,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2649,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2665,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 2649,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2639,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2628,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2640,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2614,
											"end": 2646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2643,
											"end": 2646,
											"name": "PUSH",
											"source": 6,
											"value": "1F4"
										},
										{
											"begin": 2614,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2614,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2646,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2614,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2614,
											"end": 2665,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 2614,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2614,
											"end": 2665,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 2614,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3898,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3945,
											"end": 3952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 4007,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3991,
											"end": 4007,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3987,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 4007,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 4007,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3964,
											"end": 4045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3964,
											"end": 4045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 4156,
											"end": 4168,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4154,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4138,
											"end": 4154,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4137,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4123,
											"end": 4137,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4123,
											"end": 4154,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4154,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 4123,
											"end": 4154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4123,
											"end": 4154,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 4123,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4118,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4102,
											"end": 4118,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4084,
											"end": 4118,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 4084,
											"end": 4118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4084,
											"end": 4118,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4084,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4083,
											"end": 4155,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4083,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4155,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 4083,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4083,
											"end": 4168,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4168,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4083,
											"end": 4168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4271,
											"end": 4278,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4310,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4334,
											"end": 4350,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4334,
											"end": 4350,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4352,
											"end": 4367,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 4312,
											"end": 4368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4368,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 4312,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4290,
											"end": 4368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4400,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 4456,
											"end": 4468,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4452,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4424,
											"end": 4436,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4424,
											"end": 4436,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4405,
											"end": 4421,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4405,
											"end": 4436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 4405,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4436,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 4405,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 4404,
											"end": 4452,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4452,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 4404,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4404,
											"end": 4452,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 4404,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 4403,
											"end": 4468,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4403,
											"end": 4468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4403,
											"end": 4468,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 4403,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4468,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4216,
											"end": 4507,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4216,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3341,
											"end": 3357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3341,
											"end": 3370,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3341,
											"end": 3370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3341,
											"end": 3370,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3381,
											"end": 3406,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3417,
											"end": 3437,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3437,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3437,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3473,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3458,
											"end": 3480,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3480,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3458,
											"end": 3480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3458,
											"end": 3480,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3480,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3480,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3544,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3544,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6700,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3844853BE672B18D859394AA37E05615B95B78E66B4DC37DCA98D1DB1B05EA7D"
										},
										{
											"begin": 3496,
											"end": 3544,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3496,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3496,
											"end": 3544,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3544,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3544,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3148,
											"end": 3552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5815,
											"end": 5816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5806,
											"end": 5816,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6915,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6895,
											"end": 6916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6954,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6932,
											"end": 6950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6955,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6991,
											"end": 7025,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 6971,
											"end": 6989,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6971,
											"end": 6989,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6971,
											"end": 6989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6964,
											"end": 7026,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7042,
											"end": 7060,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7042,
											"end": 7060,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7042,
											"end": 7060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7035,
											"end": 7066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7102,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 7083,
											"end": 7102,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 6711,
											"end": 7108,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 5798,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5883,
											"end": 5893,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5898,
											"end": 5904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7315,
											"end": 7317,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7297,
											"end": 7318,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7354,
											"end": 7356,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 7334,
											"end": 7352,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7334,
											"end": 7352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7334,
											"end": 7352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7357,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B739BAB33334B1B4B2B73A103130B630B731B297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7373,
											"end": 7391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7366,
											"end": 7417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7434,
											"end": 7452,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7113,
											"end": 7458,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 5865,
											"end": 5930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5953,
											"end": 5963,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5973,
											"end": 5977,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5986,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5943,
											"end": 5987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5943,
											"end": 5987,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 5943,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6011,
											"end": 6021,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6010,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6032,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6032,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6032,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 5998,
											"end": 6032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5998,
											"end": 6032,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6060,
											"end": 6070,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6059,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6071,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6074,
											"end": 6089,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6043,
											"end": 6089,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "PUSH",
											"source": 6,
											"value": "B539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF"
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6130,
											"end": 6136,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6105,
											"end": 6137,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5741,
											"end": 6145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2681,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2758,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2743,
											"end": 2758,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2758,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2758,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2743,
											"end": 2758,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2764,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2764,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2764,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2743,
											"end": 2764,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7795,
											"end": 7797,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7777,
											"end": 7798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7834,
											"end": 7836,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 7814,
											"end": 7832,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7814,
											"end": 7832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7832,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7837,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7898,
											"name": "PUSH",
											"source": 7,
											"value": "50726573616C65206E6F74207374617274656420796574000000000000000000"
										},
										{
											"begin": 7853,
											"end": 7871,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7853,
											"end": 7871,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7853,
											"end": 7871,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7846,
											"end": 7899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7593,
											"end": 7940,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 2735,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2826,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 2829,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 2829,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 2829,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2806,
											"end": 2854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2892,
											"end": 2893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2889,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2877,
											"end": 2893,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8149,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8186,
											"end": 8188,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8166,
											"end": 8184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8159,
											"end": 8189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207265776172647320617661696C61626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8205,
											"end": 8223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8248,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8265,
											"end": 8283,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8265,
											"end": 8283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7945,
											"end": 8289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 2869,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2939,
											"end": 2949,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2963,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 2933,
											"end": 2964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2964,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2933,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3004,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 2993,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2979,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2979,
											"end": 3005,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3005,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2979,
											"end": 3005,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3005,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3005,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3009,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3009,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2979,
											"end": 3009,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "PUSH",
											"source": 6,
											"value": "F0BC0A70FE19EF2D8DC1E1948B338A1184184FB1EA3AC836F24065828816D68D"
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 3029,
											"end": 3075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3074,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 6843,
											"end": 6865,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6828,
											"end": 6838,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6811,
											"end": 6839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6811,
											"end": 6839,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6811,
											"end": 6839,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6839,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6811,
											"end": 6839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6839,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6811,
											"end": 6839,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6748,
											"end": 6755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 6793,
											"end": 6839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 6808,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6793,
											"end": 6839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6793,
											"end": 6839,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 6793,
											"end": 6839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6792,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 6792,
											"end": 6865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6792,
											"end": 6865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6792,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6792,
											"end": 6865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6792,
											"end": 6865,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 6792,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6911,
											"end": 6928,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 6911,
											"end": 6928,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6897,
											"end": 6907,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6896,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6908,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6865,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6948,
											"end": 6951,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6948,
											"end": 6951,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6865,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6768,
											"end": 6865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 6884,
											"end": 6928,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6884,
											"end": 6928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6928,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 6884,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 6884,
											"end": 6944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6944,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6884,
											"end": 6944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6944,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 6884,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6883,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 6883,
											"end": 6951,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6883,
											"end": 6951,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6883,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6883,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6883,
											"end": 6951,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 6883,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6951,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6876,
											"end": 6951,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6693,
											"end": 6959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2111,
											"end": 2132,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2110,
											"end": 2132,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8496,
											"end": 8498,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8478,
											"end": 8499,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8535,
											"end": 8537,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8515,
											"end": 8533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8508,
											"end": 8538,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481DDA1A5D195B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8554,
											"end": 8572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8613,
											"end": 8631,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8294,
											"end": 8637,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 2102,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2185,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2197,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8844,
											"end": 8846,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8826,
											"end": 8847,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8883,
											"end": 8885,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8863,
											"end": 8881,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8856,
											"end": 8886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B73737BA103932B332B9103CB7BAB939B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8902,
											"end": 8920,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8902,
											"end": 8920,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8920,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8963,
											"end": 8981,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8963,
											"end": 8981,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8642,
											"end": 8987,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 2167,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2254,
											"end": 2264,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2265,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2244,
											"end": 2265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2253,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2244,
											"end": 2265,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2244,
											"end": 2265,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2265,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2244,
											"end": 2265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2265,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2268,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2297,
											"end": 2319,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2319,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2319,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2319,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2319,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2297,
											"end": 2342,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2332,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2342,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 2297,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2447,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2293,
											"end": 2447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2369,
											"end": 2379,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2391,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2420,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 2406,
											"end": 2430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2430,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2430,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2430,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2359,
											"end": 2380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 2406,
											"end": 2435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2406,
											"end": 2435,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2293,
											"end": 2447,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 2293,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2498,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "PUSH",
											"source": 6,
											"value": "4BC18AA4B0095C9A3B5CDF42D2322D5A145591B04045988A995A5DA426075457"
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2472,
											"end": 2509,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 6153,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6228,
											"end": 6238,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6198,
											"end": 6212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6227,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6268,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9194,
											"end": 9196,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9176,
											"end": 9197,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9233,
											"end": 9235,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 9213,
											"end": 9231,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9213,
											"end": 9231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9231,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9206,
											"end": 9236,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737903A37B5B2B7399039BA30B5B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9252,
											"end": 9270,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9245,
											"end": 9292,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9309,
											"end": 9327,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9309,
											"end": 9327,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8992,
											"end": 9333,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6345,
											"end": 6355,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6344,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6328,
											"end": 6377,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6328,
											"end": 6377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6377,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 6328,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6324,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6377,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6309,
											"end": 6377,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9540,
											"end": 9542,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9522,
											"end": 9543,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9579,
											"end": 9581,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9552,
											"end": 9582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9618,
											"end": 9647,
											"name": "PUSH",
											"source": 7,
											"value": "556E7374616B65206F6E6C792061667465722034207765656B732E0000000000"
										},
										{
											"begin": 9598,
											"end": 9616,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9598,
											"end": 9616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9598,
											"end": 9616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9591,
											"end": 9648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9665,
											"end": 9683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9338,
											"end": 9689,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 6301,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 6447,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6447,
											"end": 6471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6471,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 6447,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6495,
											"end": 6505,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6509,
											"end": 6510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6494,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6506,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6510,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6482,
											"end": 6510,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6537,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 6521,
											"end": 6549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6549,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6521,
											"end": 6553,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6430,
											"end": 6471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6566,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 6566,
											"end": 6619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6584,
											"end": 6588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 6430,
											"end": 6471,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6603,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6603,
											"end": 6618,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 6603,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6566,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6619,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 6566,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6700,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6700,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6666,
											"end": 6700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6650,
											"end": 6660,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6660,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "PUSH",
											"source": 6,
											"value": "6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336"
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6605,
											"end": 6623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6677,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6153,
											"end": 6685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7101,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 7227,
											"end": 7245,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7213,
											"end": 7223,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7196,
											"end": 7224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7212,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 7196,
											"end": 7224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7196,
											"end": 7224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7196,
											"end": 7224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7224,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7224,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7151,
											"end": 7158,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 7196,
											"end": 7245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7196,
											"end": 7245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 7196,
											"end": 7245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3647,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3686,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3699,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3679,
											"end": 3699,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 3671,
											"end": 3737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 3671,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3815,
											"end": 3831,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 3800,
											"end": 3831,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3800,
											"end": 3831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3800,
											"end": 3831,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 3800,
											"end": 3831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 3786,
											"end": 3795,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3783,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 3776,
											"end": 3795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3776,
											"end": 3795,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 3776,
											"end": 3795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 3775,
											"end": 3832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3775,
											"end": 3832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3832,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 3775,
											"end": 3832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 3775,
											"end": 3845,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3845,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 3775,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3845,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 3775,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3752,
											"end": 3845,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3559,
											"end": 3892,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5623,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4986,
											"end": 5623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5043,
											"end": 5058,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5043,
											"end": 5058,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5043,
											"end": 5058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5043,
											"end": 5058,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5043,
											"end": 5058,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5043,
											"end": 5058,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9898,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9878,
											"end": 9899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9908,
											"end": 9938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29B0B632903737BA1030B1BA34BB3297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9947,
											"end": 9993,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 9694,
											"end": 10034,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 5035,
											"end": 5079,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5107,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5098,
											"end": 5111,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10241,
											"end": 10243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10223,
											"end": 10244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10282,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 10260,
											"end": 10278,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10260,
											"end": 10278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10260,
											"end": 10278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10253,
											"end": 10283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10319,
											"end": 10349,
											"name": "PUSH",
											"source": 7,
											"value": "4D7573742073656E642045544820746F2062757920746F6B656E732E00000000"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10299,
											"end": 10317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10292,
											"end": 10350,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10367,
											"end": 10385,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10367,
											"end": 10385,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 10039,
											"end": 10391,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 5090,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 5180,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5180,
											"end": 5196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5180,
											"end": 5196,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 5180,
											"end": 5196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5157,
											"end": 5196,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5245,
											"end": 5264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 5157,
											"end": 5196,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5268,
											"end": 5277,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5267,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 5267,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5267,
											"end": 5293,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 5267,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5334,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5245,
											"end": 5293,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5312,
											"end": 5351,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10598,
											"end": 10600,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10580,
											"end": 10601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10639,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10610,
											"end": 10640,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10676,
											"end": 10706,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000"
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10656,
											"end": 10674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10649,
											"end": 10707,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10724,
											"end": 10742,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10724,
											"end": 10742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 10396,
											"end": 10748,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 5304,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5404,
											"end": 5414,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5403,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5430,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5430,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5419,
											"end": 5430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 5395,
											"end": 5430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5430,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5441,
											"end": 5490,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 5441,
											"end": 5490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5459,
											"end": 5463,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5466,
											"end": 5476,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5478,
											"end": 5489,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5441,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5441,
											"end": 5490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5441,
											"end": 5490,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 5441,
											"end": 5490,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5515,
											"end": 5526,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5501,
											"end": 5511,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 5501,
											"end": 5526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5501,
											"end": 5526,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5568,
											"end": 5578,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5544,
											"end": 5592,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5623,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4523,
											"end": 4899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4570,
											"end": 4577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4598,
											"end": 4613,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10955,
											"end": 10957,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10937,
											"end": 10958,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10994,
											"end": 10996,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10974,
											"end": 10992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10967,
											"end": 10997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11033,
											"end": 11059,
											"name": "PUSH",
											"source": 7,
											"value": "5072652D73616C65206E6F742073746172746564207965740000000000000000"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11006,
											"end": 11060,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11077,
											"end": 11095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 10753,
											"end": 11101,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4675,
											"end": 4689,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4675,
											"end": 4689,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4657,
											"end": 4672,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4657,
											"end": 4689,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 4741,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 4652,
											"end": 4741,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4713,
											"end": 4729,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4713,
											"end": 4729,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4713,
											"end": 4729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4523,
											"end": 4899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 4741,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 4652,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4753,
											"end": 4774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 4777,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4777,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4777,
											"end": 4801,
											"name": "tag",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 4777,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4753,
											"end": 4801,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4847,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4835,
											"end": 4847,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 4835,
											"end": 4861,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4835,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4835,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2755,
											"end": 2958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11326,
											"end": 11358,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11326,
											"end": 11358,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11308,
											"end": 11359,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11375,
											"end": 11393,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11375,
											"end": 11393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11375,
											"end": 11393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11445,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11445,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 11106,
											"end": 11451,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "408"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2755,
											"end": 2958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2755,
											"end": 2958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "415"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2901,
											"end": 2952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2755,
											"end": 2958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2755,
											"end": 2958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2755,
											"end": 2958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2952,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2874,
											"end": 2892,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 2755,
											"end": 2958,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "433"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "439"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11326,
											"end": 11358,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11326,
											"end": 11358,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11308,
											"end": 11359,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11375,
											"end": 11393,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11375,
											"end": 11393,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11375,
											"end": 11393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11368,
											"end": 11402,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11418,
											"end": 11436,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11445,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11445,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 11281,
											"end": 11299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 11106,
											"end": 11451,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "440"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "443"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 196,
											"end": 614,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 196,
											"end": 614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 327,
											"end": 348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 404,
											"end": 413,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 400,
											"end": 418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 479,
											"end": 485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 462,
											"end": 477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 442,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 436,
											"end": 486,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 495,
											"end": 537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 605,
											"end": 607,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 589,
											"end": 591,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 577,
											"end": 592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 573,
											"end": 602,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 562,
											"end": 571,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 558,
											"end": 603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 619,
											"end": 792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 687,
											"end": 707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 687,
											"end": 707,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 736,
											"end": 767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 736,
											"end": 767,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 726,
											"end": 768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 726,
											"end": 768,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 716,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 716,
											"end": 786,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 782,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 772,
											"end": 784,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 716,
											"end": 786,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 716,
											"end": 786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 797,
											"end": 1097,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 797,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 923,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 905,
											"end": 912,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 901,
											"end": 924,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 897,
											"end": 929,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 946,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 894,
											"end": 946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 942,
											"end": 943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 932,
											"end": 944,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 946,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 894,
											"end": 946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 965,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 965,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 965,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 965,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 965,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 955,
											"end": 994,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1067,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1067,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 797,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1673,
											"end": 1859,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 1673,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1783,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1843,
											"end": 1852,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 1824,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2519,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2053,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2138,
											"end": 2144,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2152,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2187,
											"end": 2196,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2197,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2170,
											"end": 2202,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2216,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2213,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2217,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 2167,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2283,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2283,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2380,
											"end": 2382,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2365,
											"end": 2383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2384,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2384,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2483,
											"end": 2485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2486,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2486,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2455,
											"end": 2487,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2750,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2524,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2589,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2636,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2624,
											"end": 2633,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2615,
											"end": 2622,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2611,
											"end": 2634,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2639,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2656,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2656,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 2604,
											"end": 2656,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2652,
											"end": 2653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 2650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2642,
											"end": 2654,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2656,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 2604,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2697,
											"end": 2720,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2720,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2750,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2524,
											"end": 2750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 3309,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 2963,
											"end": 3309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3094,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3080,
											"end": 3089,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3071,
											"end": 3078,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3090,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3063,
											"end": 3095,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3109,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3110,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 3060,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3153,
											"end": 3176,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3153,
											"end": 3176,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3153,
											"end": 3176,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3275,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3245,
											"end": 3277,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2963,
											"end": 3309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3574,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3314,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3382,
											"end": 3388,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3443,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3440,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3429,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3418,
											"end": 3441,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3446,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3463,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 3411,
											"end": 3463,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3457,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3449,
											"end": 3461,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3411,
											"end": 3463,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 3411,
											"end": 3463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 3501,
											"end": 3510,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 3482,
											"end": 3511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3511,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 3482,
											"end": 3511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3511,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3472,
											"end": 3511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 3564,
											"end": 3566,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3562,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 3530,
											"end": 3568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3530,
											"end": 3568,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 3530,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3568,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3520,
											"end": 3568,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3574,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3574,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3574,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3574,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3314,
											"end": 3574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3959,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 3579,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3658,
											"end": 3659,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 3654,
											"end": 3666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3713,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 3722,
											"end": 3783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3780,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3781,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3781,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3781,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3722,
											"end": 3783,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 3722,
											"end": 3783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3821,
											"end": 3827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3818,
											"end": 3832,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3795,
											"end": 3833,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 3792,
											"end": 3953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3875,
											"end": 3885,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3870,
											"end": 3873,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3866,
											"end": 3886,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3887,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3910,
											"end": 3914,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3907,
											"end": 3908,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3900,
											"end": 3915,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3938,
											"end": 3942,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3935,
											"end": 3936,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3928,
											"end": 3943,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3953,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 3792,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3792,
											"end": 3953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3964,
											"end": 4091,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 3964,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4025,
											"end": 4035,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4020,
											"end": 4023,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4016,
											"end": 4036,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4013,
											"end": 4014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4006,
											"end": 4037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4056,
											"end": 4060,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4046,
											"end": 4061,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4080,
											"end": 4084,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4070,
											"end": 4085,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4471,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 4096,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4184,
											"end": 4185,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4202,
											"end": 4207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4465,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 4216,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4237,
											"end": 4238,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4227,
											"end": 4235,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4224,
											"end": 4239,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4465,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 4216,
											"end": 4465,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4291,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4282,
											"end": 4285,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4278,
											"end": 4292,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4272,
											"end": 4276,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4269,
											"end": 4293,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4316,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 4266,
											"end": 4316,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 4296,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 4296,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4346,
											"end": 4347,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4336,
											"end": 4344,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4332,
											"end": 4348,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4378,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 4329,
											"end": 4378,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4376,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4376,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4378,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 4329,
											"end": 4378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4439,
											"end": 4455,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4455,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4455,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 4439,
											"end": 4455,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4414,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4399,
											"end": 4414,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 4216,
											"end": 4465,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4465,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 4216,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4471,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4471,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4471,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4096,
											"end": 4471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 5378,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 4476,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4563,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4545,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 4545,
											"end": 4625,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4596,
											"end": 4597,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4610,
											"end": 4615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4610,
											"end": 4615,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4545,
											"end": 4625,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 4545,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4644,
											"end": 4648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 4634,
											"end": 4710,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4700,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4695,
											"end": 4700,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4710,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 4634,
											"end": 4710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4744,
											"end": 4745,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4739,
											"end": 4798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4798,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 4739,
											"end": 4798,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4812,
											"end": 4813,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4807,
											"end": 4981,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4807,
											"end": 4981,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4807,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 4807,
											"end": 4981,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 4719,
											"end": 4981,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4798,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 4739,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4770,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4760,
											"end": 4770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4760,
											"end": 4770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4783,
											"end": 4788,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4807,
											"end": 4981,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 4807,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4844,
											"end": 4847,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4834,
											"end": 4842,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4848,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 4828,
											"end": 4871,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 4851,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 4851,
											"end": 4869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4851,
											"end": 4869,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 4851,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4907,
											"end": 4908,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4893,
											"end": 4909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4893,
											"end": 4909,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4966,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 4966,
											"end": 4971,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4981,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 4719,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4719,
											"end": 4981,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5065,
											"end": 5067,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5055,
											"end": 5063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5068,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5046,
											"end": 5049,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5040,
											"end": 5044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5037,
											"end": 5050,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5033,
											"end": 5069,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5027,
											"end": 5029,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 5017,
											"end": 5025,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5030,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5009,
											"end": 5011,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 5003,
											"end": 5007,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5012,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5031,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4993,
											"end": 5070,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5193,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 4990,
											"end": 5193,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5102,
											"end": 5121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5121,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5178,
											"end": 5183,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4990,
											"end": 5193,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 4990,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5250,
											"end": 5258,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5244,
											"end": 5248,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 5267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 5225,
											"end": 5267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5225,
											"end": 5267,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 5225,
											"end": 5267,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5303,
											"end": 5309,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5301,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5291,
											"end": 5310,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5279,
											"end": 5311,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5334,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 5276,
											"end": 5334,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 5314,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 5314,
											"end": 5332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5314,
											"end": 5332,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 5314,
											"end": 5332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5352,
											"end": 5372,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4476,
											"end": 5378,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4476,
											"end": 5378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5383,
											"end": 5523,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5383,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5441,
											"end": 5446,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 5511,
											"end": 5515,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5501,
											"end": 5509,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5516,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5495,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5470,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 5470,
											"end": 5517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5528,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 5528,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5601,
											"end": 5610,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5601,
											"end": 5610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5601,
											"end": 5610,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5649,
											"end": 5664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5649,
											"end": 5664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5649,
											"end": 5664,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5665,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5665,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5666,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5619,
											"end": 5690,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5670,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 5670,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 6098,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 5701,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5903,
											"end": 5905,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5885,
											"end": 5906,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5942,
											"end": 5944,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5945,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5981,
											"end": 6015,
											"name": "PUSH",
											"source": 7,
											"value": "456E642074696D65206D7573742062652061667465722073746172742074696D"
										},
										{
											"begin": 5976,
											"end": 5978,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5961,
											"end": 5979,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 5979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5954,
											"end": 6016,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6047,
											"end": 6049,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6056,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6088,
											"end": 6091,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6073,
											"end": 6092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6073,
											"end": 6092,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5701,
											"end": 6098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6231,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 6103,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6179,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6202,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6202,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6191,
											"end": 6202,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6188,
											"end": 6225,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6188,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6188,
											"end": 6225,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 6205,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 6205,
											"end": 6223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6453,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 6236,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6276,
											"end": 6277,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6302,
											"end": 6303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 6292,
											"end": 6424,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6356,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6341,
											"end": 6344,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6337,
											"end": 6357,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6334,
											"end": 6335,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6327,
											"end": 6358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6385,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6378,
											"end": 6379,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6371,
											"end": 6386,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6413,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6406,
											"end": 6407,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6399,
											"end": 6414,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6424,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 6292,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7588,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 7463,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7537,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7537,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7559,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7559,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7582,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 7546,
											"end": 7582,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7562,
											"end": 7580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SimpleToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balances(address)": "27e235e3",
							"buyTokens()": "d0febe4c",
							"calculatePrice()": "d348b409",
							"calculatePriceIncrease()": "4405df4a",
							"calculateReferralReward()": "0fb4ce58",
							"calculateStakingReward()": "967ed8f3",
							"calculateStepsElapsed(uint256,uint256)": "cf5f971b",
							"decimals()": "313ce567",
							"getBalance()": "12065fe0",
							"getCurrentStep()": "1d3824ea",
							"getStackedTokens()": "ebbef6f6",
							"getStackingPeriod()": "b290d570",
							"initialPrice()": "1d0806ae",
							"minUnstakingPeriod()": "c6a1f80a",
							"mintReferralReward()": "7c613b2f",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"preSaleEndTime()": "cce29ea7",
							"preSaleStartTime()": "06d65af3",
							"preSaleSteps()": "dc07c8a3",
							"presaleIsActive()": "30f72cd4",
							"referralCounts(address)": "cec297a0",
							"referrals(address)": "9ca423b3",
							"regularSalePrice()": "03e293a3",
							"renounceOwnership()": "715018a6",
							"signUpForWhitelist(address)": "a09c4cf4",
							"stakeTokens(uint256)": "7547c7a3",
							"stakedAmount(address)": "f9931855",
							"stakingRewardFrequency()": "a8297d46",
							"stakingRewardRate()": "4f3fc2df",
							"stakingTimestamp(address)": "8f0794fe",
							"startPreSale(uint256,uint256,uint256)": "639a5c87",
							"symbol()": "95d89b41",
							"tokensSold()": "518ab2a8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unstakeTokens()": "a5ce413b",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_regularSalePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRewardRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minUnstakingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRewardFrequency\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"PreSaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"PreSaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"ReferralRewardMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"UserWhitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculatePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculatePriceIncrease\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateReferralReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"calculateStepsElapsed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentStep\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStackedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStackingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUnstakingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintReferralReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleSteps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleIsActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regularSalePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"signUpForWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRewardFrequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"steps\",\"type\":\"uint256\"}],\"name\":\"startPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyTokens()\":{\"notice\":\"Buy tokens during the presale or regular sale.\"},\"startPreSale(uint256,uint256,uint256)\":{\"notice\":\"Start the pre-sale\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleToken.sol\":\"TokenPreSale\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SimpleToken.sol\":{\"keccak256\":\"0x39c83ad5f403de278d9ce8d6783d8b71d9fcb046e99687373f1c668a5c6974c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e788ffb9535f7280de5165c6263541a7a3db40529e5e3e3632a9cf9933596fe\",\"dweb:/ipfs/QmVfyeEZhDG5NuNiM9tqSwWJ4oWUftVtig6FWuHWBpRPG4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "presaleIsActive",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 945,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "preSaleStartTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 947,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "preSaleEndTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 949,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "initialPrice",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 951,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "regularSalePrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "tokensSold",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 955,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "preSaleSteps",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 957,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingRewardRate",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 959,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "minUnstakingPeriod",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 961,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingRewardFrequency",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 965,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakedAmount",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 969,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingTimestamp",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 973,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "whitelist",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 977,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "referrals",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 981,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "referralCounts",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 985,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "balances",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"buyTokens()": {
								"notice": "Buy tokens during the presale or regular sale."
							},
							"startPreSale(uint256,uint256,uint256)": {
								"notice": "Start the pre-sale"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/SimpleToken.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"TokenPreSale": [
							1629
						]
					},
					"id": 1630,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1630,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1630,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"199:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "199:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "199:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"206:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "206:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:6"
								}
							],
							"canonicalName": "TokenPreSale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1629,
							"linearizedBaseContracts": [
								1629,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "TokenPreSale",
							"nameLocation": "183:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "30f72cd4",
									"id": 943,
									"mutability": "mutable",
									"name": "presaleIsActive",
									"nameLocation": "233:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "221:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 942,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "221:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06d65af3",
									"id": 945,
									"mutability": "mutable",
									"name": "preSaleStartTime",
									"nameLocation": "270:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "255:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "255:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cce29ea7",
									"id": 947,
									"mutability": "mutable",
									"name": "preSaleEndTime",
									"nameLocation": "308:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "293:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "293:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d0806ae",
									"id": 949,
									"mutability": "mutable",
									"name": "initialPrice",
									"nameLocation": "344:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "329:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "03e293a3",
									"id": 951,
									"mutability": "mutable",
									"name": "regularSalePrice",
									"nameLocation": "378:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "363:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "518ab2a8",
									"id": 953,
									"mutability": "mutable",
									"name": "tokensSold",
									"nameLocation": "422:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "407:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "407:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc07c8a3",
									"id": 955,
									"mutability": "mutable",
									"name": "preSaleSteps",
									"nameLocation": "454:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "439:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "439:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f3fc2df",
									"id": 957,
									"mutability": "mutable",
									"name": "stakingRewardRate",
									"nameLocation": "488:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "473:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "473:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c6a1f80a",
									"id": 959,
									"mutability": "mutable",
									"name": "minUnstakingPeriod",
									"nameLocation": "527:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "512:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "512:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8297d46",
									"id": 961,
									"mutability": "mutable",
									"name": "stakingRewardFrequency",
									"nameLocation": "567:22:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "552:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 960,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "552:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9931855",
									"id": 965,
									"mutability": "mutable",
									"name": "stakedAmount",
									"nameLocation": "633:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "598:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 964,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 962,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "606:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "598:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 963,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "617:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f0794fe",
									"id": 969,
									"mutability": "mutable",
									"name": "stakingTimestamp",
									"nameLocation": "687:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "652:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 968,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 966,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "660:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "652:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 967,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "671:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 973,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "742:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "710:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 972,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 970,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "718:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "710:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 971,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "729:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ca423b3",
									"id": 977,
									"mutability": "mutable",
									"name": "referrals",
									"nameLocation": "793:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "758:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 976,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 974,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "766:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "758:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 975,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "777:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cec297a0",
									"id": 981,
									"mutability": "mutable",
									"name": "referralCounts",
									"nameLocation": "844:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "809:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 980,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 978,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "817:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "809:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 979,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "828:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 985,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "900:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1629,
									"src": "865:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 984,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 982,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "873:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "865:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 983,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "884:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457",
									"id": 991,
									"name": "UserWhitelisted",
									"nameLocation": "923:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "939:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "961:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:48:6"
									},
									"src": "917:70:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d",
									"id": 997,
									"name": "ReferralRewardMinted",
									"nameLocation": "999:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1036:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1020:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1054:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1046:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:48:6"
									},
									"src": "993:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef",
									"id": 1003,
									"name": "TokensStaked",
									"nameLocation": "1084:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1113:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1097:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1097:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1127:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1003,
												"src": "1119:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1096:38:6"
									},
									"src": "1078:57:6"
								},
								{
									"anonymous": false,
									"eventSelector": "6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336",
									"id": 1011,
									"name": "TokensUnstaked",
									"nameLocation": "1147:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1178:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1162:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1192:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1184:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1208:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "1200:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1200:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:54:6"
									},
									"src": "1141:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 1019,
									"name": "TokensPurchased",
									"nameLocation": "1228:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1260:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1244:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1275:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1267:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"indexed": false,
												"mutability": "mutable",
												"name": "cost",
												"nameLocation": "1291:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1283:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:53:6"
									},
									"src": "1222:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d",
									"id": 1025,
									"name": "PreSaleStarted",
									"nameLocation": "1309:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1332:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1324:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1351:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "1343:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:36:6"
									},
									"src": "1303:57:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e4e5d76599bd74efd04c1863d19fbf494d72c23a3276b9a5916804bfaa8b6e79",
									"id": 1029,
									"name": "PreSaleEnded",
									"nameLocation": "1372:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1393:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1385:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1384:17:6"
									},
									"src": "1366:36:6"
								},
								{
									"body": {
										"id": 1085,
										"nodeType": "Block",
										"src": "1686:333:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1056,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1711:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1703:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1054,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1703:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1703:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "1718:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1053,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1697:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1697:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "1697:34:6"
											},
											{
												"expression": {
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1061,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1742:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1062,
														"name": "_initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "1757:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1742:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "1742:28:6"
											},
											{
												"expression": {
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1065,
														"name": "regularSalePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "1781:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1066,
														"name": "_regularSalePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "1800:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1068,
												"nodeType": "ExpressionStatement",
												"src": "1781:36:6"
											},
											{
												"expression": {
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1069,
														"name": "stakingRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "1828:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1070,
														"name": "_stakingRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "1848:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1828:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:6"
											},
											{
												"expression": {
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1073,
														"name": "presaleIsActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "1877:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1895:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1877:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "1877:23:6"
											},
											{
												"expression": {
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1077,
														"name": "minUnstakingPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "1911:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1078,
														"name": "_minUnstakingPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "1933:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1911:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "1911:41:6"
											},
											{
												"expression": {
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1081,
														"name": "stakingRewardFrequency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "1963:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1082,
														"name": "_stakingRewardFrequency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "1988:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1963:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "1963:48:6"
											}
										]
									},
									"id": 1086,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e6174757265546f6b656e",
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1626:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d5ee8fd3c5f6584b265d5b0813f0e0aba2b11e4095f7ca2f0c140668f3acc419",
														"typeString": "literal_string \"NatureToken\""
													},
													"value": "NatureToken"
												},
												{
													"hexValue": "4e5452",
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1641:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_694d85ce3f345a420974bcb998758484b397dcf49ebe818a3483badd3fd4fecd",
														"typeString": "literal_string \"NTR\""
													},
													"value": "NTR"
												}
											],
											"id": 1048,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1045,
												"name": "ERC20",
												"nameLocations": [
													"1620:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1620:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1620:27:6"
										},
										{
											"arguments": [
												{
													"id": 1050,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1031,
													"src": "1666:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1051,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1049,
												"name": "Ownable",
												"nameLocations": [
													"1658:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1658:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1658:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1436:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1428:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "1458:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1450:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_initialPrice",
												"nameLocation": "1479:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1471:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "_regularSalePrice",
												"nameLocation": "1502:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1494:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "_stakingRewardRate",
												"nameLocation": "1529:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1521:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "_minUnstakingPeriod",
												"nameLocation": "1556:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1548:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "_stakingRewardFrequency",
												"nameLocation": "1584:23:6",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "1576:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:182:6"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1686:0:6"
									},
									"scope": 1629,
									"src": "1416:603:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2091:426:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2110:22:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1092,
																	"name": "whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "2111:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1095,
																"indexExpression": {
																	"expression": {
																		"id": 1093,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2121:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2125:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2121:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2111:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792077686974656c6973746564",
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2134:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																"typeString": "literal_string \"Already whitelisted\""
															},
															"value": "Already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																"typeString": "literal_string \"Already whitelisted\""
															}
														],
														"id": 1091,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2102:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "2102:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1101,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2175:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2179:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2175:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1103,
																"name": "referral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2189:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2175:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726566657220796f757273656c66",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2199:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															},
															"value": "Cannot refer yourself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															}
														],
														"id": 1100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2167:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2167:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "2167:56:6"
											},
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1108,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "2244:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1111,
														"indexExpression": {
															"expression": {
																"id": 1109,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2254:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2258:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2254:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2244:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2268:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2244:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1115,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2297:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2317:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2309:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1116,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2309:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2309:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2297:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"baseExpression": {
															"id": 1121,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "2323:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1123,
														"indexExpression": {
															"id": 1122,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2333:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2323:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2297:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1139,
												"nodeType": "IfStatement",
												"src": "2293:154:6",
												"trueBody": {
													"id": 1138,
													"nodeType": "Block",
													"src": "2344:103:6",
													"statements": [
														{
															"expression": {
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1125,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "2359:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1128,
																	"indexExpression": {
																		"expression": {
																			"id": 1126,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2369:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2373:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2369:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2359:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1129,
																	"name": "referral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1088,
																	"src": "2383:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2359:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "2359:32:6"
														},
														{
															"expression": {
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1132,
																		"name": "referralCounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "2406:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1134,
																	"indexExpression": {
																		"id": 1133,
																		"name": "referral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "2421:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2406:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2434:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2406:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1137,
															"nodeType": "ExpressionStatement",
															"src": "2406:29:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2488:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2492:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2488:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "2500:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1140,
														"name": "UserWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "2472:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "EmitStatement",
												"src": "2467:42:6"
											}
										]
									},
									"functionSelector": "a09c4cf4",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signUpForWhitelist",
									"nameLocation": "2045:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "2072:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "2064:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:18:6"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2091:0:6"
									},
									"scope": 1629,
									"src": "2036:481:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "2594:79:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1152,
																"name": "referralCounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "2614:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1155,
															"indexExpression": {
																"expression": {
																	"id": 1153,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2629:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2633:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2629:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2614:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "353030",
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2643:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														"src": "2614:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2649:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1159,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "2655:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2655:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2649:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2614:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1163,
												"nodeType": "Return",
												"src": "2607:58:6"
											}
										]
									},
									"functionSelector": "0fb4ce58",
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReferralReward",
									"nameLocation": "2538:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2561:2:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "2585:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2585:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:9:6"
									},
									"scope": 1629,
									"src": "2529:144:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1206,
										"nodeType": "Block",
										"src": "2720:367:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1169,
																"name": "presaleIsActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "2743:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2760:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2743:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206e6f74207374617274656420796574",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2765:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f",
																"typeString": "literal_string \"Presale not started yet\""
															},
															"value": "Presale not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f",
																"typeString": "literal_string \"Presale not started yet\""
															}
														],
														"id": 1168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2735:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2735:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "2735:56:6"
											},
											{
												"assignments": [
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "2814:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1206,
														"src": "2806:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2806:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1177,
														"name": "calculateReferralReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "2829:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2829:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2806:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "rewardAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "2877:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2892:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2877:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320617661696c61626c65",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2895:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															},
															"value": "No rewards available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2869:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2869:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "2869:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1188,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2939:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2943:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2939:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "2951:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1187,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2933:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2933:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1192,
												"nodeType": "ExpressionStatement",
												"src": "2933:31:6"
											},
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1193,
															"name": "referralCounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "2979:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1196,
														"indexExpression": {
															"expression": {
																"id": 1194,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2994:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2998:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2994:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2979:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3008:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2979:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "2979:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1201,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3050:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3054:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3050:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1203,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "3062:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1200,
														"name": "ReferralRewardMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "3029:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3029:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1205,
												"nodeType": "EmitStatement",
												"src": "3024:51:6"
											}
										]
									},
									"functionSelector": "7c613b2f",
									"id": 1207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintReferralReward",
									"nameLocation": "2690:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2708:2:6"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2720:0:6"
									},
									"scope": 1629,
									"src": "2681:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "3242:310:6",
										"statements": [
											{
												"expression": {
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1219,
														"name": "preSaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "3341:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1220,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "3360:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3341:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "3341:29:6"
											},
											{
												"expression": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1223,
														"name": "preSaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "3381:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1224,
														"name": "_endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "3398:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3381:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "3381:25:6"
											},
											{
												"expression": {
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1227,
														"name": "preSaleSteps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3417:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1228,
														"name": "steps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "3432:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3417:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1230,
												"nodeType": "ExpressionStatement",
												"src": "3417:20:6"
											},
											{
												"expression": {
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1231,
														"name": "presaleIsActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3458:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3476:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3458:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "3458:22:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1236,
															"name": "preSaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3511:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1237,
															"name": "preSaleEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "3529:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1235,
														"name": "PreSaleStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "3496:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3496:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "EmitStatement",
												"src": "3491:53:6"
											}
										]
									},
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "3095:47:6",
										"text": " @notice Start the pre-sale"
									},
									"functionSelector": "639a5c87",
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1216,
												"name": "onlyOwner",
												"nameLocations": [
													"3232:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3232:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3232:9:6"
										}
									],
									"name": "startPreSale",
									"nameLocation": "3157:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "3178:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3170:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "_endTime",
												"nameLocation": "3198:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3190:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3190:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "steps",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3169:53:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3242:0:6"
									},
									"scope": 1629,
									"src": "3148:404:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "3656:236:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "endTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "3679:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1252,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1243,
																"src": "3690:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3679:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e642074696d65206d7573742062652061667465722073746172742074696d65",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3701:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
																"typeString": "literal_string \"End time must be after start time\""
															},
															"value": "End time must be after start time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
																"typeString": "literal_string \"End time must be after start time\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3671:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3671:66:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "3671:66:6"
											},
											{
												"assignments": [
													1258
												],
												"declarations": [
													{
														"constant": false,
														"id": 1258,
														"mutability": "mutable",
														"name": "stepsElapsed",
														"nameLocation": "3760:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1273,
														"src": "3752:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1257,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3752:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1259,
																		"name": "endTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "3776:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1260,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1243,
																		"src": "3786:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3776:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1262,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3775:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1263,
																		"name": "preSaleEndTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "3800:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1264,
																		"name": "preSaleStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "3815:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3800:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1266,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3799:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3775:57:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1268,
														"name": "preSaleSteps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "3833:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3775:70:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3752:93:6"
											},
											{
												"expression": {
													"id": 1271,
													"name": "stepsElapsed",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1258,
													"src": "3868:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1249,
												"id": 1272,
												"nodeType": "Return",
												"src": "3861:19:6"
											}
										]
									},
									"functionSelector": "cf5f971b",
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStepsElapsed",
									"nameLocation": "3568:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "3598:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "3590:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3590:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "3617:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "3609:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3589:36:6"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "3647:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3647:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:9:6"
									},
									"scope": 1629,
									"src": "3559:333:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "3953:257:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1280,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3972:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3978:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3972:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1282,
																"name": "preSaleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "3991:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3972:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456e642074696d65206d7573742062652061667465722073746172742074696d65",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4009:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
																"typeString": "literal_string \"End time must be after start time\""
															},
															"value": "End time must be after start time"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d482ed43a9821257830811182d2b3f9a900acea135ec66054f65e478bae8a2f5",
																"typeString": "literal_string \"End time must be after start time\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3964:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3964:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1286,
												"nodeType": "ExpressionStatement",
												"src": "3964:81:6"
											},
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "stepsElapsed",
														"nameLocation": "4068:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1304,
														"src": "4060:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4060:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1301,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1289,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4084:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4090:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4084:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1291,
																		"name": "preSaleStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "4102:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4084:34:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1293,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4083:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1294,
																		"name": "preSaleEndTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "4123:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1295,
																		"name": "preSaleStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 945,
																		"src": "4138:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4123:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1297,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4122:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4083:72:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1299,
														"name": "preSaleSteps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "4156:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4083:85:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4060:108:6"
											},
											{
												"expression": {
													"id": 1302,
													"name": "stepsElapsed",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1288,
													"src": "4190:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1303,
												"nodeType": "Return",
												"src": "4183:19:6"
											}
										]
									},
									"functionSelector": "1d3824ea",
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentStep",
									"nameLocation": "3907:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3921:2:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "3945:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3945:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:9:6"
									},
									"scope": 1629,
									"src": "3898:312:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "4279:228:6",
										"statements": [
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "stepsElapsed",
														"nameLocation": "4298:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1332,
														"src": "4290:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4290:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"initialValue": {
													"arguments": [
														{
															"id": 1313,
															"name": "preSaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "4334:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1314,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4352:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4358:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4352:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1312,
														"name": "calculateStepsElapsed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "4312:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4312:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4290:78:6"
											},
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "priceIncrease",
														"nameLocation": "4387:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1332,
														"src": "4379:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4379:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1320,
																				"name": "regularSalePrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 951,
																				"src": "4405:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1321,
																				"name": "initialPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 949,
																				"src": "4424:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4405:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1323,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4404:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1324,
																	"name": "stepsElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "4440:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4404:48:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1326,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4403:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1327,
														"name": "preSaleSteps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "4456:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4403:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4379:89:6"
											},
											{
												"expression": {
													"id": 1330,
													"name": "priceIncrease",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1319,
													"src": "4486:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1309,
												"id": 1331,
												"nodeType": "Return",
												"src": "4479:20:6"
											}
										]
									},
									"functionSelector": "4405df4a",
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePriceIncrease",
									"nameLocation": "4225:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4247:2:6"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "4271:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4270:9:6"
									},
									"scope": 1629,
									"src": "4216:291:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "4579:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1339,
															"name": "presaleIsActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4598:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072652d73616c65206e6f74207374617274656420796574",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4614:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82",
																"typeString": "literal_string \"Pre-sale not started yet\""
															},
															"value": "Pre-sale not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82",
																"typeString": "literal_string \"Pre-sale not started yet\""
															}
														],
														"id": 1338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4590:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4590:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "4590:51:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1343,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4657:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4663:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4657:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1345,
														"name": "preSaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "4675:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4657:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1350,
												"nodeType": "IfStatement",
												"src": "4652:89:6",
												"trueBody": {
													"id": 1349,
													"nodeType": "Block",
													"src": "4691:50:6",
													"statements": [
														{
															"expression": {
																"id": 1347,
																"name": "regularSalePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "4713:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1337,
															"id": 1348,
															"nodeType": "Return",
															"src": "4706:23:6"
														}
													]
												}
											},
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "priceIncrease",
														"nameLocation": "4761:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1364,
														"src": "4753:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4753:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1355,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1353,
														"name": "calculatePriceIncrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "4777:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4777:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4753:48:6"
											},
											{
												"assignments": [
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "4820:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1364,
														"src": "4812:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1356,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4812:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1361,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1358,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "4835:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1359,
														"name": "priceIncrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "4848:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4835:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4812:49:6"
											},
											{
												"expression": {
													"id": 1362,
													"name": "currentPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1357,
													"src": "4879:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1337,
												"id": 1363,
												"nodeType": "Return",
												"src": "4872:19:6"
											}
										]
									},
									"functionSelector": "d348b409",
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePrice",
									"nameLocation": "4532:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4546:2:6"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "4570:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4569:9:6"
									},
									"scope": 1629,
									"src": "4523:376:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1438,
										"nodeType": "Block",
										"src": "5024:599:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1370,
															"name": "presaleIsActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "5043:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206e6f74206163746976652e",
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5060:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd",
																"typeString": "literal_string \"Sale not active.\""
															},
															"value": "Sale not active."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd",
																"typeString": "literal_string \"Sale not active.\""
															}
														],
														"id": 1369,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5035:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5035:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "5035:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1375,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5098:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5102:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5098:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5110:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5098:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642045544820746f2062757920746f6b656e732e",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5113:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76",
																"typeString": "literal_string \"Must send ETH to buy tokens.\""
															},
															"value": "Must send ETH to buy tokens."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76",
																"typeString": "literal_string \"Must send ETH to buy tokens.\""
															}
														],
														"id": 1374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5090:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5090:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "5090:54:6"
											},
											{
												"assignments": [
													1383
												],
												"declarations": [
													{
														"constant": false,
														"id": 1383,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "5165:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1438,
														"src": "5157:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1382,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5157:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1386,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1384,
														"name": "calculatePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "5180:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5180:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5157:39:6"
											},
											{
												"assignments": [
													1388
												],
												"declarations": [
													{
														"constant": false,
														"id": 1388,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "5253:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1438,
														"src": "5245:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1387,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5245:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1394,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"expression": {
																	"id": 1389,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5268:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5272:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "5268:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1391,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5267:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1392,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "5281:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5267:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5245:48:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1399,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5330:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																					"typeString": "contract TokenPreSale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																					"typeString": "contract TokenPreSale"
																				}
																			],
																			"id": 1398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5322:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1397,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5322:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5322:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1396,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "5312:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5312:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1402,
																"name": "tokensToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "5340:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5312:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5353:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																"typeString": "literal_string \"Not enough tokens available.\""
															},
															"value": "Not enough tokens available."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																"typeString": "literal_string \"Not enough tokens available.\""
															}
														],
														"id": 1395,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5304:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5304:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "5304:80:6"
											},
											{
												"expression": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1407,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "5395:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1410,
														"indexExpression": {
															"expression": {
																"id": 1408,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5404:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5408:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5404:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5395:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1411,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "5419:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5395:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "5395:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1417,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5459:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5451:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1415,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5451:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5451:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1419,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5466:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5470:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5466:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5478:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1414,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5441:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5441:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "5441:49:6"
											},
											{
												"expression": {
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1424,
														"name": "tokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "5501:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1425,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "5515:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5501:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "5501:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1431,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5561:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5553:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1429,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5553:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5553:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5568:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5572:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5568:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1435,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1388,
															"src": "5580:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1428,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "5544:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5544:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "EmitStatement",
												"src": "5539:53:6"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "4907:73:6",
										"text": " @notice Buy tokens during the presale or regular sale."
									},
									"functionSelector": "d0febe4c",
									"id": 1439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "4995:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5004:2:6"
									},
									"returnParameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5024:0:6"
									},
									"scope": 1629,
									"src": "4986:637:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "5684:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1445,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5712:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5716:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5712:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1444,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "5702:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5702:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1443,
												"id": 1448,
												"nodeType": "Return",
												"src": "5695:28:6"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "5642:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5652:2:6"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "5676:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5675:9:6"
									},
									"scope": 1629,
									"src": "5633:100:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "5787:358:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1456,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "5806:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5815:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5806:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5818:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
																"typeString": "literal_string \"Amount must be greater than zero.\""
															},
															"value": "Amount must be greater than zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
																"typeString": "literal_string \"Amount must be greater than zero.\""
															}
														],
														"id": 1455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5798:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5798:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "5798:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1464,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5883:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5887:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5883:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1463,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "5873:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1467,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "5898:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5873:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e63652e",
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5906:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															},
															"value": "Insufficient balance."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															}
														],
														"id": 1462,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5865:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5865:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "5865:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1473,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5953:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5957:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5953:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1477,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5973:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5965:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5965:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1479,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "5980:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1472,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5943:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5943:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "5943:44:6"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1482,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "5998:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1485,
														"indexExpression": {
															"expression": {
																"id": 1483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6011:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6015:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6011:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5998:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1486,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "6026:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5998:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "5998:34:6"
											},
											{
												"expression": {
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1489,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "6043:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1492,
														"indexExpression": {
															"expression": {
																"id": 1490,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6060:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6064:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6060:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6043:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1493,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6080:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6074:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6043:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "6043:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1498,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6118:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6122:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6118:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1500,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "6130:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1497,
														"name": "TokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1003,
														"src": "6105:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6105:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "EmitStatement",
												"src": "6100:37:6"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeTokens",
									"nameLocation": "5750:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5770:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "5762:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5762:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5761:16:6"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5787:0:6"
									},
									"scope": 1629,
									"src": "5741:404:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "6187:498:6",
										"statements": [
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6206:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "6198:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6198:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1513,
												"initialValue": {
													"baseExpression": {
														"id": 1509,
														"name": "stakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "6215:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1512,
													"indexExpression": {
														"expression": {
															"id": 1510,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6228:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6232:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6228:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6215:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6198:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1515,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "6258:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6267:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73207374616b65642e",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6270:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
																"typeString": "literal_string \"No tokens staked.\""
															},
															"value": "No tokens staked."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
																"typeString": "literal_string \"No tokens staked.\""
															}
														],
														"id": 1514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6250:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6250:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "6250:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1522,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6309:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6315:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6309:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1524,
																		"name": "stakingTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "6328:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1527,
																	"indexExpression": {
																		"expression": {
																			"id": 1525,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6345:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6349:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6345:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6328:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1528,
																	"name": "minUnstakingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "6359:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6328:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6309:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b65206f6e6c792061667465722034207765656b732e",
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6379:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254",
																"typeString": "literal_string \"Unstake only after 4 weeks.\""
															},
															"value": "Unstake only after 4 weeks."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254",
																"typeString": "literal_string \"Unstake only after 4 weeks.\""
															}
														],
														"id": 1521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6301:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6301:108:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "ExpressionStatement",
												"src": "6301:108:6"
											},
											{
												"assignments": [
													1535
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6438:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1572,
														"src": "6430:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6430:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1538,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1536,
														"name": "calculateStakingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "6447:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6447:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6430:41:6"
											},
											{
												"expression": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1539,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "6482:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1542,
														"indexExpression": {
															"expression": {
																"id": 1540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6495:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6499:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6495:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6482:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6482:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "6482:28:6"
											},
											{
												"expression": {
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1546,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "6521:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1549,
														"indexExpression": {
															"expression": {
																"id": 1547,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6538:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6542:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6538:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6521:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6552:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6521:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "6521:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1556,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6584:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1629",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6576:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1554,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6576:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6576:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1558,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6591:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6595:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6591:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1560,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "6603:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1561,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "6612:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6603:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1553,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "6566:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6566:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "6566:53:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1566,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6650:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6654:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6650:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1568,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "6662:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1569,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "6670:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1565,
														"name": "TokensUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "6635:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6635:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "EmitStatement",
												"src": "6630:47:6"
											}
										]
									},
									"functionSelector": "a5ce413b",
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeTokens",
									"nameLocation": "6162:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6175:2:6"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6187:0:6"
									},
									"scope": 1629,
									"src": "6153:532:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1603,
										"nodeType": "Block",
										"src": "6757:202:6",
										"statements": [
											{
												"assignments": [
													1579
												],
												"declarations": [
													{
														"constant": false,
														"id": 1579,
														"mutability": "mutable",
														"name": "periodsStaked",
														"nameLocation": "6776:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1603,
														"src": "6768:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6768:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1590,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1580,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6793:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6799:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6793:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1582,
																		"name": "stakingTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "6811:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1585,
																	"indexExpression": {
																		"expression": {
																			"id": 1583,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6828:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6832:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6828:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6811:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6793:46:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1587,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6792:48:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1588,
														"name": "stakingRewardFrequency",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "6843:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6792:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6768:97:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1598,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1591,
																			"name": "stakedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 965,
																			"src": "6884:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1594,
																		"indexExpression": {
																			"expression": {
																				"id": 1592,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6897:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6901:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6897:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6884:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1595,
																		"name": "stakingRewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "6911:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6884:44:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1597,
																	"name": "periodsStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1579,
																	"src": "6931:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6884:60:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1599,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6883:62:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6948:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "6883:68:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1577,
												"id": 1602,
												"nodeType": "Return",
												"src": "6876:75:6"
											}
										]
									},
									"functionSelector": "967ed8f3",
									"id": 1604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingReward",
									"nameLocation": "6702:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6724:2:6"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1604,
												"src": "6748:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6748:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:9:6"
									},
									"scope": 1629,
									"src": "6693:266:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "7025:68:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1609,
														"name": "stakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "7061:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1612,
													"indexExpression": {
														"expression": {
															"id": 1610,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7074:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7078:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7074:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7061:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1608,
												"id": 1613,
												"nodeType": "Return",
												"src": "7054:31:6"
											}
										]
									},
									"functionSelector": "ebbef6f6",
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStackedTokens",
									"nameLocation": "6976:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6992:2:6"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "7016:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7015:9:6"
									},
									"scope": 1629,
									"src": "6967:126:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1627,
										"nodeType": "Block",
										"src": "7160:93:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1620,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "7196:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1623,
														"indexExpression": {
															"expression": {
																"id": 1621,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7213:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7217:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7213:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7196:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1624,
														"name": "minUnstakingPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "7227:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7196:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1619,
												"id": 1626,
												"nodeType": "Return",
												"src": "7189:56:6"
											}
										]
									},
									"functionSelector": "b290d570",
									"id": 1628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStackingPeriod",
									"nameLocation": "7110:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7127:2:6"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1628,
												"src": "7151:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7151:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7150:9:6"
									},
									"scope": 1629,
									"src": "7101:152:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1630,
							"src": "174:7082:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								991,
								997,
								1003,
								1011,
								1019,
								1025,
								1029
							]
						}
					],
					"src": "33:7225:6"
				},
				"id": 6
			}
		}
	}
}