{
	"id": "360f4a5b086a9f211a22af126af2c9ec",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TokenPreSale is ERC20, Ownable {\r\n    uint256 public saleStartTime;\r\n    uint256 public saleEndTime;\r\n    uint256 public initialPrice;       // Initial price per token in Wei\r\n    uint256 public regularSalePrice;\r\n    uint256 public weeklyIncreaseRate; // Weekly price increase percentage (e.g., 10 means 10%)\r\n    uint256 public tokensSold;\r\n\r\n    uint256 public stakingRewardRate;  // Annual staking reward rate in percentage\r\n    mapping(address => uint256) public stakedAmount;  // Amount of tokens staked by each user\r\n    mapping(address => uint256) public stakingTimestamp;  // Timestamp when user staked\r\n    mapping(address => uint256) public stakingRewards;  // Rewards accumulated by users\r\n    \r\n    event TokensPurchased(address indexed buyer, uint256 amount, uint256 cost);\r\n    event SaleStarted(uint256 startTime, uint256 endTime);\r\n    event SaleEnded(uint256 endTime);\r\n    event TokensStaked(address indexed user, uint256 amount);\r\n    event TokensUnstaked(address indexed user, uint256 amount, uint256 reward);\r\n\r\n    constructor(address initialOwner, uint256 totalSupply, uint256 _initialPrice, uint256 _weeklyIncreaseRate, uint256 _regularSalePrice, uint256 _stakingRewardRate) \r\n    ERC20(\"NatureToken\", \"NTR\") \r\n    Ownable(initialOwner) \r\n    {\r\n        _mint(address(this), totalSupply * 10 ** decimals()); // Mint specified total supply to the contract\r\n        initialPrice = _initialPrice;\r\n        weeklyIncreaseRate = _weeklyIncreaseRate;\r\n        regularSalePrice = _regularSalePrice;  // Set the regular sale price\r\n        stakingRewardRate = _stakingRewardRate; // Set the weekly staking reward rate\r\n    }\r\n\r\n    // Other functions (startSale, getCurrentPrice, buyTokens, etc.) remain the same\r\n\r\n    /**\r\n     * @notice Stake tokens in the contract for rewards\r\n     * @param amount Number of tokens to stake\r\n     */\r\n    function stakeTokens(uint256 amount) external {\r\n        require(amount > 0, \"Amount must be greater than zero.\");\r\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance to stake.\");\r\n\r\n        // Transfer the tokens from the user to the contract\r\n        _transfer(msg.sender, address(this), amount);\r\n\r\n        // Update staking information\r\n        stakedAmount[msg.sender] += amount;\r\n        stakingTimestamp[msg.sender] = block.timestamp;\r\n\r\n        emit TokensStaked(msg.sender, amount);\r\n    }\r\n\r\n    /**\r\n * @notice Unstake tokens and receive accumulated rewards. Users are only allowed to unstake after 4 weeks.\r\n */\r\n    function unstakeTokens() external {\r\n        uint256 stakedTokens = stakedAmount[msg.sender];\r\n        require(stakedTokens > 0, \"No tokens staked.\");\r\n\r\n        uint256 timeStaked = block.timestamp - stakingTimestamp[msg.sender];\r\n        uint256 stakingDurationInWeeks = timeStaked / 1 weeks; // Calculate staking duration in weeks\r\n        \r\n        // Ensure the user has staked for at least 4 weeks\r\n        require(stakingDurationInWeeks >= 4, \"Tokens can only be unstaked after 4 weeks.\");\r\n\r\n        // Calculate staking rewards\r\n        uint256 reward = calculateStakingReward(msg.sender);\r\n\r\n        // Update staked amount to 0\r\n        stakedAmount[msg.sender] = 0;\r\n        stakingTimestamp[msg.sender] = 0;\r\n\r\n        // Transfer staked tokens and rewards back to the user\r\n        _transfer(address(this), msg.sender, stakedTokens + reward);\r\n\r\n        emit TokensUnstaked(msg.sender, stakedTokens, reward);\r\n    }\r\n\r\n    /**\r\n     * @notice Calculate the staking rewards for a user based on the staked amount and time staked (in weeks)\r\n     * @param user Address of the user\r\n     * @return The reward amount\r\n     */\r\n    function calculateStakingReward(address user) public view returns (uint256) {\r\n        uint256 stakedTokens = stakedAmount[user];\r\n        if (stakedTokens == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 timeStaked = block.timestamp - stakingTimestamp[user];\r\n        uint256 stakingDurationInWeeks = timeStaked / 1 weeks; // Calculate duration in weeks\r\n\r\n        // Reward = staked amount * staking reward rate * time staked (in weeks)\r\n        uint256 reward = (stakedTokens * stakingRewardRate * stakingDurationInWeeks) / 100;\r\n        return reward;\r\n    }\r\n\r\n    /**\r\n     * @notice Set the staking reward rate (only callable by the owner)\r\n     * @param _rewardRate The new annual staking reward rate\r\n     */\r\n    function setStakingRewardRate(uint256 _rewardRate) external onlyOwner {\r\n        stakingRewardRate = _rewardRate;\r\n    }\r\n    /**\r\n * @notice Get the staked balance of a user\r\n * @param user Address of the user\r\n * @return The amount of tokens staked by the user\r\n */\r\nfunction getStakedBalance(address user) external view returns (uint256) {\r\n    return stakedAmount[user];\r\n}\r\n\r\n/**\r\n * @notice Get the staking start date (timestamp) for a user\r\n * @param user Address of the user\r\n * @return The timestamp when the user started staking\r\n */\r\nfunction getStakingStartDate(address user) external view returns (uint256) {\r\n    return stakingTimestamp[user];\r\n}\r\n\r\n/**\r\n * @notice Get the accumulated rewards for a user based on the duration of staking\r\n * @param user Address of the user\r\n * @return The accumulated staking rewards\r\n */\r\nfunction getAccumulatedRewards(address user) external view returns (uint256) {\r\n    return calculateStakingReward(user);\r\n}\r\n    // Emergency functions (withdrawFunds, recoverERC20) remain the same\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SimpleToken.sol": {
				"TokenPreSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_initialPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weeklyIncreaseRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_regularSalePrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakingRewardRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "SaleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "SaleStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "TokensUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateStakingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getAccumulatedRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getStakedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getStakingStartDate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "regularSalePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "saleStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								}
							],
							"name": "setStakingRewardRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weeklyIncreaseRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"calculateStakingReward(address)": {
								"params": {
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The reward amount"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getAccumulatedRewards(address)": {
								"params": {
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The accumulated staking rewards"
								}
							},
							"getStakedBalance(address)": {
								"params": {
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The amount of tokens staked by the user"
								}
							},
							"getStakingStartDate(address)": {
								"params": {
									"user": "Address of the user"
								},
								"returns": {
									"_0": "The timestamp when the user started staking"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setStakingRewardRate(uint256)": {
								"params": {
									"_rewardRate": "The new annual staking reward rate"
								}
							},
							"stakeTokens(uint256)": {
								"params": {
									"amount": "Number of tokens to stake"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleToken.sol\":174:5605  contract TokenPreSale is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleToken.sol\":1221:1824  constructor(address initialOwner, uint256 totalSupply, uint256 _initialPrice, uint256 _weeklyIncreaseRate, uint256 _regularSalePrice, uint256 _stakingRewardRate) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SimpleToken.sol\":1431:1443  initialOwner */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa9, 0x2730ba3ab932aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe9, 0x272a29)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3664:3715   */\n  mstore\n    /* \"#utility.yul\":3637:3655   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/SimpleToken.sol\":1462:1514  _mint(address(this), totalSupply * 10 ** decimals()) */\n  tag_18\n    /* \"contracts/SimpleToken.sol\":1476:1480  this */\n  address\n    /* \"contracts/SimpleToken.sol\":1497:1513  10 ** decimals() */\n  tag_21\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"contracts/SimpleToken.sol\":1497:1499  10 */\n  0x0a\n    /* \"contracts/SimpleToken.sol\":1497:1513  10 ** decimals() */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/SimpleToken.sol\":1483:1513  totalSupply * 10 ** decimals() */\n  tag_23\n  swap1\n    /* \"contracts/SimpleToken.sol\":1483:1494  totalSupply */\n  dup9\n    /* \"contracts/SimpleToken.sol\":1483:1513  totalSupply * 10 ** decimals() */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/SimpleToken.sol\":1462:1467  _mint */\n  tag_25\n    /* \"contracts/SimpleToken.sol\":1462:1514  _mint(address(this), totalSupply * 10 ** decimals()) */\n  jump\t// in\ntag_18:\n    /* \"contracts/SimpleToken.sol\":1572:1584  initialPrice */\n  0x08\n    /* \"contracts/SimpleToken.sol\":1572:1600  initialPrice = _initialPrice */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"contracts/SimpleToken.sol\":1611:1629  weeklyIncreaseRate */\n  0x0a\n    /* \"contracts/SimpleToken.sol\":1611:1651  weeklyIncreaseRate = _weeklyIncreaseRate */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/SimpleToken.sol\":1662:1678  regularSalePrice */\n  0x09\n    /* \"contracts/SimpleToken.sol\":1662:1698  regularSalePrice = _regularSalePrice */\n  sstore\n    /* \"contracts/SimpleToken.sol\":1740:1757  stakingRewardRate */\n  0x0c\n    /* \"contracts/SimpleToken.sol\":1740:1778  stakingRewardRate = _stakingRewardRate */\n  sstore\n  pop\n    /* \"contracts/SimpleToken.sol\":174:5605  contract TokenPreSale is ERC20, Ownable {... */\n  tag_54\n  swap1\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3664:3715   */\n  mstore\n    /* \"#utility.yul\":3637:3655   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":3518:3721   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_33\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_38\n  swap1\n  pop\n  jump\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5813:5845   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5795:5846   */\n  mstore\n    /* \"#utility.yul\":5862:5880   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5855:5889   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5905:5923   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5898:5932   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5768:5786   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":5593:5938   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n    /* \"#utility.yul\":6089:6114   */\n  dup2\n  mstore\n    /* \"#utility.yul\":6077:6079   */\n  0x20\n    /* \"#utility.yul\":6062:6080   */\n  add\n  swap1\n    /* \"#utility.yul\":5943:6120   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:872   */\ntag_3:\n    /* \"#utility.yul\":129:135   */\n  0x00\n    /* \"#utility.yul\":137:143   */\n  dup1\n    /* \"#utility.yul\":145:151   */\n  0x00\n    /* \"#utility.yul\":153:159   */\n  dup1\n    /* \"#utility.yul\":161:167   */\n  0x00\n    /* \"#utility.yul\":169:175   */\n  dup1\n    /* \"#utility.yul\":222:225   */\n  0xc0\n    /* \"#utility.yul\":210:219   */\n  dup8\n    /* \"#utility.yul\":201:208   */\n  dup10\n    /* \"#utility.yul\":197:220   */\n  sub\n    /* \"#utility.yul\":193:226   */\n  slt\n    /* \"#utility.yul\":190:243   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":239:240   */\n  0x00\n    /* \"#utility.yul\":236:237   */\n  dup1\n    /* \"#utility.yul\":229:241   */\n  revert\n    /* \"#utility.yul\":190:243   */\ntag_56:\n    /* \"#utility.yul\":265:281   */\n  dup7\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":310:341   */\n  dup2\n  and\n    /* \"#utility.yul\":300:342   */\n  dup2\n  eq\n    /* \"#utility.yul\":290:360   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":356:357   */\n  0x00\n    /* \"#utility.yul\":353:354   */\n  dup1\n    /* \"#utility.yul\":346:358   */\n  revert\n    /* \"#utility.yul\":290:360   */\ntag_57:\n    /* \"#utility.yul\":450:452   */\n  0x20\n    /* \"#utility.yul\":435:453   */\n  dup9\n  add\n    /* \"#utility.yul\":429:454   */\n  mload\n    /* \"#utility.yul\":546:548   */\n  0x40\n    /* \"#utility.yul\":531:549   */\n  dup10\n  add\n    /* \"#utility.yul\":525:550   */\n  mload\n    /* \"#utility.yul\":642:644   */\n  0x60\n    /* \"#utility.yul\":627:645   */\n  dup11\n  add\n    /* \"#utility.yul\":621:646   */\n  mload\n    /* \"#utility.yul\":738:741   */\n  0x80\n    /* \"#utility.yul\":723:742   */\n  dup12\n  add\n    /* \"#utility.yul\":717:743   */\n  mload\n    /* \"#utility.yul\":835:838   */\n  0xa0\n    /* \"#utility.yul\":820:839   */\n  swap1\n  swap12\n  add\n    /* \"#utility.yul\":814:840   */\n  mload\n    /* \"#utility.yul\":379:384   */\n  swap4\n  swap13\n    /* \"#utility.yul\":429:454   */\n  swap3\n  swap12\n  pop\n    /* \"#utility.yul\":525:550   */\n  swap1\n  swap10\n    /* \"#utility.yul\":621:646   */\n  swap1\n  swap9\n  pop\n    /* \"#utility.yul\":717:743   */\n  swap7\n  pop\n    /* \"#utility.yul\":814:840   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":14:872   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":877:1004   */\ntag_46:\n    /* \"#utility.yul\":938:948   */\n  0x4e487b71\n    /* \"#utility.yul\":933:936   */\n  0xe0\n    /* \"#utility.yul\":929:949   */\n  shl\n    /* \"#utility.yul\":926:927   */\n  0x00\n    /* \"#utility.yul\":919:950   */\n  mstore\n    /* \"#utility.yul\":969:973   */\n  0x41\n    /* \"#utility.yul\":966:967   */\n  0x04\n    /* \"#utility.yul\":959:974   */\n  mstore\n    /* \"#utility.yul\":993:997   */\n  0x24\n    /* \"#utility.yul\":990:991   */\n  0x00\n    /* \"#utility.yul\":983:998   */\n  revert\n    /* \"#utility.yul\":1009:1389   */\ntag_47:\n    /* \"#utility.yul\":1088:1089   */\n  0x01\n    /* \"#utility.yul\":1084:1096   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1131:1143   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1152:1213   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1206:1210   */\n  0x7f\n    /* \"#utility.yul\":1198:1204   */\n  dup3\n    /* \"#utility.yul\":1194:1211   */\n  and\n    /* \"#utility.yul\":1184:1211   */\n  swap2\n  pop\n    /* \"#utility.yul\":1152:1213   */\ntag_60:\n    /* \"#utility.yul\":1259:1261   */\n  0x20\n    /* \"#utility.yul\":1251:1257   */\n  dup3\n    /* \"#utility.yul\":1248:1262   */\n  lt\n    /* \"#utility.yul\":1228:1246   */\n  dup2\n    /* \"#utility.yul\":1225:1263   */\n  sub\n    /* \"#utility.yul\":1222:1383   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1305:1315   */\n  0x4e487b71\n    /* \"#utility.yul\":1300:1303   */\n  0xe0\n    /* \"#utility.yul\":1296:1316   */\n  shl\n    /* \"#utility.yul\":1293:1294   */\n  0x00\n    /* \"#utility.yul\":1286:1317   */\n  mstore\n    /* \"#utility.yul\":1340:1344   */\n  0x22\n    /* \"#utility.yul\":1337:1338   */\n  0x04\n    /* \"#utility.yul\":1330:1345   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1222:1383   */\ntag_61:\n  pop\n    /* \"#utility.yul\":1009:1389   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1520:2038   */\ntag_49:\n    /* \"#utility.yul\":1622:1624   */\n  0x1f\n    /* \"#utility.yul\":1617:1620   */\n  dup3\n    /* \"#utility.yul\":1614:1625   */\n  gt\n    /* \"#utility.yul\":1611:2032   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1658:1663   */\n  dup1\n    /* \"#utility.yul\":1655:1656   */\n  0x00\n    /* \"#utility.yul\":1648:1664   */\n  mstore\n    /* \"#utility.yul\":1702:1706   */\n  0x20\n    /* \"#utility.yul\":1699:1700   */\n  0x00\n    /* \"#utility.yul\":1689:1707   */\n  keccak256\n    /* \"#utility.yul\":1772:1774   */\n  0x1f\n    /* \"#utility.yul\":1760:1770   */\n  dup5\n    /* \"#utility.yul\":1756:1775   */\n  add\n    /* \"#utility.yul\":1753:1754   */\n  0x05\n    /* \"#utility.yul\":1749:1776   */\n  shr\n    /* \"#utility.yul\":1743:1747   */\n  dup2\n    /* \"#utility.yul\":1739:1777   */\n  add\n    /* \"#utility.yul\":1808:1812   */\n  0x20\n    /* \"#utility.yul\":1796:1806   */\n  dup6\n    /* \"#utility.yul\":1793:1813   */\n  lt\n    /* \"#utility.yul\":1790:1837   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":1831:1835   */\n  dup1\n    /* \"#utility.yul\":1790:1837   */\ntag_65:\n    /* \"#utility.yul\":1886:1888   */\n  0x1f\n    /* \"#utility.yul\":1881:1884   */\n  dup5\n    /* \"#utility.yul\":1877:1889   */\n  add\n    /* \"#utility.yul\":1874:1875   */\n  0x05\n    /* \"#utility.yul\":1870:1890   */\n  shr\n    /* \"#utility.yul\":1864:1868   */\n  dup3\n    /* \"#utility.yul\":1860:1891   */\n  add\n    /* \"#utility.yul\":1850:1891   */\n  swap2\n  pop\n    /* \"#utility.yul\":1941:2022   */\ntag_66:\n    /* \"#utility.yul\":1959:1961   */\n  dup2\n    /* \"#utility.yul\":1952:1957   */\n  dup2\n    /* \"#utility.yul\":1949:1962   */\n  lt\n    /* \"#utility.yul\":1941:2022   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2018:2019   */\n  0x00\n    /* \"#utility.yul\":2004:2020   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1985:1986   */\n  0x01\n    /* \"#utility.yul\":1974:1987   */\n  add\n    /* \"#utility.yul\":1941:2022   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":1945:1948   */\n  pop\n  pop\n    /* \"#utility.yul\":1611:2032   */\ntag_64:\n    /* \"#utility.yul\":1520:2038   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2214:3513   */\ntag_9:\n    /* \"#utility.yul\":2334:2344   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2356:2386   */\n  dup2\n  gt\n    /* \"#utility.yul\":2353:2409   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2389:2407   */\n  tag_72\n  tag_46\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2418:2515   */\n  tag_73\n    /* \"#utility.yul\":2508:2514   */\n  dup2\n    /* \"#utility.yul\":2468:2506   */\n  tag_74\n    /* \"#utility.yul\":2500:2504   */\n  dup5\n    /* \"#utility.yul\":2494:2505   */\n  sload\n    /* \"#utility.yul\":2468:2506   */\n  tag_47\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2515   */\n  tag_49\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2564:2568   */\n  0x20\n    /* \"#utility.yul\":2595:2597   */\n  0x1f\n    /* \"#utility.yul\":2584:2598   */\n  dup3\n  gt\n    /* \"#utility.yul\":2612:2613   */\n  0x01\n    /* \"#utility.yul\":2607:3256   */\n  dup2\n  eq\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3300:3301   */\n  0x00\n    /* \"#utility.yul\":3317:3323   */\n  dup4\n    /* \"#utility.yul\":3314:3403   */\n  iszero\n  tag_77\n  jumpi\n  pop\n    /* \"#utility.yul\":3369:3388   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3363:3389   */\n  mload\n    /* \"#utility.yul\":3314:3403   */\ntag_77:\n  not(0x00)\n    /* \"#utility.yul\":2171:2172   */\n  0x03\n    /* \"#utility.yul\":2167:2178   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2163:2187   */\n  shr\n    /* \"#utility.yul\":2159:2188   */\n  not\n    /* \"#utility.yul\":2149:2189   */\n  and\n    /* \"#utility.yul\":2195:2196   */\n  0x01\n    /* \"#utility.yul\":2191:2202   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2146:2203   */\n  or\n    /* \"#utility.yul\":3416:3497   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2577:3507   */\n  jump(tag_68)\n    /* \"#utility.yul\":2607:3256   */\ntag_76:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1460:1474   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1504:1508   */\n  0x20\n    /* \"#utility.yul\":1491:1509   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2643:2663   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2761:2983   */\ntag_80:\n    /* \"#utility.yul\":2775:2782   */\n  dup3\n    /* \"#utility.yul\":2772:2773   */\n  dup2\n    /* \"#utility.yul\":2769:2783   */\n  lt\n    /* \"#utility.yul\":2761:2983   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2857:2876   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2851:2877   */\n  mload\n    /* \"#utility.yul\":2836:2878   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2964:2968   */\n  0x20\n    /* \"#utility.yul\":2949:2969   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2917:2918   */\n  0x01\n    /* \"#utility.yul\":2905:2919   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2791:2803   */\n  add\n    /* \"#utility.yul\":2761:2983   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":2765:2768   */\n  pop\n    /* \"#utility.yul\":3011:3017   */\n  dup5\n    /* \"#utility.yul\":3002:3009   */\n  dup3\n    /* \"#utility.yul\":2999:3018   */\n  lt\n    /* \"#utility.yul\":2996:3197   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3072:3091   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3066:3092   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3155:3156   */\n  0x03\n    /* \"#utility.yul\":3151:3165   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3167:3170   */\n  0xf8\n    /* \"#utility.yul\":3147:3171   */\n  and\n    /* \"#utility.yul\":3143:3180   */\n  shr\n    /* \"#utility.yul\":3139:3181   */\n  not\n    /* \"#utility.yul\":3124:3182   */\n  and\n    /* \"#utility.yul\":3109:3183   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2996:3197   */\ntag_83:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3243:3244   */\n  0x01\n    /* \"#utility.yul\":3227:3241   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3223:3245   */\n  add\n    /* \"#utility.yul\":3210:3246   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2214:3513   */\n  jump\t// out\n    /* \"#utility.yul\":3726:3853   */\ntag_51:\n    /* \"#utility.yul\":3787:3797   */\n  0x4e487b71\n    /* \"#utility.yul\":3782:3785   */\n  0xe0\n    /* \"#utility.yul\":3778:3798   */\n  shl\n    /* \"#utility.yul\":3775:3776   */\n  0x00\n    /* \"#utility.yul\":3768:3799   */\n  mstore\n    /* \"#utility.yul\":3818:3822   */\n  0x11\n    /* \"#utility.yul\":3815:3816   */\n  0x04\n    /* \"#utility.yul\":3808:3823   */\n  mstore\n    /* \"#utility.yul\":3842:3846   */\n  0x24\n    /* \"#utility.yul\":3839:3840   */\n  0x00\n    /* \"#utility.yul\":3832:3847   */\n  revert\n    /* \"#utility.yul\":3858:4233   */\ntag_52:\n    /* \"#utility.yul\":3946:3947   */\n  0x01\n    /* \"#utility.yul\":3964:3969   */\n  dup2\n    /* \"#utility.yul\":3978:4227   */\ntag_87:\n    /* \"#utility.yul\":3999:4000   */\n  0x01\n    /* \"#utility.yul\":3989:3997   */\n  dup5\n    /* \"#utility.yul\":3986:4001   */\n  gt\n    /* \"#utility.yul\":3978:4227   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4049:4053   */\n  dup1\n    /* \"#utility.yul\":4044:4047   */\n  dup6\n    /* \"#utility.yul\":4040:4054   */\n  div\n    /* \"#utility.yul\":4034:4038   */\n  dup2\n    /* \"#utility.yul\":4031:4055   */\n  gt\n    /* \"#utility.yul\":4028:4078   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4058:4076   */\n  tag_91\n  tag_51\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4108:4109   */\n  0x01\n    /* \"#utility.yul\":4098:4106   */\n  dup5\n    /* \"#utility.yul\":4094:4110   */\n  and\n    /* \"#utility.yul\":4091:4140   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4122:4138   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":4091:4140   */\ntag_92:\n    /* \"#utility.yul\":4205:4206   */\n  0x01\n    /* \"#utility.yul\":4201:4217   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":4161:4176   */\n  dup1\n  mul\n    /* \"#utility.yul\":3978:4227   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":3858:4233   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4238:5140   */\ntag_53:\n    /* \"#utility.yul\":4287:4292   */\n  0x00\n    /* \"#utility.yul\":4317:4325   */\n  dup3\n    /* \"#utility.yul\":4307:4387   */\n  tag_94\n  jumpi\n  pop\n    /* \"#utility.yul\":4358:4359   */\n  0x01\n    /* \"#utility.yul\":4372:4377   */\n  jump(tag_93)\n    /* \"#utility.yul\":4307:4387   */\ntag_94:\n    /* \"#utility.yul\":4406:4410   */\n  dup2\n    /* \"#utility.yul\":4396:4472   */\n  tag_95\n  jumpi\n  pop\n    /* \"#utility.yul\":4443:4444   */\n  0x00\n    /* \"#utility.yul\":4457:4462   */\n  jump(tag_93)\n    /* \"#utility.yul\":4396:4472   */\ntag_95:\n    /* \"#utility.yul\":4488:4492   */\n  dup2\n    /* \"#utility.yul\":4506:4507   */\n  0x01\n    /* \"#utility.yul\":4501:4560   */\n  dup2\n  eq\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4574:4575   */\n  0x02\n    /* \"#utility.yul\":4569:4743   */\n  dup2\n  eq\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4481:4743   */\n  jump(tag_96)\n    /* \"#utility.yul\":4501:4560   */\ntag_97:\n    /* \"#utility.yul\":4531:4532   */\n  0x01\n    /* \"#utility.yul\":4522:4532   */\n  swap2\n  pop\n    /* \"#utility.yul\":4545:4550   */\n  pop\n  jump(tag_93)\n    /* \"#utility.yul\":4569:4743   */\ntag_98:\n    /* \"#utility.yul\":4606:4609   */\n  0xff\n    /* \"#utility.yul\":4596:4604   */\n  dup5\n    /* \"#utility.yul\":4593:4610   */\n  gt\n    /* \"#utility.yul\":4590:4633   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4613:4631   */\n  tag_100\n  tag_51\n  jump\t// in\ntag_100:\n  pop\n  pop\n    /* \"#utility.yul\":4669:4670   */\n  0x01\n    /* \"#utility.yul\":4655:4671   */\n  dup3\n  shl\n    /* \"#utility.yul\":4728:4733   */\n  jump(tag_93)\n    /* \"#utility.yul\":4481:4743   */\ntag_96:\n  pop\n    /* \"#utility.yul\":4827:4829   */\n  0x20\n    /* \"#utility.yul\":4817:4825   */\n  dup4\n    /* \"#utility.yul\":4814:4830   */\n  lt\n    /* \"#utility.yul\":4808:4811   */\n  0x0133\n    /* \"#utility.yul\":4802:4806   */\n  dup4\n    /* \"#utility.yul\":4799:4812   */\n  lt\n    /* \"#utility.yul\":4795:4831   */\n  and\n    /* \"#utility.yul\":4789:4791   */\n  0x4e\n    /* \"#utility.yul\":4779:4787   */\n  dup5\n    /* \"#utility.yul\":4776:4792   */\n  lt\n    /* \"#utility.yul\":4771:4773   */\n  0x0b\n    /* \"#utility.yul\":4765:4769   */\n  dup5\n    /* \"#utility.yul\":4762:4774   */\n  lt\n    /* \"#utility.yul\":4758:4793   */\n  and\n    /* \"#utility.yul\":4755:4832   */\n  or\n    /* \"#utility.yul\":4752:4955   */\n  iszero\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":4864:4883   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4940:4945   */\n  jump(tag_93)\n    /* \"#utility.yul\":4752:4955   */\ntag_101:\n    /* \"#utility.yul\":4987:5029   */\n  tag_102\n  not(0x00)\n    /* \"#utility.yul\":5012:5020   */\n  dup5\n    /* \"#utility.yul\":5006:5010   */\n  dup5\n    /* \"#utility.yul\":4987:5029   */\n  tag_52\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5065:5071   */\n  dup1\n    /* \"#utility.yul\":5061:5062   */\n  0x00\n    /* \"#utility.yul\":5057:5063   */\n  not\n    /* \"#utility.yul\":5053:5072   */\n  div\n    /* \"#utility.yul\":5044:5051   */\n  dup3\n    /* \"#utility.yul\":5041:5073   */\n  gt\n    /* \"#utility.yul\":5038:5096   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":5076:5094   */\n  tag_104\n  tag_51\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5114:5134   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":4238:5140   */\ntag_93:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5145:5285   */\ntag_22:\n    /* \"#utility.yul\":5203:5208   */\n  0x00\n    /* \"#utility.yul\":5232:5279   */\n  tag_106\n    /* \"#utility.yul\":5273:5277   */\n  0xff\n    /* \"#utility.yul\":5263:5271   */\n  dup5\n    /* \"#utility.yul\":5259:5278   */\n  and\n    /* \"#utility.yul\":5253:5257   */\n  dup4\n    /* \"#utility.yul\":5232:5279   */\n  tag_53\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5223:5279   */\n  swap4\n    /* \"#utility.yul\":5145:5285   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5290:5458   */\ntag_24:\n    /* \"#utility.yul\":5363:5372   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5394:5403   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5411:5426   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5405:5427   */\n  dup5\n  eq\n    /* \"#utility.yul\":5391:5428   */\n  or\n    /* \"#utility.yul\":5381:5452   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":5432:5450   */\n  tag_93\n  tag_51\n  jump\t// in\n    /* \"#utility.yul\":5463:5588   */\ntag_37:\n    /* \"#utility.yul\":5528:5537   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5549:5559   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5546:5582   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":5562:5580   */\n  tag_93\n  tag_51\n  jump\t// in\n    /* \"#utility.yul\":5943:6120   */\ntag_54:\n    /* \"contracts/SimpleToken.sol\":174:5605  contract TokenPreSale is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleToken.sol\":174:5605  contract TokenPreSale is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5ee09669\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xed338ff1\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf9931855\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x95d89b41\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa5ce413b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb7d68519\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x7165d19b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x7165d19b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x7547c7a3\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8f0794fe\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x5ee09669\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x23b872dd\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x499d7f96\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x499d7f96\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4ac530dc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4f3fc2df\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x518ab2a8\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x23b872dd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3a02a42d\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x0d505541\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x0d505541\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1cbaee2d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x1d0806ae\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x03e293a3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SimpleToken.sol\":363:394  uint256 public regularSalePrice */\n    tag_3:\n      tag_39\n      sload(0x09)\n      dup2\n      jump\n    tag_39:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/SimpleToken.sol\":363:394  uint256 public regularSalePrice */\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":1267:1281   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1260:1282   */\n      iszero\n        /* \"#utility.yul\":1242:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1230:1232   */\n      0x20\n        /* \"#utility.yul\":1215:1233   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_41\n        /* \"#utility.yul\":1102:1289   */\n      jump\n        /* \"contracts/SimpleToken.sol\":3832:4406  function calculateStakingReward(address user) public view returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_39)\n        /* \"contracts/SimpleToken.sol\":221:249  uint256 public saleStartTime */\n    tag_8:\n      tag_39\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":289:316  uint256 public initialPrice */\n    tag_9:\n      tag_39\n      sload(0x08)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_47\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":2006:2042   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1994:1996   */\n      0x20\n        /* \"#utility.yul\":1979:1997   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_41\n        /* \"#utility.yul\":1864:2048   */\n      jump\n        /* \"contracts/SimpleToken.sol\":4836:4944  function getStakedBalance(address user) external view returns (uint256) {... */\n    tag_12:\n      tag_39\n      tag_77\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":4922:4940  stakedAmount[user] */\n      and\n        /* \"contracts/SimpleToken.sol\":4899:4906  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4922:4940  stakedAmount[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":4922:4934  stakedAmount */\n      0x0d\n        /* \"contracts/SimpleToken.sol\":4922:4940  stakedAmount[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/SimpleToken.sol\":4836:4944  function getStakedBalance(address user) external view returns (uint256) {... */\n      jump\n        /* \"contracts/SimpleToken.sol\":800:849  mapping(address => uint256) public stakingRewards */\n    tag_13:\n      tag_39\n      tag_81\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_81:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":5112:5227  function getStakingStartDate(address user) external view returns (uint256) {... */\n    tag_14:\n      tag_39\n      tag_85\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":5201:5223  stakingTimestamp[user] */\n      and\n        /* \"contracts/SimpleToken.sol\":5178:5185  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5201:5223  stakingTimestamp[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":5201:5217  stakingTimestamp */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":5201:5223  stakingTimestamp[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/SimpleToken.sol\":5112:5227  function getStakingStartDate(address user) external view returns (uint256) {... */\n      jump\n        /* \"contracts/SimpleToken.sol\":532:564  uint256 public stakingRewardRate */\n    tag_15:\n      tag_39\n      sload(0x0c)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":498:523  uint256 public tokensSold */\n    tag_16:\n      tag_39\n      sload(0x0b)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":5405:5528  function getAccumulatedRewards(address user) external view returns (uint256) {... */\n    tag_17:\n      tag_39\n      tag_95\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_95:\n      tag_96\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_39\n      tag_99\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/SimpleToken.sol\":401:434  uint256 public weeklyIncreaseRate */\n    tag_20:\n      tag_39\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":2043:2561  function stakeTokens(uint256 amount) external {... */\n    tag_21:\n      tag_102\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2430:2481   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_41\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"contracts/SimpleToken.sol\":711:762  mapping(address => uint256) public stakingTimestamp */\n    tag_23:\n      tag_39\n      tag_116\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_116:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_24:\n      tag_43\n      tag_120\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":2692:3621  function unstakeTokens() external {... */\n    tag_25:\n      tag_102\n      tag_123\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_26:\n      tag_47\n      tag_125\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":4567:4687  function setStakingRewardRate(uint256 _rewardRate) external onlyOwner {... */\n    tag_27:\n      tag_102\n      tag_129\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_28:\n      tag_39\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/SimpleToken.sol\":256:282  uint256 public saleEndTime */\n    tag_29:\n      tag_39\n      sload(0x07)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_102\n      tag_140\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":616:663  mapping(address => uint256) public stakedAmount */\n    tag_31:\n      tag_39\n      tag_143\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_143:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_148\n      jump\t// in\n    tag_149:\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_151\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_150)\n    tag_151:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_152:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_152\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_150:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_50:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_153:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":3832:4406  function calculateStakingReward(address user) public view returns (uint256) {... */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":3942:3960  stakedAmount[user] */\n      dup2\n      and\n        /* \"contracts/SimpleToken.sol\":3899:3906  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3942:3960  stakedAmount[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":3942:3954  stakedAmount */\n      0x0d\n        /* \"contracts/SimpleToken.sol\":3942:3960  stakedAmount[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":3975:3992  stakedTokens == 0 */\n      dup1\n      dup3\n      sub\n        /* \"contracts/SimpleToken.sol\":3971:4029  if (stakedTokens == 0) {... */\n      tag_159\n      jumpi\n      pop\n        /* \"contracts/SimpleToken.sol\":4016:4017  0 */\n      0x00\n      swap3\n        /* \"contracts/SimpleToken.sol\":3832:4406  function calculateStakingReward(address user) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":3971:4029  if (stakedTokens == 0) {... */\n    tag_159:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":4080:4102  stakingTimestamp[user] */\n      dup4\n      and\n        /* \"contracts/SimpleToken.sol\":4041:4059  uint256 timeStaked */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4080:4102  stakingTimestamp[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":4080:4096  stakingTimestamp */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":4080:4102  stakingTimestamp[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":4062:4102  block.timestamp - stakingTimestamp[user] */\n      tag_160\n      swap1\n        /* \"contracts/SimpleToken.sol\":4062:4077  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":4062:4102  block.timestamp - stakingTimestamp[user] */\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"contracts/SimpleToken.sol\":4041:4102  uint256 timeStaked = block.timestamp - stakingTimestamp[user] */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4113:4143  uint256 stakingDurationInWeeks */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4146:4166  timeStaked / 1 weeks */\n      tag_162\n        /* \"contracts/SimpleToken.sol\":4159:4166  1 weeks */\n      0x093a80\n        /* \"contracts/SimpleToken.sol\":4041:4102  uint256 timeStaked = block.timestamp - stakingTimestamp[user] */\n      dup4\n        /* \"contracts/SimpleToken.sol\":4146:4166  timeStaked / 1 weeks */\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contracts/SimpleToken.sol\":4113:4166  uint256 stakingDurationInWeeks = timeStaked / 1 weeks */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4292:4306  uint256 reward */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4371:4374  100 */\n      0x64\n        /* \"contracts/SimpleToken.sol\":4345:4367  stakingDurationInWeeks */\n      dup3\n        /* \"contracts/SimpleToken.sol\":4325:4342  stakingRewardRate */\n      sload(0x0c)\n        /* \"contracts/SimpleToken.sol\":4310:4322  stakedTokens */\n      dup7\n        /* \"contracts/SimpleToken.sol\":4310:4342  stakedTokens * stakingRewardRate */\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"contracts/SimpleToken.sol\":4310:4367  stakedTokens * stakingRewardRate * stakingDurationInWeeks */\n      tag_166\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_166:\n        /* \"contracts/SimpleToken.sol\":4309:4374  (stakedTokens * stakingRewardRate * stakingDurationInWeeks) / 100 */\n      tag_167\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_167:\n        /* \"contracts/SimpleToken.sol\":4292:4374  uint256 reward = (stakedTokens * stakingRewardRate * stakingDurationInWeeks) / 100 */\n      swap7\n        /* \"contracts/SimpleToken.sol\":3832:4406  function calculateStakingReward(address user) public view returns (uint256) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_173:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":5405:5528  function getAccumulatedRewards(address user) external view returns (uint256) {... */\n    tag_96:\n        /* \"contracts/SimpleToken.sol\":5473:5480  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5496:5524  calculateStakingReward(user) */\n      tag_153\n        /* \"contracts/SimpleToken.sol\":5519:5523  user */\n      dup3\n        /* \"contracts/SimpleToken.sol\":5496:5518  calculateStakingReward */\n      tag_56\n        /* \"contracts/SimpleToken.sol\":5496:5524  calculateStakingReward(user) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":2043:2561  function stakeTokens(uint256 amount) external {... */\n    tag_110:\n        /* \"contracts/SimpleToken.sol\":2117:2118  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2108:2114  amount */\n      dup2\n        /* \"contracts/SimpleToken.sol\":2108:2118  amount > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":2100:2156  require(amount > 0, \"Amount must be greater than zero.\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4004:4006   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":2100:2156  require(amount > 0, \"Amount must be greater than zero.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3986:4007   */\n      mstore\n        /* \"#utility.yul\":4043:4045   */\n      0x21\n        /* \"#utility.yul\":4023:4041   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4016:4046   */\n      mstore\n        /* \"#utility.yul\":4082:4116   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":4062:4080   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4055:4117   */\n      mstore\n      shl(0xf9, 0x17)\n        /* \"#utility.yul\":4133:4151   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4126:4157   */\n      mstore\n        /* \"#utility.yul\":4174:4193   */\n      0x84\n      add\n        /* \"contracts/SimpleToken.sol\":2100:2156  require(amount > 0, \"Amount must be greater than zero.\") */\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/SimpleToken.sol\":2185:2195  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":2200:2206  amount */\n      dup2\n      gt\n        /* \"contracts/SimpleToken.sol\":2175:2206  balanceOf(msg.sender) >= amount */\n      iszero\n        /* \"contracts/SimpleToken.sol\":2167:2241  require(balanceOf(msg.sender) >= amount, \"Insufficient balance to stake.\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4406:4408   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":2167:2241  require(balanceOf(msg.sender) >= amount, \"Insufficient balance to stake.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4388:4409   */\n      mstore\n        /* \"#utility.yul\":4445:4447   */\n      0x1e\n        /* \"#utility.yul\":4425:4443   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4418:4448   */\n      mstore\n        /* \"#utility.yul\":4484:4516   */\n      0x496e73756666696369656e742062616c616e636520746f207374616b652e0000\n        /* \"#utility.yul\":4464:4482   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4457:4517   */\n      mstore\n        /* \"#utility.yul\":4534:4552   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":2167:2241  require(balanceOf(msg.sender) >= amount, \"Insufficient balance to stake.\") */\n      tag_189\n        /* \"#utility.yul\":4204:4558   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2167:2241  require(balanceOf(msg.sender) >= amount, \"Insufficient balance to stake.\") */\n    tag_192:\n        /* \"contracts/SimpleToken.sol\":2316:2360  _transfer(msg.sender, address(this), amount) */\n      tag_195\n        /* \"contracts/SimpleToken.sol\":2326:2336  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2346:2350  this */\n      address\n        /* \"contracts/SimpleToken.sol\":2353:2359  amount */\n      dup4\n        /* \"contracts/SimpleToken.sol\":2316:2325  _transfer */\n      tag_174\n        /* \"contracts/SimpleToken.sol\":2316:2360  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/SimpleToken.sol\":2425:2435  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2412:2436  stakedAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2412:2424  stakedAmount */\n      0x0d\n        /* \"contracts/SimpleToken.sol\":2412:2436  stakedAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2412:2446  stakedAmount[msg.sender] += amount */\n      dup1\n      sload\n        /* \"contracts/SimpleToken.sol\":2440:2446  amount */\n      dup4\n      swap3\n        /* \"contracts/SimpleToken.sol\":2412:2436  stakedAmount[msg.sender] */\n      swap1\n        /* \"contracts/SimpleToken.sol\":2412:2446  stakedAmount[msg.sender] += amount */\n      tag_196\n      swap1\n        /* \"contracts/SimpleToken.sol\":2440:2446  amount */\n      dup5\n      swap1\n        /* \"contracts/SimpleToken.sol\":2412:2446  stakedAmount[msg.sender] += amount */\n      tag_197\n      jump\t// in\n    tag_196:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":2474:2484  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2457:2485  stakingTimestamp[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2457:2473  stakingTimestamp */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":2457:2485  stakingTimestamp[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2488:2503  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":2457:2503  stakingTimestamp[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":2521:2553  TokensStaked(msg.sender, amount) */\n      mload\n      0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef\n      swap1\n      tag_198\n      swap1\n        /* \"contracts/SimpleToken.sol\":2546:2552  amount */\n      dup5\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2521:2553  TokensStaked(msg.sender, amount) */\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SimpleToken.sol\":2043:2561  function stakeTokens(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":2692:3621  function unstakeTokens() external {... */\n    tag_123:\n        /* \"contracts/SimpleToken.sol\":2773:2783  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2737:2757  uint256 stakedTokens */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2760:2784  stakedAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2760:2772  stakedAmount */\n      0x0d\n        /* \"contracts/SimpleToken.sol\":2760:2784  stakedAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":2803:2819  stakedTokens > 0 */\n      dup1\n        /* \"contracts/SimpleToken.sol\":2795:2841  require(stakedTokens > 0, \"No tokens staked.\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4895:4897   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":2795:2841  require(stakedTokens > 0, \"No tokens staked.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4877:4898   */\n      mstore\n        /* \"#utility.yul\":4934:4936   */\n      0x11\n        /* \"#utility.yul\":4914:4932   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4907:4937   */\n      mstore\n      shl(0x79, 0x2737903a37b5b2b7399039ba30b5b2b217)\n        /* \"#utility.yul\":4953:4971   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4946:4993   */\n      mstore\n        /* \"#utility.yul\":5010:5028   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":2795:2841  require(stakedTokens > 0, \"No tokens staked.\") */\n      tag_189\n        /* \"#utility.yul\":4693:5034   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2795:2841  require(stakedTokens > 0, \"No tokens staked.\") */\n    tag_207:\n        /* \"contracts/SimpleToken.sol\":2910:2920  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2854:2872  uint256 timeStaked */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2893:2921  stakingTimestamp[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2893:2909  stakingTimestamp */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":2893:2921  stakingTimestamp[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":2875:2921  block.timestamp - stakingTimestamp[msg.sender] */\n      tag_210\n      swap1\n        /* \"contracts/SimpleToken.sol\":2875:2890  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":2875:2921  block.timestamp - stakingTimestamp[msg.sender] */\n      tag_161\n      jump\t// in\n    tag_210:\n        /* \"contracts/SimpleToken.sol\":2854:2921  uint256 timeStaked = block.timestamp - stakingTimestamp[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":2932:2962  uint256 stakingDurationInWeeks */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2965:2985  timeStaked / 1 weeks */\n      tag_211\n        /* \"contracts/SimpleToken.sol\":2978:2985  1 weeks */\n      0x093a80\n        /* \"contracts/SimpleToken.sol\":2854:2921  uint256 timeStaked = block.timestamp - stakingTimestamp[msg.sender] */\n      dup4\n        /* \"contracts/SimpleToken.sol\":2965:2985  timeStaked / 1 weeks */\n      tag_163\n      jump\t// in\n    tag_211:\n        /* \"contracts/SimpleToken.sol\":2932:2985  uint256 stakingDurationInWeeks = timeStaked / 1 weeks */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":3139:3140  4 */\n      0x04\n        /* \"contracts/SimpleToken.sol\":3113:3135  stakingDurationInWeeks */\n      dup2\n        /* \"contracts/SimpleToken.sol\":3113:3140  stakingDurationInWeeks >= 4 */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":3105:3187  require(stakingDurationInWeeks >= 4, \"Tokens can only be unstaked after 4 weeks.\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5241:5243   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":3105:3187  require(stakingDurationInWeeks >= 4, \"Tokens can only be unstaked after 4 weeks.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5223:5244   */\n      mstore\n        /* \"#utility.yul\":5280:5282   */\n      0x2a\n        /* \"#utility.yul\":5260:5278   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5253:5283   */\n      mstore\n        /* \"#utility.yul\":5319:5353   */\n      0x546f6b656e732063616e206f6e6c7920626520756e7374616b65642061667465\n        /* \"#utility.yul\":5299:5317   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5292:5354   */\n      mstore\n      shl(0xb1, 0x39101a103bb2b2b5b997)\n        /* \"#utility.yul\":5370:5388   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5363:5403   */\n      mstore\n        /* \"#utility.yul\":5420:5439   */\n      0x84\n      add\n        /* \"contracts/SimpleToken.sol\":3105:3187  require(stakingDurationInWeeks >= 4, \"Tokens can only be unstaked after 4 weeks.\") */\n      tag_189\n        /* \"#utility.yul\":5039:5445   */\n      jump\n        /* \"contracts/SimpleToken.sol\":3105:3187  require(stakingDurationInWeeks >= 4, \"Tokens can only be unstaked after 4 weeks.\") */\n    tag_212:\n        /* \"contracts/SimpleToken.sol\":3238:3252  uint256 reward */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3255:3289  calculateStakingReward(msg.sender) */\n      tag_215\n        /* \"contracts/SimpleToken.sol\":3278:3288  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":3255:3277  calculateStakingReward */\n      tag_56\n        /* \"contracts/SimpleToken.sol\":3255:3289  calculateStakingReward(msg.sender) */\n      jump\t// in\n    tag_215:\n        /* \"contracts/SimpleToken.sol\":3353:3363  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":3367:3368  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3340:3364  stakedAmount[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":3340:3352  stakedAmount */\n      0x0d\n        /* \"contracts/SimpleToken.sol\":3340:3364  stakedAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SimpleToken.sol\":3340:3368  stakedAmount[msg.sender] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":3379:3395  stakingTimestamp */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":3379:3407  stakingTimestamp[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/SimpleToken.sol\":3379:3411  stakingTimestamp[msg.sender] = 0 */\n      sstore\n        /* \"contracts/SimpleToken.sol\":3238:3289  uint256 reward = calculateStakingReward(msg.sender) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SimpleToken.sol\":3488:3547  _transfer(address(this), msg.sender, stakedTokens + reward) */\n      tag_216\n      swap1\n        /* \"contracts/SimpleToken.sol\":3506:3510  this */\n      address\n      swap1\n        /* \"contracts/SimpleToken.sol\":3525:3546  stakedTokens + reward */\n      tag_217\n        /* \"contracts/SimpleToken.sol\":3238:3289  uint256 reward = calculateStakingReward(msg.sender) */\n      dup5\n        /* \"contracts/SimpleToken.sol\":3525:3537  stakedTokens */\n      dup9\n        /* \"contracts/SimpleToken.sol\":3525:3546  stakedTokens + reward */\n      tag_197\n      jump\t// in\n    tag_217:\n        /* \"contracts/SimpleToken.sol\":3488:3497  _transfer */\n      tag_174\n        /* \"contracts/SimpleToken.sol\":3488:3547  _transfer(address(this), msg.sender, stakedTokens + reward) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/SimpleToken.sol\":3565:3613  TokensUnstaked(msg.sender, stakedTokens, reward) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5624:5649   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":5680:5682   */\n      0x20\n        /* \"#utility.yul\":5665:5683   */\n      dup2\n      add\n        /* \"#utility.yul\":5658:5692   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/SimpleToken.sol\":3580:3590  msg.sender */\n      caller\n      swap2\n        /* \"contracts/SimpleToken.sol\":3565:3613  TokensUnstaked(msg.sender, stakedTokens, reward) */\n      0x6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336\n      swap2\n        /* \"#utility.yul\":5597:5615   */\n      add\n        /* \"contracts/SimpleToken.sol\":3565:3613  TokensUnstaked(msg.sender, stakedTokens, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SimpleToken.sol\":2726:3621  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":2692:3621  function unstakeTokens() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":4567:4687  function setStakingRewardRate(uint256 _rewardRate) external onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_224:\n        /* \"contracts/SimpleToken.sol\":4648:4665  stakingRewardRate */\n      0x0c\n        /* \"contracts/SimpleToken.sol\":4648:4679  stakingRewardRate = _rewardRate */\n      sstore\n        /* \"contracts/SimpleToken.sol\":4567:4687  function setStakingRewardRate(uint256 _rewardRate) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_228:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_189\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5923:5955   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5905:5956   */\n      mstore\n        /* \"#utility.yul\":5972:5990   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5965:5999   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6015:6033   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6008:6042   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5878:5896   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_189\n        /* \"#utility.yul\":5703:6048   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_236\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_189\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_245:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_189\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_189\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_236:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_189\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_189\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_261:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_264\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_250:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_267\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_267:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_268\n      swap1\n      pop\n      jump\n    tag_266:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5923:5955   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5905:5956   */\n      mstore\n        /* \"#utility.yul\":5972:5990   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":5965:5999   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":6015:6033   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6008:6042   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":5878:5896   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_189\n        /* \"#utility.yul\":5703:6048   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_268:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_272)\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_273\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_273:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:614   */\n    tag_46:\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup2\n        /* \"#utility.yul\":327:348   */\n      mstore\n        /* \"#utility.yul\":308:312   */\n      0x00\n        /* \"#utility.yul\":377:383   */\n      dup3\n        /* \"#utility.yul\":371:384   */\n      mload\n        /* \"#utility.yul\":420:426   */\n      dup1\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":404:413   */\n      dup5\n        /* \"#utility.yul\":400:418   */\n      add\n        /* \"#utility.yul\":393:427   */\n      mstore\n        /* \"#utility.yul\":479:485   */\n      dup1\n        /* \"#utility.yul\":474:476   */\n      0x20\n        /* \"#utility.yul\":466:472   */\n      dup6\n        /* \"#utility.yul\":462:477   */\n      add\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":446:455   */\n      dup6\n        /* \"#utility.yul\":442:460   */\n      add\n        /* \"#utility.yul\":436:486   */\n      mcopy\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":530:532   */\n      0x40\n        /* \"#utility.yul\":521:527   */\n      dup3\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:528   */\n      add\n        /* \"#utility.yul\":502:533   */\n      add\n        /* \"#utility.yul\":495:537   */\n      mstore\n        /* \"#utility.yul\":605:607   */\n      0x40\n        /* \"#utility.yul\":598:600   */\n      0x1f\n        /* \"#utility.yul\":594:601   */\n      not\n        /* \"#utility.yul\":589:591   */\n      0x1f\n        /* \"#utility.yul\":581:587   */\n      dup4\n        /* \"#utility.yul\":577:592   */\n      add\n        /* \"#utility.yul\":573:602   */\n      and\n        /* \"#utility.yul\":562:571   */\n      dup5\n        /* \"#utility.yul\":558:603   */\n      add\n        /* \"#utility.yul\":554:608   */\n      add\n        /* \"#utility.yul\":546:608   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":196:614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":619:792   */\n    tag_274:\n        /* \"#utility.yul\":687:707   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":736:767   */\n      dup2\n      and\n        /* \"#utility.yul\":726:768   */\n      dup2\n      eq\n        /* \"#utility.yul\":716:786   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":782:783   */\n      0x00\n        /* \"#utility.yul\":779:780   */\n      dup1\n        /* \"#utility.yul\":772:784   */\n      revert\n        /* \"#utility.yul\":716:786   */\n    tag_280:\n        /* \"#utility.yul\":619:792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":797:1097   */\n    tag_49:\n        /* \"#utility.yul\":865:871   */\n      0x00\n        /* \"#utility.yul\":873:879   */\n      dup1\n        /* \"#utility.yul\":926:928   */\n      0x40\n        /* \"#utility.yul\":914:923   */\n      dup4\n        /* \"#utility.yul\":905:912   */\n      dup6\n        /* \"#utility.yul\":901:924   */\n      sub\n        /* \"#utility.yul\":897:929   */\n      slt\n        /* \"#utility.yul\":894:946   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":942:943   */\n      0x00\n        /* \"#utility.yul\":939:940   */\n      dup1\n        /* \"#utility.yul\":932:944   */\n      revert\n        /* \"#utility.yul\":894:946   */\n    tag_282:\n        /* \"#utility.yul\":965:994   */\n      tag_283\n        /* \"#utility.yul\":984:993   */\n      dup4\n        /* \"#utility.yul\":965:994   */\n      tag_274\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":955:994   */\n      swap5\n        /* \"#utility.yul\":1063:1065   */\n      0x20\n        /* \"#utility.yul\":1048:1066   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1035:1067   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":797:1097   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1480   */\n    tag_55:\n        /* \"#utility.yul\":1353:1359   */\n      0x00\n        /* \"#utility.yul\":1406:1408   */\n      0x20\n        /* \"#utility.yul\":1394:1403   */\n      dup3\n        /* \"#utility.yul\":1385:1392   */\n      dup5\n        /* \"#utility.yul\":1381:1404   */\n      sub\n        /* \"#utility.yul\":1377:1409   */\n      slt\n        /* \"#utility.yul\":1374:1426   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1419:1420   */\n      dup1\n        /* \"#utility.yul\":1412:1424   */\n      revert\n        /* \"#utility.yul\":1374:1426   */\n    tag_286:\n        /* \"#utility.yul\":1445:1474   */\n      tag_287\n        /* \"#utility.yul\":1464:1473   */\n      dup3\n        /* \"#utility.yul\":1445:1474   */\n      tag_274\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1435:1474   */\n      swap4\n        /* \"#utility.yul\":1294:1480   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1485:1859   */\n    tag_69:\n        /* \"#utility.yul\":1562:1568   */\n      0x00\n        /* \"#utility.yul\":1570:1576   */\n      dup1\n        /* \"#utility.yul\":1578:1584   */\n      0x00\n        /* \"#utility.yul\":1631:1633   */\n      0x60\n        /* \"#utility.yul\":1619:1628   */\n      dup5\n        /* \"#utility.yul\":1610:1617   */\n      dup7\n        /* \"#utility.yul\":1606:1629   */\n      sub\n        /* \"#utility.yul\":1602:1634   */\n      slt\n        /* \"#utility.yul\":1599:1651   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":1647:1648   */\n      0x00\n        /* \"#utility.yul\":1644:1645   */\n      dup1\n        /* \"#utility.yul\":1637:1649   */\n      revert\n        /* \"#utility.yul\":1599:1651   */\n    tag_289:\n        /* \"#utility.yul\":1670:1699   */\n      tag_290\n        /* \"#utility.yul\":1689:1698   */\n      dup5\n        /* \"#utility.yul\":1670:1699   */\n      tag_274\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":1660:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1718:1756   */\n      tag_291\n        /* \"#utility.yul\":1752:1754   */\n      0x20\n        /* \"#utility.yul\":1741:1750   */\n      dup6\n        /* \"#utility.yul\":1737:1755   */\n      add\n        /* \"#utility.yul\":1718:1756   */\n      tag_274\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1485:1859   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1708:1756   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1825:1827   */\n      0x40\n        /* \"#utility.yul\":1810:1828   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1797:1829   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1485:1859   */\n      jump\t// out\n        /* \"#utility.yul\":2053:2279   */\n    tag_109:\n        /* \"#utility.yul\":2112:2118   */\n      0x00\n        /* \"#utility.yul\":2165:2167   */\n      0x20\n        /* \"#utility.yul\":2153:2162   */\n      dup3\n        /* \"#utility.yul\":2144:2151   */\n      dup5\n        /* \"#utility.yul\":2140:2163   */\n      sub\n        /* \"#utility.yul\":2136:2168   */\n      slt\n        /* \"#utility.yul\":2133:2185   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2178:2179   */\n      dup1\n        /* \"#utility.yul\":2171:2183   */\n      revert\n        /* \"#utility.yul\":2133:2185   */\n    tag_294:\n      pop\n        /* \"#utility.yul\":2226:2249   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2053:2279   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2492:2752   */\n    tag_133:\n        /* \"#utility.yul\":2560:2566   */\n      0x00\n        /* \"#utility.yul\":2568:2574   */\n      dup1\n        /* \"#utility.yul\":2621:2623   */\n      0x40\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2600:2607   */\n      dup6\n        /* \"#utility.yul\":2596:2619   */\n      sub\n        /* \"#utility.yul\":2592:2624   */\n      slt\n        /* \"#utility.yul\":2589:2641   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":2637:2638   */\n      0x00\n        /* \"#utility.yul\":2634:2635   */\n      dup1\n        /* \"#utility.yul\":2627:2639   */\n      revert\n        /* \"#utility.yul\":2589:2641   */\n    tag_297:\n        /* \"#utility.yul\":2660:2689   */\n      tag_298\n        /* \"#utility.yul\":2679:2688   */\n      dup4\n        /* \"#utility.yul\":2660:2689   */\n      tag_274\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":2650:2689   */\n      swap2\n      pop\n        /* \"#utility.yul\":2708:2746   */\n      tag_299\n        /* \"#utility.yul\":2742:2744   */\n      0x20\n        /* \"#utility.yul\":2731:2740   */\n      dup5\n        /* \"#utility.yul\":2727:2745   */\n      add\n        /* \"#utility.yul\":2708:2746   */\n      tag_274\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2698:2746   */\n      swap1\n      pop\n        /* \"#utility.yul\":2492:2752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:3137   */\n    tag_148:\n        /* \"#utility.yul\":2836:2837   */\n      0x01\n        /* \"#utility.yul\":2832:2844   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2879:2891   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2900:2961   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":2954:2958   */\n      0x7f\n        /* \"#utility.yul\":2946:2952   */\n      dup3\n        /* \"#utility.yul\":2942:2959   */\n      and\n        /* \"#utility.yul\":2932:2959   */\n      swap2\n      pop\n        /* \"#utility.yul\":2900:2961   */\n    tag_301:\n        /* \"#utility.yul\":3007:3009   */\n      0x20\n        /* \"#utility.yul\":2999:3005   */\n      dup3\n        /* \"#utility.yul\":2996:3010   */\n      lt\n        /* \"#utility.yul\":2976:2994   */\n      dup2\n        /* \"#utility.yul\":2973:3011   */\n      sub\n        /* \"#utility.yul\":2970:3131   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":3053:3063   */\n      0x4e487b71\n        /* \"#utility.yul\":3048:3051   */\n      0xe0\n        /* \"#utility.yul\":3044:3064   */\n      shl\n        /* \"#utility.yul\":3041:3042   */\n      0x00\n        /* \"#utility.yul\":3034:3065   */\n      mstore\n        /* \"#utility.yul\":3088:3092   */\n      0x22\n        /* \"#utility.yul\":3085:3086   */\n      0x04\n        /* \"#utility.yul\":3078:3093   */\n      mstore\n        /* \"#utility.yul\":3116:3120   */\n      0x24\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3106:3121   */\n      revert\n        /* \"#utility.yul\":2970:3131   */\n    tag_302:\n      pop\n        /* \"#utility.yul\":2757:3137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3142:3269   */\n    tag_275:\n        /* \"#utility.yul\":3203:3213   */\n      0x4e487b71\n        /* \"#utility.yul\":3198:3201   */\n      0xe0\n        /* \"#utility.yul\":3194:3214   */\n      shl\n        /* \"#utility.yul\":3191:3192   */\n      0x00\n        /* \"#utility.yul\":3184:3215   */\n      mstore\n        /* \"#utility.yul\":3234:3238   */\n      0x11\n        /* \"#utility.yul\":3231:3232   */\n      0x04\n        /* \"#utility.yul\":3224:3239   */\n      mstore\n        /* \"#utility.yul\":3258:3262   */\n      0x24\n        /* \"#utility.yul\":3255:3256   */\n      0x00\n        /* \"#utility.yul\":3248:3263   */\n      revert\n        /* \"#utility.yul\":3274:3402   */\n    tag_161:\n        /* \"#utility.yul\":3341:3350   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3362:3373   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3359:3396   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3376:3394   */\n      tag_153\n      tag_275\n      jump\t// in\n        /* \"#utility.yul\":3407:3624   */\n    tag_163:\n        /* \"#utility.yul\":3447:3448   */\n      0x00\n        /* \"#utility.yul\":3473:3474   */\n      dup3\n        /* \"#utility.yul\":3463:3595   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":3517:3527   */\n      0x4e487b71\n        /* \"#utility.yul\":3512:3515   */\n      0xe0\n        /* \"#utility.yul\":3508:3528   */\n      shl\n        /* \"#utility.yul\":3505:3506   */\n      0x00\n        /* \"#utility.yul\":3498:3529   */\n      mstore\n        /* \"#utility.yul\":3552:3556   */\n      0x12\n        /* \"#utility.yul\":3549:3550   */\n      0x04\n        /* \"#utility.yul\":3542:3557   */\n      mstore\n        /* \"#utility.yul\":3580:3584   */\n      0x24\n        /* \"#utility.yul\":3577:3578   */\n      0x00\n        /* \"#utility.yul\":3570:3585   */\n      revert\n        /* \"#utility.yul\":3463:3595   */\n    tag_308:\n      pop\n        /* \"#utility.yul\":3609:3618   */\n      div\n      swap1\n        /* \"#utility.yul\":3407:3624   */\n      jump\t// out\n        /* \"#utility.yul\":3629:3797   */\n    tag_165:\n        /* \"#utility.yul\":3702:3711   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3733:3742   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3750:3765   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3744:3766   */\n      dup5\n      eq\n        /* \"#utility.yul\":3730:3767   */\n      or\n        /* \"#utility.yul\":3720:3791   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3771:3789   */\n      tag_153\n      tag_275\n      jump\t// in\n        /* \"#utility.yul\":4563:4688   */\n    tag_197:\n        /* \"#utility.yul\":4628:4637   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4649:4659   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4646:4682   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":4662:4680   */\n      tag_153\n      tag_275\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220e85ebc57c42d36536ad3d0afceace7a65c9d8e068baba1ff4e42969b6085e54264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1051": {
									"entryPoint": null,
									"id": 1051,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 336,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 255,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 392,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1134,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 776,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6122:7",
										"nodeType": "YulBlock",
										"src": "0:6122:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "180:692:7",
													"nodeType": "YulBlock",
													"src": "180:692:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "227:16:7",
																"nodeType": "YulBlock",
																"src": "227:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "236:1:7",
																					"nodeType": "YulLiteral",
																					"src": "236:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "239:1:7",
																					"nodeType": "YulLiteral",
																					"src": "239:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "229:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:7"
																			},
																			"nativeSrc": "229:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "229:12:7"
																		},
																		"nativeSrc": "229:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "229:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "201:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "201:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "210:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "210:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "197:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "197:3:7"
																		},
																		"nativeSrc": "197:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "197:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "222:3:7",
																		"nodeType": "YulLiteral",
																		"src": "222:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "193:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "193:3:7"
																},
																"nativeSrc": "193:33:7",
																"nodeType": "YulFunctionCall",
																"src": "193:33:7"
															},
															"nativeSrc": "190:53:7",
															"nodeType": "YulIf",
															"src": "190:53:7"
														},
														{
															"nativeSrc": "252:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "252:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "271:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "271:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "265:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "265:5:7"
																},
																"nativeSrc": "265:16:7",
																"nodeType": "YulFunctionCall",
																"src": "265:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "256:5:7",
																	"nodeType": "YulTypedName",
																	"src": "256:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:16:7",
																"nodeType": "YulBlock",
																"src": "344:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "353:1:7",
																					"nodeType": "YulLiteral",
																					"src": "353:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "356:1:7",
																					"nodeType": "YulLiteral",
																					"src": "356:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "346:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "346:6:7"
																			},
																			"nativeSrc": "346:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "346:12:7"
																		},
																		"nativeSrc": "346:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "346:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "303:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "303:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "314:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "314:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "329:3:7",
																										"nodeType": "YulLiteral",
																										"src": "329:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "334:1:7",
																										"nodeType": "YulLiteral",
																										"src": "334:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "325:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "325:3:7"
																								},
																								"nativeSrc": "325:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "325:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "338:1:7",
																								"nodeType": "YulLiteral",
																								"src": "338:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "321:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "321:3:7"
																						},
																						"nativeSrc": "321:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "321:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "310:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "310:3:7"
																				},
																				"nativeSrc": "310:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "310:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "300:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "300:2:7"
																		},
																		"nativeSrc": "300:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "300:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "293:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "293:6:7"
																},
																"nativeSrc": "293:50:7",
																"nodeType": "YulFunctionCall",
																"src": "293:50:7"
															},
															"nativeSrc": "290:70:7",
															"nodeType": "YulIf",
															"src": "290:70:7"
														},
														{
															"nativeSrc": "369:15:7",
															"nodeType": "YulAssignment",
															"src": "369:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "379:5:7",
																"nodeType": "YulIdentifier",
																"src": "379:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "369:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "369:6:7"
																}
															]
														},
														{
															"nativeSrc": "393:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "393:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "408:1:7",
																"nodeType": "YulLiteral",
																"src": "408:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "397:7:7",
																	"nodeType": "YulTypedName",
																	"src": "397:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "418:36:7",
															"nodeType": "YulAssignment",
															"src": "418:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "439:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "439:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "450:2:7",
																				"nodeType": "YulLiteral",
																				"src": "450:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "435:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "435:3:7"
																		},
																		"nativeSrc": "435:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "435:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "429:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "429:5:7"
																},
																"nativeSrc": "429:25:7",
																"nodeType": "YulFunctionCall",
																"src": "429:25:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "418:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "418:7:7"
																}
															]
														},
														{
															"nativeSrc": "463:17:7",
															"nodeType": "YulAssignment",
															"src": "463:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "473:7:7",
																"nodeType": "YulIdentifier",
																"src": "473:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "463:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "463:6:7"
																}
															]
														},
														{
															"nativeSrc": "489:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "489:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "504:1:7",
																"nodeType": "YulLiteral",
																"src": "504:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "493:7:7",
																	"nodeType": "YulTypedName",
																	"src": "493:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "514:36:7",
															"nodeType": "YulAssignment",
															"src": "514:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "535:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "535:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "546:2:7",
																				"nodeType": "YulLiteral",
																				"src": "546:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "531:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "531:3:7"
																		},
																		"nativeSrc": "531:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "531:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "525:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "525:5:7"
																},
																"nativeSrc": "525:25:7",
																"nodeType": "YulFunctionCall",
																"src": "525:25:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "514:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "514:7:7"
																}
															]
														},
														{
															"nativeSrc": "559:17:7",
															"nodeType": "YulAssignment",
															"src": "559:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "569:7:7",
																"nodeType": "YulIdentifier",
																"src": "569:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "559:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "559:6:7"
																}
															]
														},
														{
															"nativeSrc": "585:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "585:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "600:1:7",
																"nodeType": "YulLiteral",
																"src": "600:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "589:7:7",
																	"nodeType": "YulTypedName",
																	"src": "589:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "610:36:7",
															"nodeType": "YulAssignment",
															"src": "610:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "631:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "631:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "642:2:7",
																				"nodeType": "YulLiteral",
																				"src": "642:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nativeSrc": "627:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "627:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "621:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "621:5:7"
																},
																"nativeSrc": "621:25:7",
																"nodeType": "YulFunctionCall",
																"src": "621:25:7"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "610:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "610:7:7"
																}
															]
														},
														{
															"nativeSrc": "655:17:7",
															"nodeType": "YulAssignment",
															"src": "655:17:7",
															"value": {
																"name": "value_3",
																"nativeSrc": "665:7:7",
																"nodeType": "YulIdentifier",
																"src": "665:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "655:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:7"
																}
															]
														},
														{
															"nativeSrc": "681:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "681:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "696:1:7",
																"nodeType": "YulLiteral",
																"src": "696:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "685:7:7",
																	"nodeType": "YulTypedName",
																	"src": "685:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "706:37:7",
															"nodeType": "YulAssignment",
															"src": "706:37:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "727:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "738:3:7",
																				"nodeType": "YulLiteral",
																				"src": "738:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "723:3:7"
																		},
																		"nativeSrc": "723:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "723:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "717:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:5:7"
																},
																"nativeSrc": "717:26:7",
																"nodeType": "YulFunctionCall",
																"src": "717:26:7"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "706:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "706:7:7"
																}
															]
														},
														{
															"nativeSrc": "752:17:7",
															"nodeType": "YulAssignment",
															"src": "752:17:7",
															"value": {
																"name": "value_4",
																"nativeSrc": "762:7:7",
																"nodeType": "YulIdentifier",
																"src": "762:7:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:7"
																}
															]
														},
														{
															"nativeSrc": "778:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "778:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "793:1:7",
																"nodeType": "YulLiteral",
																"src": "793:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "782:7:7",
																	"nodeType": "YulTypedName",
																	"src": "782:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "803:37:7",
															"nodeType": "YulAssignment",
															"src": "803:37:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "824:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "824:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "835:3:7",
																				"nodeType": "YulLiteral",
																				"src": "835:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "820:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "820:3:7"
																		},
																		"nativeSrc": "820:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "820:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "814:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "814:5:7"
																},
																"nativeSrc": "814:26:7",
																"nodeType": "YulFunctionCall",
																"src": "814:26:7"
															},
															"variableNames": [
																{
																	"name": "value_5",
																	"nativeSrc": "803:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "803:7:7"
																}
															]
														},
														{
															"nativeSrc": "849:17:7",
															"nodeType": "YulAssignment",
															"src": "849:17:7",
															"value": {
																"name": "value_5",
																"nativeSrc": "859:7:7",
																"nodeType": "YulIdentifier",
																"src": "859:7:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "849:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "14:858:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "106:9:7",
														"nodeType": "YulTypedName",
														"src": "106:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "117:7:7",
														"nodeType": "YulTypedName",
														"src": "117:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "129:6:7",
														"nodeType": "YulTypedName",
														"src": "129:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "137:6:7",
														"nodeType": "YulTypedName",
														"src": "137:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "145:6:7",
														"nodeType": "YulTypedName",
														"src": "145:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "153:6:7",
														"nodeType": "YulTypedName",
														"src": "153:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "161:6:7",
														"nodeType": "YulTypedName",
														"src": "161:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "169:6:7",
														"nodeType": "YulTypedName",
														"src": "169:6:7",
														"type": ""
													}
												],
												"src": "14:858:7"
											},
											{
												"body": {
													"nativeSrc": "909:95:7",
													"nodeType": "YulBlock",
													"src": "909:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "926:1:7",
																		"nodeType": "YulLiteral",
																		"src": "926:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "933:3:7",
																				"nodeType": "YulLiteral",
																				"src": "933:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "938:10:7",
																				"nodeType": "YulLiteral",
																				"src": "938:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "929:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "929:3:7"
																		},
																		"nativeSrc": "929:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "929:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "919:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:7"
																},
																"nativeSrc": "919:31:7",
																"nodeType": "YulFunctionCall",
																"src": "919:31:7"
															},
															"nativeSrc": "919:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "919:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "966:1:7",
																		"nodeType": "YulLiteral",
																		"src": "966:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "969:4:7",
																		"nodeType": "YulLiteral",
																		"src": "969:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "959:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "959:6:7"
																},
																"nativeSrc": "959:15:7",
																"nodeType": "YulFunctionCall",
																"src": "959:15:7"
															},
															"nativeSrc": "959:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "959:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "990:1:7",
																		"nodeType": "YulLiteral",
																		"src": "990:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "993:4:7",
																		"nodeType": "YulLiteral",
																		"src": "993:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "983:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "983:6:7"
																},
																"nativeSrc": "983:15:7",
																"nodeType": "YulFunctionCall",
																"src": "983:15:7"
															},
															"nativeSrc": "983:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "983:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "877:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "877:127:7"
											},
											{
												"body": {
													"nativeSrc": "1064:325:7",
													"nodeType": "YulBlock",
													"src": "1064:325:7",
													"statements": [
														{
															"nativeSrc": "1074:22:7",
															"nodeType": "YulAssignment",
															"src": "1074:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1088:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1088:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1091:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1091:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1084:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1084:3:7"
																},
																"nativeSrc": "1084:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1084:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:7"
																}
															]
														},
														{
															"nativeSrc": "1105:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1105:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1135:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1135:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1141:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1141:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1131:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1131:3:7"
																},
																"nativeSrc": "1131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1109:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1109:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1182:31:7",
																"nodeType": "YulBlock",
																"src": "1182:31:7",
																"statements": [
																	{
																		"nativeSrc": "1184:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1184:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1198:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1198:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1206:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1206:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1194:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1194:3:7"
																			},
																			"nativeSrc": "1194:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1194:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1184:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1184:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1162:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1162:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:7"
																},
																"nativeSrc": "1155:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1155:26:7"
															},
															"nativeSrc": "1152:61:7",
															"nodeType": "YulIf",
															"src": "1152:61:7"
														},
														{
															"body": {
																"nativeSrc": "1272:111:7",
																"nodeType": "YulBlock",
																"src": "1272:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1293:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1293:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1300:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1300:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1305:10:7",
																							"nodeType": "YulLiteral",
																							"src": "1305:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1296:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1296:3:7"
																					},
																					"nativeSrc": "1296:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1296:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1286:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1286:6:7"
																			},
																			"nativeSrc": "1286:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1286:31:7"
																		},
																		"nativeSrc": "1286:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1286:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1337:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1337:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1340:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1340:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1330:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1330:6:7"
																			},
																			"nativeSrc": "1330:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1330:15:7"
																		},
																		"nativeSrc": "1330:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1330:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1365:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1368:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1368:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:7"
																			},
																			"nativeSrc": "1358:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1358:15:7"
																		},
																		"nativeSrc": "1358:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1228:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1228:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1251:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1259:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1259:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1248:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1248:2:7"
																		},
																		"nativeSrc": "1248:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1248:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1225:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1225:2:7"
																},
																"nativeSrc": "1225:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1225:38:7"
															},
															"nativeSrc": "1222:161:7",
															"nodeType": "YulIf",
															"src": "1222:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1009:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1044:4:7",
														"nodeType": "YulTypedName",
														"src": "1044:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1053:6:7",
														"nodeType": "YulTypedName",
														"src": "1053:6:7",
														"type": ""
													}
												],
												"src": "1009:380:7"
											},
											{
												"body": {
													"nativeSrc": "1450:65:7",
													"nodeType": "YulBlock",
													"src": "1450:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1467:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1470:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1470:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1460:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:7"
																},
																"nativeSrc": "1460:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1460:14:7"
															},
															"nativeSrc": "1460:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1460:14:7"
														},
														{
															"nativeSrc": "1483:26:7",
															"nodeType": "YulAssignment",
															"src": "1483:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1504:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1504:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1491:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1491:9:7"
																},
																"nativeSrc": "1491:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1491:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1483:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1483:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1394:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1433:3:7",
														"nodeType": "YulTypedName",
														"src": "1433:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1441:4:7",
														"nodeType": "YulTypedName",
														"src": "1441:4:7",
														"type": ""
													}
												],
												"src": "1394:121:7"
											},
											{
												"body": {
													"nativeSrc": "1601:437:7",
													"nodeType": "YulBlock",
													"src": "1601:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1634:398:7",
																"nodeType": "YulBlock",
																"src": "1634:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1655:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1655:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1658:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1648:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1648:6:7"
																			},
																			"nativeSrc": "1648:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1648:16:7"
																		},
																		"nativeSrc": "1648:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1648:16:7"
																	},
																	{
																		"nativeSrc": "1677:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1677:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1699:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1699:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1702:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1702:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1689:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1689:9:7"
																			},
																			"nativeSrc": "1689:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1689:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1681:4:7",
																				"nodeType": "YulTypedName",
																				"src": "1681:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1720:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1720:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1743:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1743:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1753:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1753:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1760:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1760:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1772:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1772:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1756:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1756:3:7"
																							},
																							"nativeSrc": "1756:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1756:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1749:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1749:3:7"
																					},
																					"nativeSrc": "1749:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1749:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1739:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1739:3:7"
																			},
																			"nativeSrc": "1739:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1739:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1724:11:7",
																				"nodeType": "YulTypedName",
																				"src": "1724:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1814:23:7",
																			"nodeType": "YulBlock",
																			"src": "1814:23:7",
																			"statements": [
																				{
																					"nativeSrc": "1816:19:7",
																					"nodeType": "YulAssignment",
																					"src": "1816:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1831:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1831:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1816:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "1816:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1796:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "1796:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1808:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1808:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1793:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1793:2:7"
																			},
																			"nativeSrc": "1793:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1793:20:7"
																		},
																		"nativeSrc": "1790:47:7",
																		"nodeType": "YulIf",
																		"src": "1790:47:7"
																	},
																	{
																		"nativeSrc": "1850:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1850:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1864:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1864:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1874:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1874:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1881:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1881:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1886:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1886:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1877:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1877:3:7"
																							},
																							"nativeSrc": "1877:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1877:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1870:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1870:3:7"
																					},
																					"nativeSrc": "1870:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1870:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1860:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1860:3:7"
																			},
																			"nativeSrc": "1860:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1860:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1854:2:7",
																				"nodeType": "YulTypedName",
																				"src": "1854:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1904:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1904:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1917:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "1917:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1908:5:7",
																				"nodeType": "YulTypedName",
																				"src": "1908:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2002:20:7",
																			"nodeType": "YulBlock",
																			"src": "2002:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2011:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2011:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2018:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2018:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2004:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2004:6:7"
																						},
																						"nativeSrc": "2004:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2004:16:7"
																					},
																					"nativeSrc": "2004:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "2004:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1952:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1952:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1959:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1959:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1949:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1949:2:7"
																			},
																			"nativeSrc": "1949:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:13:7"
																		},
																		"nativeSrc": "1941:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1963:26:7",
																			"nodeType": "YulBlock",
																			"src": "1963:26:7",
																			"statements": [
																				{
																					"nativeSrc": "1965:22:7",
																					"nodeType": "YulAssignment",
																					"src": "1965:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1978:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1978:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1985:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1985:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1974:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1974:3:7"
																						},
																						"nativeSrc": "1974:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1974:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1965:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1965:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1945:3:7",
																			"nodeType": "YulBlock",
																			"src": "1945:3:7",
																			"statements": []
																		},
																		"src": "1941:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1617:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1617:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1622:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1614:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1614:2:7"
																},
																"nativeSrc": "1614:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1614:11:7"
															},
															"nativeSrc": "1611:421:7",
															"nodeType": "YulIf",
															"src": "1611:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1520:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1573:5:7",
														"nodeType": "YulTypedName",
														"src": "1573:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1580:3:7",
														"nodeType": "YulTypedName",
														"src": "1580:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1585:10:7",
														"nodeType": "YulTypedName",
														"src": "1585:10:7",
														"type": ""
													}
												],
												"src": "1520:518:7"
											},
											{
												"body": {
													"nativeSrc": "2128:81:7",
													"nodeType": "YulBlock",
													"src": "2128:81:7",
													"statements": [
														{
															"nativeSrc": "2138:65:7",
															"nodeType": "YulAssignment",
															"src": "2138:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2153:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2153:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2171:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2171:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2174:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2174:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2167:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2167:3:7"
																								},
																								"nativeSrc": "2167:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2167:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2184:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2184:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2180:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2180:3:7"
																								},
																								"nativeSrc": "2180:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2180:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2163:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2163:3:7"
																						},
																						"nativeSrc": "2163:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2163:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2159:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2159:3:7"
																				},
																				"nativeSrc": "2159:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2159:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2149:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:7"
																		},
																		"nativeSrc": "2149:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2195:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2195:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2198:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2198:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2191:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2191:3:7"
																		},
																		"nativeSrc": "2191:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2191:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2146:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2146:2:7"
																},
																"nativeSrc": "2146:57:7",
																"nodeType": "YulFunctionCall",
																"src": "2146:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2138:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2138:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2043:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2105:4:7",
														"nodeType": "YulTypedName",
														"src": "2105:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2111:3:7",
														"nodeType": "YulTypedName",
														"src": "2111:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2119:4:7",
														"nodeType": "YulTypedName",
														"src": "2119:4:7",
														"type": ""
													}
												],
												"src": "2043:166:7"
											},
											{
												"body": {
													"nativeSrc": "2310:1203:7",
													"nodeType": "YulBlock",
													"src": "2310:1203:7",
													"statements": [
														{
															"nativeSrc": "2320:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2320:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2340:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2340:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2334:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2334:5:7"
																},
																"nativeSrc": "2334:10:7",
																"nodeType": "YulFunctionCall",
																"src": "2334:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2324:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2324:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2387:22:7",
																"nodeType": "YulBlock",
																"src": "2387:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2389:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2389:16:7"
																			},
																			"nativeSrc": "2389:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2389:18:7"
																		},
																		"nativeSrc": "2389:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2389:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2359:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2359:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2375:2:7",
																						"nodeType": "YulLiteral",
																						"src": "2375:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2379:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2379:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2371:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2371:3:7"
																				},
																				"nativeSrc": "2371:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2371:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2383:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2383:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2367:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2367:3:7"
																		},
																		"nativeSrc": "2367:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2356:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2356:2:7"
																},
																"nativeSrc": "2356:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2356:30:7"
															},
															"nativeSrc": "2353:56:7",
															"nodeType": "YulIf",
															"src": "2353:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2500:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2500:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2494:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2494:5:7"
																				},
																				"nativeSrc": "2494:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2494:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2468:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "2468:25:7"
																		},
																		"nativeSrc": "2468:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2468:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2508:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2508:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:97:7"
															},
															"nativeSrc": "2418:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:97:7"
														},
														{
															"nativeSrc": "2524:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2524:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2541:1:7",
																"nodeType": "YulLiteral",
																"src": "2541:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2528:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2528:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2551:17:7",
															"nodeType": "YulAssignment",
															"src": "2551:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2564:4:7",
																"nodeType": "YulLiteral",
																"src": "2564:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2551:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2551:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2614:642:7",
																		"nodeType": "YulBlock",
																		"src": "2614:642:7",
																		"statements": [
																			{
																				"nativeSrc": "2628:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2628:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2647:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2647:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2659:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2659:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2655:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:7"
																							},
																							"nativeSrc": "2655:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2655:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2643:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:7"
																					},
																					"nativeSrc": "2643:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2632:7:7",
																						"nodeType": "YulTypedName",
																						"src": "2632:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2676:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2676:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2720:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2720:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2690:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "2690:29:7"
																					},
																					"nativeSrc": "2690:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2690:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2680:6:7",
																						"nodeType": "YulTypedName",
																						"src": "2680:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2738:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2738:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2747:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2747:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2742:1:7",
																						"nodeType": "YulTypedName",
																						"src": "2742:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2818:165:7",
																					"nodeType": "YulBlock",
																					"src": "2818:165:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2843:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2843:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2861:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "2861:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2866:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "2866:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2857:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2857:3:7"
																												},
																												"nativeSrc": "2857:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2857:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2851:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "2851:5:7"
																										},
																										"nativeSrc": "2851:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2851:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2836:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2836:6:7"
																								},
																								"nativeSrc": "2836:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2836:42:7"
																							},
																							"nativeSrc": "2836:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2836:42:7"
																						},
																						{
																							"nativeSrc": "2895:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2895:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2909:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2909:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2917:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2917:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2905:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2905:3:7"
																								},
																								"nativeSrc": "2905:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2905:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2895:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2895:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2936:33:7",
																							"nodeType": "YulAssignment",
																							"src": "2936:33:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2953:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "2953:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2964:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2964:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2949:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2949:3:7"
																								},
																								"nativeSrc": "2949:20:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2949:20:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2936:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "2936:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2772:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2772:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2775:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2775:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2769:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2769:2:7"
																					},
																					"nativeSrc": "2769:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2769:14:7"
																				},
																				"nativeSrc": "2761:222:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2784:21:7",
																					"nodeType": "YulBlock",
																					"src": "2784:21:7",
																					"statements": [
																						{
																							"nativeSrc": "2786:17:7",
																							"nodeType": "YulAssignment",
																							"src": "2786:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2795:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "2795:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2798:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2798:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2791:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2791:3:7"
																								},
																								"nativeSrc": "2791:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2791:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2786:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2786:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2765:3:7",
																					"nodeType": "YulBlock",
																					"src": "2765:3:7",
																					"statements": []
																				},
																				"src": "2761:222:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "3031:166:7",
																					"nodeType": "YulBlock",
																					"src": "3031:166:7",
																					"statements": [
																						{
																							"nativeSrc": "3049:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3049:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3076:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3076:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3081:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3081:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3072:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3072:3:7"
																										},
																										"nativeSrc": "3072:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3072:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3066:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3066:5:7"
																								},
																								"nativeSrc": "3066:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3066:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3053:9:7",
																									"nodeType": "YulTypedName",
																									"src": "3053:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3116:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3116:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3128:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3128:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3155:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "3155:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3158:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "3158:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3151:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "3151:3:7"
																																		},
																																		"nativeSrc": "3151:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3151:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3167:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3167:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3147:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3147:3:7"
																																},
																																"nativeSrc": "3147:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3147:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3177:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3177:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3173:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3173:3:7"
																																},
																																"nativeSrc": "3173:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3173:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3143:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "3143:3:7"
																														},
																														"nativeSrc": "3143:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "3143:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3139:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3139:3:7"
																												},
																												"nativeSrc": "3139:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3139:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3124:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3124:3:7"
																										},
																										"nativeSrc": "3124:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3124:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3109:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3109:6:7"
																								},
																								"nativeSrc": "3109:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3109:74:7"
																							},
																							"nativeSrc": "3109:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3109:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3002:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3002:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3011:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3011:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2999:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2999:2:7"
																					},
																					"nativeSrc": "2999:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2999:19:7"
																				},
																				"nativeSrc": "2996:201:7",
																				"nodeType": "YulIf",
																				"src": "2996:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3217:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3217:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3231:1:7",
																											"nodeType": "YulLiteral",
																											"src": "3231:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3234:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "3234:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3227:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "3227:3:7"
																									},
																									"nativeSrc": "3227:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "3227:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3243:1:7",
																									"nodeType": "YulLiteral",
																									"src": "3243:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3223:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3223:3:7"
																							},
																							"nativeSrc": "3223:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3223:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3210:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3210:6:7"
																					},
																					"nativeSrc": "3210:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3210:36:7"
																				},
																				"nativeSrc": "3210:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3210:36:7"
																			}
																		]
																	},
																	"nativeSrc": "2607:649:7",
																	"nodeType": "YulCase",
																	"src": "2607:649:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2612:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3273:234:7",
																		"nodeType": "YulBlock",
																		"src": "3273:234:7",
																		"statements": [
																			{
																				"nativeSrc": "3287:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3287:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3300:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3300:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3291:5:7",
																						"nodeType": "YulTypedName",
																						"src": "3291:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3336:67:7",
																					"nodeType": "YulBlock",
																					"src": "3336:67:7",
																					"statements": [
																						{
																							"nativeSrc": "3354:35:7",
																							"nodeType": "YulAssignment",
																							"src": "3354:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3373:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3373:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3378:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3378:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3369:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3369:3:7"
																										},
																										"nativeSrc": "3369:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3369:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3363:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3363:5:7"
																								},
																								"nativeSrc": "3363:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3363:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3354:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3354:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3317:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3317:6:7"
																				},
																				"nativeSrc": "3314:89:7",
																				"nodeType": "YulIf",
																				"src": "3314:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3423:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3423:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3482:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3482:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3489:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3489:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3429:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "3429:52:7"
																							},
																							"nativeSrc": "3429:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3429:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3416:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3416:6:7"
																					},
																					"nativeSrc": "3416:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3416:81:7"
																				},
																				"nativeSrc": "3416:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3416:81:7"
																			}
																		]
																	},
																	"nativeSrc": "3265:242:7",
																	"nodeType": "YulCase",
																	"src": "3265:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2587:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2587:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2595:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2595:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2584:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2584:2:7"
																},
																"nativeSrc": "2584:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2584:14:7"
															},
															"nativeSrc": "2577:930:7",
															"nodeType": "YulSwitch",
															"src": "2577:930:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2214:1299:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2295:4:7",
														"nodeType": "YulTypedName",
														"src": "2295:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2301:3:7",
														"nodeType": "YulTypedName",
														"src": "2301:3:7",
														"type": ""
													}
												],
												"src": "2214:1299:7"
											},
											{
												"body": {
													"nativeSrc": "3619:102:7",
													"nodeType": "YulBlock",
													"src": "3619:102:7",
													"statements": [
														{
															"nativeSrc": "3629:26:7",
															"nodeType": "YulAssignment",
															"src": "3629:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3641:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3641:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3652:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3652:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3637:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:7"
																},
																"nativeSrc": "3637:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3637:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3629:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3629:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3671:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3671:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3686:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3686:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3702:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3702:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3707:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3707:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3698:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3698:3:7"
																						},
																						"nativeSrc": "3698:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3698:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3711:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3711:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3694:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3694:3:7"
																				},
																				"nativeSrc": "3694:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3694:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3682:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3682:3:7"
																		},
																		"nativeSrc": "3682:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3682:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3664:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3664:6:7"
																},
																"nativeSrc": "3664:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3664:51:7"
															},
															"nativeSrc": "3664:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3664:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3518:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3588:9:7",
														"nodeType": "YulTypedName",
														"src": "3588:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3599:6:7",
														"nodeType": "YulTypedName",
														"src": "3599:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3610:4:7",
														"nodeType": "YulTypedName",
														"src": "3610:4:7",
														"type": ""
													}
												],
												"src": "3518:203:7"
											},
											{
												"body": {
													"nativeSrc": "3758:95:7",
													"nodeType": "YulBlock",
													"src": "3758:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3775:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3775:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3782:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3782:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3787:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3787:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3778:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3778:3:7"
																		},
																		"nativeSrc": "3778:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3778:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3768:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3768:6:7"
																},
																"nativeSrc": "3768:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3768:31:7"
															},
															"nativeSrc": "3768:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3768:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3815:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3815:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3818:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3818:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3808:6:7"
																},
																"nativeSrc": "3808:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3808:15:7"
															},
															"nativeSrc": "3808:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3808:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3842:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3842:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3832:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3832:6:7"
																},
																"nativeSrc": "3832:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3832:15:7"
															},
															"nativeSrc": "3832:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3832:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3726:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3726:127:7"
											},
											{
												"body": {
													"nativeSrc": "3927:306:7",
													"nodeType": "YulBlock",
													"src": "3927:306:7",
													"statements": [
														{
															"nativeSrc": "3937:10:7",
															"nodeType": "YulAssignment",
															"src": "3937:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3946:1:7",
																"nodeType": "YulLiteral",
																"src": "3946:1:7",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3937:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3937:5:7"
																}
															]
														},
														{
															"nativeSrc": "3956:13:7",
															"nodeType": "YulAssignment",
															"src": "3956:13:7",
															"value": {
																"name": "_base",
																"nativeSrc": "3964:5:7",
																"nodeType": "YulIdentifier",
																"src": "3964:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3956:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3956:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4014:213:7",
																"nodeType": "YulBlock",
																"src": "4014:213:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "4056:22:7",
																			"nodeType": "YulBlock",
																			"src": "4056:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4058:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "4058:16:7"
																						},
																						"nativeSrc": "4058:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4058:18:7"
																					},
																					"nativeSrc": "4058:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "4058:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4034:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4034:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "4044:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4044:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "4049:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4049:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4040:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4040:3:7"
																					},
																					"nativeSrc": "4040:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4040:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4031:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4031:2:7"
																			},
																			"nativeSrc": "4031:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4031:24:7"
																		},
																		"nativeSrc": "4028:50:7",
																		"nodeType": "YulIf",
																		"src": "4028:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "4111:29:7",
																			"nodeType": "YulBlock",
																			"src": "4111:29:7",
																			"statements": [
																				{
																					"nativeSrc": "4113:25:7",
																					"nodeType": "YulAssignment",
																					"src": "4113:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "4126:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "4126:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "4133:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "4133:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "4122:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4122:3:7"
																						},
																						"nativeSrc": "4122:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4122:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "4113:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "4113:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "4098:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4098:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4108:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4108:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4094:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4094:3:7"
																			},
																			"nativeSrc": "4094:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:16:7"
																		},
																		"nativeSrc": "4091:49:7",
																		"nodeType": "YulIf",
																		"src": "4091:49:7"
																	},
																	{
																		"nativeSrc": "4153:23:7",
																		"nodeType": "YulAssignment",
																		"src": "4153:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4165:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4165:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "4171:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4171:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "4161:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4161:3:7"
																			},
																			"nativeSrc": "4161:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4161:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "4153:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4153:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4189:28:7",
																		"nodeType": "YulAssignment",
																		"src": "4189:28:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4205:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4205:1:7",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4208:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4208:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "4201:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4201:3:7"
																			},
																			"nativeSrc": "4201:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4201:16:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4189:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "4189:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3989:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3989:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3999:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3999:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3986:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3986:2:7"
																},
																"nativeSrc": "3986:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3986:15:7"
															},
															"nativeSrc": "3978:249:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4002:3:7",
																"nodeType": "YulBlock",
																"src": "4002:3:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3982:3:7",
																"nodeType": "YulBlock",
																"src": "3982:3:7",
																"statements": []
															},
															"src": "3978:249:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3858:375:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3886:5:7",
														"nodeType": "YulTypedName",
														"src": "3886:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3893:8:7",
														"nodeType": "YulTypedName",
														"src": "3893:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "3903:3:7",
														"nodeType": "YulTypedName",
														"src": "3903:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3911:5:7",
														"nodeType": "YulTypedName",
														"src": "3911:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3918:4:7",
														"nodeType": "YulTypedName",
														"src": "3918:4:7",
														"type": ""
													}
												],
												"src": "3858:375:7"
											},
											{
												"body": {
													"nativeSrc": "4297:843:7",
													"nodeType": "YulBlock",
													"src": "4297:843:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4335:52:7",
																"nodeType": "YulBlock",
																"src": "4335:52:7",
																"statements": [
																	{
																		"nativeSrc": "4349:10:7",
																		"nodeType": "YulAssignment",
																		"src": "4349:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4358:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4358:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4349:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4349:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4372:5:7",
																		"nodeType": "YulLeave",
																		"src": "4372:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4317:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "4317:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4310:6:7"
																},
																"nativeSrc": "4310:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4310:16:7"
															},
															"nativeSrc": "4307:80:7",
															"nodeType": "YulIf",
															"src": "4307:80:7"
														},
														{
															"body": {
																"nativeSrc": "4420:52:7",
																"nodeType": "YulBlock",
																"src": "4420:52:7",
																"statements": [
																	{
																		"nativeSrc": "4434:10:7",
																		"nodeType": "YulAssignment",
																		"src": "4434:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4443:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4443:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4434:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4434:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4457:5:7",
																		"nodeType": "YulLeave",
																		"src": "4457:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4406:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4406:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4399:6:7"
																},
																"nativeSrc": "4399:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4399:12:7"
															},
															"nativeSrc": "4396:76:7",
															"nodeType": "YulIf",
															"src": "4396:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4508:52:7",
																		"nodeType": "YulBlock",
																		"src": "4508:52:7",
																		"statements": [
																			{
																				"nativeSrc": "4522:10:7",
																				"nodeType": "YulAssignment",
																				"src": "4522:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4531:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4531:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4522:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4522:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4545:5:7",
																				"nodeType": "YulLeave",
																				"src": "4545:5:7"
																			}
																		]
																	},
																	"nativeSrc": "4501:59:7",
																	"nodeType": "YulCase",
																	"src": "4501:59:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4506:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4506:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4576:167:7",
																		"nodeType": "YulBlock",
																		"src": "4576:167:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4611:22:7",
																					"nodeType": "YulBlock",
																					"src": "4611:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4613:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "4613:16:7"
																								},
																								"nativeSrc": "4613:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4613:18:7"
																							},
																							"nativeSrc": "4613:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4613:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4596:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4596:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4606:3:7",
																							"nodeType": "YulLiteral",
																							"src": "4606:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4593:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4593:2:7"
																					},
																					"nativeSrc": "4593:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4593:17:7"
																				},
																				"nativeSrc": "4590:43:7",
																				"nodeType": "YulIf",
																				"src": "4590:43:7"
																			},
																			{
																				"nativeSrc": "4646:25:7",
																				"nodeType": "YulAssignment",
																				"src": "4646:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4659:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4659:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4669:1:7",
																							"nodeType": "YulLiteral",
																							"src": "4669:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4655:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4655:3:7"
																					},
																					"nativeSrc": "4655:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4655:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4646:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4646:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4684:11:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4684:11:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4694:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4694:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "4688:2:7",
																						"nodeType": "YulTypedName",
																						"src": "4688:2:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4708:7:7",
																				"nodeType": "YulAssignment",
																				"src": "4708:7:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4714:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4714:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "4708:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4708:2:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4728:5:7",
																				"nodeType": "YulLeave",
																				"src": "4728:5:7"
																			}
																		]
																	},
																	"nativeSrc": "4569:174:7",
																	"nodeType": "YulCase",
																	"src": "4569:174:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4574:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4574:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4488:4:7",
																"nodeType": "YulIdentifier",
																"src": "4488:4:7"
															},
															"nativeSrc": "4481:262:7",
															"nodeType": "YulSwitch",
															"src": "4481:262:7"
														},
														{
															"body": {
																"nativeSrc": "4841:114:7",
																"nodeType": "YulBlock",
																"src": "4841:114:7",
																"statements": [
																	{
																		"nativeSrc": "4855:28:7",
																		"nodeType": "YulAssignment",
																		"src": "4855:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4868:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4868:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4874:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4874:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4864:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4864:3:7"
																			},
																			"nativeSrc": "4864:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4864:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4855:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4855:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4896:11:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4896:11:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4906:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4906:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "4900:2:7",
																				"nodeType": "YulTypedName",
																				"src": "4900:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4920:7:7",
																		"nodeType": "YulAssignment",
																		"src": "4920:7:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4926:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4926:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "4920:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4920:2:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4940:5:7",
																		"nodeType": "YulLeave",
																		"src": "4940:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4765:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "4765:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4771:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4771:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4762:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4762:2:7"
																				},
																				"nativeSrc": "4762:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4779:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4779:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4789:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4789:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4776:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4776:2:7"
																				},
																				"nativeSrc": "4776:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4776:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4758:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4758:3:7"
																		},
																		"nativeSrc": "4758:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4758:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4802:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "4802:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4808:3:7",
																						"nodeType": "YulLiteral",
																						"src": "4808:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4799:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4799:2:7"
																				},
																				"nativeSrc": "4799:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4799:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4817:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4817:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4827:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4827:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4814:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4814:2:7"
																				},
																				"nativeSrc": "4814:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4814:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4795:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4795:3:7"
																		},
																		"nativeSrc": "4795:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4795:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4755:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4755:2:7"
																},
																"nativeSrc": "4755:77:7",
																"nodeType": "YulFunctionCall",
																"src": "4755:77:7"
															},
															"nativeSrc": "4752:203:7",
															"nodeType": "YulIf",
															"src": "4752:203:7"
														},
														{
															"nativeSrc": "4964:65:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4964:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5006:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5006:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5012:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5012:8:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5026:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5026:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5022:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5022:3:7"
																		},
																		"nativeSrc": "5022:6:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5022:6:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4987:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4987:18:7"
																},
																"nativeSrc": "4987:42:7",
																"nodeType": "YulFunctionCall",
																"src": "4987:42:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4968:7:7",
																	"nodeType": "YulTypedName",
																	"src": "4968:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4977:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4977:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5074:22:7",
																"nodeType": "YulBlock",
																"src": "5074:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5076:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5076:16:7"
																			},
																			"nativeSrc": "5076:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5076:18:7"
																		},
																		"nativeSrc": "5076:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5076:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5044:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5044:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5061:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5061:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5057:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5057:3:7"
																				},
																				"nativeSrc": "5057:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5057:6:7"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "5065:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5065:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "5053:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5053:3:7"
																		},
																		"nativeSrc": "5053:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5053:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5041:2:7"
																},
																"nativeSrc": "5041:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5041:32:7"
															},
															"nativeSrc": "5038:58:7",
															"nodeType": "YulIf",
															"src": "5038:58:7"
														},
														{
															"nativeSrc": "5105:29:7",
															"nodeType": "YulAssignment",
															"src": "5105:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5118:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5118:7:7"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "5127:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5127:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5114:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:7"
																},
																"nativeSrc": "5114:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5114:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5105:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5105:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "4238:902:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4268:4:7",
														"nodeType": "YulTypedName",
														"src": "4268:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4274:8:7",
														"nodeType": "YulTypedName",
														"src": "4274:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4287:5:7",
														"nodeType": "YulTypedName",
														"src": "4287:5:7",
														"type": ""
													}
												],
												"src": "4238:902:7"
											},
											{
												"body": {
													"nativeSrc": "5213:72:7",
													"nodeType": "YulBlock",
													"src": "5213:72:7",
													"statements": [
														{
															"nativeSrc": "5223:56:7",
															"nodeType": "YulAssignment",
															"src": "5223:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5253:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5253:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5263:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5263:8:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5273:4:7",
																				"nodeType": "YulLiteral",
																				"src": "5273:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5259:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:7"
																		},
																		"nativeSrc": "5259:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5259:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "5232:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "5232:20:7"
																},
																"nativeSrc": "5232:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5232:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5223:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5223:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "5145:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5184:4:7",
														"nodeType": "YulTypedName",
														"src": "5184:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5190:8:7",
														"nodeType": "YulTypedName",
														"src": "5190:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5203:5:7",
														"nodeType": "YulTypedName",
														"src": "5203:5:7",
														"type": ""
													}
												],
												"src": "5145:140:7"
											},
											{
												"body": {
													"nativeSrc": "5342:116:7",
													"nodeType": "YulBlock",
													"src": "5342:116:7",
													"statements": [
														{
															"nativeSrc": "5352:20:7",
															"nodeType": "YulAssignment",
															"src": "5352:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5367:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5367:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5370:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5370:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5363:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5363:3:7"
																},
																"nativeSrc": "5363:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5363:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5352:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5352:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5430:22:7",
																"nodeType": "YulBlock",
																"src": "5430:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5432:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5432:16:7"
																			},
																			"nativeSrc": "5432:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5432:18:7"
																		},
																		"nativeSrc": "5432:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5432:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5401:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "5401:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5394:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5394:6:7"
																				},
																				"nativeSrc": "5394:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5394:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5408:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "5408:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5415:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "5415:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5424:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "5424:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5411:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5411:3:7"
																						},
																						"nativeSrc": "5411:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5411:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5405:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5405:2:7"
																				},
																				"nativeSrc": "5405:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5405:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5391:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5391:2:7"
																		},
																		"nativeSrc": "5391:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5391:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5384:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:7"
																},
																"nativeSrc": "5384:45:7",
																"nodeType": "YulFunctionCall",
																"src": "5384:45:7"
															},
															"nativeSrc": "5381:71:7",
															"nodeType": "YulIf",
															"src": "5381:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5290:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5321:1:7",
														"nodeType": "YulTypedName",
														"src": "5321:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5324:1:7",
														"nodeType": "YulTypedName",
														"src": "5324:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5330:7:7",
														"nodeType": "YulTypedName",
														"src": "5330:7:7",
														"type": ""
													}
												],
												"src": "5290:168:7"
											},
											{
												"body": {
													"nativeSrc": "5511:77:7",
													"nodeType": "YulBlock",
													"src": "5511:77:7",
													"statements": [
														{
															"nativeSrc": "5521:16:7",
															"nodeType": "YulAssignment",
															"src": "5521:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5532:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5532:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5535:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5535:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5528:3:7"
																},
																"nativeSrc": "5528:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5528:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5560:22:7",
																"nodeType": "YulBlock",
																"src": "5560:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5562:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5562:16:7"
																			},
																			"nativeSrc": "5562:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5562:18:7"
																		},
																		"nativeSrc": "5562:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5562:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5552:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5552:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5555:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5555:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5549:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5549:2:7"
																},
																"nativeSrc": "5549:10:7",
																"nodeType": "YulFunctionCall",
																"src": "5549:10:7"
															},
															"nativeSrc": "5546:36:7",
															"nodeType": "YulIf",
															"src": "5546:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5463:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5494:1:7",
														"nodeType": "YulTypedName",
														"src": "5494:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5497:1:7",
														"nodeType": "YulTypedName",
														"src": "5497:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5503:3:7",
														"nodeType": "YulTypedName",
														"src": "5503:3:7",
														"type": ""
													}
												],
												"src": "5463:125:7"
											},
											{
												"body": {
													"nativeSrc": "5750:188:7",
													"nodeType": "YulBlock",
													"src": "5750:188:7",
													"statements": [
														{
															"nativeSrc": "5760:26:7",
															"nodeType": "YulAssignment",
															"src": "5760:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5772:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5772:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5783:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5783:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5768:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5768:3:7"
																},
																"nativeSrc": "5768:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5768:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5760:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5760:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5802:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5802:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5817:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5817:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5833:3:7",
																								"nodeType": "YulLiteral",
																								"src": "5833:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5838:1:7",
																								"nodeType": "YulLiteral",
																								"src": "5838:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5829:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5829:3:7"
																						},
																						"nativeSrc": "5829:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5829:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5842:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5842:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5825:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5825:3:7"
																				},
																				"nativeSrc": "5825:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5825:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5813:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5813:3:7"
																		},
																		"nativeSrc": "5813:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5813:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5795:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5795:6:7"
																},
																"nativeSrc": "5795:51:7",
																"nodeType": "YulFunctionCall",
																"src": "5795:51:7"
															},
															"nativeSrc": "5795:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "5795:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5866:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5866:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5877:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5877:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5862:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:7"
																		},
																		"nativeSrc": "5862:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5862:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5882:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5855:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:7"
																},
																"nativeSrc": "5855:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5855:34:7"
															},
															"nativeSrc": "5855:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5855:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5909:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5909:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5920:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5920:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5905:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:7"
																		},
																		"nativeSrc": "5905:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5905:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5925:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5925:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5898:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:7"
																},
																"nativeSrc": "5898:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5898:34:7"
															},
															"nativeSrc": "5898:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5898:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5593:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5703:9:7",
														"nodeType": "YulTypedName",
														"src": "5703:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5714:6:7",
														"nodeType": "YulTypedName",
														"src": "5714:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5722:6:7",
														"nodeType": "YulTypedName",
														"src": "5722:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5730:6:7",
														"nodeType": "YulTypedName",
														"src": "5730:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5741:4:7",
														"nodeType": "YulTypedName",
														"src": "5741:4:7",
														"type": ""
													}
												],
												"src": "5593:345:7"
											},
											{
												"body": {
													"nativeSrc": "6044:76:7",
													"nodeType": "YulBlock",
													"src": "6044:76:7",
													"statements": [
														{
															"nativeSrc": "6054:26:7",
															"nodeType": "YulAssignment",
															"src": "6054:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6066:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6066:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6077:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6062:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:7"
																},
																"nativeSrc": "6062:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6062:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6054:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6054:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6096:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6096:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6107:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6107:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6089:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6089:6:7"
																},
																"nativeSrc": "6089:25:7",
																"nodeType": "YulFunctionCall",
																"src": "6089:25:7"
															},
															"nativeSrc": "6089:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "6089:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5943:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6013:9:7",
														"nodeType": "YulTypedName",
														"src": "6013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6024:6:7",
														"nodeType": "YulTypedName",
														"src": "6024:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6035:4:7",
														"nodeType": "YulTypedName",
														"src": "6035:4:7",
														"type": ""
													}
												],
												"src": "5943:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := 0\n        value_4 := mload(add(headStart, 128))\n        value4 := value_4\n        let value_5 := 0\n        value_5 := mload(add(headStart, 160))\n        value5 := value_5\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x139A CODESIZE SUB DUP1 PUSH2 0x139A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x2AE JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x2730BA3AB932AA37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x272A29 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x3A0 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8B DUP3 DUP3 PUSH2 0x3A0 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5 DUP2 PUSH2 0xFF JUMP JUMPDEST POP PUSH2 0xE5 ADDRESS PUSH2 0xD6 PUSH1 0x12 PUSH1 0xA PUSH2 0x553 JUMP JUMPDEST PUSH2 0xE0 SWAP1 DUP9 PUSH2 0x568 JUMP JUMPDEST PUSH2 0x150 JUMP JUMPDEST PUSH1 0x8 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xA SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 SSTORE PUSH1 0xC SSTORE POP PUSH2 0x592 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x179 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0x184 PUSH0 DUP4 DUP4 PUSH2 0x188 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x57F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x222 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x23E JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x25C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2A1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP12 ADD MLOAD SWAP4 SWAP13 SWAP3 SWAP12 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x330 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x34E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x39B JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x379 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x398 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x385 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3B9 JUMPI PUSH2 0x3B9 PUSH2 0x308 JUMP JUMPDEST PUSH2 0x3CD DUP2 PUSH2 0x3C7 DUP5 SLOAD PUSH2 0x31C JUMP JUMPDEST DUP5 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3FF JUMPI PUSH0 DUP4 ISZERO PUSH2 0x3E8 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x398 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x42E JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x40E JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x44B JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x4A9 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x48D JUMPI PUSH2 0x48D PUSH2 0x45A JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x49B JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x472 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x4BF JUMPI POP PUSH1 0x1 PUSH2 0x54D JUMP JUMPDEST DUP2 PUSH2 0x4CB JUMPI POP PUSH0 PUSH2 0x54D JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4E1 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4EB JUMPI PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x54D JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x4FC JUMPI PUSH2 0x4FC PUSH2 0x45A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x54D JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x52A JUMPI POP DUP2 DUP2 EXP PUSH2 0x54D JUMP JUMPDEST PUSH2 0x536 PUSH0 NOT DUP5 DUP5 PUSH2 0x46E JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x549 JUMPI PUSH2 0x549 PUSH2 0x45A JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x561 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x54D JUMPI PUSH2 0x54D PUSH2 0x45A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x54D JUMPI PUSH2 0x54D PUSH2 0x45A JUMP JUMPDEST PUSH2 0xDFB DUP1 PUSH2 0x59F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5EE09669 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xED338FF1 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x413 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xB7D68519 EQ PUSH2 0x3AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7165D19B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x7165D19B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8F0794FE EQ PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5EE09669 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x329 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x499D7F96 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x499D7F96 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x4AC530DC EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x4F3FC2DF EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x3A02A42D EQ PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD505541 GT PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xD505541 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x1CBAEE2D EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E293A3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D3 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x331 PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x20E PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH2 0x331 PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x441 SWAP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 DUP3 SUB PUSH2 0x502 JUMPI POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x524 SWAP1 TIMESTAMP PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x534 PUSH3 0x93A80 DUP4 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 DUP3 PUSH1 0xC SLOAD DUP7 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x552 SWAP2 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x55C SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x573 DUP6 DUP3 DUP6 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x57E DUP6 DUP6 DUP6 PUSH2 0x930 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D5 DUP3 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x59B PUSH2 0x98D JUMP JUMPDEST PUSH2 0x5A4 PUSH0 PUSH2 0x9BA JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F207374616B652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x66D CALLER ADDRESS DUP4 PUSH2 0x930 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x68B SWAP1 DUP5 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF SWAP1 PUSH2 0x6D3 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x441 SWAP1 PUSH2 0xD1D JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737903A37B5B2B7399039BA30B5B2B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x756 SWAP1 TIMESTAMP PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x766 PUSH3 0x93A80 DUP4 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E732063616E206F6E6C7920626520756E7374616B65642061667465 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39101A103BB2B2B5B997 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH0 PUSH2 0x7D6 CALLER PUSH2 0x4DB JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE SWAP1 SWAP2 POP PUSH2 0x80A SWAP1 ADDRESS SWAP1 PUSH2 0x805 DUP5 DUP9 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0x930 JUMP JUMPDEST PUSH2 0x860 PUSH2 0x98D JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH2 0x86D PUSH2 0x98D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x89F DUP2 PUSH2 0x9BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8AF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x92A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x92A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA0B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x959 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x8AF DUP4 DUP4 DUP4 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x92A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xACF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB07 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAFC SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB77 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB93 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xBF6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC4E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC64 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC6D DUP4 PUSH2 0xC38 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC8B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC94 DUP3 PUSH2 0xC38 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCAD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCB6 DUP5 PUSH2 0xC38 JUMP JUMPDEST SWAP3 POP PUSH2 0xCC4 PUSH1 0x20 DUP6 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD06 DUP4 PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP PUSH2 0xD14 PUSH1 0x20 DUP5 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD31 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD4F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4D5 JUMPI PUSH2 0x4D5 PUSH2 0xD55 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xD96 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4D5 JUMPI PUSH2 0x4D5 PUSH2 0xD55 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4D5 JUMPI PUSH2 0x4D5 PUSH2 0xD55 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 MCOPY 0xBC JUMPI 0xC4 0x2D CALLDATASIZE MSTORE8 PUSH11 0xD3D0AFCEACE7A65C9D8E06 DUP12 0xAB LOG1 SELFDESTRUCT 0x4E TIMESTAMP SWAP7 SWAP12 PUSH1 0x85 0xE5 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "174:5431:6:-:0;;;1221:603;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1431:12;1601:113:2;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:2;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3664:51:7;3637:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1462:52:6::2;1476:4;1497:16;2780:2:2::0;1497::6::2;:16;:::i;:::-;1483:30;::::0;:11;:30:::2;:::i;:::-;1462:5;:52::i;:::-;1572:12;:28:::0;;;;1611:18:::2;:40:::0;;;;1662:16:::2;:36:::0;1740:17:::2;:38:::0;-1:-1:-1;174:5431:6;;-1:-1:-1;174:5431:6;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:2:-;-1:-1:-1;;;;;7528:21:2;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:2;;7601:1;7572:32;;;3664:51:7;3637:18;;7572:32:2;3518:203:7;7524:91:2;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;5813:32:7;;6386:50:2;;;5795:51:7;5862:18;;;5855:34;;;5905:18;;;5898:34;;;5768:18;;6386:50:2;5593:345:7;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;6089::7;;6077:2;6062:18;;5943:177;7083:25:2;;;;;;;;6008:1107;;;:::o;14:858:7:-;129:6;137;145;153;161;169;222:3;210:9;201:7;197:23;193:33;190:53;;;239:1;236;229:12;190:53;265:16;;-1:-1:-1;;;;;310:31:7;;300:42;;290:70;;356:1;353;346:12;290:70;450:2;435:18;;429:25;546:2;531:18;;525:25;642:2;627:18;;621:25;738:3;723:19;;717:26;835:3;820:19;;;814:26;379:5;;429:25;;-1:-1:-1;525:25:7;;621;;-1:-1:-1;717:26:7;-1:-1:-1;814:26:7;;-1:-1:-1;14:858:7;-1:-1:-1;;;14:858:7:o;877:127::-;938:10;933:3;929:20;926:1;919:31;969:4;966:1;959:15;993:4;990:1;983:15;1009:380;1088:1;1084:12;;;;1131;;;1152:61;;1206:4;1198:6;1194:17;1184:27;;1152:61;1259:2;1251:6;1248:14;1228:18;1225:38;1222:161;;1305:10;1300:3;1296:20;1293:1;1286:31;1340:4;1337:1;1330:15;1368:4;1365:1;1358:15;1222:161;;1009:380;;;:::o;1520:518::-;1622:2;1617:3;1614:11;1611:421;;;1658:5;1655:1;1648:16;1702:4;1699:1;1689:18;1772:2;1760:10;1756:19;1753:1;1749:27;1743:4;1739:38;1808:4;1796:10;1793:20;1790:47;;;-1:-1:-1;1831:4:7;1790:47;1886:2;1881:3;1877:12;1874:1;1870:20;1864:4;1860:31;1850:41;;1941:81;1959:2;1952:5;1949:13;1941:81;;;2018:1;2004:16;;1985:1;1974:13;1941:81;;;1945:3;;1611:421;1520:518;;;:::o;2214:1299::-;2334:10;;-1:-1:-1;;;;;2356:30:7;;2353:56;;;2389:18;;:::i;:::-;2418:97;2508:6;2468:38;2500:4;2494:11;2468:38;:::i;:::-;2462:4;2418:97;:::i;:::-;2564:4;2595:2;2584:14;;2612:1;2607:649;;;;3300:1;3317:6;3314:89;;;-1:-1:-1;3369:19:7;;;3363:26;3314:89;-1:-1:-1;;2171:1:7;2167:11;;;2163:24;2159:29;2149:40;2195:1;2191:11;;;2146:57;3416:81;;2577:930;;2607:649;1467:1;1460:14;;;1504:4;1491:18;;-1:-1:-1;;2643:20:7;;;2761:222;2775:7;2772:1;2769:14;2761:222;;;2857:19;;;2851:26;2836:42;;2964:4;2949:20;;;;2917:1;2905:14;;;;2791:12;2761:222;;;2765:3;3011:6;3002:7;2999:19;2996:201;;;3072:19;;;3066:26;-1:-1:-1;;3155:1:7;3151:14;;;3167:3;3147:24;3143:37;3139:42;3124:58;3109:74;;2996:201;-1:-1:-1;;;;3243:1:7;3227:14;;;3223:22;3210:36;;-1:-1:-1;2214:1299:7:o;3726:127::-;3787:10;3782:3;3778:20;3775:1;3768:31;3818:4;3815:1;3808:15;3842:4;3839:1;3832:15;3858:375;3946:1;3964:5;3978:249;3999:1;3989:8;3986:15;3978:249;;;4049:4;4044:3;4040:14;4034:4;4031:24;4028:50;;;4058:18;;:::i;:::-;4108:1;4098:8;4094:16;4091:49;;;4122:16;;;;4091:49;4205:1;4201:16;;;;;4161:15;;3978:249;;;3858:375;;;;;;:::o;4238:902::-;4287:5;4317:8;4307:80;;-1:-1:-1;4358:1:7;4372:5;;4307:80;4406:4;4396:76;;-1:-1:-1;4443:1:7;4457:5;;4396:76;4488:4;4506:1;4501:59;;;;4574:1;4569:174;;;;4481:262;;4501:59;4531:1;4522:10;;4545:5;;;4569:174;4606:3;4596:8;4593:17;4590:43;;;4613:18;;:::i;:::-;-1:-1:-1;;4669:1:7;4655:16;;4728:5;;4481:262;;4827:2;4817:8;4814:16;4808:3;4802:4;4799:13;4795:36;4789:2;4779:8;4776:16;4771:2;4765:4;4762:12;4758:35;4755:77;4752:203;;;-1:-1:-1;4864:19:7;;;4940:5;;4752:203;4987:42;-1:-1:-1;;5012:8:7;5006:4;4987:42;:::i;:::-;5065:6;5061:1;5057:6;5053:19;5044:7;5041:32;5038:58;;;5076:18;;:::i;:::-;5114:20;;-1:-1:-1;4238:902:7;;;;;:::o;5145:140::-;5203:5;5232:47;5273:4;5263:8;5259:19;5253:4;5232:47;:::i;:::-;5223:56;5145:140;-1:-1:-1;;;5145:140:7:o;5290:168::-;5363:9;;;5394;;5411:15;;;5405:22;;5391:37;5381:71;;5432:18;;:::i;5463:125::-;5528:9;;;5549:10;;;5546:36;;;5562:18;;:::i;5943:177::-;174:5431:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2210,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2571,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2445,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2228,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2490,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2352,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 2781,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1218,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateStakingReward_1238": {
									"entryPoint": 1243,
									"id": 1238,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAccumulatedRewards_1290": {
									"entryPoint": 1417,
									"id": 1290,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStakedBalance_1264": {
									"entryPoint": null,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStakingStartDate_1277": {
									"entryPoint": null,
									"id": 1277,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialPrice_947": {
									"entryPoint": null,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1074,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@regularSalePrice_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1427,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleEndTime_945": {
									"entryPoint": null,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@saleStartTime_943": {
									"entryPoint": null,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setStakingRewardRate_1251": {
									"entryPoint": 2136,
									"id": 1251,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeTokens_1106": {
									"entryPoint": 1446,
									"id": 1106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_959": {
									"entryPoint": null,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingRewardRate_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingRewards_967": {
									"entryPoint": null,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTimestamp_963": {
									"entryPoint": null,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1758,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokensSold_953": {
									"entryPoint": null,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1382,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2149,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 2123,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstakeTokens_1188": {
									"entryPoint": 1773,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weeklyIncreaseRate_951": {
									"entryPoint": null,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30b58ae3ad08e862b8698bb084efd9dff3bcf9a75a69ffe30519f0b126749acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565140ed2ac2356858b228ac0150df5441f3ca3b9efa1a820c61a493b93b230e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6050:7",
										"nodeType": "YulBlock",
										"src": "0:6050:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "317:297:7",
													"nodeType": "YulBlock",
													"src": "317:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:7"
																},
																"nativeSrc": "327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "327:21:7"
															},
															"nativeSrc": "327:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "327:21:7"
														},
														{
															"nativeSrc": "357:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "357:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "377:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "377:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "371:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "371:5:7"
																},
																"nativeSrc": "371:13:7",
																"nodeType": "YulFunctionCall",
																"src": "371:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "361:6:7",
																	"nodeType": "YulTypedName",
																	"src": "361:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "404:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "404:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "415:2:7",
																				"nodeType": "YulLiteral",
																				"src": "415:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "400:3:7"
																		},
																		"nativeSrc": "400:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "400:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "420:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "420:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:7"
																},
																"nativeSrc": "393:34:7",
																"nodeType": "YulFunctionCall",
																"src": "393:34:7"
															},
															"nativeSrc": "393:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "393:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "446:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "446:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:7",
																				"nodeType": "YulLiteral",
																				"src": "457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "442:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:7"
																		},
																		"nativeSrc": "442:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "442:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "466:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "466:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "474:2:7",
																				"nodeType": "YulLiteral",
																				"src": "474:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "462:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "462:3:7"
																		},
																		"nativeSrc": "462:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "462:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "479:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "479:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "436:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:7"
																},
																"nativeSrc": "436:50:7",
																"nodeType": "YulFunctionCall",
																"src": "436:50:7"
															},
															"nativeSrc": "436:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "436:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "510:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "506:3:7"
																				},
																				"nativeSrc": "506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "506:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "530:2:7",
																				"nodeType": "YulLiteral",
																				"src": "530:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "502:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "502:3:7"
																		},
																		"nativeSrc": "502:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "502:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "535:1:7",
																		"nodeType": "YulLiteral",
																		"src": "535:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:7"
																},
																"nativeSrc": "495:42:7",
																"nodeType": "YulFunctionCall",
																"src": "495:42:7"
															},
															"nativeSrc": "495:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "495:42:7"
														},
														{
															"nativeSrc": "546:62:7",
															"nodeType": "YulAssignment",
															"src": "546:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "581:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "581:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "589:2:7",
																								"nodeType": "YulLiteral",
																								"src": "589:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "577:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "577:3:7"
																						},
																						"nativeSrc": "577:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "577:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "598:2:7",
																								"nodeType": "YulLiteral",
																								"src": "598:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "594:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "594:3:7"
																						},
																						"nativeSrc": "594:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "594:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "573:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "573:3:7"
																				},
																				"nativeSrc": "573:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "573:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:7"
																		},
																		"nativeSrc": "558:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "558:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "605:2:7",
																		"nodeType": "YulLiteral",
																		"src": "605:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "554:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "554:3:7"
																},
																"nativeSrc": "554:54:7",
																"nodeType": "YulFunctionCall",
																"src": "554:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "546:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "546:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "196:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "286:9:7",
														"nodeType": "YulTypedName",
														"src": "286:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "297:6:7",
														"nodeType": "YulTypedName",
														"src": "297:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "308:4:7",
														"nodeType": "YulTypedName",
														"src": "308:4:7",
														"type": ""
													}
												],
												"src": "196:418:7"
											},
											{
												"body": {
													"nativeSrc": "668:124:7",
													"nodeType": "YulBlock",
													"src": "668:124:7",
													"statements": [
														{
															"nativeSrc": "678:29:7",
															"nodeType": "YulAssignment",
															"src": "678:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "700:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "700:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "687:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "687:12:7"
																},
																"nativeSrc": "687:20:7",
																"nodeType": "YulFunctionCall",
																"src": "687:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "678:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "678:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "770:16:7",
																"nodeType": "YulBlock",
																"src": "770:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "779:1:7",
																					"nodeType": "YulLiteral",
																					"src": "779:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "782:1:7",
																					"nodeType": "YulLiteral",
																					"src": "782:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "772:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "772:6:7"
																			},
																			"nativeSrc": "772:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "772:12:7"
																		},
																		"nativeSrc": "772:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "772:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "729:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "729:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "740:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "740:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "755:3:7",
																										"nodeType": "YulLiteral",
																										"src": "755:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "760:1:7",
																										"nodeType": "YulLiteral",
																										"src": "760:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "751:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "751:3:7"
																								},
																								"nativeSrc": "751:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "751:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "764:1:7",
																								"nodeType": "YulLiteral",
																								"src": "764:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "747:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "747:3:7"
																						},
																						"nativeSrc": "747:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "747:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "736:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "736:3:7"
																				},
																				"nativeSrc": "736:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "736:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "726:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "726:2:7"
																		},
																		"nativeSrc": "726:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "726:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "719:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:7"
																},
																"nativeSrc": "719:50:7",
																"nodeType": "YulFunctionCall",
																"src": "719:50:7"
															},
															"nativeSrc": "716:70:7",
															"nodeType": "YulIf",
															"src": "716:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "619:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "647:6:7",
														"nodeType": "YulTypedName",
														"src": "647:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "658:5:7",
														"nodeType": "YulTypedName",
														"src": "658:5:7",
														"type": ""
													}
												],
												"src": "619:173:7"
											},
											{
												"body": {
													"nativeSrc": "884:213:7",
													"nodeType": "YulBlock",
													"src": "884:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "930:16:7",
																"nodeType": "YulBlock",
																"src": "930:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "939:1:7",
																					"nodeType": "YulLiteral",
																					"src": "939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "942:1:7",
																					"nodeType": "YulLiteral",
																					"src": "942:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "932:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "932:6:7"
																			},
																			"nativeSrc": "932:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "932:12:7"
																		},
																		"nativeSrc": "932:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "932:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "905:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "905:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "914:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "914:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:7"
																		},
																		"nativeSrc": "901:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "901:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "926:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "897:3:7"
																},
																"nativeSrc": "897:32:7",
																"nodeType": "YulFunctionCall",
																"src": "897:32:7"
															},
															"nativeSrc": "894:52:7",
															"nodeType": "YulIf",
															"src": "894:52:7"
														},
														{
															"nativeSrc": "955:39:7",
															"nodeType": "YulAssignment",
															"src": "955:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "984:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "984:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "965:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "965:18:7"
																},
																"nativeSrc": "965:29:7",
																"nodeType": "YulFunctionCall",
																"src": "965:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:7"
																}
															]
														},
														{
															"nativeSrc": "1003:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1003:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1016:1:7",
																"nodeType": "YulLiteral",
																"src": "1016:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1007:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1007:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1026:41:7",
															"nodeType": "YulAssignment",
															"src": "1026:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1052:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1063:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1063:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1048:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:7"
																		},
																		"nativeSrc": "1048:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1048:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1035:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1035:12:7"
																},
																"nativeSrc": "1035:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1035:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1026:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1026:5:7"
																}
															]
														},
														{
															"nativeSrc": "1076:15:7",
															"nodeType": "YulAssignment",
															"src": "1076:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1086:5:7",
																"nodeType": "YulIdentifier",
																"src": "1086:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1076:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "797:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "842:9:7",
														"nodeType": "YulTypedName",
														"src": "842:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "853:7:7",
														"nodeType": "YulTypedName",
														"src": "853:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "865:6:7",
														"nodeType": "YulTypedName",
														"src": "865:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "873:6:7",
														"nodeType": "YulTypedName",
														"src": "873:6:7",
														"type": ""
													}
												],
												"src": "797:300:7"
											},
											{
												"body": {
													"nativeSrc": "1197:92:7",
													"nodeType": "YulBlock",
													"src": "1197:92:7",
													"statements": [
														{
															"nativeSrc": "1207:26:7",
															"nodeType": "YulAssignment",
															"src": "1207:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1219:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1230:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1230:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:7"
																},
																"nativeSrc": "1215:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1215:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1207:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1207:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1249:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1274:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1274:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1267:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1267:6:7"
																				},
																				"nativeSrc": "1267:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1267:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1260:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1260:6:7"
																		},
																		"nativeSrc": "1260:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1260:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1242:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:7"
																},
																"nativeSrc": "1242:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1242:41:7"
															},
															"nativeSrc": "1242:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1242:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1102:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1166:9:7",
														"nodeType": "YulTypedName",
														"src": "1166:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1177:6:7",
														"nodeType": "YulTypedName",
														"src": "1177:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1188:4:7",
														"nodeType": "YulTypedName",
														"src": "1188:4:7",
														"type": ""
													}
												],
												"src": "1102:187:7"
											},
											{
												"body": {
													"nativeSrc": "1364:116:7",
													"nodeType": "YulBlock",
													"src": "1364:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:16:7",
																"nodeType": "YulBlock",
																"src": "1410:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1419:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1419:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1422:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1422:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1412:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:7"
																			},
																			"nativeSrc": "1412:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1412:12:7"
																		},
																		"nativeSrc": "1412:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1385:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1385:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1394:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1394:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1381:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:7"
																		},
																		"nativeSrc": "1381:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1381:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1406:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1406:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1377:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:7"
																},
																"nativeSrc": "1377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1377:32:7"
															},
															"nativeSrc": "1374:52:7",
															"nodeType": "YulIf",
															"src": "1374:52:7"
														},
														{
															"nativeSrc": "1435:39:7",
															"nodeType": "YulAssignment",
															"src": "1435:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1464:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1464:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1445:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1445:18:7"
																},
																"nativeSrc": "1445:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1445:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1435:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1435:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1294:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1330:9:7",
														"nodeType": "YulTypedName",
														"src": "1330:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1341:7:7",
														"nodeType": "YulTypedName",
														"src": "1341:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1353:6:7",
														"nodeType": "YulTypedName",
														"src": "1353:6:7",
														"type": ""
													}
												],
												"src": "1294:186:7"
											},
											{
												"body": {
													"nativeSrc": "1589:270:7",
													"nodeType": "YulBlock",
													"src": "1589:270:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1635:16:7",
																"nodeType": "YulBlock",
																"src": "1635:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1644:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1644:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1647:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1637:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:7"
																			},
																			"nativeSrc": "1637:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1637:12:7"
																		},
																		"nativeSrc": "1637:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1610:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1610:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1619:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:7"
																		},
																		"nativeSrc": "1606:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1631:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1602:3:7"
																},
																"nativeSrc": "1602:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1602:32:7"
															},
															"nativeSrc": "1599:52:7",
															"nodeType": "YulIf",
															"src": "1599:52:7"
														},
														{
															"nativeSrc": "1660:39:7",
															"nodeType": "YulAssignment",
															"src": "1660:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1689:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1670:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1670:18:7"
																},
																"nativeSrc": "1670:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1670:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:7"
																}
															]
														},
														{
															"nativeSrc": "1708:48:7",
															"nodeType": "YulAssignment",
															"src": "1708:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1741:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1752:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1752:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1737:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:7"
																		},
																		"nativeSrc": "1737:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1737:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1718:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1718:18:7"
																},
																"nativeSrc": "1718:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1718:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1708:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:7"
																}
															]
														},
														{
															"nativeSrc": "1765:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1778:1:7",
																"nodeType": "YulLiteral",
																"src": "1778:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1769:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1769:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1788:41:7",
															"nodeType": "YulAssignment",
															"src": "1788:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1814:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1825:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1825:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:7"
																		},
																		"nativeSrc": "1810:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1810:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1797:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1797:12:7"
																},
																"nativeSrc": "1797:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1797:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1788:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1788:5:7"
																}
															]
														},
														{
															"nativeSrc": "1838:15:7",
															"nodeType": "YulAssignment",
															"src": "1838:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1848:5:7",
																"nodeType": "YulIdentifier",
																"src": "1848:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1838:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1485:374:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1539:9:7",
														"nodeType": "YulTypedName",
														"src": "1539:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1550:7:7",
														"nodeType": "YulTypedName",
														"src": "1550:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1562:6:7",
														"nodeType": "YulTypedName",
														"src": "1562:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1570:6:7",
														"nodeType": "YulTypedName",
														"src": "1570:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1578:6:7",
														"nodeType": "YulTypedName",
														"src": "1578:6:7",
														"type": ""
													}
												],
												"src": "1485:374:7"
											},
											{
												"body": {
													"nativeSrc": "1961:87:7",
													"nodeType": "YulBlock",
													"src": "1961:87:7",
													"statements": [
														{
															"nativeSrc": "1971:26:7",
															"nodeType": "YulAssignment",
															"src": "1971:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1994:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:7"
																},
																"nativeSrc": "1979:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1979:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1971:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1971:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2013:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2028:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2036:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2036:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2024:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:7"
																		},
																		"nativeSrc": "2024:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2006:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:7"
																},
																"nativeSrc": "2006:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2006:36:7"
															},
															"nativeSrc": "2006:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2006:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1864:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1930:9:7",
														"nodeType": "YulTypedName",
														"src": "1930:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1941:6:7",
														"nodeType": "YulTypedName",
														"src": "1941:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1952:4:7",
														"nodeType": "YulTypedName",
														"src": "1952:4:7",
														"type": ""
													}
												],
												"src": "1864:184:7"
											},
											{
												"body": {
													"nativeSrc": "2123:156:7",
													"nodeType": "YulBlock",
													"src": "2123:156:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2169:16:7",
																"nodeType": "YulBlock",
																"src": "2169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2178:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2181:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2171:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:7"
																			},
																			"nativeSrc": "2171:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2171:12:7"
																		},
																		"nativeSrc": "2171:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2144:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2144:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2153:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2140:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:7"
																		},
																		"nativeSrc": "2140:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2165:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2136:3:7"
																},
																"nativeSrc": "2136:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2136:32:7"
															},
															"nativeSrc": "2133:52:7",
															"nodeType": "YulIf",
															"src": "2133:52:7"
														},
														{
															"nativeSrc": "2194:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2194:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2207:1:7",
																"nodeType": "YulLiteral",
																"src": "2207:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2198:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2198:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2217:32:7",
															"nodeType": "YulAssignment",
															"src": "2217:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2239:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2239:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2226:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2226:12:7"
																},
																"nativeSrc": "2226:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2226:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2217:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2217:5:7"
																}
															]
														},
														{
															"nativeSrc": "2258:15:7",
															"nodeType": "YulAssignment",
															"src": "2258:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:7",
																"nodeType": "YulIdentifier",
																"src": "2268:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2258:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2053:226:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2089:9:7",
														"nodeType": "YulTypedName",
														"src": "2089:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2100:7:7",
														"nodeType": "YulTypedName",
														"src": "2100:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2112:6:7",
														"nodeType": "YulTypedName",
														"src": "2112:6:7",
														"type": ""
													}
												],
												"src": "2053:226:7"
											},
											{
												"body": {
													"nativeSrc": "2385:102:7",
													"nodeType": "YulBlock",
													"src": "2385:102:7",
													"statements": [
														{
															"nativeSrc": "2395:26:7",
															"nodeType": "YulAssignment",
															"src": "2395:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2407:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2403:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:7"
																},
																"nativeSrc": "2403:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2403:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2395:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2437:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2452:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2468:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2468:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2473:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2464:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2464:3:7"
																						},
																						"nativeSrc": "2464:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2464:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2477:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2477:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2460:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:7"
																				},
																				"nativeSrc": "2460:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2460:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2448:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:7"
																		},
																		"nativeSrc": "2448:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2430:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:7"
																},
																"nativeSrc": "2430:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2430:51:7"
															},
															"nativeSrc": "2430:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2430:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2284:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2354:9:7",
														"nodeType": "YulTypedName",
														"src": "2354:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2365:6:7",
														"nodeType": "YulTypedName",
														"src": "2365:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2376:4:7",
														"nodeType": "YulTypedName",
														"src": "2376:4:7",
														"type": ""
													}
												],
												"src": "2284:203:7"
											},
											{
												"body": {
													"nativeSrc": "2579:173:7",
													"nodeType": "YulBlock",
													"src": "2579:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2625:16:7",
																"nodeType": "YulBlock",
																"src": "2625:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2637:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2637:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2627:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:7"
																			},
																			"nativeSrc": "2627:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2627:12:7"
																		},
																		"nativeSrc": "2627:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2627:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2600:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2600:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2596:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2596:3:7"
																		},
																		"nativeSrc": "2596:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2596:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2621:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2592:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2592:3:7"
																},
																"nativeSrc": "2592:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2592:32:7"
															},
															"nativeSrc": "2589:52:7",
															"nodeType": "YulIf",
															"src": "2589:52:7"
														},
														{
															"nativeSrc": "2650:39:7",
															"nodeType": "YulAssignment",
															"src": "2650:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2679:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2660:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2660:18:7"
																},
																"nativeSrc": "2660:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2660:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2650:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:7"
																}
															]
														},
														{
															"nativeSrc": "2698:48:7",
															"nodeType": "YulAssignment",
															"src": "2698:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2731:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2731:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2742:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2727:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:7"
																		},
																		"nativeSrc": "2727:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2727:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2708:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2708:18:7"
																},
																"nativeSrc": "2708:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2708:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2698:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2492:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2537:9:7",
														"nodeType": "YulTypedName",
														"src": "2537:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2548:7:7",
														"nodeType": "YulTypedName",
														"src": "2548:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2560:6:7",
														"nodeType": "YulTypedName",
														"src": "2560:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2568:6:7",
														"nodeType": "YulTypedName",
														"src": "2568:6:7",
														"type": ""
													}
												],
												"src": "2492:260:7"
											},
											{
												"body": {
													"nativeSrc": "2812:325:7",
													"nodeType": "YulBlock",
													"src": "2812:325:7",
													"statements": [
														{
															"nativeSrc": "2822:22:7",
															"nodeType": "YulAssignment",
															"src": "2822:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2836:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2836:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2839:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2839:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2832:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2832:3:7"
																},
																"nativeSrc": "2832:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2832:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2822:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:7"
																}
															]
														},
														{
															"nativeSrc": "2853:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2853:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2883:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2883:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2889:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2879:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2879:3:7"
																},
																"nativeSrc": "2879:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2879:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2857:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2857:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2930:31:7",
																"nodeType": "YulBlock",
																"src": "2930:31:7",
																"statements": [
																	{
																		"nativeSrc": "2932:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2932:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2946:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2946:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2954:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2954:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2942:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2942:3:7"
																			},
																			"nativeSrc": "2942:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2932:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2910:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2910:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2903:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:7"
																},
																"nativeSrc": "2903:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2903:26:7"
															},
															"nativeSrc": "2900:61:7",
															"nodeType": "YulIf",
															"src": "2900:61:7"
														},
														{
															"body": {
																"nativeSrc": "3020:111:7",
																"nodeType": "YulBlock",
																"src": "3020:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3041:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3041:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3048:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3048:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3053:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3053:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3044:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3044:3:7"
																					},
																					"nativeSrc": "3044:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3044:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3034:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3034:6:7"
																			},
																			"nativeSrc": "3034:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3034:31:7"
																		},
																		"nativeSrc": "3034:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3034:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3085:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3088:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3088:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3078:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3078:6:7"
																			},
																			"nativeSrc": "3078:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3078:15:7"
																		},
																		"nativeSrc": "3078:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3113:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3113:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3116:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3116:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3106:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:7"
																			},
																			"nativeSrc": "3106:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3106:15:7"
																		},
																		"nativeSrc": "3106:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3106:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2976:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2976:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2999:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2999:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3007:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3007:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2996:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2996:2:7"
																		},
																		"nativeSrc": "2996:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2973:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2973:2:7"
																},
																"nativeSrc": "2973:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2973:38:7"
															},
															"nativeSrc": "2970:161:7",
															"nodeType": "YulIf",
															"src": "2970:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2757:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2792:4:7",
														"nodeType": "YulTypedName",
														"src": "2792:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2801:6:7",
														"nodeType": "YulTypedName",
														"src": "2801:6:7",
														"type": ""
													}
												],
												"src": "2757:380:7"
											},
											{
												"body": {
													"nativeSrc": "3174:95:7",
													"nodeType": "YulBlock",
													"src": "3174:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3191:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3191:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3198:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3198:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3203:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3203:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3194:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3194:3:7"
																		},
																		"nativeSrc": "3194:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:7"
																},
																"nativeSrc": "3184:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3184:31:7"
															},
															"nativeSrc": "3184:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3184:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3231:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3231:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3234:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3234:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3224:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:7"
																},
																"nativeSrc": "3224:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3224:15:7"
															},
															"nativeSrc": "3224:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3224:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3255:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3255:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3258:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3258:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3248:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:7"
																},
																"nativeSrc": "3248:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3248:15:7"
															},
															"nativeSrc": "3248:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3248:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3142:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3142:127:7"
											},
											{
												"body": {
													"nativeSrc": "3323:79:7",
													"nodeType": "YulBlock",
													"src": "3323:79:7",
													"statements": [
														{
															"nativeSrc": "3333:17:7",
															"nodeType": "YulAssignment",
															"src": "3333:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3345:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3345:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3348:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3348:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3341:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3341:3:7"
																},
																"nativeSrc": "3341:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3341:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3333:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3333:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3374:22:7",
																"nodeType": "YulBlock",
																"src": "3374:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3376:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3376:16:7"
																			},
																			"nativeSrc": "3376:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3376:18:7"
																		},
																		"nativeSrc": "3376:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3376:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3365:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3365:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3371:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3371:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3362:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3362:2:7"
																},
																"nativeSrc": "3362:11:7",
																"nodeType": "YulFunctionCall",
																"src": "3362:11:7"
															},
															"nativeSrc": "3359:37:7",
															"nodeType": "YulIf",
															"src": "3359:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3274:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3305:1:7",
														"nodeType": "YulTypedName",
														"src": "3305:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3308:1:7",
														"nodeType": "YulTypedName",
														"src": "3308:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3314:4:7",
														"nodeType": "YulTypedName",
														"src": "3314:4:7",
														"type": ""
													}
												],
												"src": "3274:128:7"
											},
											{
												"body": {
													"nativeSrc": "3453:171:7",
													"nodeType": "YulBlock",
													"src": "3453:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3484:111:7",
																"nodeType": "YulBlock",
																"src": "3484:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3505:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3505:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3512:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3512:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3517:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3517:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3508:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3508:3:7"
																					},
																					"nativeSrc": "3508:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3508:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3498:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3498:6:7"
																			},
																			"nativeSrc": "3498:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3498:31:7"
																		},
																		"nativeSrc": "3498:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3498:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3549:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3552:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3552:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3542:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:7"
																			},
																			"nativeSrc": "3542:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3542:15:7"
																		},
																		"nativeSrc": "3542:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3577:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3577:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3580:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3580:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3570:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3570:6:7"
																			},
																			"nativeSrc": "3570:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3570:15:7"
																		},
																		"nativeSrc": "3570:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3570:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3473:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3473:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3466:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3466:6:7"
																},
																"nativeSrc": "3466:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3466:9:7"
															},
															"nativeSrc": "3463:132:7",
															"nodeType": "YulIf",
															"src": "3463:132:7"
														},
														{
															"nativeSrc": "3604:14:7",
															"nodeType": "YulAssignment",
															"src": "3604:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3613:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3613:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3616:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3616:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3609:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3609:3:7"
																},
																"nativeSrc": "3609:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3609:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3604:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "3604:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3407:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3438:1:7",
														"nodeType": "YulTypedName",
														"src": "3438:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3441:1:7",
														"nodeType": "YulTypedName",
														"src": "3441:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3447:1:7",
														"nodeType": "YulTypedName",
														"src": "3447:1:7",
														"type": ""
													}
												],
												"src": "3407:217:7"
											},
											{
												"body": {
													"nativeSrc": "3681:116:7",
													"nodeType": "YulBlock",
													"src": "3681:116:7",
													"statements": [
														{
															"nativeSrc": "3691:20:7",
															"nodeType": "YulAssignment",
															"src": "3691:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3706:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3706:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3709:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3709:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3702:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3702:3:7"
																},
																"nativeSrc": "3702:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3702:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3691:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3691:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3769:22:7",
																"nodeType": "YulBlock",
																"src": "3769:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3771:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3771:16:7"
																			},
																			"nativeSrc": "3771:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3771:18:7"
																		},
																		"nativeSrc": "3771:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3771:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3740:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "3740:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3733:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3733:6:7"
																				},
																				"nativeSrc": "3733:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3733:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3747:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "3747:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3754:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "3754:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3763:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "3763:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3750:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3750:3:7"
																						},
																						"nativeSrc": "3750:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3750:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3744:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "3744:2:7"
																				},
																				"nativeSrc": "3744:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3744:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3730:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3730:2:7"
																		},
																		"nativeSrc": "3730:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3730:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3723:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3723:6:7"
																},
																"nativeSrc": "3723:45:7",
																"nodeType": "YulFunctionCall",
																"src": "3723:45:7"
															},
															"nativeSrc": "3720:71:7",
															"nodeType": "YulIf",
															"src": "3720:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3629:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3660:1:7",
														"nodeType": "YulTypedName",
														"src": "3660:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3663:1:7",
														"nodeType": "YulTypedName",
														"src": "3663:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3669:7:7",
														"nodeType": "YulTypedName",
														"src": "3669:7:7",
														"type": ""
													}
												],
												"src": "3629:168:7"
											},
											{
												"body": {
													"nativeSrc": "3976:223:7",
													"nodeType": "YulBlock",
													"src": "3976:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3993:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3993:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4004:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4004:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3986:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3986:6:7"
																},
																"nativeSrc": "3986:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3986:21:7"
															},
															"nativeSrc": "3986:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3986:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4027:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4027:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4038:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4038:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4023:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4023:3:7"
																		},
																		"nativeSrc": "4023:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4023:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4043:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4043:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4016:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4016:6:7"
																},
																"nativeSrc": "4016:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4016:30:7"
															},
															"nativeSrc": "4016:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4016:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4066:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4077:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4077:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4062:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:7"
																		},
																		"nativeSrc": "4062:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4062:18:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "4082:34:7",
																		"nodeType": "YulLiteral",
																		"src": "4082:34:7",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4055:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4055:6:7"
																},
																"nativeSrc": "4055:62:7",
																"nodeType": "YulFunctionCall",
																"src": "4055:62:7"
															},
															"nativeSrc": "4055:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "4055:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4137:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4137:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4148:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4148:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4133:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4133:3:7"
																		},
																		"nativeSrc": "4133:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4133:18:7"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "4153:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4153:3:7",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4126:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4126:6:7"
																},
																"nativeSrc": "4126:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4126:31:7"
															},
															"nativeSrc": "4126:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4126:31:7"
														},
														{
															"nativeSrc": "4166:27:7",
															"nodeType": "YulAssignment",
															"src": "4166:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4178:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4178:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4189:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4189:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4174:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4174:3:7"
																},
																"nativeSrc": "4174:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4174:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4166:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4166:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3802:397:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3953:9:7",
														"nodeType": "YulTypedName",
														"src": "3953:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3967:4:7",
														"nodeType": "YulTypedName",
														"src": "3967:4:7",
														"type": ""
													}
												],
												"src": "3802:397:7"
											},
											{
												"body": {
													"nativeSrc": "4378:180:7",
													"nodeType": "YulBlock",
													"src": "4378:180:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4395:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4395:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4406:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4388:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:7"
																},
																"nativeSrc": "4388:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4388:21:7"
															},
															"nativeSrc": "4388:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4388:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4429:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4429:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4440:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4440:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4425:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4425:3:7"
																		},
																		"nativeSrc": "4425:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4425:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4445:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4445:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4418:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:7"
																},
																"nativeSrc": "4418:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4418:30:7"
															},
															"nativeSrc": "4418:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4418:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4468:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4468:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4479:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4479:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4464:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4464:3:7"
																		},
																		"nativeSrc": "4464:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4464:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e636520746f207374616b652e",
																		"kind": "string",
																		"nativeSrc": "4484:32:7",
																		"nodeType": "YulLiteral",
																		"src": "4484:32:7",
																		"type": "",
																		"value": "Insufficient balance to stake."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4457:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4457:6:7"
																},
																"nativeSrc": "4457:60:7",
																"nodeType": "YulFunctionCall",
																"src": "4457:60:7"
															},
															"nativeSrc": "4457:60:7",
															"nodeType": "YulExpressionStatement",
															"src": "4457:60:7"
														},
														{
															"nativeSrc": "4526:26:7",
															"nodeType": "YulAssignment",
															"src": "4526:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4538:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4538:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4549:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4549:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4534:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4534:3:7"
																},
																"nativeSrc": "4534:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4534:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4526:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4526:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30b58ae3ad08e862b8698bb084efd9dff3bcf9a75a69ffe30519f0b126749acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4204:354:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4355:9:7",
														"nodeType": "YulTypedName",
														"src": "4355:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4369:4:7",
														"nodeType": "YulTypedName",
														"src": "4369:4:7",
														"type": ""
													}
												],
												"src": "4204:354:7"
											},
											{
												"body": {
													"nativeSrc": "4611:77:7",
													"nodeType": "YulBlock",
													"src": "4611:77:7",
													"statements": [
														{
															"nativeSrc": "4621:16:7",
															"nodeType": "YulAssignment",
															"src": "4621:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4632:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4632:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4635:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4635:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4628:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4628:3:7"
																},
																"nativeSrc": "4628:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4628:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4621:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4621:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4660:22:7",
																"nodeType": "YulBlock",
																"src": "4660:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4662:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4662:16:7"
																			},
																			"nativeSrc": "4662:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4662:18:7"
																		},
																		"nativeSrc": "4662:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4662:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4652:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4652:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4655:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4655:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4649:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4649:2:7"
																},
																"nativeSrc": "4649:10:7",
																"nodeType": "YulFunctionCall",
																"src": "4649:10:7"
															},
															"nativeSrc": "4646:36:7",
															"nodeType": "YulIf",
															"src": "4646:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4563:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4594:1:7",
														"nodeType": "YulTypedName",
														"src": "4594:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4597:1:7",
														"nodeType": "YulTypedName",
														"src": "4597:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4603:3:7",
														"nodeType": "YulTypedName",
														"src": "4603:3:7",
														"type": ""
													}
												],
												"src": "4563:125:7"
											},
											{
												"body": {
													"nativeSrc": "4867:167:7",
													"nodeType": "YulBlock",
													"src": "4867:167:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4884:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4884:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4895:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4895:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4877:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:7"
																},
																"nativeSrc": "4877:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4877:21:7"
															},
															"nativeSrc": "4877:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4877:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4918:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4918:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4929:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4929:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4914:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4914:3:7"
																		},
																		"nativeSrc": "4914:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4914:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4934:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4934:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4907:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4907:6:7"
																},
																"nativeSrc": "4907:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4907:30:7"
															},
															"nativeSrc": "4907:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4907:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4957:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4957:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4968:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4968:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4953:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4953:3:7"
																		},
																		"nativeSrc": "4953:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4953:18:7"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73207374616b65642e",
																		"kind": "string",
																		"nativeSrc": "4973:19:7",
																		"nodeType": "YulLiteral",
																		"src": "4973:19:7",
																		"type": "",
																		"value": "No tokens staked."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4946:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4946:6:7"
																},
																"nativeSrc": "4946:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4946:47:7"
															},
															"nativeSrc": "4946:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4946:47:7"
														},
														{
															"nativeSrc": "5002:26:7",
															"nodeType": "YulAssignment",
															"src": "5002:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5014:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5014:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5025:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5025:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5010:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:7"
																},
																"nativeSrc": "5010:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5010:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5002:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5002:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4693:341:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4844:9:7",
														"nodeType": "YulTypedName",
														"src": "4844:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4858:4:7",
														"nodeType": "YulTypedName",
														"src": "4858:4:7",
														"type": ""
													}
												],
												"src": "4693:341:7"
											},
											{
												"body": {
													"nativeSrc": "5213:232:7",
													"nodeType": "YulBlock",
													"src": "5213:232:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5230:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5230:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5241:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5241:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5223:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5223:6:7"
																},
																"nativeSrc": "5223:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5223:21:7"
															},
															"nativeSrc": "5223:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5223:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5264:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5264:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5275:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5275:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5260:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5260:3:7"
																		},
																		"nativeSrc": "5260:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5260:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5280:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5280:2:7",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5253:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5253:6:7"
																},
																"nativeSrc": "5253:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5253:30:7"
															},
															"nativeSrc": "5253:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5253:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5303:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5303:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5314:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5314:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5299:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5299:3:7"
																		},
																		"nativeSrc": "5299:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5299:18:7"
																	},
																	{
																		"hexValue": "546f6b656e732063616e206f6e6c7920626520756e7374616b65642061667465",
																		"kind": "string",
																		"nativeSrc": "5319:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5319:34:7",
																		"type": "",
																		"value": "Tokens can only be unstaked afte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5292:6:7"
																},
																"nativeSrc": "5292:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5292:62:7"
															},
															"nativeSrc": "5292:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "5292:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5374:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5374:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5385:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5385:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5370:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5370:3:7"
																		},
																		"nativeSrc": "5370:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5370:18:7"
																	},
																	{
																		"hexValue": "722034207765656b732e",
																		"kind": "string",
																		"nativeSrc": "5390:12:7",
																		"nodeType": "YulLiteral",
																		"src": "5390:12:7",
																		"type": "",
																		"value": "r 4 weeks."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5363:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:7"
																},
																"nativeSrc": "5363:40:7",
																"nodeType": "YulFunctionCall",
																"src": "5363:40:7"
															},
															"nativeSrc": "5363:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "5363:40:7"
														},
														{
															"nativeSrc": "5412:27:7",
															"nodeType": "YulAssignment",
															"src": "5412:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5424:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5424:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5435:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5435:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5420:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5420:3:7"
																},
																"nativeSrc": "5420:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5420:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5412:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5412:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565140ed2ac2356858b228ac0150df5441f3ca3b9efa1a820c61a493b93b230e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5039:406:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5190:9:7",
														"nodeType": "YulTypedName",
														"src": "5190:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5204:4:7",
														"nodeType": "YulTypedName",
														"src": "5204:4:7",
														"type": ""
													}
												],
												"src": "5039:406:7"
											},
											{
												"body": {
													"nativeSrc": "5579:119:7",
													"nodeType": "YulBlock",
													"src": "5579:119:7",
													"statements": [
														{
															"nativeSrc": "5589:26:7",
															"nodeType": "YulAssignment",
															"src": "5589:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5601:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5601:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5612:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5612:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5597:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5597:3:7"
																},
																"nativeSrc": "5597:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5597:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5589:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5589:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5631:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5631:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5642:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5642:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5624:6:7"
																},
																"nativeSrc": "5624:25:7",
																"nodeType": "YulFunctionCall",
																"src": "5624:25:7"
															},
															"nativeSrc": "5624:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "5624:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5669:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5669:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5680:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5680:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5665:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5665:3:7"
																		},
																		"nativeSrc": "5665:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5665:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5685:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5685:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5658:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5658:6:7"
																},
																"nativeSrc": "5658:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5658:34:7"
															},
															"nativeSrc": "5658:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5658:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5450:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5540:9:7",
														"nodeType": "YulTypedName",
														"src": "5540:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5551:6:7",
														"nodeType": "YulTypedName",
														"src": "5551:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5559:6:7",
														"nodeType": "YulTypedName",
														"src": "5559:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5570:4:7",
														"nodeType": "YulTypedName",
														"src": "5570:4:7",
														"type": ""
													}
												],
												"src": "5450:248:7"
											},
											{
												"body": {
													"nativeSrc": "5860:188:7",
													"nodeType": "YulBlock",
													"src": "5860:188:7",
													"statements": [
														{
															"nativeSrc": "5870:26:7",
															"nodeType": "YulAssignment",
															"src": "5870:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5882:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5882:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5893:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5893:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5878:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5878:3:7"
																},
																"nativeSrc": "5878:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5878:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5870:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5870:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5912:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5912:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5927:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5927:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5943:3:7",
																								"nodeType": "YulLiteral",
																								"src": "5943:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5948:1:7",
																								"nodeType": "YulLiteral",
																								"src": "5948:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5939:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5939:3:7"
																						},
																						"nativeSrc": "5939:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5939:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5952:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5952:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5935:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5935:3:7"
																				},
																				"nativeSrc": "5935:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5935:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5923:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5923:3:7"
																		},
																		"nativeSrc": "5923:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5905:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5905:6:7"
																},
																"nativeSrc": "5905:51:7",
																"nodeType": "YulFunctionCall",
																"src": "5905:51:7"
															},
															"nativeSrc": "5905:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "5905:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5976:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5976:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5987:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5987:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5972:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5972:3:7"
																		},
																		"nativeSrc": "5972:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5972:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5992:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5992:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5965:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5965:6:7"
																},
																"nativeSrc": "5965:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5965:34:7"
															},
															"nativeSrc": "5965:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5965:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6019:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6030:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6030:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6015:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6015:3:7"
																		},
																		"nativeSrc": "6015:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6015:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6035:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6035:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6008:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6008:6:7"
																},
																"nativeSrc": "6008:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6008:34:7"
															},
															"nativeSrc": "6008:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6008:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5703:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5813:9:7",
														"nodeType": "YulTypedName",
														"src": "5813:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5824:6:7",
														"nodeType": "YulTypedName",
														"src": "5824:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5832:6:7",
														"nodeType": "YulTypedName",
														"src": "5832:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5840:6:7",
														"nodeType": "YulTypedName",
														"src": "5840:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5851:4:7",
														"nodeType": "YulTypedName",
														"src": "5851:4:7",
														"type": ""
													}
												],
												"src": "5703:345:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_30b58ae3ad08e862b8698bb084efd9dff3bcf9a75a69ffe30519f0b126749acc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Insufficient balance to stake.\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No tokens staked.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565140ed2ac2356858b228ac0150df5441f3ca3b9efa1a820c61a493b93b230e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Tokens can only be unstaked afte\")\n        mstore(add(headStart, 96), \"r 4 weeks.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101c6575f3560e01c80635ee09669116100fe57806395d89b411161009e578063dd62ed3e1161006e578063dd62ed3e146103bf578063ed338ff1146103f7578063f2fde38b14610400578063f993185514610413575f80fd5b806395d89b4114610389578063a5ce413b14610391578063a9059cbb14610399578063b7d68519146103ac575f80fd5b80637165d19b116100d95780637165d19b146103335780637547c7a31461033c5780638da5cb5b1461034f5780638f0794fe1461036a575f80fd5b80635ee09669146102ee57806370a0823114610301578063715018a614610329575f80fd5b806323b872dd11610169578063499d7f9611610144578063499d7f96146102955780634ac530dc146102b45780634f3fc2df146102dc578063518ab2a8146102e5575f80fd5b806323b872dd1461024b578063313ce5671461025e5780633a02a42d1461026d575f80fd5b80630d505541116101a45780630d5055411461021e57806318160ddd146102315780631cbaee2d146102395780631d0806ae14610242575f80fd5b806303e293a3146101ca57806306fdde03146101e6578063095ea7b3146101fb575b5f80fd5b6101d360095481565b6040519081526020015b60405180910390f35b6101ee610432565b6040516101dd9190610c03565b61020e610209366004610c53565b6104c2565b60405190151581526020016101dd565b6101d361022c366004610c7b565b6104db565b6002546101d3565b6101d360065481565b6101d360085481565b61020e610259366004610c9b565b610566565b604051601281526020016101dd565b6101d361027b366004610c7b565b6001600160a01b03165f908152600d602052604090205490565b6101d36102a3366004610c7b565b600f6020525f908152604090205481565b6101d36102c2366004610c7b565b6001600160a01b03165f908152600e602052604090205490565b6101d3600c5481565b6101d3600b5481565b6101d36102fc366004610c7b565b610589565b6101d361030f366004610c7b565b6001600160a01b03165f9081526020819052604090205490565b610331610593565b005b6101d3600a5481565b61033161034a366004610cd5565b6105a6565b6005546040516001600160a01b0390911681526020016101dd565b6101d3610378366004610c7b565b600e6020525f908152604090205481565b6101ee6106de565b6103316106ed565b61020e6103a7366004610c53565b61084b565b6103316103ba366004610cd5565b610858565b6101d36103cd366004610cec565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6101d360075481565b61033161040e366004610c7b565b610865565b6101d3610421366004610c7b565b600d6020525f908152604090205481565b60606003805461044190610d1d565b80601f016020809104026020016040519081016040528092919081815260200182805461046d90610d1d565b80156104b85780601f1061048f576101008083540402835291602001916104b8565b820191905f5260205f20905b81548152906001019060200180831161049b57829003601f168201915b5050505050905090565b5f336104cf8185856108a2565b60019150505b92915050565b6001600160a01b0381165f908152600d602052604081205480820361050257505f92915050565b6001600160a01b0383165f908152600e60205260408120546105249042610d69565b90505f61053462093a8083610d7c565b90505f606482600c54866105489190610d9b565b6105529190610d9b565b61055c9190610d7c565b9695505050505050565b5f336105738582856108b4565b61057e858585610930565b506001949350505050565b5f6104d5826104db565b61059b61098d565b6105a45f6109ba565b565b5f81116106045760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b60648201526084015b60405180910390fd5b335f908152602081905260409020548111156106625760405162461bcd60e51b815260206004820152601e60248201527f496e73756666696369656e742062616c616e636520746f207374616b652e000060448201526064016105fb565b61066d333083610930565b335f908152600d60205260408120805483929061068b908490610db2565b9091555050335f818152600e602052604090819020429055517fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef906106d39084815260200190565b60405180910390a250565b60606004805461044190610d1d565b335f908152600d60205260409020548061073d5760405162461bcd60e51b81526020600482015260116024820152702737903a37b5b2b7399039ba30b5b2b21760791b60448201526064016105fb565b335f908152600e60205260408120546107569042610d69565b90505f61076662093a8083610d7c565b905060048110156107cc5760405162461bcd60e51b815260206004820152602a60248201527f546f6b656e732063616e206f6e6c7920626520756e7374616b6564206166746560448201526939101a103bb2b2b5b99760b11b60648201526084016105fb565b5f6107d6336104db565b335f818152600d60209081526040808320839055600e90915281205590915061080a9030906108058488610db2565b610930565b604080518581526020810183905233917f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336910160405180910390a250505050565b5f336104cf818585610930565b61086061098d565b600c55565b61086d61098d565b6001600160a01b03811661089657604051631e4fbdf760e01b81525f60048201526024016105fb565b61089f816109ba565b50565b6108af8383836001610a0b565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f1981101561092a578181101561091c57604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016105fb565b61092a84848484035f610a0b565b50505050565b6001600160a01b03831661095957604051634b637e8f60e11b81525f60048201526024016105fb565b6001600160a01b0382166109825760405163ec442f0560e01b81525f60048201526024016105fb565b6108af838383610add565b6005546001600160a01b031633146105a45760405163118cdaa760e01b81523360048201526024016105fb565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038416610a345760405163e602df0560e01b81525f60048201526024016105fb565b6001600160a01b038316610a5d57604051634a1406b160e11b81525f60048201526024016105fb565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561092a57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610acf91815260200190565b60405180910390a350505050565b6001600160a01b038316610b07578060025f828254610afc9190610db2565b90915550610b779050565b6001600160a01b0383165f9081526020819052604090205481811015610b595760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016105fb565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b038216610b9357600280548290039055610bb1565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bf691815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610c4e575f80fd5b919050565b5f8060408385031215610c64575f80fd5b610c6d83610c38565b946020939093013593505050565b5f60208284031215610c8b575f80fd5b610c9482610c38565b9392505050565b5f805f60608486031215610cad575f80fd5b610cb684610c38565b9250610cc460208501610c38565b929592945050506040919091013590565b5f60208284031215610ce5575f80fd5b5035919050565b5f8060408385031215610cfd575f80fd5b610d0683610c38565b9150610d1460208401610c38565b90509250929050565b600181811c90821680610d3157607f821691505b602082108103610d4f57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156104d5576104d5610d55565b5f82610d9657634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176104d5576104d5610d55565b808201808211156104d5576104d5610d5556fea2646970667358221220e85ebc57c42d36536ad3d0afceace7a65c9d8e068baba1ff4e42969b6085e54264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5EE09669 GT PUSH2 0xFE JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x9E JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0xED338FF1 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x413 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x391 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x399 JUMPI DUP1 PUSH4 0xB7D68519 EQ PUSH2 0x3AC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7165D19B GT PUSH2 0xD9 JUMPI DUP1 PUSH4 0x7165D19B EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x33C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x8F0794FE EQ PUSH2 0x36A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5EE09669 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x329 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x169 JUMPI DUP1 PUSH4 0x499D7F96 GT PUSH2 0x144 JUMPI DUP1 PUSH4 0x499D7F96 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x4AC530DC EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x4F3FC2DF EQ PUSH2 0x2DC JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x3A02A42D EQ PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD505541 GT PUSH2 0x1A4 JUMPI DUP1 PUSH4 0xD505541 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x1CBAEE2D EQ PUSH2 0x239 JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x242 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E293A3 EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1FB JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1D3 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xC03 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x209 CALLDATASIZE PUSH1 0x4 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x4DB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D3 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x259 CALLDATASIZE PUSH1 0x4 PUSH2 0xC9B JUMP JUMPDEST PUSH2 0x566 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x589 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x593 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x34A CALLDATASIZE PUSH1 0x4 PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DD JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1EE PUSH2 0x6DE JUMP JUMPDEST PUSH2 0x331 PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x20E PUSH2 0x3A7 CALLDATASIZE PUSH1 0x4 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH2 0x331 PUSH2 0x3BA CALLDATASIZE PUSH1 0x4 PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x3CD CALLDATASIZE PUSH1 0x4 PUSH2 0xCEC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D3 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x331 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH2 0x865 JUMP JUMPDEST PUSH2 0x1D3 PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0xC7B JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x441 SWAP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x46D SWAP1 PUSH2 0xD1D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x48F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0x8A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 DUP3 SUB PUSH2 0x502 JUMPI POP PUSH0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x524 SWAP1 TIMESTAMP PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x534 PUSH3 0x93A80 DUP4 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 DUP3 PUSH1 0xC SLOAD DUP7 PUSH2 0x548 SWAP2 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x552 SWAP2 SWAP1 PUSH2 0xD9B JUMP JUMPDEST PUSH2 0x55C SWAP2 SWAP1 PUSH2 0xD7C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x573 DUP6 DUP3 DUP6 PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x57E DUP6 DUP6 DUP6 PUSH2 0x930 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D5 DUP3 PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x59B PUSH2 0x98D JUMP JUMPDEST PUSH2 0x5A4 PUSH0 PUSH2 0x9BA JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x604 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742062616C616E636520746F207374616B652E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x66D CALLER ADDRESS DUP4 PUSH2 0x930 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x68B SWAP1 DUP5 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF SWAP1 PUSH2 0x6D3 SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x441 SWAP1 PUSH2 0xD1D JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737903A37B5B2B7399039BA30B5B2B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x756 SWAP1 TIMESTAMP PUSH2 0xD69 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x766 PUSH3 0x93A80 DUP4 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E732063616E206F6E6C7920626520756E7374616B65642061667465 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x39101A103BB2B2B5B997 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH0 PUSH2 0x7D6 CALLER PUSH2 0x4DB JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE SWAP1 SWAP2 POP PUSH2 0x80A SWAP1 ADDRESS SWAP1 PUSH2 0x805 DUP5 DUP9 PUSH2 0xDB2 JUMP JUMPDEST PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x4CF DUP2 DUP6 DUP6 PUSH2 0x930 JUMP JUMPDEST PUSH2 0x860 PUSH2 0x98D JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH2 0x86D PUSH2 0x98D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x89F DUP2 PUSH2 0x9BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x8AF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA0B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x92A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x91C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x92A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA0B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x959 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH2 0x8AF DUP4 DUP4 DUP4 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x92A JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xACF SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB07 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAFC SWAP2 SWAP1 PUSH2 0xDB2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB77 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB59 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x5FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB93 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xBB1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xBF6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC4E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC64 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC6D DUP4 PUSH2 0xC38 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC8B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xC94 DUP3 PUSH2 0xC38 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xCAD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCB6 DUP5 PUSH2 0xC38 JUMP JUMPDEST SWAP3 POP PUSH2 0xCC4 PUSH1 0x20 DUP6 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCFD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD06 DUP4 PUSH2 0xC38 JUMP JUMPDEST SWAP2 POP PUSH2 0xD14 PUSH1 0x20 DUP5 ADD PUSH2 0xC38 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD31 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD4F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4D5 JUMPI PUSH2 0x4D5 PUSH2 0xD55 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xD96 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4D5 JUMPI PUSH2 0x4D5 PUSH2 0xD55 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4D5 JUMPI PUSH2 0x4D5 PUSH2 0xD55 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 MCOPY 0xBC JUMPI 0xC4 0x2D CALLDATASIZE MSTORE8 PUSH11 0xD3D0AFCEACE7A65C9D8E06 DUP12 0xAB LOG1 SELFDESTRUCT 0x4E TIMESTAMP SWAP7 SWAP12 PUSH1 0x85 0xE5 TIMESTAMP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "174:5431:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:31;;;;;;;;;160:25:7;;;148:2;133:18;363:31:6;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;3998:186::-;;;;;;:::i;:::-;;:::i;:::-;;;1267:14:7;;1260:22;1242:41;;1230:2;1215:18;3998:186:2;1102:187:7;3832:574:6;;;;;;:::i;:::-;;:::i;2849:97:2:-;2927:12;;2849:97;;221:28:6;;;;;;289:27;;;;;;4776:244:2;;;;;;:::i;:::-;;:::i;2707:82::-;;;2780:2;2006:36:7;;1994:2;1979:18;2707:82:2;1864:184:7;4836:108:6;;;;;;:::i;:::-;-1:-1:-1;;;;;4922:18:6;4899:7;4922:18;;;:12;:18;;;;;;;4836:108;800:49;;;;;;:::i;:::-;;;;;;;;;;;;;;5112:115;;;;;;:::i;:::-;-1:-1:-1;;;;;5201:22:6;5178:7;5201:22;;;:16;:22;;;;;;;5112:115;532:32;;;;;;498:25;;;;;;5405:123;;;;;;:::i;:::-;;:::i;3004:116:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:2;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;:::i;:::-;;401:33:6;;;;;;2043:518;;;;;;:::i;:::-;;:::i;1638:85:0:-;1710:6;;1638:85;;-1:-1:-1;;;;;1710:6:0;;;2430:51:7;;2418:2;2403:18;1638:85:0;2284:203:7;711:51:6;;;;;;:::i;:::-;;;;;;;;;;;;;;1981:93:2;;;:::i;2692:929:6:-;;;:::i;3315:178:2:-;;;;;;:::i;:::-;;:::i;4567:120:6:-;;;;;;:::i;:::-;;:::i;3551:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:2;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;256:26:6;;;;;;2543:215:0;;;;;;:::i;:::-;;:::i;616:47:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:5;4125:31:2;735:10:5;4141:7:2;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;3832:574:6:-;-1:-1:-1;;;;;3942:18:6;;3899:7;3942:18;;;:12;:18;;;;;;3975:17;;;3971:58;;-1:-1:-1;4016:1:6;;3832:574;-1:-1:-1;;3832:574:6:o;3971:58::-;-1:-1:-1;;;;;4080:22:6;;4041:18;4080:22;;;:16;:22;;;;;;4062:40;;:15;:40;:::i;:::-;4041:61;-1:-1:-1;4113:30:6;4146:20;4159:7;4041:61;4146:20;:::i;:::-;4113:53;;4292:14;4371:3;4345:22;4325:17;;4310:12;:32;;;;:::i;:::-;:57;;;;:::i;:::-;4309:65;;;;:::i;:::-;4292:82;3832:574;-1:-1:-1;;;;;;3832:574:6:o;4776:244:2:-;4863:4;735:10:5;4919:37:2;4935:4;735:10:5;4950:5:2;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:2;;4776:244;-1:-1:-1;;;;4776:244:2:o;5405:123:6:-;5473:7;5496:28;5519:4;5496:22;:28::i;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2043:518:6:-;2117:1;2108:6;:10;2100:56;;;;-1:-1:-1;;;2100:56:6;;4004:2:7;2100:56:6;;;3986:21:7;4043:2;4023:18;;;4016:30;4082:34;4062:18;;;4055:62;-1:-1:-1;;;4133:18:7;;;4126:31;4174:19;;2100:56:6;;;;;;;;;2185:10;3069:7:2;3095:18;;;;;;;;;;;2200:6:6;-1:-1:-1;2175:31:6;2167:74;;;;-1:-1:-1;;;2167:74:6;;4406:2:7;2167:74:6;;;4388:21:7;4445:2;4425:18;;;4418:30;4484:32;4464:18;;;4457:60;4534:18;;2167:74:6;4204:354:7;2167:74:6;2316:44;2326:10;2346:4;2353:6;2316:9;:44::i;:::-;2425:10;2412:24;;;;:12;:24;;;;;:34;;2440:6;;2412:24;:34;;2440:6;;2412:34;:::i;:::-;;;;-1:-1:-1;;2474:10:6;2457:28;;;;:16;:28;;;;;;;2488:15;2457:46;;2521:32;;;;;2546:6;160:25:7;;148:2;133:18;;14:177;2521:32:6;;;;;;;;2043:518;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;2692:929:6:-;2773:10;2737:20;2760:24;;;:12;:24;;;;;;2803:16;2795:46;;;;-1:-1:-1;;;2795:46:6;;4895:2:7;2795:46:6;;;4877:21:7;4934:2;4914:18;;;4907:30;-1:-1:-1;;;4953:18:7;;;4946:47;5010:18;;2795:46:6;4693:341:7;2795:46:6;2910:10;2854:18;2893:28;;;:16;:28;;;;;;2875:46;;:15;:46;:::i;:::-;2854:67;-1:-1:-1;2932:30:6;2965:20;2978:7;2854:67;2965:20;:::i;:::-;2932:53;;3139:1;3113:22;:27;;3105:82;;;;-1:-1:-1;;;3105:82:6;;5241:2:7;3105:82:6;;;5223:21:7;5280:2;5260:18;;;5253:30;5319:34;5299:18;;;5292:62;-1:-1:-1;;;5370:18:7;;;5363:40;5420:19;;3105:82:6;5039:406:7;3105:82:6;3238:14;3255:34;3278:10;3255:22;:34::i;:::-;3353:10;3367:1;3340:24;;;:12;:24;;;;;;;;:28;;;3379:16;:28;;;;;:32;3238:51;;-1:-1:-1;3488:59:6;;3506:4;;3525:21;3238:51;3525:12;:21;:::i;:::-;3488:9;:59::i;:::-;3565:48;;;5624:25:7;;;5680:2;5665:18;;5658:34;;;3580:10:6;;3565:48;;5597:18:7;3565:48:6;;;;;;;2726:895;;;;2692:929::o;3315:178:2:-;3384:4;735:10:5;3438:27:2;735:10:5;3455:2:2;3459:5;3438:9;:27::i;4567:120:6:-;1531:13:0;:11;:13::i;:::-;4648:17:6::1;:31:::0;4567:120::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2430:51:7::0;2403:18;;2672:31:0::1;2284:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:2;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:2;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:2;;-1:-1:-1;;;;;5923:32:7;;10687:60:2;;;5905:51:7;5972:18;;;5965:34;;;6015:18;;;6008:34;;;5878:18;;10687:60:2;5703:345:7;10632:130:2;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:2;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:2;;5544:1;5517:30;;;2430:51:7;2403:18;;5517:30:2;2284:203:7;5472:86:2;-1:-1:-1;;;;;5571:16:2;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:2;;5639:1;5610:32;;;2430:51:7;2403:18;;5610:32:2;2284:203:7;5567:86:2;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2430:51:7;2403:18;;1901:40:0;2284:203:7;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;9701:432:2:-;-1:-1:-1;;;;;9813:19:2;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:2;;9884:1;9855:32;;;2430:51:7;2403:18;;9855:32:2;2284:203:7;9809:89:2;-1:-1:-1;;;;;9911:21:2;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:2;;9983:1;9955:31;;;2430:51:7;2403:18;;9955:31:2;2284:203:7;9907:90:2;-1:-1:-1;;;;;10006:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:2;10094:5;-1:-1:-1;;;;;10085:31:2;;10110:5;10085:31;;;;160:25:7;;148:2;133:18;;14:177;10085:31:2;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;5923:32:7;;6386:50:2;;;5905:51:7;5972:18;;;5965:34;;;6015:18;;;6008:34;;;5878:18;;6386:50:2;5703:345:7;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;160::7;;148:2;133:18;;14:177;7083:25:2;;;;;;;;6008:1107;;;:::o;196:418:7:-;345:2;334:9;327:21;308:4;377:6;371:13;420:6;415:2;404:9;400:18;393:34;479:6;474:2;466:6;462:15;457:2;446:9;442:18;436:50;535:1;530:2;521:6;510:9;506:22;502:31;495:42;605:2;598;594:7;589:2;581:6;577:15;573:29;562:9;558:45;554:54;546:62;;;196:418;;;;:::o;619:173::-;687:20;;-1:-1:-1;;;;;736:31:7;;726:42;;716:70;;782:1;779;772:12;716:70;619:173;;;:::o;797:300::-;865:6;873;926:2;914:9;905:7;901:23;897:32;894:52;;;942:1;939;932:12;894:52;965:29;984:9;965:29;:::i;:::-;955:39;1063:2;1048:18;;;;1035:32;;-1:-1:-1;;;797:300:7:o;1294:186::-;1353:6;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;1445:29;1464:9;1445:29;:::i;:::-;1435:39;1294:186;-1:-1:-1;;;1294:186:7:o;1485:374::-;1562:6;1570;1578;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;1670:29;1689:9;1670:29;:::i;:::-;1660:39;;1718:38;1752:2;1741:9;1737:18;1718:38;:::i;:::-;1485:374;;1708:48;;-1:-1:-1;;;1825:2:7;1810:18;;;;1797:32;;1485:374::o;2053:226::-;2112:6;2165:2;2153:9;2144:7;2140:23;2136:32;2133:52;;;2181:1;2178;2171:12;2133:52;-1:-1:-1;2226:23:7;;2053:226;-1:-1:-1;2053:226:7:o;2492:260::-;2560:6;2568;2621:2;2609:9;2600:7;2596:23;2592:32;2589:52;;;2637:1;2634;2627:12;2589:52;2660:29;2679:9;2660:29;:::i;:::-;2650:39;;2708:38;2742:2;2731:9;2727:18;2708:38;:::i;:::-;2698:48;;2492:260;;;;;:::o;2757:380::-;2836:1;2832:12;;;;2879;;;2900:61;;2954:4;2946:6;2942:17;2932:27;;2900:61;3007:2;2999:6;2996:14;2976:18;2973:38;2970:161;;3053:10;3048:3;3044:20;3041:1;3034:31;3088:4;3085:1;3078:15;3116:4;3113:1;3106:15;2970:161;;2757:380;;;:::o;3142:127::-;3203:10;3198:3;3194:20;3191:1;3184:31;3234:4;3231:1;3224:15;3258:4;3255:1;3248:15;3274:128;3341:9;;;3362:11;;;3359:37;;;3376:18;;:::i;3407:217::-;3447:1;3473;3463:132;;3517:10;3512:3;3508:20;3505:1;3498:31;3552:4;3549:1;3542:15;3580:4;3577:1;3570:15;3463:132;-1:-1:-1;3609:9:7;;3407:217::o;3629:168::-;3702:9;;;3733;;3750:15;;;3744:22;;3730:37;3720:71;;3771:18;;:::i;4563:125::-;4628:9;;;4649:10;;;4646:36;;;4662:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "715800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24803",
								"balanceOf(address)": "2594",
								"calculateStakingReward(address)": "infinite",
								"decimals()": "244",
								"getAccumulatedRewards(address)": "infinite",
								"getStakedBalance(address)": "2613",
								"getStakingStartDate(address)": "2590",
								"initialPrice()": "2395",
								"name()": "infinite",
								"owner()": "2389",
								"regularSalePrice()": "2330",
								"renounceOwnership()": "infinite",
								"saleEndTime()": "2349",
								"saleStartTime()": "2373",
								"setStakingRewardRate(uint256)": "24597",
								"stakeTokens(uint256)": "101309",
								"stakedAmount(address)": "2615",
								"stakingRewardRate()": "2372",
								"stakingRewards(address)": "2550",
								"stakingTimestamp(address)": "2616",
								"symbol()": "infinite",
								"tokensSold()": "2394",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51305",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28421",
								"unstakeTokens()": "infinite",
								"weeklyIncreaseRate()": "2328"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 5605,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1221,
									"end": 1824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1221,
									"end": 1824,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1431,
									"end": 1443,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2730BA3AB932AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "272A29"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3664,
									"end": 3715,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3655,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3637,
									"end": 3655,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1462,
									"end": 1514,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1476,
									"end": 1480,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1513,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1497,
									"end": 1499,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1497,
									"end": 1513,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1497,
									"end": 1513,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1513,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1497,
									"end": 1513,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1513,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1483,
									"end": 1513,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1494,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1513,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1483,
									"end": 1513,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1513,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1483,
									"end": 1513,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1462,
									"end": 1467,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1462,
									"end": 1514,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1462,
									"end": 1514,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1462,
									"end": 1514,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1584,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1572,
									"end": 1600,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1600,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1600,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1600,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1629,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1611,
									"end": 1651,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1651,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1651,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1611,
									"end": 1651,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1662,
									"end": 1678,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1662,
									"end": 1698,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1757,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 1740,
									"end": 1778,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3664,
									"end": 3715,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3655,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3637,
									"end": 3655,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 3518,
									"end": 3721,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5813,
									"end": 5845,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5845,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5795,
									"end": 5846,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5898,
									"end": 5932,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5898,
									"end": 5932,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5898,
									"end": 5932,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5786,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5768,
									"end": 5786,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 5593,
									"end": 5938,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6089,
									"end": 6114,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6089,
									"end": 6114,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6077,
									"end": 6079,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6062,
									"end": 6080,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6062,
									"end": 6080,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5943,
									"end": 6120,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 872,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 872,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 129,
									"end": 135,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 145,
									"end": 151,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 159,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 161,
									"end": 167,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 175,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 222,
									"end": 225,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 210,
									"end": 219,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 201,
									"end": 208,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 197,
									"end": 220,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 193,
									"end": 226,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 190,
									"end": 243,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 190,
									"end": 243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 190,
									"end": 243,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 239,
									"end": 240,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 237,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 229,
									"end": 241,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 190,
									"end": 243,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 190,
									"end": 243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 265,
									"end": 281,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 265,
									"end": 281,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 310,
									"end": 341,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 310,
									"end": 341,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 300,
									"end": 342,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 300,
									"end": 342,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 290,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 290,
									"end": 360,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 356,
									"end": 357,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 354,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 346,
									"end": 358,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 290,
									"end": 360,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 290,
									"end": 360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 450,
									"end": 452,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 453,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 435,
									"end": 453,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 429,
									"end": 454,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 546,
									"end": 548,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 531,
									"end": 549,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 531,
									"end": 549,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 525,
									"end": 550,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 642,
									"end": 644,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 627,
									"end": 645,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 627,
									"end": 645,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 621,
									"end": 646,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 738,
									"end": 741,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 723,
									"end": 742,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 723,
									"end": 742,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 717,
									"end": 743,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 835,
									"end": 838,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 820,
									"end": 839,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 820,
									"end": 839,
									"name": "SWAP12",
									"source": 7
								},
								{
									"begin": 820,
									"end": 839,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 814,
									"end": 840,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 379,
									"end": 384,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 379,
									"end": 384,
									"name": "SWAP13",
									"source": 7
								},
								{
									"begin": 429,
									"end": 454,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 429,
									"end": 454,
									"name": "SWAP12",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 525,
									"end": 550,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 525,
									"end": 550,
									"name": "SWAP10",
									"source": 7
								},
								{
									"begin": 621,
									"end": 646,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 621,
									"end": 646,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 717,
									"end": 743,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 814,
									"end": 840,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 814,
									"end": 840,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 872,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 872,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 877,
									"end": 1004,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 877,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 938,
									"end": 948,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 933,
									"end": 936,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 929,
									"end": 949,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 926,
									"end": 927,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 950,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 969,
									"end": 973,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 966,
									"end": 967,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 993,
									"end": 997,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 990,
									"end": 991,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 998,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1088,
									"end": 1089,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1084,
									"end": 1096,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1096,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1096,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1096,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1152,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1152,
									"end": 1213,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1206,
									"end": 1210,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1198,
									"end": 1204,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1211,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1184,
									"end": 1211,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1184,
									"end": 1211,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1152,
									"end": 1213,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1152,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1261,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1257,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1248,
									"end": 1262,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1263,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1315,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1300,
									"end": 1303,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1296,
									"end": 1316,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1294,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1286,
									"end": 1317,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1340,
									"end": 1344,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1337,
									"end": 1338,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 1345,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1617,
									"end": 1620,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1625,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1658,
									"end": 1663,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 1656,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1706,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1689,
									"end": 1707,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1772,
									"end": 1774,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1760,
									"end": 1770,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1756,
									"end": 1775,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1753,
									"end": 1754,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1749,
									"end": 1776,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1747,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1777,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1808,
									"end": 1812,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1796,
									"end": 1806,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1813,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1831,
									"end": 1835,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1881,
									"end": 1884,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1877,
									"end": 1889,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1875,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1870,
									"end": 1890,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1864,
									"end": 1868,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1891,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1891,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1891,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1959,
									"end": 1961,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1952,
									"end": 1957,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1962,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2019,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2020,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2004,
									"end": 2020,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 1986,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1974,
									"end": 1987,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 1948,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 1948,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2214,
									"end": 3513,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2214,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2356,
									"end": 2386,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2356,
									"end": 2386,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2409,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2353,
									"end": 2409,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2389,
									"end": 2407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2508,
									"end": 2514,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2500,
									"end": 2504,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2494,
									"end": 2505,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2468,
									"end": 2506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2506,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2468,
									"end": 2506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2418,
									"end": 2515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2515,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2418,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2564,
									"end": 2568,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2595,
									"end": 2597,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2584,
									"end": 2598,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2584,
									"end": 2598,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 3301,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3317,
									"end": 3323,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3369,
									"end": 3388,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3388,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3388,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3363,
									"end": 3389,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2171,
									"end": 2172,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2187,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2188,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2189,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2196,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2191,
									"end": 2202,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2191,
									"end": 2202,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2191,
									"end": 2202,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2146,
									"end": 2203,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3497,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3497,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2577,
									"end": 3507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2577,
									"end": 3507,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1460,
									"end": 1474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1474,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1474,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1504,
									"end": 1508,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1491,
									"end": 1509,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1491,
									"end": 1509,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2643,
									"end": 2663,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2663,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2663,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 2782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2772,
									"end": 2773,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2769,
									"end": 2783,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2876,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2876,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2876,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2851,
									"end": 2877,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2836,
									"end": 2878,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2836,
									"end": 2878,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2917,
									"end": 2918,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2905,
									"end": 2919,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2905,
									"end": 2919,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2905,
									"end": 2919,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2905,
									"end": 2919,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2791,
									"end": 2803,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2765,
									"end": 2768,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3011,
									"end": 3017,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3009,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3018,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3091,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3091,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3091,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3066,
									"end": 3092,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3155,
									"end": 3156,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3151,
									"end": 3165,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3165,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3165,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3167,
									"end": 3170,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3147,
									"end": 3171,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3143,
									"end": 3180,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3139,
									"end": 3181,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3124,
									"end": 3182,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3183,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3183,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3243,
									"end": 3244,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3227,
									"end": 3241,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3241,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3241,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3245,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3210,
									"end": 3246,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3210,
									"end": 3246,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2214,
									"end": 3513,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3853,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3726,
									"end": 3853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3787,
									"end": 3797,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3782,
									"end": 3785,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3778,
									"end": 3798,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3775,
									"end": 3776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3799,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3822,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3815,
									"end": 3816,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3808,
									"end": 3823,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3839,
									"end": 3840,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3832,
									"end": 3847,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3946,
									"end": 3947,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3964,
									"end": 3969,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3999,
									"end": 4000,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3989,
									"end": 3997,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3986,
									"end": 4001,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4049,
									"end": 4053,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4044,
									"end": 4047,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4040,
									"end": 4054,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4038,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4031,
									"end": 4055,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4078,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4028,
									"end": 4078,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4058,
									"end": 4076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4058,
									"end": 4076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 4058,
									"end": 4076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4058,
									"end": 4076,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4058,
									"end": 4076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4108,
									"end": 4109,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4098,
									"end": 4106,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4110,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4138,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4138,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4138,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4138,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4205,
									"end": 4206,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4161,
									"end": 4176,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4161,
									"end": 4176,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4287,
									"end": 4292,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4317,
									"end": 4325,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4307,
									"end": 4387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4307,
									"end": 4387,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4358,
									"end": 4359,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4307,
									"end": 4387,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4307,
									"end": 4387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4406,
									"end": 4410,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4472,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4396,
									"end": 4472,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4443,
									"end": 4444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4457,
									"end": 4462,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4457,
									"end": 4462,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4472,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4396,
									"end": 4472,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4488,
									"end": 4492,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4506,
									"end": 4507,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4574,
									"end": 4575,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4531,
									"end": 4532,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4522,
									"end": 4532,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4522,
									"end": 4532,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4545,
									"end": 4550,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4545,
									"end": 4550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4545,
									"end": 4550,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4606,
									"end": 4609,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 4596,
									"end": 4604,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4593,
									"end": 4610,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4590,
									"end": 4633,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4590,
									"end": 4633,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4590,
									"end": 4633,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 4613,
									"end": 4631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4669,
									"end": 4670,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4655,
									"end": 4671,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4655,
									"end": 4671,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 4733,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4728,
									"end": 4733,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4827,
									"end": 4829,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4817,
									"end": 4825,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4814,
									"end": 4830,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4802,
									"end": 4806,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4799,
									"end": 4812,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4795,
									"end": 4831,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4791,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 4779,
									"end": 4787,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4776,
									"end": 4792,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4771,
									"end": 4773,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4762,
									"end": 4774,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4758,
									"end": 4793,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4755,
									"end": 4832,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4864,
									"end": 4883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4883,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 4945,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4940,
									"end": 4945,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5029,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5012,
									"end": 5020,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5006,
									"end": 5010,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5029,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 4987,
									"end": 5029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5029,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4987,
									"end": 5029,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5065,
									"end": 5071,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5061,
									"end": 5062,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5057,
									"end": 5063,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5072,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5044,
									"end": 5051,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5073,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5038,
									"end": 5096,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5038,
									"end": 5096,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5038,
									"end": 5096,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5076,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5076,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5076,
									"end": 5094,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5076,
									"end": 5094,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5076,
									"end": 5094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5114,
									"end": 5134,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5114,
									"end": 5134,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5285,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 5145,
									"end": 5285,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5203,
									"end": 5208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5232,
									"end": 5279,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 5273,
									"end": 5277,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 5263,
									"end": 5271,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5259,
									"end": 5278,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5253,
									"end": 5257,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5232,
									"end": 5279,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 5232,
									"end": 5279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5232,
									"end": 5279,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 5232,
									"end": 5279,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5223,
									"end": 5279,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5285,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5145,
									"end": 5285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5290,
									"end": 5458,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5290,
									"end": 5458,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5372,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5372,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5372,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5394,
									"end": 5403,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5394,
									"end": 5403,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5411,
									"end": 5426,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5411,
									"end": 5426,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5411,
									"end": 5426,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5405,
									"end": 5427,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5405,
									"end": 5427,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5391,
									"end": 5428,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5381,
									"end": 5452,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5432,
									"end": 5450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5432,
									"end": 5450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5463,
									"end": 5588,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5463,
									"end": 5588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5537,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5537,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5537,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5549,
									"end": 5559,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5549,
									"end": 5559,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5549,
									"end": 5559,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5546,
									"end": 5582,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5546,
									"end": 5582,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5546,
									"end": 5582,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5562,
									"end": 5580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5562,
									"end": 5580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5562,
									"end": 5580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5943,
									"end": 6120,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 5943,
									"end": 6120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 5605,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e85ebc57c42d36536ad3d0afceace7a65c9d8e068baba1ff4e42969b6085e54264736f6c634300081a0033",
									".code": [
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "5EE09669"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "ED338FF1"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "F9931855"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "A5CE413B"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "B7D68519"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "7165D19B"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "7165D19B"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "7547C7A3"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "8F0794FE"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "5EE09669"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "499D7F96"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "499D7F96"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "4AC530DC"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "4F3FC2DF"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "518AB2A8"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "3A02A42D"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "D505541"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "D505541"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "1CBAEE2D"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "1D0806AE"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "3E293A3"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1281,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1102,
											"end": 1289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3832,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3832,
											"end": 4406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 221,
											"end": 249,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 221,
											"end": 249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 221,
											"end": 249,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 221,
											"end": 249,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 249,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 289,
											"end": 316,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 289,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 289,
											"end": 316,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 316,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 289,
											"end": 316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 289,
											"end": 316,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1864,
											"end": 2048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4836,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4934,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4922,
											"end": 4940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4836,
											"end": 4944,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 800,
											"end": 849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 800,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 800,
											"end": 849,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 800,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 800,
											"end": 849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 800,
											"end": 849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 800,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 800,
											"end": 849,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 800,
											"end": 849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 800,
											"end": 849,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5112,
											"end": 5227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5185,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5201,
											"end": 5223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5112,
											"end": 5227,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 532,
											"end": 564,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 532,
											"end": 564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 532,
											"end": 564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 564,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 532,
											"end": 564,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 532,
											"end": 564,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 532,
											"end": 564,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 498,
											"end": 523,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 498,
											"end": 523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 498,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 498,
											"end": 523,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 498,
											"end": 523,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 498,
											"end": 523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 498,
											"end": 523,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5405,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5405,
											"end": 5528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2043,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2043,
											"end": 2561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 762,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 711,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 3621,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2692,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2692,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2692,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 4567,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4567,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 256,
											"end": 282,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 256,
											"end": 282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 256,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 256,
											"end": 282,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 256,
											"end": 282,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 256,
											"end": 282,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 256,
											"end": 282,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 616,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 616,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 616,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 616,
											"end": 663,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 616,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 616,
											"end": 663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 616,
											"end": 663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 616,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 616,
											"end": 663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 616,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 616,
											"end": 663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 663,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 3906,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3942,
											"end": 3960,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3971,
											"end": 4029,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3832,
											"end": 4406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3971,
											"end": 4029,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 3971,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4041,
											"end": 4059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4096,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4080,
											"end": 4102,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4062,
											"end": 4102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4077,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 4062,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4062,
											"end": 4102,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4062,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4041,
											"end": 4102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4113,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4159,
											"end": 4166,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 4041,
											"end": 4102,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4146,
											"end": 4166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 4146,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4113,
											"end": 4166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4113,
											"end": 4166,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4371,
											"end": 4374,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4345,
											"end": 4367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4325,
											"end": 4342,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 4325,
											"end": 4342,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4310,
											"end": 4342,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4310,
											"end": 4342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4342,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 4310,
											"end": 4342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 4310,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 4310,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4309,
											"end": 4374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4309,
											"end": 4374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4309,
											"end": 4374,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 4309,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4292,
											"end": 4374,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3832,
											"end": 4406,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3832,
											"end": 4406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 5405,
											"end": 5528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5480,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5496,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5519,
											"end": 5523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5496,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 5496,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4004,
											"end": 4006,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3986,
											"end": 4007,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4043,
											"end": 4045,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4116,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 4062,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4062,
											"end": 4080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4117,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4126,
											"end": 4157,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4174,
											"end": 4193,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4174,
											"end": 4193,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 2100,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2185,
											"end": 2195,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2175,
											"end": 2206,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4406,
											"end": 4408,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4445,
											"end": 4447,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4425,
											"end": 4443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4418,
											"end": 4448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4516,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742062616C616E636520746F207374616B652E0000"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4464,
											"end": 4482,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4457,
											"end": 4517,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4552,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4534,
											"end": 4552,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4204,
											"end": 4558,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2167,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2326,
											"end": 2336,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2346,
											"end": 2350,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2353,
											"end": 2359,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 2316,
											"end": 2360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2360,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 2316,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2425,
											"end": 2435,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2424,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 2412,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2474,
											"end": 2484,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2485,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2488,
											"end": 2503,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2503,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "PUSH",
											"source": 6,
											"value": "B539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF"
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2546,
											"end": 2552,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2521,
											"end": 2553,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2561,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2043,
											"end": 2561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 3621,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2692,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2737,
											"end": 2757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2772,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2760,
											"end": 2784,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2819,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4897,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4877,
											"end": 4898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4934,
											"end": 4936,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4914,
											"end": 4932,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4914,
											"end": 4932,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4914,
											"end": 4932,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4937,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737903A37B5B2B7399039BA30B5B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4953,
											"end": 4971,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4953,
											"end": 4971,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4953,
											"end": 4971,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4946,
											"end": 4993,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 4693,
											"end": 5034,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2795,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2910,
											"end": 2920,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2872,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2893,
											"end": 2921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2909,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 2893,
											"end": 2921,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2893,
											"end": 2921,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2893,
											"end": 2921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2921,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2921,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2875,
											"end": 2921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2890,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2875,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2921,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2875,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2854,
											"end": 2921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2932,
											"end": 2962,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2978,
											"end": 2985,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 2854,
											"end": 2921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 2965,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2965,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2932,
											"end": 2985,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3140,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3113,
											"end": 3135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3140,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3140,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5223,
											"end": 5244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5280,
											"end": 5282,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5260,
											"end": 5278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5253,
											"end": 5283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5319,
											"end": 5353,
											"name": "PUSH",
											"source": 7,
											"value": "546F6B656E732063616E206F6E6C7920626520756E7374616B65642061667465"
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5299,
											"end": 5317,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5354,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39101A103BB2B2B5B997"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5370,
											"end": 5388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5363,
											"end": 5403,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5420,
											"end": 5439,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5420,
											"end": 5439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 5039,
											"end": 5445,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3105,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3278,
											"end": 3288,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 3255,
											"end": 3289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3255,
											"end": 3289,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3255,
											"end": 3289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3363,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3352,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3364,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3368,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3340,
											"end": 3368,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 3379,
											"end": 3407,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3407,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3407,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3407,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3379,
											"end": 3411,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3289,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3488,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3488,
											"end": 3547,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3510,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3506,
											"end": 3510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3238,
											"end": 3289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3537,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3525,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3525,
											"end": 3546,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3525,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3488,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3547,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3488,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5624,
											"end": 5649,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 5649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 5649,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5680,
											"end": 5682,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5683,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5692,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5658,
											"end": 5692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3590,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3580,
											"end": 3590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "PUSH",
											"source": 6,
											"value": "6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336"
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3613,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 3621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 3621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 3621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 3621,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 3621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4567,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4648,
											"end": 4665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 4648,
											"end": 4679,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5923,
											"end": 5955,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5955,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5905,
											"end": 5956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5990,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5972,
											"end": 5990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5703,
											"end": 6048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5923,
											"end": 5955,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5923,
											"end": 5955,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5905,
											"end": 5956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5990,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5972,
											"end": 5990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5990,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5999,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5965,
											"end": 5999,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6015,
											"end": 6033,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5878,
											"end": 5896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 5703,
											"end": 6048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 196,
											"end": 614,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 196,
											"end": 614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 327,
											"end": 348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 404,
											"end": 413,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 400,
											"end": 418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 479,
											"end": 485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 462,
											"end": 477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 442,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 436,
											"end": 486,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 495,
											"end": 537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 605,
											"end": 607,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 589,
											"end": 591,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 577,
											"end": 592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 573,
											"end": 602,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 562,
											"end": 571,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 558,
											"end": 603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 619,
											"end": 792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 687,
											"end": 707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 687,
											"end": 707,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 736,
											"end": 767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 736,
											"end": 767,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 726,
											"end": 768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 726,
											"end": 768,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 716,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 716,
											"end": 786,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 782,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 772,
											"end": 784,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 716,
											"end": 786,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 716,
											"end": 786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 797,
											"end": 1097,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 797,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 923,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 905,
											"end": 912,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 901,
											"end": 924,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 897,
											"end": 929,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 946,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 894,
											"end": 946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 942,
											"end": 943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 932,
											"end": 944,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 946,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 894,
											"end": 946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 965,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 965,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 965,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 965,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 965,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 955,
											"end": 994,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1067,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1067,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 797,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1480,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 1294,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1409,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1424,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1464,
											"end": 1473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1445,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1474,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 1445,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1435,
											"end": 1474,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1480,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1294,
											"end": 1480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1562,
											"end": 1568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1670,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1752,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 1718,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2279,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 2053,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2226,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2249,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2279,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2619,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2592,
											"end": 2624,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2660,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2731,
											"end": 2740,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2708,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2959,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2996,
											"end": 3010,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 3011,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3116,
											"end": 3120,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3142,
											"end": 3269,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3142,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3203,
											"end": 3213,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3194,
											"end": 3214,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3231,
											"end": 3232,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3224,
											"end": 3239,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3402,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3274,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3350,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3373,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3359,
											"end": 3396,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3376,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3376,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3376,
											"end": 3394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3624,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3407,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3474,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3463,
											"end": 3595,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3512,
											"end": 3515,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3508,
											"end": 3528,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3529,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3552,
											"end": 3556,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3542,
											"end": 3557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3584,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3585,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3595,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3463,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3609,
											"end": 3618,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3618,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3797,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 3629,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3711,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3765,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3766,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3767,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3720,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3720,
											"end": 3791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 3771,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3771,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4688,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 4563,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4637,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4649,
											"end": 4659,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4649,
											"end": 4659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4649,
											"end": 4659,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4646,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4646,
											"end": 4682,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4662,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4662,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 4662,
											"end": 4680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SimpleToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"calculateStakingReward(address)": "0d505541",
							"decimals()": "313ce567",
							"getAccumulatedRewards(address)": "5ee09669",
							"getStakedBalance(address)": "3a02a42d",
							"getStakingStartDate(address)": "4ac530dc",
							"initialPrice()": "1d0806ae",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"regularSalePrice()": "03e293a3",
							"renounceOwnership()": "715018a6",
							"saleEndTime()": "ed338ff1",
							"saleStartTime()": "1cbaee2d",
							"setStakingRewardRate(uint256)": "b7d68519",
							"stakeTokens(uint256)": "7547c7a3",
							"stakedAmount(address)": "f9931855",
							"stakingRewardRate()": "4f3fc2df",
							"stakingRewards(address)": "499d7f96",
							"stakingTimestamp(address)": "8f0794fe",
							"symbol()": "95d89b41",
							"tokensSold()": "518ab2a8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unstakeTokens()": "a5ce413b",
							"weeklyIncreaseRate()": "7165d19b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeklyIncreaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_regularSalePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"SaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"SaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAccumulatedRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStakingStartDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regularSalePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"saleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"setStakingRewardRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weeklyIncreaseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"calculateStakingReward(address)\":{\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The reward amount\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAccumulatedRewards(address)\":{\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The accumulated staking rewards\"}},\"getStakedBalance(address)\":{\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The amount of tokens staked by the user\"}},\"getStakingStartDate(address)\":{\"params\":{\"user\":\"Address of the user\"},\"returns\":{\"_0\":\"The timestamp when the user started staking\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setStakingRewardRate(uint256)\":{\"params\":{\"_rewardRate\":\"The new annual staking reward rate\"}},\"stakeTokens(uint256)\":{\"params\":{\"amount\":\"Number of tokens to stake\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateStakingReward(address)\":{\"notice\":\"Calculate the staking rewards for a user based on the staked amount and time staked (in weeks)\"},\"getAccumulatedRewards(address)\":{\"notice\":\"Get the accumulated rewards for a user based on the duration of staking\"},\"getStakedBalance(address)\":{\"notice\":\"Get the staked balance of a user\"},\"getStakingStartDate(address)\":{\"notice\":\"Get the staking start date (timestamp) for a user\"},\"setStakingRewardRate(uint256)\":{\"notice\":\"Set the staking reward rate (only callable by the owner)\"},\"stakeTokens(uint256)\":{\"notice\":\"Stake tokens in the contract for rewards\"},\"unstakeTokens()\":{\"notice\":\"Unstake tokens and receive accumulated rewards. Users are only allowed to unstake after 4 weeks.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleToken.sol\":\"TokenPreSale\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SimpleToken.sol\":{\"keccak256\":\"0xe29109dd6fab5f1b3fbc0d721398f8f7be342721f9c287a1878934a3788410b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddfa8c7c50865361727304297420dc5be5a320c5e12c7eaac4967c79e2136159\",\"dweb:/ipfs/Qmeg5EMmzMAN4HXMrrUx8gbV9NPbhTXidfpqP7aM2BoE5j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "saleStartTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 945,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "saleEndTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 947,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "initialPrice",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 949,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "regularSalePrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 951,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "weeklyIncreaseRate",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "tokensSold",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 955,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingRewardRate",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 959,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakedAmount",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 963,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingTimestamp",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 967,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingRewards",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateStakingReward(address)": {
								"notice": "Calculate the staking rewards for a user based on the staked amount and time staked (in weeks)"
							},
							"getAccumulatedRewards(address)": {
								"notice": "Get the accumulated rewards for a user based on the duration of staking"
							},
							"getStakedBalance(address)": {
								"notice": "Get the staked balance of a user"
							},
							"getStakingStartDate(address)": {
								"notice": "Get the staking start date (timestamp) for a user"
							},
							"setStakingRewardRate(uint256)": {
								"notice": "Set the staking reward rate (only callable by the owner)"
							},
							"stakeTokens(uint256)": {
								"notice": "Stake tokens in the contract for rewards"
							},
							"unstakeTokens()": {
								"notice": "Unstake tokens and receive accumulated rewards. Users are only allowed to unstake after 4 weeks."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/SimpleToken.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"TokenPreSale": [
							1291
						]
					},
					"id": 1292,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1292,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1292,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"199:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "199:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "199:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"206:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "206:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:6"
								}
							],
							"canonicalName": "TokenPreSale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1291,
							"linearizedBaseContracts": [
								1291,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "TokenPreSale",
							"nameLocation": "183:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "1cbaee2d",
									"id": 943,
									"mutability": "mutable",
									"name": "saleStartTime",
									"nameLocation": "236:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "221:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 942,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "221:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ed338ff1",
									"id": 945,
									"mutability": "mutable",
									"name": "saleEndTime",
									"nameLocation": "271:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "256:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "256:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d0806ae",
									"id": 947,
									"mutability": "mutable",
									"name": "initialPrice",
									"nameLocation": "304:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "289:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "03e293a3",
									"id": 949,
									"mutability": "mutable",
									"name": "regularSalePrice",
									"nameLocation": "378:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "363:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7165d19b",
									"id": 951,
									"mutability": "mutable",
									"name": "weeklyIncreaseRate",
									"nameLocation": "416:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "401:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "401:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "518ab2a8",
									"id": 953,
									"mutability": "mutable",
									"name": "tokensSold",
									"nameLocation": "513:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "498:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "498:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f3fc2df",
									"id": 955,
									"mutability": "mutable",
									"name": "stakingRewardRate",
									"nameLocation": "547:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "532:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "532:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9931855",
									"id": 959,
									"mutability": "mutable",
									"name": "stakedAmount",
									"nameLocation": "651:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "616:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 958,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 956,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "624:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "616:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 957,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "635:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f0794fe",
									"id": 963,
									"mutability": "mutable",
									"name": "stakingTimestamp",
									"nameLocation": "746:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "711:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 962,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 960,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "719:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "711:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 961,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "730:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "499d7f96",
									"id": 967,
									"mutability": "mutable",
									"name": "stakingRewards",
									"nameLocation": "835:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1291,
									"src": "800:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 966,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 964,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "808:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "800:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 965,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "819:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 975,
									"name": "TokensPurchased",
									"nameLocation": "901:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "933:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "917:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "948:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "940:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "cost",
												"nameLocation": "964:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "956:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:53:6"
									},
									"src": "895:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "87d03dcfa12666a6f670d52387c414c3147775a8cc623d78088c0e23b4a90346",
									"id": 981,
									"name": "SaleStarted",
									"nameLocation": "982:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1002:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "994:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1021:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1013:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:36:6"
									},
									"src": "976:54:6"
								},
								{
									"anonymous": false,
									"eventSelector": "94bb74a9473ae4063ec1e73dc3e35fd4b5abe9cc1e43ad0db84e5358559ccd5a",
									"id": 985,
									"name": "SaleEnded",
									"nameLocation": "1042:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1060:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1052:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:17:6"
									},
									"src": "1036:33:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef",
									"id": 991,
									"name": "TokensStaked",
									"nameLocation": "1081:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1110:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1094:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1124:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "1116:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:38:6"
									},
									"src": "1075:57:6"
								},
								{
									"anonymous": false,
									"eventSelector": "6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336",
									"id": 999,
									"name": "TokensUnstaked",
									"nameLocation": "1144:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1175:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1159:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1189:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1181:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1205:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "1197:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1158:54:6"
									},
									"src": "1138:75:6"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "1451:373:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1024,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1476:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1291",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1291",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1022,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1468:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1468:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1026,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "1483:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1497:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1028,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1503:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1503:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1497:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1483:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1021,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1462:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "1462:52:6"
											},
											{
												"expression": {
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1034,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "1572:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1035,
														"name": "_initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "1587:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1572:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "1572:28:6"
											},
											{
												"expression": {
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1038,
														"name": "weeklyIncreaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "1611:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1039,
														"name": "_weeklyIncreaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "1632:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1611:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "1611:40:6"
											},
											{
												"expression": {
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1042,
														"name": "regularSalePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1662:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1043,
														"name": "_regularSalePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "1681:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1662:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "1662:36:6"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1046,
														"name": "stakingRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "1740:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1047,
														"name": "_stakingRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "1760:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1740:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "1740:38:6"
											}
										]
									},
									"id": 1051,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e6174757265546f6b656e",
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1395:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d5ee8fd3c5f6584b265d5b0813f0e0aba2b11e4095f7ca2f0c140668f3acc419",
														"typeString": "literal_string \"NatureToken\""
													},
													"value": "NatureToken"
												},
												{
													"hexValue": "4e5452",
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1410:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_694d85ce3f345a420974bcb998758484b397dcf49ebe818a3483badd3fd4fecd",
														"typeString": "literal_string \"NTR\""
													},
													"value": "NTR"
												}
											],
											"id": 1016,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1013,
												"name": "ERC20",
												"nameLocations": [
													"1389:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1389:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1389:27:6"
										},
										{
											"arguments": [
												{
													"id": 1018,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1001,
													"src": "1431:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1019,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1017,
												"name": "Ownable",
												"nameLocations": [
													"1423:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1423:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1423:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1241:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1233:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "1263:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1255:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "_initialPrice",
												"nameLocation": "1284:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1276:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "_weeklyIncreaseRate",
												"nameLocation": "1307:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1299:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "_regularSalePrice",
												"nameLocation": "1336:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1328:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "_stakingRewardRate",
												"nameLocation": "1363:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1355:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:150:6"
									},
									"returnParameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1451:0:6"
									},
									"scope": 1291,
									"src": "1221:603:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "2089:472:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1058,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2108:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2117:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2108:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2120:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
																"typeString": "literal_string \"Amount must be greater than zero.\""
															},
															"value": "Amount must be greater than zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
																"typeString": "literal_string \"Amount must be greater than zero.\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2100:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2100:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "2100:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1066,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2185:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2189:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2185:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1065,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "2175:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2175:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1069,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2200:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2175:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e636520746f207374616b652e",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2208:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30b58ae3ad08e862b8698bb084efd9dff3bcf9a75a69ffe30519f0b126749acc",
																"typeString": "literal_string \"Insufficient balance to stake.\""
															},
															"value": "Insufficient balance to stake."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30b58ae3ad08e862b8698bb084efd9dff3bcf9a75a69ffe30519f0b126749acc",
																"typeString": "literal_string \"Insufficient balance to stake.\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2167:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2167:74:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "2167:74:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1075,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2326:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2330:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2326:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1079,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2346:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1291",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1291",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2338:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1077,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2338:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2338:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1081,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "2353:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1074,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "2316:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "2316:44:6"
											},
											{
												"expression": {
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1084,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "2412:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1087,
														"indexExpression": {
															"expression": {
																"id": 1085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2425:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2429:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2425:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2412:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1088,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "2440:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2412:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1090,
												"nodeType": "ExpressionStatement",
												"src": "2412:34:6"
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1091,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "2457:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1094,
														"indexExpression": {
															"expression": {
																"id": 1092,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2474:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2478:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2474:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2457:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1095,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2488:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2494:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2488:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2457:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "2457:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1100,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2534:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2538:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2534:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "2546:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1099,
														"name": "TokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "2521:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1104,
												"nodeType": "EmitStatement",
												"src": "2516:37:6"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "1920:117:6",
										"text": " @notice Stake tokens in the contract for rewards\n @param amount Number of tokens to stake"
									},
									"functionSelector": "7547c7a3",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeTokens",
									"nameLocation": "2052:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2072:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "2064:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2063:16:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2089:0:6"
									},
									"scope": 1291,
									"src": "2043:518:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "2726:895:6",
										"statements": [
											{
												"assignments": [
													1111
												],
												"declarations": [
													{
														"constant": false,
														"id": 1111,
														"mutability": "mutable",
														"name": "stakedTokens",
														"nameLocation": "2745:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "2737:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1110,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2737:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1116,
												"initialValue": {
													"baseExpression": {
														"id": 1112,
														"name": "stakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "2760:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1115,
													"indexExpression": {
														"expression": {
															"id": 1113,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2773:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2777:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2773:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2760:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2737:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1118,
																"name": "stakedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "2803:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2818:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2803:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73207374616b65642e",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2821:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
																"typeString": "literal_string \"No tokens staked.\""
															},
															"value": "No tokens staked."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
																"typeString": "literal_string \"No tokens staked.\""
															}
														],
														"id": 1117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2795:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2795:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "2795:46:6"
											},
											{
												"assignments": [
													1125
												],
												"declarations": [
													{
														"constant": false,
														"id": 1125,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "2862:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "2854:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2854:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1133,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1126,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2875:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2881:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2875:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1128,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "2893:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1131,
														"indexExpression": {
															"expression": {
																"id": 1129,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2910:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2914:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2910:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2893:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2875:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2854:67:6"
											},
											{
												"assignments": [
													1135
												],
												"declarations": [
													{
														"constant": false,
														"id": 1135,
														"mutability": "mutable",
														"name": "stakingDurationInWeeks",
														"nameLocation": "2940:22:6",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "2932:30:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1134,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2932:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1139,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1136,
														"name": "timeStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1125,
														"src": "2965:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:7:6",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "1"
													},
													"src": "2965:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2932:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1141,
																"name": "stakingDurationInWeeks",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1135,
																"src": "3113:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "34",
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3139:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"src": "3113:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e732063616e206f6e6c7920626520756e7374616b65642061667465722034207765656b732e",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3142:44:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565140ed2ac2356858b228ac0150df5441f3ca3b9efa1a820c61a493b93b230e",
																"typeString": "literal_string \"Tokens can only be unstaked after 4 weeks.\""
															},
															"value": "Tokens can only be unstaked after 4 weeks."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565140ed2ac2356858b228ac0150df5441f3ca3b9efa1a820c61a493b93b230e",
																"typeString": "literal_string \"Tokens can only be unstaked after 4 weeks.\""
															}
														],
														"id": 1140,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3105:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3105:82:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "3105:82:6"
											},
											{
												"assignments": [
													1148
												],
												"declarations": [
													{
														"constant": false,
														"id": 1148,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "3246:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "3238:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1147,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3238:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1153,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1150,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3278:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3282:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3278:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1149,
														"name": "calculateStakingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "3255:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3255:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3238:51:6"
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1154,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "3340:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1157,
														"indexExpression": {
															"expression": {
																"id": 1155,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3353:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3357:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3353:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3340:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3367:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3340:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "3340:28:6"
											},
											{
												"expression": {
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1161,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "3379:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1164,
														"indexExpression": {
															"expression": {
																"id": 1162,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3396:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3400:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3396:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3379:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3410:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3379:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "3379:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1171,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3506:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1291",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1291",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3498:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1169,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3498:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3498:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1173,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3513:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3517:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3513:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1175,
																"name": "stakedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "3525:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1176,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "3540:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3525:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1168,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3488:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3488:59:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "3488:59:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1181,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3580:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3584:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3580:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "3592:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1184,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "3606:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1180,
														"name": "TokensUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 999,
														"src": "3565:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3565:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "EmitStatement",
												"src": "3560:53:6"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "2569:117:6",
										"text": " @notice Unstake tokens and receive accumulated rewards. Users are only allowed to unstake after 4 weeks."
									},
									"functionSelector": "a5ce413b",
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeTokens",
									"nameLocation": "2701:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:6"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:6"
									},
									"scope": 1291,
									"src": "2692:929:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "3908:498:6",
										"statements": [
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "stakedTokens",
														"nameLocation": "3927:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "3919:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1196,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3919:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1201,
												"initialValue": {
													"baseExpression": {
														"id": 1198,
														"name": "stakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "3942:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1200,
													"indexExpression": {
														"id": 1199,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "3955:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3942:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3919:41:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1202,
														"name": "stakedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "3975:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3991:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3975:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1208,
												"nodeType": "IfStatement",
												"src": "3971:58:6",
												"trueBody": {
													"id": 1207,
													"nodeType": "Block",
													"src": "3994:35:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4016:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1195,
															"id": 1206,
															"nodeType": "Return",
															"src": "4009:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													1210
												],
												"declarations": [
													{
														"constant": false,
														"id": 1210,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "4049:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "4041:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1209,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4041:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1217,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1211,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4062:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4068:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4062:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1213,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "4080:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1215,
														"indexExpression": {
															"id": 1214,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "4097:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4080:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4062:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4041:61:6"
											},
											{
												"assignments": [
													1219
												],
												"declarations": [
													{
														"constant": false,
														"id": 1219,
														"mutability": "mutable",
														"name": "stakingDurationInWeeks",
														"nameLocation": "4121:22:6",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "4113:30:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4113:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1223,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1220,
														"name": "timeStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "4146:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4159:7:6",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "1"
													},
													"src": "4146:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4113:53:6"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "4300:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "4292:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4292:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1226,
																		"name": "stakedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "4310:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1227,
																		"name": "stakingRewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "4325:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4310:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1229,
																	"name": "stakingDurationInWeeks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "4345:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4310:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1231,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4309:59:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4371:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4309:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4292:82:6"
											},
											{
												"expression": {
													"id": 1235,
													"name": "reward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1225,
													"src": "4392:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1195,
												"id": 1236,
												"nodeType": "Return",
												"src": "4385:13:6"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "3629:197:6",
										"text": " @notice Calculate the staking rewards for a user based on the staked amount and time staked (in weeks)\n @param user Address of the user\n @return The reward amount"
									},
									"functionSelector": "0d505541",
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingReward",
									"nameLocation": "3841:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "3872:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "3864:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:14:6"
									},
									"returnParameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "3899:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3899:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3898:9:6"
									},
									"scope": 1291,
									"src": "3832:574:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "4637:50:6",
										"statements": [
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "stakingRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "4648:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1247,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "4668:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4648:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "4648:31:6"
											}
										]
									},
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "4414:147:6",
										"text": " @notice Set the staking reward rate (only callable by the owner)\n @param _rewardRate The new annual staking reward rate"
									},
									"functionSelector": "b7d68519",
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1244,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1243,
												"name": "onlyOwner",
												"nameLocations": [
													"4627:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4627:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4627:9:6"
										}
									],
									"name": "setStakingRewardRate",
									"nameLocation": "4576:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "4605:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "4597:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4596:21:6"
									},
									"returnParameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4637:0:6"
									},
									"scope": 1291,
									"src": "4567:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "4908:36:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1259,
														"name": "stakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "4922:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1261,
													"indexExpression": {
														"id": 1260,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "4935:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4922:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1262,
												"nodeType": "Return",
												"src": "4915:25:6"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "4693:141:6",
										"text": " @notice Get the staked balance of a user\n @param user Address of the user\n @return The amount of tokens staked by the user"
									},
									"functionSelector": "3a02a42d",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakedBalance",
									"nameLocation": "4845:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4870:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4862:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4862:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4861:14:6"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "4899:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4898:9:6"
									},
									"scope": 1291,
									"src": "4836:108:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "5187:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1272,
														"name": "stakingTimestamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "5201:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1274,
													"indexExpression": {
														"id": 1273,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "5218:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5201:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1275,
												"nodeType": "Return",
												"src": "5194:29:6"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "4948:162:6",
										"text": " @notice Get the staking start date (timestamp) for a user\n @param user Address of the user\n @return The timestamp when the user started staking"
									},
									"functionSelector": "4ac530dc",
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakingStartDate",
									"nameLocation": "5121:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5149:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "5141:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5141:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5140:14:6"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "5178:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5178:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5177:9:6"
									},
									"scope": 1291,
									"src": "5112:115:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "5482:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "5519:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1285,
														"name": "calculateStakingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "5496:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5496:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1288,
												"nodeType": "Return",
												"src": "5489:35:6"
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "5231:172:6",
										"text": " @notice Get the accumulated rewards for a user based on the duration of staking\n @param user Address of the user\n @return The accumulated staking rewards"
									},
									"functionSelector": "5ee09669",
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAccumulatedRewards",
									"nameLocation": "5414:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5444:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "5436:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5435:14:6"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "5473:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5473:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5472:9:6"
									},
									"scope": 1291,
									"src": "5405:123:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1292,
							"src": "174:5431:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								975,
								981,
								985,
								991,
								999
							]
						}
					],
					"src": "33:5574:6"
				},
				"id": 6
			}
		}
	}
}