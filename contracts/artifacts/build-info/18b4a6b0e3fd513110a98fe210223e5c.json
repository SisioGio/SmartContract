{
	"id": "18b4a6b0e3fd513110a98fe210223e5c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SimpleToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract TokenPreSale is ERC20, Ownable {\r\n    bool public presaleIsActive;\r\n    uint256 public preSaleStartTime;\r\n    uint256 public preSaleEndTime;\r\n    uint256 public initialPrice;\r\n    uint256 public regularSalePrice;\r\n    uint256 public weeklyIncreaseRate;\r\n    uint256 public tokensSold;\r\n    uint256 public preSaleWeeksInWeeks;\r\n    uint256 public stakingRewardRate;\r\n    mapping(address => uint256) public stakedAmount;\r\n    mapping(address => uint256) public stakingTimestamp;\r\n    mapping(address => bool) public whitelist;\r\n    mapping(address => address) public referrals;\r\n    mapping(address => uint256) public referralCounts;\r\n\r\n\r\n    event UserWhitelisted(address indexed user, address indexed referral);\r\n    event ReferralRewardMinted(address indexed referrer, uint256 rewardAmount);\r\n\r\n\r\n    event TokensStaked(address indexed user, uint256 amount);\r\n    event TokensUnstaked(address indexed user, uint256 amount, uint256 reward);\r\n    event TokensPurchased(address indexed buyer, uint256 amount, uint256 cost);\r\n    event PreSaleStarted(uint256 startTime, uint256 endTime);\r\n    event PreSaleEnded(uint256 endTime);\r\n\r\n    \r\n    constructor(address initialOwner, uint256 totalSupply, uint256 _initialPrice, uint256 _weeklyIncreaseRate, uint256 _regularSalePrice, uint256 _stakingRewardRate) \r\n        ERC20(\"NatureToken\", \"NTR\") \r\n        Ownable(initialOwner) \r\n    {\r\n        _mint(address(this), totalSupply * 10 ** decimals());\r\n        initialPrice = _initialPrice;\r\n        weeklyIncreaseRate = _weeklyIncreaseRate;\r\n        regularSalePrice = _regularSalePrice;\r\n        stakingRewardRate = _stakingRewardRate;\r\n        presaleIsActive = false;\r\n    }\r\n    \r\n\r\n     function signUpForWhitelist(address referral) external {\r\n        require(!whitelist[msg.sender], \"Already whitelisted\");\r\n        require(msg.sender != referral, \"Cannot refer yourself\");\r\n        \r\n        whitelist[msg.sender] = true;\r\n        \r\n        if (referral != address(0) && whitelist[referral]) {\r\n            referrals[msg.sender] = referral;\r\n            referralCounts[referral] += 1;\r\n        }\r\n        \r\n        emit UserWhitelisted(msg.sender, referral);\r\n    }\r\n    \r\n    function calculateReferralReward(address referrer) public view returns (uint256) {\r\n        return referralCounts[referrer] * 500 * 10 ** decimals();\r\n    }\r\n    function mintReferralReward() external {\r\n            require(presaleIsActive==true,\"Presale not started yet\");\r\n            uint256 rewardAmount = calculateReferralReward(msg.sender);\r\n            require(rewardAmount > 0, \"No rewards available\");\r\n            _mint(msg.sender, rewardAmount);\r\n            referralCounts[msg.sender] = 0;\r\n            emit ReferralRewardMinted(msg.sender, rewardAmount);\r\n        }\r\n\r\n    /**\r\n     * @notice Start the pre-sale\r\n     * @param _durationWeeks Duration of the pre-sale in weeks\r\n     */\r\n    function startPreSale(uint256 _startTime, uint256 _durationWeeks) external onlyOwner {\r\n        // require(_startTime >= block.timestamp, \"Start time must be in the future\");\r\n        preSaleStartTime = _startTime;\r\n        preSaleEndTime = preSaleStartTime + (_durationWeeks * 1 weeks);\r\n        preSaleWeeksInWeeks = _durationWeeks;\r\n        presaleIsActive = true;\r\n        emit PreSaleStarted(preSaleStartTime, preSaleEndTime);\r\n    } \r\n\r\n    function calculatePrice() public view returns (uint256) {\r\n        require(preSaleStartTime >=block.timestamp,\"Pre-sale not started yet\");\r\n        if ( block.timestamp > preSaleEndTime) {\r\n            return regularSalePrice;\r\n        }\r\n        \r\n        uint256 weeksElapsed = (block.timestamp - preSaleStartTime) / 1 weeks;\r\n        uint256 priceIncrease = ((regularSalePrice - initialPrice) * weeksElapsed) / preSaleWeeksInWeeks;\r\n        return initialPrice + priceIncrease;\r\n    }\r\n\r\n    /**\r\n * @notice Buy tokens during the presale or regular sale.\r\n */\r\nfunction buyTokens() external payable {\r\n    require(block.timestamp >= preSaleStartTime, \"Sale not active.\");\r\n    require(msg.value > 0, \"Must send ETH to buy tokens.\");\r\n\r\n    uint256 currentPrice = calculatePrice(); // Call the calculatePrice function\r\n\r\n    uint256 tokensToBuy = (msg.value * 10 ** uint256(decimals())) / currentPrice;\r\n    require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\");\r\n\r\n    _transfer(address(this), msg.sender, tokensToBuy);\r\n    tokensSold += tokensToBuy;\r\n\r\n    emit Transfer(address(this), msg.sender, tokensToBuy); // Emit transfer event\r\n}\r\n\r\n\r\n    function stakeTokens(uint256 amount) external {\r\n        require(amount > 0, \"Amount must be greater than zero.\");\r\n        require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\");\r\n\r\n        _transfer(msg.sender, address(this), amount);\r\n        stakedAmount[msg.sender] += amount;\r\n        stakingTimestamp[msg.sender] = block.timestamp;\r\n        emit TokensStaked(msg.sender, amount);\r\n    }\r\n\r\n    function unstakeTokens() external {\r\n        uint256 amount = stakedAmount[msg.sender];\r\n        require(amount > 0, \"No tokens staked.\");\r\n        require(block.timestamp >= stakingTimestamp[msg.sender] + 4 weeks, \"Unstake only after 4 weeks.\");\r\n        \r\n        uint256 reward = calculateStakingReward(msg.sender);\r\n        stakedAmount[msg.sender] = 0;\r\n        stakingTimestamp[msg.sender] = 0;\r\n\r\n        _transfer(address(this), msg.sender, amount + reward);\r\n        emit TokensUnstaked(msg.sender, amount, reward);\r\n    }\r\n\r\n    function calculateStakingReward(address user) public view returns (uint256) {\r\n        uint256 weeksStaked = (block.timestamp - stakingTimestamp[user]) / 1 weeks;\r\n        return (stakedAmount[user] * stakingRewardRate * weeksStaked) / 100;\r\n    }\r\n\r\n\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SimpleToken.sol": {
				"TokenPreSale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_initialPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weeklyIncreaseRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_regularSalePrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakingRewardRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "PreSaleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "endTime",
									"type": "uint256"
								}
							],
							"name": "PreSaleStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardAmount",
									"type": "uint256"
								}
							],
							"name": "ReferralRewardMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "TokensUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referral",
									"type": "address"
								}
							],
							"name": "UserWhitelisted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "calculatePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								}
							],
							"name": "calculateReferralReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "calculateStakingReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintReferralReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "preSaleWeeksInWeeks",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleIsActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referralCounts",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "referrals",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "regularSalePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referral",
									"type": "address"
								}
							],
							"name": "signUpForWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakingTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_durationWeeks",
									"type": "uint256"
								}
							],
							"name": "startPreSale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokensSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weeklyIncreaseRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"startPreSale(uint256,uint256)": {
								"params": {
									"_durationWeeks": "Duration of the pre-sale in weeks"
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SimpleToken.sol\":174:5894  contract TokenPreSale is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SimpleToken.sol\":1323:1852  constructor(address initialOwner, uint256 totalSupply, uint256 _initialPrice, uint256 _weeklyIncreaseRate, uint256 _regularSalePrice, uint256 _stakingRewardRate) ... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/SimpleToken.sol\":1541:1553  initialOwner */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xa9, 0x2730ba3ab932aa37b5b2b7)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe9, 0x272a29)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_10\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3664:3715   */\n  mstore\n    /* \"#utility.yul\":3637:3655   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/SimpleToken.sol\":1572:1624  _mint(address(this), totalSupply * 10 ** decimals()) */\n  tag_18\n    /* \"contracts/SimpleToken.sol\":1586:1590  this */\n  address\n    /* \"contracts/SimpleToken.sol\":1607:1623  10 ** decimals() */\n  tag_21\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n  0x12\n    /* \"contracts/SimpleToken.sol\":1607:1609  10 */\n  0x0a\n    /* \"contracts/SimpleToken.sol\":1607:1623  10 ** decimals() */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/SimpleToken.sol\":1593:1623  totalSupply * 10 ** decimals() */\n  tag_23\n  swap1\n    /* \"contracts/SimpleToken.sol\":1593:1604  totalSupply */\n  dup9\n    /* \"contracts/SimpleToken.sol\":1593:1623  totalSupply * 10 ** decimals() */\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/SimpleToken.sol\":1572:1577  _mint */\n  tag_25\n    /* \"contracts/SimpleToken.sol\":1572:1624  _mint(address(this), totalSupply * 10 ** decimals()) */\n  jump\t// in\ntag_18:\n    /* \"contracts/SimpleToken.sol\":1635:1647  initialPrice */\n  0x08\n    /* \"contracts/SimpleToken.sol\":1635:1663  initialPrice = _initialPrice */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"contracts/SimpleToken.sol\":1674:1692  weeklyIncreaseRate */\n  0x0a\n    /* \"contracts/SimpleToken.sol\":1674:1714  weeklyIncreaseRate = _weeklyIncreaseRate */\n  swap2\n  swap1\n  swap2\n  sstore\n    /* \"contracts/SimpleToken.sol\":1725:1741  regularSalePrice */\n  0x09\n    /* \"contracts/SimpleToken.sol\":1725:1761  regularSalePrice = _regularSalePrice */\n  sstore\n    /* \"contracts/SimpleToken.sol\":1772:1789  stakingRewardRate */\n  0x0d\n    /* \"contracts/SimpleToken.sol\":1772:1810  stakingRewardRate = _stakingRewardRate */\n  sstore\n  pop\n  pop\n    /* \"contracts/SimpleToken.sol\":1821:1836  presaleIsActive */\n  0x05\n    /* \"contracts/SimpleToken.sol\":1821:1844  presaleIsActive = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/SimpleToken.sol\":174:5894  contract TokenPreSale is ERC20, Ownable {... */\n  jump(tag_54)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3664:3715   */\n  mstore\n    /* \"#utility.yul\":3637:3655   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  tag_13\n    /* \"#utility.yul\":3518:3721   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_32\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  tag_33\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  jump\t// in\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_38\n  swap1\n  pop\n  jump\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":5813:5845   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5795:5846   */\n  mstore\n    /* \"#utility.yul\":5862:5880   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5855:5889   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5905:5923   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5898:5932   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":5768:5786   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_13\n    /* \"#utility.yul\":5593:5938   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_38:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_43:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n    /* \"#utility.yul\":6089:6114   */\n  dup2\n  mstore\n    /* \"#utility.yul\":6077:6079   */\n  0x20\n    /* \"#utility.yul\":6062:6080   */\n  add\n  swap1\n    /* \"#utility.yul\":5943:6120   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:872   */\ntag_3:\n    /* \"#utility.yul\":129:135   */\n  0x00\n    /* \"#utility.yul\":137:143   */\n  dup1\n    /* \"#utility.yul\":145:151   */\n  0x00\n    /* \"#utility.yul\":153:159   */\n  dup1\n    /* \"#utility.yul\":161:167   */\n  0x00\n    /* \"#utility.yul\":169:175   */\n  dup1\n    /* \"#utility.yul\":222:225   */\n  0xc0\n    /* \"#utility.yul\":210:219   */\n  dup8\n    /* \"#utility.yul\":201:208   */\n  dup10\n    /* \"#utility.yul\":197:220   */\n  sub\n    /* \"#utility.yul\":193:226   */\n  slt\n    /* \"#utility.yul\":190:243   */\n  iszero\n  tag_56\n  jumpi\n    /* \"#utility.yul\":239:240   */\n  0x00\n    /* \"#utility.yul\":236:237   */\n  dup1\n    /* \"#utility.yul\":229:241   */\n  revert\n    /* \"#utility.yul\":190:243   */\ntag_56:\n    /* \"#utility.yul\":265:281   */\n  dup7\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":310:341   */\n  dup2\n  and\n    /* \"#utility.yul\":300:342   */\n  dup2\n  eq\n    /* \"#utility.yul\":290:360   */\n  tag_57\n  jumpi\n    /* \"#utility.yul\":356:357   */\n  0x00\n    /* \"#utility.yul\":353:354   */\n  dup1\n    /* \"#utility.yul\":346:358   */\n  revert\n    /* \"#utility.yul\":290:360   */\ntag_57:\n    /* \"#utility.yul\":450:452   */\n  0x20\n    /* \"#utility.yul\":435:453   */\n  dup9\n  add\n    /* \"#utility.yul\":429:454   */\n  mload\n    /* \"#utility.yul\":546:548   */\n  0x40\n    /* \"#utility.yul\":531:549   */\n  dup10\n  add\n    /* \"#utility.yul\":525:550   */\n  mload\n    /* \"#utility.yul\":642:644   */\n  0x60\n    /* \"#utility.yul\":627:645   */\n  dup11\n  add\n    /* \"#utility.yul\":621:646   */\n  mload\n    /* \"#utility.yul\":738:741   */\n  0x80\n    /* \"#utility.yul\":723:742   */\n  dup12\n  add\n    /* \"#utility.yul\":717:743   */\n  mload\n    /* \"#utility.yul\":835:838   */\n  0xa0\n    /* \"#utility.yul\":820:839   */\n  swap1\n  swap12\n  add\n    /* \"#utility.yul\":814:840   */\n  mload\n    /* \"#utility.yul\":379:384   */\n  swap4\n  swap13\n    /* \"#utility.yul\":429:454   */\n  swap3\n  swap12\n  pop\n    /* \"#utility.yul\":525:550   */\n  swap1\n  swap10\n    /* \"#utility.yul\":621:646   */\n  swap1\n  swap9\n  pop\n    /* \"#utility.yul\":717:743   */\n  swap7\n  pop\n    /* \"#utility.yul\":814:840   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":14:872   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":877:1004   */\ntag_46:\n    /* \"#utility.yul\":938:948   */\n  0x4e487b71\n    /* \"#utility.yul\":933:936   */\n  0xe0\n    /* \"#utility.yul\":929:949   */\n  shl\n    /* \"#utility.yul\":926:927   */\n  0x00\n    /* \"#utility.yul\":919:950   */\n  mstore\n    /* \"#utility.yul\":969:973   */\n  0x41\n    /* \"#utility.yul\":966:967   */\n  0x04\n    /* \"#utility.yul\":959:974   */\n  mstore\n    /* \"#utility.yul\":993:997   */\n  0x24\n    /* \"#utility.yul\":990:991   */\n  0x00\n    /* \"#utility.yul\":983:998   */\n  revert\n    /* \"#utility.yul\":1009:1389   */\ntag_47:\n    /* \"#utility.yul\":1088:1089   */\n  0x01\n    /* \"#utility.yul\":1084:1096   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1131:1143   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1152:1213   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1206:1210   */\n  0x7f\n    /* \"#utility.yul\":1198:1204   */\n  dup3\n    /* \"#utility.yul\":1194:1211   */\n  and\n    /* \"#utility.yul\":1184:1211   */\n  swap2\n  pop\n    /* \"#utility.yul\":1152:1213   */\ntag_60:\n    /* \"#utility.yul\":1259:1261   */\n  0x20\n    /* \"#utility.yul\":1251:1257   */\n  dup3\n    /* \"#utility.yul\":1248:1262   */\n  lt\n    /* \"#utility.yul\":1228:1246   */\n  dup2\n    /* \"#utility.yul\":1225:1263   */\n  sub\n    /* \"#utility.yul\":1222:1383   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1305:1315   */\n  0x4e487b71\n    /* \"#utility.yul\":1300:1303   */\n  0xe0\n    /* \"#utility.yul\":1296:1316   */\n  shl\n    /* \"#utility.yul\":1293:1294   */\n  0x00\n    /* \"#utility.yul\":1286:1317   */\n  mstore\n    /* \"#utility.yul\":1340:1344   */\n  0x22\n    /* \"#utility.yul\":1337:1338   */\n  0x04\n    /* \"#utility.yul\":1330:1345   */\n  mstore\n    /* \"#utility.yul\":1368:1372   */\n  0x24\n    /* \"#utility.yul\":1365:1366   */\n  0x00\n    /* \"#utility.yul\":1358:1373   */\n  revert\n    /* \"#utility.yul\":1222:1383   */\ntag_61:\n  pop\n    /* \"#utility.yul\":1009:1389   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1520:2038   */\ntag_49:\n    /* \"#utility.yul\":1622:1624   */\n  0x1f\n    /* \"#utility.yul\":1617:1620   */\n  dup3\n    /* \"#utility.yul\":1614:1625   */\n  gt\n    /* \"#utility.yul\":1611:2032   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1658:1663   */\n  dup1\n    /* \"#utility.yul\":1655:1656   */\n  0x00\n    /* \"#utility.yul\":1648:1664   */\n  mstore\n    /* \"#utility.yul\":1702:1706   */\n  0x20\n    /* \"#utility.yul\":1699:1700   */\n  0x00\n    /* \"#utility.yul\":1689:1707   */\n  keccak256\n    /* \"#utility.yul\":1772:1774   */\n  0x1f\n    /* \"#utility.yul\":1760:1770   */\n  dup5\n    /* \"#utility.yul\":1756:1775   */\n  add\n    /* \"#utility.yul\":1753:1754   */\n  0x05\n    /* \"#utility.yul\":1749:1776   */\n  shr\n    /* \"#utility.yul\":1743:1747   */\n  dup2\n    /* \"#utility.yul\":1739:1777   */\n  add\n    /* \"#utility.yul\":1808:1812   */\n  0x20\n    /* \"#utility.yul\":1796:1806   */\n  dup6\n    /* \"#utility.yul\":1793:1813   */\n  lt\n    /* \"#utility.yul\":1790:1837   */\n  iszero\n  tag_65\n  jumpi\n  pop\n    /* \"#utility.yul\":1831:1835   */\n  dup1\n    /* \"#utility.yul\":1790:1837   */\ntag_65:\n    /* \"#utility.yul\":1886:1888   */\n  0x1f\n    /* \"#utility.yul\":1881:1884   */\n  dup5\n    /* \"#utility.yul\":1877:1889   */\n  add\n    /* \"#utility.yul\":1874:1875   */\n  0x05\n    /* \"#utility.yul\":1870:1890   */\n  shr\n    /* \"#utility.yul\":1864:1868   */\n  dup3\n    /* \"#utility.yul\":1860:1891   */\n  add\n    /* \"#utility.yul\":1850:1891   */\n  swap2\n  pop\n    /* \"#utility.yul\":1941:2022   */\ntag_66:\n    /* \"#utility.yul\":1959:1961   */\n  dup2\n    /* \"#utility.yul\":1952:1957   */\n  dup2\n    /* \"#utility.yul\":1949:1962   */\n  lt\n    /* \"#utility.yul\":1941:2022   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2018:2019   */\n  0x00\n    /* \"#utility.yul\":2004:2020   */\n  dup2\n  sstore\n    /* \"#utility.yul\":1985:1986   */\n  0x01\n    /* \"#utility.yul\":1974:1987   */\n  add\n    /* \"#utility.yul\":1941:2022   */\n  jump(tag_66)\ntag_68:\n    /* \"#utility.yul\":1945:1948   */\n  pop\n  pop\n    /* \"#utility.yul\":1611:2032   */\ntag_64:\n    /* \"#utility.yul\":1520:2038   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2214:3513   */\ntag_9:\n    /* \"#utility.yul\":2334:2344   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2356:2386   */\n  dup2\n  gt\n    /* \"#utility.yul\":2353:2409   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2389:2407   */\n  tag_72\n  tag_46\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":2418:2515   */\n  tag_73\n    /* \"#utility.yul\":2508:2514   */\n  dup2\n    /* \"#utility.yul\":2468:2506   */\n  tag_74\n    /* \"#utility.yul\":2500:2504   */\n  dup5\n    /* \"#utility.yul\":2494:2505   */\n  sload\n    /* \"#utility.yul\":2468:2506   */\n  tag_47\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2515   */\n  tag_49\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2564:2568   */\n  0x20\n    /* \"#utility.yul\":2595:2597   */\n  0x1f\n    /* \"#utility.yul\":2584:2598   */\n  dup3\n  gt\n    /* \"#utility.yul\":2612:2613   */\n  0x01\n    /* \"#utility.yul\":2607:3256   */\n  dup2\n  eq\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3300:3301   */\n  0x00\n    /* \"#utility.yul\":3317:3323   */\n  dup4\n    /* \"#utility.yul\":3314:3403   */\n  iszero\n  tag_77\n  jumpi\n  pop\n    /* \"#utility.yul\":3369:3388   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3363:3389   */\n  mload\n    /* \"#utility.yul\":3314:3403   */\ntag_77:\n  not(0x00)\n    /* \"#utility.yul\":2171:2172   */\n  0x03\n    /* \"#utility.yul\":2167:2178   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2163:2187   */\n  shr\n    /* \"#utility.yul\":2159:2188   */\n  not\n    /* \"#utility.yul\":2149:2189   */\n  and\n    /* \"#utility.yul\":2195:2196   */\n  0x01\n    /* \"#utility.yul\":2191:2202   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2146:2203   */\n  or\n    /* \"#utility.yul\":3416:3497   */\n  dup5\n  sstore\n    /* \"#utility.yul\":2577:3507   */\n  jump(tag_68)\n    /* \"#utility.yul\":2607:3256   */\ntag_76:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1460:1474   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1504:1508   */\n  0x20\n    /* \"#utility.yul\":1491:1509   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2643:2663   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":2761:2983   */\ntag_80:\n    /* \"#utility.yul\":2775:2782   */\n  dup3\n    /* \"#utility.yul\":2772:2773   */\n  dup2\n    /* \"#utility.yul\":2769:2783   */\n  lt\n    /* \"#utility.yul\":2761:2983   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":2857:2876   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2851:2877   */\n  mload\n    /* \"#utility.yul\":2836:2878   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2964:2968   */\n  0x20\n    /* \"#utility.yul\":2949:2969   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":2917:2918   */\n  0x01\n    /* \"#utility.yul\":2905:2919   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":2791:2803   */\n  add\n    /* \"#utility.yul\":2761:2983   */\n  jump(tag_80)\ntag_82:\n    /* \"#utility.yul\":2765:2768   */\n  pop\n    /* \"#utility.yul\":3011:3017   */\n  dup5\n    /* \"#utility.yul\":3002:3009   */\n  dup3\n    /* \"#utility.yul\":2999:3018   */\n  lt\n    /* \"#utility.yul\":2996:3197   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3072:3091   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3066:3092   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3155:3156   */\n  0x03\n    /* \"#utility.yul\":3151:3165   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3167:3170   */\n  0xf8\n    /* \"#utility.yul\":3147:3171   */\n  and\n    /* \"#utility.yul\":3143:3180   */\n  shr\n    /* \"#utility.yul\":3139:3181   */\n  not\n    /* \"#utility.yul\":3124:3182   */\n  and\n    /* \"#utility.yul\":3109:3183   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2996:3197   */\ntag_83:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3243:3244   */\n  0x01\n    /* \"#utility.yul\":3227:3241   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3223:3245   */\n  add\n    /* \"#utility.yul\":3210:3246   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2214:3513   */\n  jump\t// out\n    /* \"#utility.yul\":3726:3853   */\ntag_51:\n    /* \"#utility.yul\":3787:3797   */\n  0x4e487b71\n    /* \"#utility.yul\":3782:3785   */\n  0xe0\n    /* \"#utility.yul\":3778:3798   */\n  shl\n    /* \"#utility.yul\":3775:3776   */\n  0x00\n    /* \"#utility.yul\":3768:3799   */\n  mstore\n    /* \"#utility.yul\":3818:3822   */\n  0x11\n    /* \"#utility.yul\":3815:3816   */\n  0x04\n    /* \"#utility.yul\":3808:3823   */\n  mstore\n    /* \"#utility.yul\":3842:3846   */\n  0x24\n    /* \"#utility.yul\":3839:3840   */\n  0x00\n    /* \"#utility.yul\":3832:3847   */\n  revert\n    /* \"#utility.yul\":3858:4233   */\ntag_52:\n    /* \"#utility.yul\":3946:3947   */\n  0x01\n    /* \"#utility.yul\":3964:3969   */\n  dup2\n    /* \"#utility.yul\":3978:4227   */\ntag_87:\n    /* \"#utility.yul\":3999:4000   */\n  0x01\n    /* \"#utility.yul\":3989:3997   */\n  dup5\n    /* \"#utility.yul\":3986:4001   */\n  gt\n    /* \"#utility.yul\":3978:4227   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4049:4053   */\n  dup1\n    /* \"#utility.yul\":4044:4047   */\n  dup6\n    /* \"#utility.yul\":4040:4054   */\n  div\n    /* \"#utility.yul\":4034:4038   */\n  dup2\n    /* \"#utility.yul\":4031:4055   */\n  gt\n    /* \"#utility.yul\":4028:4078   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":4058:4076   */\n  tag_91\n  tag_51\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4108:4109   */\n  0x01\n    /* \"#utility.yul\":4098:4106   */\n  dup5\n    /* \"#utility.yul\":4094:4110   */\n  and\n    /* \"#utility.yul\":4091:4140   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":4122:4138   */\n  swap1\n  dup2\n  mul\n  swap1\n    /* \"#utility.yul\":4091:4140   */\ntag_92:\n    /* \"#utility.yul\":4205:4206   */\n  0x01\n    /* \"#utility.yul\":4201:4217   */\n  swap4\n  swap1\n  swap4\n  shr\n  swap3\n    /* \"#utility.yul\":4161:4176   */\n  dup1\n  mul\n    /* \"#utility.yul\":3978:4227   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":3858:4233   */\n  swap4\n  pop\n  swap4\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4238:5140   */\ntag_53:\n    /* \"#utility.yul\":4287:4292   */\n  0x00\n    /* \"#utility.yul\":4317:4325   */\n  dup3\n    /* \"#utility.yul\":4307:4387   */\n  tag_94\n  jumpi\n  pop\n    /* \"#utility.yul\":4358:4359   */\n  0x01\n    /* \"#utility.yul\":4372:4377   */\n  jump(tag_93)\n    /* \"#utility.yul\":4307:4387   */\ntag_94:\n    /* \"#utility.yul\":4406:4410   */\n  dup2\n    /* \"#utility.yul\":4396:4472   */\n  tag_95\n  jumpi\n  pop\n    /* \"#utility.yul\":4443:4444   */\n  0x00\n    /* \"#utility.yul\":4457:4462   */\n  jump(tag_93)\n    /* \"#utility.yul\":4396:4472   */\ntag_95:\n    /* \"#utility.yul\":4488:4492   */\n  dup2\n    /* \"#utility.yul\":4506:4507   */\n  0x01\n    /* \"#utility.yul\":4501:4560   */\n  dup2\n  eq\n  tag_97\n  jumpi\n    /* \"#utility.yul\":4574:4575   */\n  0x02\n    /* \"#utility.yul\":4569:4743   */\n  dup2\n  eq\n  tag_98\n  jumpi\n    /* \"#utility.yul\":4481:4743   */\n  jump(tag_96)\n    /* \"#utility.yul\":4501:4560   */\ntag_97:\n    /* \"#utility.yul\":4531:4532   */\n  0x01\n    /* \"#utility.yul\":4522:4532   */\n  swap2\n  pop\n    /* \"#utility.yul\":4545:4550   */\n  pop\n  jump(tag_93)\n    /* \"#utility.yul\":4569:4743   */\ntag_98:\n    /* \"#utility.yul\":4606:4609   */\n  0xff\n    /* \"#utility.yul\":4596:4604   */\n  dup5\n    /* \"#utility.yul\":4593:4610   */\n  gt\n    /* \"#utility.yul\":4590:4633   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":4613:4631   */\n  tag_100\n  tag_51\n  jump\t// in\ntag_100:\n  pop\n  pop\n    /* \"#utility.yul\":4669:4670   */\n  0x01\n    /* \"#utility.yul\":4655:4671   */\n  dup3\n  shl\n    /* \"#utility.yul\":4728:4733   */\n  jump(tag_93)\n    /* \"#utility.yul\":4481:4743   */\ntag_96:\n  pop\n    /* \"#utility.yul\":4827:4829   */\n  0x20\n    /* \"#utility.yul\":4817:4825   */\n  dup4\n    /* \"#utility.yul\":4814:4830   */\n  lt\n    /* \"#utility.yul\":4808:4811   */\n  0x0133\n    /* \"#utility.yul\":4802:4806   */\n  dup4\n    /* \"#utility.yul\":4799:4812   */\n  lt\n    /* \"#utility.yul\":4795:4831   */\n  and\n    /* \"#utility.yul\":4789:4791   */\n  0x4e\n    /* \"#utility.yul\":4779:4787   */\n  dup5\n    /* \"#utility.yul\":4776:4792   */\n  lt\n    /* \"#utility.yul\":4771:4773   */\n  0x0b\n    /* \"#utility.yul\":4765:4769   */\n  dup5\n    /* \"#utility.yul\":4762:4774   */\n  lt\n    /* \"#utility.yul\":4758:4793   */\n  and\n    /* \"#utility.yul\":4755:4832   */\n  or\n    /* \"#utility.yul\":4752:4955   */\n  iszero\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":4864:4883   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":4940:4945   */\n  jump(tag_93)\n    /* \"#utility.yul\":4752:4955   */\ntag_101:\n    /* \"#utility.yul\":4987:5029   */\n  tag_102\n  not(0x00)\n    /* \"#utility.yul\":5012:5020   */\n  dup5\n    /* \"#utility.yul\":5006:5010   */\n  dup5\n    /* \"#utility.yul\":4987:5029   */\n  tag_52\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5065:5071   */\n  dup1\n    /* \"#utility.yul\":5061:5062   */\n  0x00\n    /* \"#utility.yul\":5057:5063   */\n  not\n    /* \"#utility.yul\":5053:5072   */\n  div\n    /* \"#utility.yul\":5044:5051   */\n  dup3\n    /* \"#utility.yul\":5041:5073   */\n  gt\n    /* \"#utility.yul\":5038:5096   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":5076:5094   */\n  tag_104\n  tag_51\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5114:5134   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":4238:5140   */\ntag_93:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5145:5285   */\ntag_22:\n    /* \"#utility.yul\":5203:5208   */\n  0x00\n    /* \"#utility.yul\":5232:5279   */\n  tag_106\n    /* \"#utility.yul\":5273:5277   */\n  0xff\n    /* \"#utility.yul\":5263:5271   */\n  dup5\n    /* \"#utility.yul\":5259:5278   */\n  and\n    /* \"#utility.yul\":5253:5257   */\n  dup4\n    /* \"#utility.yul\":5232:5279   */\n  tag_53\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5223:5279   */\n  swap4\n    /* \"#utility.yul\":5145:5285   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5290:5458   */\ntag_24:\n    /* \"#utility.yul\":5363:5372   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5394:5403   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5411:5426   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5405:5427   */\n  dup5\n  eq\n    /* \"#utility.yul\":5391:5428   */\n  or\n    /* \"#utility.yul\":5381:5452   */\n  tag_93\n  jumpi\n    /* \"#utility.yul\":5432:5450   */\n  tag_93\n  tag_51\n  jump\t// in\n    /* \"#utility.yul\":5463:5588   */\ntag_37:\n    /* \"#utility.yul\":5528:5537   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5549:5559   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5546:5582   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":5562:5580   */\n  tag_93\n  tag_51\n  jump\t// in\n    /* \"#utility.yul\":5943:6120   */\ntag_54:\n    /* \"contracts/SimpleToken.sol\":174:5894  contract TokenPreSale is ERC20, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SimpleToken.sol\":174:5894  contract TokenPreSale is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8265324d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xcce29ea7\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf8102e68\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf9931855\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf9a81af7\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xcce29ea7\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xcec297a0\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd0febe4c\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xd348b409\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x9b19251a\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9ca423b3\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xa09c4cf4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa5ce413b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x8265324d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8f0794fe\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x30f72cd4\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x70a08231\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7165d19b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7547c7a3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7c613b2f\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x30f72cd4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4f3fc2df\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x518ab2a8\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x0d505541\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x0d505541\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x1d0806ae\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x03e293a3\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06d65af3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SimpleToken.sol\":363:394  uint256 public regularSalePrice */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      sload(0x09)\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/SimpleToken.sol\":363:394  uint256 public regularSalePrice */\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SimpleToken.sol\":255:286  uint256 public preSaleStartTime */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_45\n      sload(0x06)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":1267:1281   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1260:1282   */\n      iszero\n        /* \"#utility.yul\":1242:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1230:1232   */\n      0x20\n        /* \"#utility.yul\":1215:1233   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_47\n        /* \"#utility.yul\":1102:1289   */\n      jump\n        /* \"contracts/SimpleToken.sol\":5640:5887  function calculateStakingReward(address user) public view returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_45\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_45)\n        /* \"contracts/SimpleToken.sol\":329:356  uint256 public initialPrice */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_45\n      sload(0x08)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_59\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":221:248  bool public presaleIsActive */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      sload(0x05)\n      tag_59\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"#utility.yul\":2006:2042   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1994:1996   */\n      0x20\n        /* \"#utility.yul\":1979:1997   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      tag_47\n        /* \"#utility.yul\":1864:2048   */\n      jump\n        /* \"contracts/SimpleToken.sol\":514:546  uint256 public stakingRewardRate */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_45\n      sload(0x0d)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":441:466  uint256 public tokensSold */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_45\n      sload(0x0b)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_45\n      tag_104\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_104:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      stop\n        /* \"contracts/SimpleToken.sol\":401:434  uint256 public weeklyIncreaseRate */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_45\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":4689:5093  function stakeTokens(uint256 amount) external {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_108\n      tag_116\n      calldatasize\n      0x04\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":2522:2938  function mintReferralReward() external {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_108\n      tag_121\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":2360:2516  function calculateReferralReward(address referrer) public view returns (uint256) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_45\n      tag_124\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_128:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2448:2480   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2430:2481   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_47\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"contracts/SimpleToken.sol\":607:658  mapping(address => uint256) public stakingTimestamp */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_45\n      tag_134\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_134:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      tag_54\n      tag_139\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":665:706  mapping(address => bool) public whitelist */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      tag_59\n      tag_143\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_143:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":713:757  mapping(address => address) public referrals */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      tag_128\n      tag_148\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_148:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":1867:2348  function signUpForWhitelist(address referral) external {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_108\n      tag_153\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":5101:5632  function unstakeTokens() external {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_108\n      tag_157\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_59\n      tag_160\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":293:322  uint256 public preSaleEndTime */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_45\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":764:813  mapping(address => uint256) public referralCounts */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_45\n      tag_169\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_169:\n      mstore(0x20, 0x12)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":4074:4679  function buyTokens() external payable {... */\n    tag_30:\n      tag_108\n      tag_173\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":3510:3997  function calculatePrice() public view returns (uint256) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_45\n      tag_176\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_45\n      tag_180\n      calldatasize\n      0x04\n      tag_181\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_108\n      tag_186\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_186:\n      tag_187\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":473:507  uint256 public preSaleWeeksInWeeks */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_45\n      sload(0x0c)\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":553:600  mapping(address => uint256) public stakedAmount */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      tag_45\n      tag_194\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_194:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/SimpleToken.sol\":3063:3501  function startPreSale(uint256 _startTime, uint256 _durationWeeks) external onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_108\n      tag_199\n      calldatasize\n      0x04\n      tag_200\n      jump\t// in\n    tag_199:\n      tag_201\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_203\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_205\n      swap1\n      tag_204\n      jump\t// in\n    tag_205:\n      dup1\n      iszero\n      tag_206\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_207\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_206)\n    tag_207:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_208:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_208\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_209:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":5640:5887  function calculateStakingReward(address user) public view returns (uint256) {... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":5768:5790  stakingTimestamp[user] */\n      dup2\n      and\n        /* \"contracts/SimpleToken.sol\":5707:5714  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5768:5790  stakingTimestamp[user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":5768:5784  stakingTimestamp */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":5768:5790  stakingTimestamp[user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5707:5714  uint256 */\n      dup2\n      swap1\n        /* \"contracts/SimpleToken.sol\":5794:5801  1 weeks */\n      0x093a80\n      swap1\n        /* \"contracts/SimpleToken.sol\":5750:5790  block.timestamp - stakingTimestamp[user] */\n      tag_215\n      swap1\n        /* \"contracts/SimpleToken.sol\":5750:5765  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":5750:5790  block.timestamp - stakingTimestamp[user] */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"contracts/SimpleToken.sol\":5749:5801  (block.timestamp - stakingTimestamp[user]) / 1 weeks */\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n        /* \"contracts/SimpleToken.sol\":5841:5858  stakingRewardRate */\n      sload(0x0d)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":5820:5838  stakedAmount[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":5820:5832  stakedAmount */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":5820:5838  stakedAmount[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5727:5801  uint256 weeksStaked = (block.timestamp - stakingTimestamp[user]) / 1 weeks */\n      swap2\n      swap3\n      pop\n        /* \"contracts/SimpleToken.sol\":5876:5879  100 */\n      0x64\n      swap2\n        /* \"contracts/SimpleToken.sol\":5727:5801  uint256 weeksStaked = (block.timestamp - stakingTimestamp[user]) / 1 weeks */\n      dup4\n      swap2\n        /* \"contracts/SimpleToken.sol\":5820:5858  stakedAmount[user] * stakingRewardRate */\n      tag_219\n      swap2\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"contracts/SimpleToken.sol\":5820:5872  stakedAmount[user] * stakingRewardRate * weeksStaked */\n      tag_221\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_221:\n        /* \"contracts/SimpleToken.sol\":5819:5879  (stakedAmount[user] * stakingRewardRate * weeksStaked) / 100 */\n      tag_222\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_222:\n        /* \"contracts/SimpleToken.sol\":5812:5879  return (stakedAmount[user] * stakingRewardRate * weeksStaked) / 100 */\n      swap4\n        /* \"contracts/SimpleToken.sol\":5640:5887  function calculateStakingReward(address user) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_226\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_227\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_228:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_236\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":4689:5093  function stakeTokens(uint256 amount) external {... */\n    tag_118:\n        /* \"contracts/SimpleToken.sol\":4763:4764  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4754:4760  amount */\n      dup2\n        /* \"contracts/SimpleToken.sol\":4754:4764  amount > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":4746:4802  require(amount > 0, \"Amount must be greater than zero.\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4355:4357   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":4746:4802  require(amount > 0, \"Amount must be greater than zero.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4337:4358   */\n      mstore\n        /* \"#utility.yul\":4394:4396   */\n      0x21\n        /* \"#utility.yul\":4374:4392   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4367:4397   */\n      mstore\n        /* \"#utility.yul\":4433:4467   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":4413:4431   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4406:4468   */\n      mstore\n      shl(0xf9, 0x17)\n        /* \"#utility.yul\":4484:4502   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4477:4508   */\n      mstore\n        /* \"#utility.yul\":4525:4544   */\n      0x84\n      add\n        /* \"contracts/SimpleToken.sol\":4746:4802  require(amount > 0, \"Amount must be greater than zero.\") */\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"contracts/SimpleToken.sol\":4831:4841  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":4846:4852  amount */\n      dup2\n      gt\n        /* \"contracts/SimpleToken.sol\":4821:4852  balanceOf(msg.sender) >= amount */\n      iszero\n        /* \"contracts/SimpleToken.sol\":4813:4878  require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4757:4759   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":4813:4878  require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4739:4760   */\n      mstore\n        /* \"#utility.yul\":4796:4798   */\n      0x15\n        /* \"#utility.yul\":4776:4794   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4769:4799   */\n      mstore\n      shl(0x59, 0x24b739bab33334b1b4b2b73a103130b630b731b297)\n        /* \"#utility.yul\":4815:4833   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4808:4859   */\n      mstore\n        /* \"#utility.yul\":4876:4894   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":4813:4878  require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\") */\n      tag_240\n        /* \"#utility.yul\":4555:4900   */\n      jump\n        /* \"contracts/SimpleToken.sol\":4813:4878  require(balanceOf(msg.sender) >= amount, \"Insufficient balance.\") */\n    tag_243:\n        /* \"contracts/SimpleToken.sol\":4891:4935  _transfer(msg.sender, address(this), amount) */\n      tag_246\n        /* \"contracts/SimpleToken.sol\":4901:4911  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":4921:4925  this */\n      address\n        /* \"contracts/SimpleToken.sol\":4928:4934  amount */\n      dup4\n        /* \"contracts/SimpleToken.sol\":4891:4900  _transfer */\n      tag_229\n        /* \"contracts/SimpleToken.sol\":4891:4935  _transfer(msg.sender, address(this), amount) */\n      jump\t// in\n    tag_246:\n        /* \"contracts/SimpleToken.sol\":4959:4969  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":4946:4970  stakedAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":4946:4958  stakedAmount */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":4946:4970  stakedAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/SimpleToken.sol\":4946:4980  stakedAmount[msg.sender] += amount */\n      dup1\n      sload\n        /* \"contracts/SimpleToken.sol\":4974:4980  amount */\n      dup4\n      swap3\n        /* \"contracts/SimpleToken.sol\":4946:4970  stakedAmount[msg.sender] */\n      swap1\n        /* \"contracts/SimpleToken.sol\":4946:4980  stakedAmount[msg.sender] += amount */\n      tag_247\n      swap1\n        /* \"contracts/SimpleToken.sol\":4974:4980  amount */\n      dup5\n      swap1\n        /* \"contracts/SimpleToken.sol\":4946:4980  stakedAmount[msg.sender] += amount */\n      tag_248\n      jump\t// in\n    tag_247:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":5008:5018  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":4991:5019  stakingTimestamp[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":4991:5007  stakingTimestamp */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":4991:5019  stakingTimestamp[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/SimpleToken.sol\":5022:5037  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":4991:5037  stakingTimestamp[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":5053:5085  TokensStaked(msg.sender, amount) */\n      mload\n      0xb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef\n      swap1\n      tag_249\n      swap1\n        /* \"contracts/SimpleToken.sol\":5078:5084  amount */\n      dup5\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/SimpleToken.sol\":5053:5085  TokensStaked(msg.sender, amount) */\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SimpleToken.sol\":4689:5093  function stakeTokens(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":2522:2938  function mintReferralReward() external {... */\n    tag_121:\n        /* \"contracts/SimpleToken.sol\":2584:2599  presaleIsActive */\n      sload(0x05)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":2584:2605  presaleIsActive==true */\n      iszero\n      iszero\n        /* \"contracts/SimpleToken.sol\":2601:2605  true */\n      0x01\n        /* \"contracts/SimpleToken.sol\":2584:2605  presaleIsActive==true */\n      eq\n        /* \"contracts/SimpleToken.sol\":2576:2632  require(presaleIsActive==true,\"Presale not started yet\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5237:5239   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":2576:2632  require(presaleIsActive==true,\"Presale not started yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5219:5240   */\n      mstore\n        /* \"#utility.yul\":5276:5278   */\n      0x17\n        /* \"#utility.yul\":5256:5274   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5249:5279   */\n      mstore\n        /* \"#utility.yul\":5315:5340   */\n      0x50726573616c65206e6f74207374617274656420796574000000000000000000\n        /* \"#utility.yul\":5295:5313   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5288:5341   */\n      mstore\n        /* \"#utility.yul\":5358:5376   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":2576:2632  require(presaleIsActive==true,\"Presale not started yet\") */\n      tag_240\n        /* \"#utility.yul\":5035:5382   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2576:2632  require(presaleIsActive==true,\"Presale not started yet\") */\n    tag_251:\n        /* \"contracts/SimpleToken.sol\":2647:2667  uint256 rewardAmount */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2670:2705  calculateReferralReward(msg.sender) */\n      tag_254\n        /* \"contracts/SimpleToken.sol\":2694:2704  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2670:2693  calculateReferralReward */\n      tag_125\n        /* \"contracts/SimpleToken.sol\":2670:2705  calculateReferralReward(msg.sender) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/SimpleToken.sol\":2647:2705  uint256 rewardAmount = calculateReferralReward(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":2743:2744  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2728:2740  rewardAmount */\n      dup2\n        /* \"contracts/SimpleToken.sol\":2728:2744  rewardAmount > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":2720:2769  require(rewardAmount > 0, \"No rewards available\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5589:5591   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":2720:2769  require(rewardAmount > 0, \"No rewards available\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5571:5592   */\n      mstore\n        /* \"#utility.yul\":5628:5630   */\n      0x14\n        /* \"#utility.yul\":5608:5626   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5601:5631   */\n      mstore\n      shl(0x60, 0x4e6f207265776172647320617661696c61626c65)\n        /* \"#utility.yul\":5647:5665   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5640:5690   */\n      mstore\n        /* \"#utility.yul\":5707:5725   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":2720:2769  require(rewardAmount > 0, \"No rewards available\") */\n      tag_240\n        /* \"#utility.yul\":5387:5731   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2720:2769  require(rewardAmount > 0, \"No rewards available\") */\n    tag_255:\n        /* \"contracts/SimpleToken.sol\":2784:2815  _mint(msg.sender, rewardAmount) */\n      tag_258\n        /* \"contracts/SimpleToken.sol\":2790:2800  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2802:2814  rewardAmount */\n      dup3\n        /* \"contracts/SimpleToken.sol\":2784:2789  _mint */\n      tag_259\n        /* \"contracts/SimpleToken.sol\":2784:2815  _mint(msg.sender, rewardAmount) */\n      jump\t// in\n    tag_258:\n        /* \"contracts/SimpleToken.sol\":2845:2855  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2859:2860  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2830:2856  referralCounts[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2830:2844  referralCounts */\n      0x12\n        /* \"contracts/SimpleToken.sol\":2830:2856  referralCounts[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2830:2860  referralCounts[msg.sender] = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/SimpleToken.sol\":2880:2926  ReferralRewardMinted(msg.sender, rewardAmount) */\n      mload\n      0xf0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d\n      swap1\n      tag_249\n      swap1\n        /* \"contracts/SimpleToken.sol\":2913:2925  rewardAmount */\n      dup5\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"contracts/SimpleToken.sol\":2360:2516  function calculateReferralReward(address referrer) public view returns (uint256) {... */\n    tag_125:\n        /* \"contracts/SimpleToken.sol\":2432:2439  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":2492:2508  10 ** decimals() */\n      tag_263\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"contracts/SimpleToken.sol\":2492:2494  10 */\n      0x0a\n        /* \"contracts/SimpleToken.sol\":2492:2508  10 ** decimals() */\n      tag_264\n      jump\t// in\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":2459:2483  referralCounts[referrer] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2459:2473  referralCounts */\n      0x12\n        /* \"contracts/SimpleToken.sol\":2459:2483  referralCounts[referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":2459:2489  referralCounts[referrer] * 500 */\n      tag_265\n      swap1\n        /* \"contracts/SimpleToken.sol\":2486:2489  500 */\n      0x01f4\n        /* \"contracts/SimpleToken.sol\":2459:2489  referralCounts[referrer] * 500 */\n      tag_220\n      jump\t// in\n    tag_265:\n        /* \"contracts/SimpleToken.sol\":2459:2508  referralCounts[referrer] * 500 * 10 ** decimals() */\n      tag_209\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_203\n      swap1\n      tag_204\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":1867:2348  function signUpForWhitelist(address referral) external {... */\n    tag_154:\n        /* \"contracts/SimpleToken.sol\":1952:1962  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":1942:1963  whitelist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":1942:1951  whitelist */\n      0x10\n        /* \"contracts/SimpleToken.sol\":1942:1963  whitelist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":1941:1963  !whitelist[msg.sender] */\n      iszero\n        /* \"contracts/SimpleToken.sol\":1933:1987  require(!whitelist[msg.sender], \"Already whitelisted\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7370:7372   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":1933:1987  require(!whitelist[msg.sender], \"Already whitelisted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7352:7373   */\n      mstore\n        /* \"#utility.yul\":7409:7411   */\n      0x13\n        /* \"#utility.yul\":7389:7407   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7382:7412   */\n      mstore\n      shl(0x6a, 0x105b1c9958591e481dda1a5d195b1a5cdd1959)\n        /* \"#utility.yul\":7428:7446   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7421:7470   */\n      mstore\n        /* \"#utility.yul\":7487:7505   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":1933:1987  require(!whitelist[msg.sender], \"Already whitelisted\") */\n      tag_240\n        /* \"#utility.yul\":7168:7511   */\n      jump\n        /* \"contracts/SimpleToken.sol\":1933:1987  require(!whitelist[msg.sender], \"Already whitelisted\") */\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":2006:2028  msg.sender != referral */\n      dup2\n      and\n        /* \"contracts/SimpleToken.sol\":2006:2016  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2006:2028  msg.sender != referral */\n      sub\n        /* \"contracts/SimpleToken.sol\":1998:2054  require(msg.sender != referral, \"Cannot refer yourself\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7718:7720   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":1998:2054  require(msg.sender != referral, \"Cannot refer yourself\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7700:7721   */\n      mstore\n        /* \"#utility.yul\":7757:7759   */\n      0x15\n        /* \"#utility.yul\":7737:7755   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7730:7760   */\n      mstore\n      shl(0x59, 0x21b0b73737ba103932b332b9103cb7bab939b2b633)\n        /* \"#utility.yul\":7776:7794   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7769:7820   */\n      mstore\n        /* \"#utility.yul\":7837:7855   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":1998:2054  require(msg.sender != referral, \"Cannot refer yourself\") */\n      tag_240\n        /* \"#utility.yul\":7516:7861   */\n      jump\n        /* \"contracts/SimpleToken.sol\":1998:2054  require(msg.sender != referral, \"Cannot refer yourself\") */\n    tag_278:\n        /* \"contracts/SimpleToken.sol\":2085:2095  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2075:2096  whitelist[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2075:2084  whitelist */\n      0x10\n        /* \"contracts/SimpleToken.sol\":2075:2096  whitelist[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2075:2103  whitelist[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/SimpleToken.sol\":2099:2103  true */\n      0x01\n        /* \"contracts/SimpleToken.sol\":2075:2103  whitelist[msg.sender] = true */\n      or\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":2128:2150  referral != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/SimpleToken.sol\":2128:2173  referral != address(0) && whitelist[referral] */\n      tag_281\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SimpleToken.sol\":2154:2173  whitelist[referral] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2154:2163  whitelist */\n      0x10\n        /* \"contracts/SimpleToken.sol\":2154:2173  whitelist[referral] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/SimpleToken.sol\":2128:2173  referral != address(0) && whitelist[referral] */\n    tag_281:\n        /* \"contracts/SimpleToken.sol\":2124:2278  if (referral != address(0) && whitelist[referral]) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"contracts/SimpleToken.sol\":2200:2210  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":2190:2211  referrals[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":2190:2199  referrals */\n      0x11\n        /* \"contracts/SimpleToken.sol\":2190:2211  referrals[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2190:2222  referrals[msg.sender] = referral */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/SimpleToken.sol\":2237:2261  referralCounts[referral] */\n      dup4\n      mstore\n        /* \"contracts/SimpleToken.sol\":2237:2251  referralCounts */\n      0x12\n        /* \"contracts/SimpleToken.sol\":2237:2261  referralCounts[referral] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/SimpleToken.sol\":2237:2266  referralCounts[referral] += 1 */\n      dup1\n      sload\n      0x01\n      swap3\n        /* \"contracts/SimpleToken.sol\":2190:2211  referrals[msg.sender] */\n      swap1\n        /* \"contracts/SimpleToken.sol\":2237:2266  referralCounts[referral] += 1 */\n      tag_283\n      swap1\n      dup5\n      swap1\n      tag_248\n      jump\t// in\n    tag_283:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":2124:2278  if (referral != address(0) && whitelist[referral]) {... */\n    tag_282:\n        /* \"contracts/SimpleToken.sol\":2303:2340  UserWhitelisted(msg.sender, referral) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n        /* \"contracts/SimpleToken.sol\":2319:2329  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SimpleToken.sol\":2303:2340  UserWhitelisted(msg.sender, referral) */\n      0x4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/SimpleToken.sol\":1867:2348  function signUpForWhitelist(address referral) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":5101:5632  function unstakeTokens() external {... */\n    tag_157:\n        /* \"contracts/SimpleToken.sol\":5176:5186  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5146:5160  uint256 amount */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5163:5187  stakedAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":5163:5175  stakedAmount */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":5163:5187  stakedAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5206:5216  amount > 0 */\n      dup1\n        /* \"contracts/SimpleToken.sol\":5198:5238  require(amount > 0, \"No tokens staked.\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8068:8070   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":5198:5238  require(amount > 0, \"No tokens staked.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8050:8071   */\n      mstore\n        /* \"#utility.yul\":8107:8109   */\n      0x11\n        /* \"#utility.yul\":8087:8105   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8080:8110   */\n      mstore\n      shl(0x79, 0x2737903a37b5b2b7399039ba30b5b2b217)\n        /* \"#utility.yul\":8126:8144   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8119:8166   */\n      mstore\n        /* \"#utility.yul\":8183:8201   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":5198:5238  require(amount > 0, \"No tokens staked.\") */\n      tag_240\n        /* \"#utility.yul\":7866:8207   */\n      jump\n        /* \"contracts/SimpleToken.sol\":5198:5238  require(amount > 0, \"No tokens staked.\") */\n    tag_285:\n        /* \"contracts/SimpleToken.sol\":5293:5303  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5276:5304  stakingTimestamp[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":5276:5292  stakingTimestamp */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":5276:5304  stakingTimestamp[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":5276:5314  stakingTimestamp[msg.sender] + 4 weeks */\n      tag_288\n      swap1\n        /* \"contracts/SimpleToken.sol\":5307:5314  4 weeks */\n      0x24ea00\n        /* \"contracts/SimpleToken.sol\":5276:5314  stakingTimestamp[msg.sender] + 4 weeks */\n      tag_248\n      jump\t// in\n    tag_288:\n        /* \"contracts/SimpleToken.sol\":5257:5272  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":5257:5314  block.timestamp >= stakingTimestamp[msg.sender] + 4 weeks */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":5249:5346  require(block.timestamp >= stakingTimestamp[msg.sender] + 4 weeks, \"Unstake only after 4 weeks.\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8414:8416   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":5249:5346  require(block.timestamp >= stakingTimestamp[msg.sender] + 4 weeks, \"Unstake only after 4 weeks.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8396:8417   */\n      mstore\n        /* \"#utility.yul\":8453:8455   */\n      0x1b\n        /* \"#utility.yul\":8433:8451   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8426:8456   */\n      mstore\n        /* \"#utility.yul\":8492:8521   */\n      0x556e7374616b65206f6e6c792061667465722034207765656b732e0000000000\n        /* \"#utility.yul\":8472:8490   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8465:8522   */\n      mstore\n        /* \"#utility.yul\":8539:8557   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":5249:5346  require(block.timestamp >= stakingTimestamp[msg.sender] + 4 weeks, \"Unstake only after 4 weeks.\") */\n      tag_240\n        /* \"#utility.yul\":8212:8563   */\n      jump\n        /* \"contracts/SimpleToken.sol\":5249:5346  require(block.timestamp >= stakingTimestamp[msg.sender] + 4 weeks, \"Unstake only after 4 weeks.\") */\n    tag_289:\n        /* \"contracts/SimpleToken.sol\":5367:5381  uint256 reward */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5384:5418  calculateStakingReward(msg.sender) */\n      tag_292\n        /* \"contracts/SimpleToken.sol\":5407:5417  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5384:5406  calculateStakingReward */\n      tag_69\n        /* \"contracts/SimpleToken.sol\":5384:5418  calculateStakingReward(msg.sender) */\n      jump\t// in\n    tag_292:\n        /* \"contracts/SimpleToken.sol\":5442:5452  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":5456:5457  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":5429:5453  stakedAmount[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":5429:5441  stakedAmount */\n      0x0e\n        /* \"contracts/SimpleToken.sol\":5429:5453  stakedAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SimpleToken.sol\":5429:5457  stakedAmount[msg.sender] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":5468:5484  stakingTimestamp */\n      0x0f\n        /* \"contracts/SimpleToken.sol\":5468:5496  stakingTimestamp[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/SimpleToken.sol\":5468:5500  stakingTimestamp[msg.sender] = 0 */\n      sstore\n        /* \"contracts/SimpleToken.sol\":5367:5418  uint256 reward = calculateStakingReward(msg.sender) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/SimpleToken.sol\":5513:5566  _transfer(address(this), msg.sender, amount + reward) */\n      tag_293\n      swap1\n        /* \"contracts/SimpleToken.sol\":5531:5535  this */\n      address\n      swap1\n        /* \"contracts/SimpleToken.sol\":5550:5565  amount + reward */\n      tag_294\n        /* \"contracts/SimpleToken.sol\":5367:5418  uint256 reward = calculateStakingReward(msg.sender) */\n      dup5\n        /* \"contracts/SimpleToken.sol\":5550:5556  amount */\n      dup7\n        /* \"contracts/SimpleToken.sol\":5550:5565  amount + reward */\n      tag_248\n      jump\t// in\n    tag_294:\n        /* \"contracts/SimpleToken.sol\":5513:5522  _transfer */\n      tag_229\n        /* \"contracts/SimpleToken.sol\":5513:5566  _transfer(address(this), msg.sender, amount + reward) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/SimpleToken.sol\":5582:5624  TokensUnstaked(msg.sender, amount, reward) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8742:8767   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":8798:8800   */\n      0x20\n        /* \"#utility.yul\":8783:8801   */\n      dup2\n      add\n        /* \"#utility.yul\":8776:8810   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/SimpleToken.sol\":5597:5607  msg.sender */\n      caller\n      swap2\n        /* \"contracts/SimpleToken.sol\":5582:5624  TokensUnstaked(msg.sender, amount, reward) */\n      0x6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336\n      swap2\n        /* \"#utility.yul\":8715:8733   */\n      add\n        /* \"contracts/SimpleToken.sol\":5582:5624  TokensUnstaked(msg.sender, amount, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SimpleToken.sol\":5135:5632  {... */\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":5101:5632  function unstakeTokens() external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_212\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"contracts/SimpleToken.sol\":4074:4679  function buyTokens() external payable {... */\n    tag_173:\n        /* \"contracts/SimpleToken.sol\":4146:4162  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":4127:4142  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":4127:4162  block.timestamp >= preSaleStartTime */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":4119:4183  require(block.timestamp >= preSaleStartTime, \"Sale not active.\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9023:9025   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":4119:4183  require(block.timestamp >= preSaleStartTime, \"Sale not active.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9005:9026   */\n      mstore\n        /* \"#utility.yul\":9062:9064   */\n      0x10\n        /* \"#utility.yul\":9042:9060   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9035:9065   */\n      mstore\n      shl(0x81, 0x29b0b632903737ba1030b1ba34bb3297)\n        /* \"#utility.yul\":9081:9099   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9074:9120   */\n      mstore\n        /* \"#utility.yul\":9137:9155   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":4119:4183  require(block.timestamp >= preSaleStartTime, \"Sale not active.\") */\n      tag_240\n        /* \"#utility.yul\":8821:9161   */\n      jump\n        /* \"contracts/SimpleToken.sol\":4119:4183  require(block.timestamp >= preSaleStartTime, \"Sale not active.\") */\n    tag_301:\n        /* \"contracts/SimpleToken.sol\":4210:4211  0 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4198:4207  msg.value */\n      callvalue\n        /* \"contracts/SimpleToken.sol\":4198:4211  msg.value > 0 */\n      gt\n        /* \"contracts/SimpleToken.sol\":4190:4244  require(msg.value > 0, \"Must send ETH to buy tokens.\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9368:9370   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":4190:4244  require(msg.value > 0, \"Must send ETH to buy tokens.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9350:9371   */\n      mstore\n        /* \"#utility.yul\":9407:9409   */\n      0x1c\n        /* \"#utility.yul\":9387:9405   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9380:9410   */\n      mstore\n        /* \"#utility.yul\":9446:9476   */\n      0x4d7573742073656e642045544820746f2062757920746f6b656e732e00000000\n        /* \"#utility.yul\":9426:9444   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9419:9477   */\n      mstore\n        /* \"#utility.yul\":9494:9512   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":4190:4244  require(msg.value > 0, \"Must send ETH to buy tokens.\") */\n      tag_240\n        /* \"#utility.yul\":9166:9518   */\n      jump\n        /* \"contracts/SimpleToken.sol\":4190:4244  require(msg.value > 0, \"Must send ETH to buy tokens.\") */\n    tag_304:\n        /* \"contracts/SimpleToken.sol\":4253:4273  uint256 currentPrice */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4276:4292  calculatePrice() */\n      tag_307\n        /* \"contracts/SimpleToken.sol\":4276:4290  calculatePrice */\n      tag_176\n        /* \"contracts/SimpleToken.sol\":4276:4292  calculatePrice() */\n      jump\t// in\n    tag_307:\n        /* \"contracts/SimpleToken.sol\":4253:4292  uint256 currentPrice = calculatePrice() */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":4337:4356  uint256 tokensToBuy */\n      0x00\n        /* \"contracts/SimpleToken.sol\":4253:4292  uint256 currentPrice = calculatePrice() */\n      dup2\n        /* \"contracts/SimpleToken.sol\":4372:4397  10 ** uint256(decimals()) */\n      tag_309\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"contracts/SimpleToken.sol\":4372:4374  10 */\n      0x0a\n        /* \"contracts/SimpleToken.sol\":4372:4397  10 ** uint256(decimals()) */\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"contracts/SimpleToken.sol\":4360:4397  msg.value * 10 ** uint256(decimals()) */\n      tag_311\n      swap1\n        /* \"contracts/SimpleToken.sol\":4360:4369  msg.value */\n      callvalue\n        /* \"contracts/SimpleToken.sol\":4360:4397  msg.value * 10 ** uint256(decimals()) */\n      tag_220\n      jump\t// in\n    tag_311:\n        /* \"contracts/SimpleToken.sol\":4359:4413  (msg.value * 10 ** uint256(decimals())) / currentPrice */\n      tag_312\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_312:\n        /* \"contracts/SimpleToken.sol\":4446:4450  this */\n      address\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SimpleToken.sol\":4337:4413  uint256 tokensToBuy = (msg.value * 10 ** uint256(decimals())) / currentPrice */\n      swap1\n      swap2\n      pop\n      dup2\n      gt\n        /* \"contracts/SimpleToken.sol\":4428:4467  balanceOf(address(this)) >= tokensToBuy */\n      iszero\n        /* \"contracts/SimpleToken.sol\":4420:4500  require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9861:9863   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":4420:4500  require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9843:9864   */\n      mstore\n        /* \"#utility.yul\":9900:9902   */\n      0x1c\n        /* \"#utility.yul\":9880:9898   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9873:9903   */\n      mstore\n        /* \"#utility.yul\":9939:9969   */\n      0x4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e00000000\n        /* \"#utility.yul\":9919:9937   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9912:9970   */\n      mstore\n        /* \"#utility.yul\":9987:10005   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":4420:4500  require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\") */\n      tag_240\n        /* \"#utility.yul\":9659:10011   */\n      jump\n        /* \"contracts/SimpleToken.sol\":4420:4500  require(balanceOf(address(this)) >= tokensToBuy, \"Not enough tokens available.\") */\n    tag_314:\n        /* \"contracts/SimpleToken.sol\":4509:4558  _transfer(address(this), msg.sender, tokensToBuy) */\n      tag_317\n        /* \"contracts/SimpleToken.sol\":4527:4531  this */\n      address\n        /* \"contracts/SimpleToken.sol\":4534:4544  msg.sender */\n      caller\n        /* \"contracts/SimpleToken.sol\":4546:4557  tokensToBuy */\n      dup4\n        /* \"contracts/SimpleToken.sol\":4509:4518  _transfer */\n      tag_229\n        /* \"contracts/SimpleToken.sol\":4509:4558  _transfer(address(this), msg.sender, tokensToBuy) */\n      jump\t// in\n    tag_317:\n        /* \"contracts/SimpleToken.sol\":4579:4590  tokensToBuy */\n      dup1\n        /* \"contracts/SimpleToken.sol\":4565:4575  tokensSold */\n      0x0b\n      0x00\n        /* \"contracts/SimpleToken.sol\":4565:4590  tokensSold += tokensToBuy */\n      dup3\n      dup3\n      sload\n      tag_318\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_318:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":4604:4652  Transfer(address(this), msg.sender, tokensToBuy) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SimpleToken.sol\":4628:4638  msg.sender */\n      caller\n      swap1\n        /* \"contracts/SimpleToken.sol\":4621:4625  this */\n      address\n      swap1\n        /* \"contracts/SimpleToken.sol\":4604:4652  Transfer(address(this), msg.sender, tokensToBuy) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/SimpleToken.sol\":4604:4652  Transfer(address(this), msg.sender, tokensToBuy) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SimpleToken.sol\":4112:4679  {... */\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":4074:4679  function buyTokens() external payable {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":3510:3997  function calculatePrice() public view returns (uint256) {... */\n    tag_176:\n        /* \"contracts/SimpleToken.sol\":3557:3564  uint256 */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3604:3619  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":3585:3601  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":3585:3619  preSaleStartTime >=block.timestamp */\n      lt\n      iszero\n        /* \"contracts/SimpleToken.sol\":3577:3647  require(preSaleStartTime >=block.timestamp,\"Pre-sale not started yet\") */\n      tag_321\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10218:10220   */\n      0x20\n        /* \"contracts/SimpleToken.sol\":3577:3647  require(preSaleStartTime >=block.timestamp,\"Pre-sale not started yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10200:10221   */\n      mstore\n        /* \"#utility.yul\":10257:10259   */\n      0x18\n        /* \"#utility.yul\":10237:10255   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10230:10260   */\n      mstore\n        /* \"#utility.yul\":10296:10322   */\n      0x5072652d73616c65206e6f742073746172746564207965740000000000000000\n        /* \"#utility.yul\":10276:10294   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10269:10323   */\n      mstore\n        /* \"#utility.yul\":10340:10358   */\n      0x64\n      add\n        /* \"contracts/SimpleToken.sol\":3577:3647  require(preSaleStartTime >=block.timestamp,\"Pre-sale not started yet\") */\n      tag_240\n        /* \"#utility.yul\":10016:10364   */\n      jump\n        /* \"contracts/SimpleToken.sol\":3577:3647  require(preSaleStartTime >=block.timestamp,\"Pre-sale not started yet\") */\n    tag_321:\n        /* \"contracts/SimpleToken.sol\":3681:3695  preSaleEndTime */\n      sload(0x07)\n        /* \"contracts/SimpleToken.sol\":3663:3678  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":3663:3695  block.timestamp > preSaleEndTime */\n      gt\n        /* \"contracts/SimpleToken.sol\":3658:3747  if ( block.timestamp > preSaleEndTime) {... */\n      iszero\n      tag_324\n      jumpi\n      pop\n        /* \"contracts/SimpleToken.sol\":3719:3735  regularSalePrice */\n      sload(0x09)\n      swap1\n        /* \"contracts/SimpleToken.sol\":3510:3997  function calculatePrice() public view returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":3658:3747  if ( block.timestamp > preSaleEndTime) {... */\n    tag_324:\n        /* \"contracts/SimpleToken.sol\":3767:3787  uint256 weeksElapsed */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3829:3836  1 weeks */\n      0x093a80\n        /* \"contracts/SimpleToken.sol\":3809:3825  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":3791:3806  block.timestamp */\n      timestamp\n        /* \"contracts/SimpleToken.sol\":3791:3825  block.timestamp - preSaleStartTime */\n      tag_325\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_325:\n        /* \"contracts/SimpleToken.sol\":3790:3836  (block.timestamp - preSaleStartTime) / 1 weeks */\n      tag_326\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_326:\n        /* \"contracts/SimpleToken.sol\":3767:3836  uint256 weeksElapsed = (block.timestamp - preSaleStartTime) / 1 weeks */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":3847:3868  uint256 priceIncrease */\n      0x00\n        /* \"contracts/SimpleToken.sol\":3924:3943  preSaleWeeksInWeeks */\n      sload(0x0c)\n        /* \"contracts/SimpleToken.sol\":3908:3920  weeksElapsed */\n      dup3\n        /* \"contracts/SimpleToken.sol\":3892:3904  initialPrice */\n      sload(0x08)\n        /* \"contracts/SimpleToken.sol\":3873:3889  regularSalePrice */\n      sload(0x09)\n        /* \"contracts/SimpleToken.sol\":3873:3904  regularSalePrice - initialPrice */\n      tag_327\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_327:\n        /* \"contracts/SimpleToken.sol\":3872:3920  (regularSalePrice - initialPrice) * weeksElapsed */\n      tag_328\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_328:\n        /* \"contracts/SimpleToken.sol\":3871:3943  ((regularSalePrice - initialPrice) * weeksElapsed) / preSaleWeeksInWeeks */\n      tag_329\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_329:\n        /* \"contracts/SimpleToken.sol\":3847:3943  uint256 priceIncrease = ((regularSalePrice - initialPrice) * weeksElapsed) / preSaleWeeksInWeeks */\n      swap1\n      pop\n        /* \"contracts/SimpleToken.sol\":3976:3989  priceIncrease */\n      dup1\n        /* \"contracts/SimpleToken.sol\":3961:3973  initialPrice */\n      sload(0x08)\n        /* \"contracts/SimpleToken.sol\":3961:3989  initialPrice + priceIncrease */\n      tag_330\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_330:\n        /* \"contracts/SimpleToken.sol\":3954:3989  return initialPrice + priceIncrease */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/SimpleToken.sol\":3510:3997  function calculatePrice() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_333\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_240\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_337\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/SimpleToken.sol\":3063:3501  function startPreSale(uint256 _startTime, uint256 _durationWeeks) external onlyOwner {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_339\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_339:\n        /* \"contracts/SimpleToken.sol\":3247:3263  preSaleStartTime */\n      0x06\n        /* \"contracts/SimpleToken.sol\":3247:3276  preSaleStartTime = _startTime */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":3324:3348  _durationWeeks * 1 weeks */\n      tag_341\n        /* \"contracts/SimpleToken.sol\":3324:3338  _durationWeeks */\n      dup2\n        /* \"contracts/SimpleToken.sol\":3341:3348  1 weeks */\n      0x093a80\n        /* \"contracts/SimpleToken.sol\":3324:3348  _durationWeeks * 1 weeks */\n      tag_220\n      jump\t// in\n    tag_341:\n        /* \"contracts/SimpleToken.sol\":3304:3320  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":3304:3349  preSaleStartTime + (_durationWeeks * 1 weeks) */\n      tag_342\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_342:\n        /* \"contracts/SimpleToken.sol\":3287:3301  preSaleEndTime */\n      0x07\n        /* \"contracts/SimpleToken.sol\":3287:3349  preSaleEndTime = preSaleStartTime + (_durationWeeks * 1 weeks) */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":3360:3379  preSaleWeeksInWeeks */\n      0x0c\n        /* \"contracts/SimpleToken.sol\":3360:3396  preSaleWeeksInWeeks = _durationWeeks */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":3407:3422  presaleIsActive */\n      0x05\n        /* \"contracts/SimpleToken.sol\":3407:3429  presaleIsActive = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"contracts/SimpleToken.sol\":3460:3476  preSaleStartTime */\n      sload(0x06)\n        /* \"contracts/SimpleToken.sol\":3445:3493  PreSaleStarted(preSaleStartTime, preSaleEndTime) */\n      mload(0x40)\n      0x3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d\n      swap3\n      tag_343\n      swap3\n        /* \"#utility.yul\":8742:8767   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8798:8800   */\n      0x20\n        /* \"#utility.yul\":8783:8801   */\n      dup3\n      add\n        /* \"#utility.yul\":8776:8810   */\n      mstore\n        /* \"#utility.yul\":8730:8732   */\n      0x40\n        /* \"#utility.yul\":8715:8733   */\n      add\n      swap1\n        /* \"#utility.yul\":8568:8816   */\n      jump\n        /* \"contracts/SimpleToken.sol\":3445:3493  PreSaleStarted(preSaleStartTime, preSaleEndTime) */\n    tag_343:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/SimpleToken.sol\":3063:3501  function startPreSale(uint256 _startTime, uint256 _durationWeeks) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_346\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_351\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10589:10621   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10571:10622   */\n      mstore\n        /* \"#utility.yul\":10638:10656   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10631:10665   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10681:10699   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":10674:10708   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10544:10562   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_240\n        /* \"#utility.yul\":10369:10714   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_354\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_347\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      tag_240\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_358\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      tag_240\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_346\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_361\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x05))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_236\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_240\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_237:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_370\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      tag_240\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_370:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_372\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_361\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_347:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_374\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      tag_240\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_374:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_376\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2430:2481   */\n      mstore\n        /* \"#utility.yul\":2403:2421   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      tag_240\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_376:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_354\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_379\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n    tag_379:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_361:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_381\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_382\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_382:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_383\n      swap1\n      pop\n      jump\n    tag_381:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_384\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10589:10621   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10571:10622   */\n      mstore\n        /* \"#utility.yul\":10638:10656   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10631:10665   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":10681:10699   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":10674:10708   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":10544:10562   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_240\n        /* \"#utility.yul\":10369:10714   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_384:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_386\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_387)\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_387:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_388\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n    tag_388:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:614   */\n    tag_57:\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup2\n        /* \"#utility.yul\":327:348   */\n      mstore\n        /* \"#utility.yul\":308:312   */\n      0x00\n        /* \"#utility.yul\":377:383   */\n      dup3\n        /* \"#utility.yul\":371:384   */\n      mload\n        /* \"#utility.yul\":420:426   */\n      dup1\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":404:413   */\n      dup5\n        /* \"#utility.yul\":400:418   */\n      add\n        /* \"#utility.yul\":393:427   */\n      mstore\n        /* \"#utility.yul\":479:485   */\n      dup1\n        /* \"#utility.yul\":474:476   */\n      0x20\n        /* \"#utility.yul\":466:472   */\n      dup6\n        /* \"#utility.yul\":462:477   */\n      add\n        /* \"#utility.yul\":457:459   */\n      0x40\n        /* \"#utility.yul\":446:455   */\n      dup6\n        /* \"#utility.yul\":442:460   */\n      add\n        /* \"#utility.yul\":436:486   */\n      mcopy\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":530:532   */\n      0x40\n        /* \"#utility.yul\":521:527   */\n      dup3\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:528   */\n      add\n        /* \"#utility.yul\":502:533   */\n      add\n        /* \"#utility.yul\":495:537   */\n      mstore\n        /* \"#utility.yul\":605:607   */\n      0x40\n        /* \"#utility.yul\":598:600   */\n      0x1f\n        /* \"#utility.yul\":594:601   */\n      not\n        /* \"#utility.yul\":589:591   */\n      0x1f\n        /* \"#utility.yul\":581:587   */\n      dup4\n        /* \"#utility.yul\":577:592   */\n      add\n        /* \"#utility.yul\":573:602   */\n      and\n        /* \"#utility.yul\":562:571   */\n      dup5\n        /* \"#utility.yul\":558:603   */\n      add\n        /* \"#utility.yul\":554:608   */\n      add\n        /* \"#utility.yul\":546:608   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":196:614   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":619:792   */\n    tag_389:\n        /* \"#utility.yul\":687:707   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":736:767   */\n      dup2\n      and\n        /* \"#utility.yul\":726:768   */\n      dup2\n      eq\n        /* \"#utility.yul\":716:786   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":782:783   */\n      0x00\n        /* \"#utility.yul\":779:780   */\n      dup1\n        /* \"#utility.yul\":772:784   */\n      revert\n        /* \"#utility.yul\":716:786   */\n    tag_397:\n        /* \"#utility.yul\":619:792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":797:1097   */\n    tag_61:\n        /* \"#utility.yul\":865:871   */\n      0x00\n        /* \"#utility.yul\":873:879   */\n      dup1\n        /* \"#utility.yul\":926:928   */\n      0x40\n        /* \"#utility.yul\":914:923   */\n      dup4\n        /* \"#utility.yul\":905:912   */\n      dup6\n        /* \"#utility.yul\":901:924   */\n      sub\n        /* \"#utility.yul\":897:929   */\n      slt\n        /* \"#utility.yul\":894:946   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":942:943   */\n      0x00\n        /* \"#utility.yul\":939:940   */\n      dup1\n        /* \"#utility.yul\":932:944   */\n      revert\n        /* \"#utility.yul\":894:946   */\n    tag_399:\n        /* \"#utility.yul\":965:994   */\n      tag_400\n        /* \"#utility.yul\":984:993   */\n      dup4\n        /* \"#utility.yul\":965:994   */\n      tag_389\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":955:994   */\n      swap5\n        /* \"#utility.yul\":1063:1065   */\n      0x20\n        /* \"#utility.yul\":1048:1066   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1035:1067   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":797:1097   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1480   */\n    tag_68:\n        /* \"#utility.yul\":1353:1359   */\n      0x00\n        /* \"#utility.yul\":1406:1408   */\n      0x20\n        /* \"#utility.yul\":1394:1403   */\n      dup3\n        /* \"#utility.yul\":1385:1392   */\n      dup5\n        /* \"#utility.yul\":1381:1404   */\n      sub\n        /* \"#utility.yul\":1377:1409   */\n      slt\n        /* \"#utility.yul\":1374:1426   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":1422:1423   */\n      0x00\n        /* \"#utility.yul\":1419:1420   */\n      dup1\n        /* \"#utility.yul\":1412:1424   */\n      revert\n        /* \"#utility.yul\":1374:1426   */\n    tag_403:\n        /* \"#utility.yul\":1445:1474   */\n      tag_222\n        /* \"#utility.yul\":1464:1473   */\n      dup3\n        /* \"#utility.yul\":1445:1474   */\n      tag_389\n      jump\t// in\n        /* \"#utility.yul\":1485:1859   */\n    tag_82:\n        /* \"#utility.yul\":1562:1568   */\n      0x00\n        /* \"#utility.yul\":1570:1576   */\n      dup1\n        /* \"#utility.yul\":1578:1584   */\n      0x00\n        /* \"#utility.yul\":1631:1633   */\n      0x60\n        /* \"#utility.yul\":1619:1628   */\n      dup5\n        /* \"#utility.yul\":1610:1617   */\n      dup7\n        /* \"#utility.yul\":1606:1629   */\n      sub\n        /* \"#utility.yul\":1602:1634   */\n      slt\n        /* \"#utility.yul\":1599:1651   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":1647:1648   */\n      0x00\n        /* \"#utility.yul\":1644:1645   */\n      dup1\n        /* \"#utility.yul\":1637:1649   */\n      revert\n        /* \"#utility.yul\":1599:1651   */\n    tag_406:\n        /* \"#utility.yul\":1670:1699   */\n      tag_407\n        /* \"#utility.yul\":1689:1698   */\n      dup5\n        /* \"#utility.yul\":1670:1699   */\n      tag_389\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1660:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1718:1756   */\n      tag_408\n        /* \"#utility.yul\":1752:1754   */\n      0x20\n        /* \"#utility.yul\":1741:1750   */\n      dup6\n        /* \"#utility.yul\":1737:1755   */\n      add\n        /* \"#utility.yul\":1718:1756   */\n      tag_389\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":1485:1859   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1708:1756   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1825:1827   */\n      0x40\n        /* \"#utility.yul\":1810:1828   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1797:1829   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1485:1859   */\n      jump\t// out\n        /* \"#utility.yul\":2053:2279   */\n    tag_117:\n        /* \"#utility.yul\":2112:2118   */\n      0x00\n        /* \"#utility.yul\":2165:2167   */\n      0x20\n        /* \"#utility.yul\":2153:2162   */\n      dup3\n        /* \"#utility.yul\":2144:2151   */\n      dup5\n        /* \"#utility.yul\":2140:2163   */\n      sub\n        /* \"#utility.yul\":2136:2168   */\n      slt\n        /* \"#utility.yul\":2133:2185   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2178:2179   */\n      dup1\n        /* \"#utility.yul\":2171:2183   */\n      revert\n        /* \"#utility.yul\":2133:2185   */\n    tag_411:\n      pop\n        /* \"#utility.yul\":2226:2249   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2053:2279   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2492:2752   */\n    tag_181:\n        /* \"#utility.yul\":2560:2566   */\n      0x00\n        /* \"#utility.yul\":2568:2574   */\n      dup1\n        /* \"#utility.yul\":2621:2623   */\n      0x40\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2600:2607   */\n      dup6\n        /* \"#utility.yul\":2596:2619   */\n      sub\n        /* \"#utility.yul\":2592:2624   */\n      slt\n        /* \"#utility.yul\":2589:2641   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":2637:2638   */\n      0x00\n        /* \"#utility.yul\":2634:2635   */\n      dup1\n        /* \"#utility.yul\":2627:2639   */\n      revert\n        /* \"#utility.yul\":2589:2641   */\n    tag_414:\n        /* \"#utility.yul\":2660:2689   */\n      tag_415\n        /* \"#utility.yul\":2679:2688   */\n      dup4\n        /* \"#utility.yul\":2660:2689   */\n      tag_389\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2650:2689   */\n      swap2\n      pop\n        /* \"#utility.yul\":2708:2746   */\n      tag_416\n        /* \"#utility.yul\":2742:2744   */\n      0x20\n        /* \"#utility.yul\":2731:2740   */\n      dup5\n        /* \"#utility.yul\":2727:2745   */\n      add\n        /* \"#utility.yul\":2708:2746   */\n      tag_389\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":2698:2746   */\n      swap1\n      pop\n        /* \"#utility.yul\":2492:2752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:3103   */\n    tag_200:\n        /* \"#utility.yul\":2825:2831   */\n      0x00\n        /* \"#utility.yul\":2833:2839   */\n      dup1\n        /* \"#utility.yul\":2886:2888   */\n      0x40\n        /* \"#utility.yul\":2874:2883   */\n      dup4\n        /* \"#utility.yul\":2865:2872   */\n      dup6\n        /* \"#utility.yul\":2861:2884   */\n      sub\n        /* \"#utility.yul\":2857:2889   */\n      slt\n        /* \"#utility.yul\":2854:2906   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":2902:2903   */\n      0x00\n        /* \"#utility.yul\":2899:2900   */\n      dup1\n        /* \"#utility.yul\":2892:2904   */\n      revert\n        /* \"#utility.yul\":2854:2906   */\n    tag_418:\n      pop\n      pop\n        /* \"#utility.yul\":2947:2970   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3067:3069   */\n      0x20\n        /* \"#utility.yul\":3052:3070   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3039:3071   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2757:3103   */\n      jump\t// out\n        /* \"#utility.yul\":3108:3488   */\n    tag_204:\n        /* \"#utility.yul\":3187:3188   */\n      0x01\n        /* \"#utility.yul\":3183:3195   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3230:3242   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3251:3312   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":3305:3309   */\n      0x7f\n        /* \"#utility.yul\":3297:3303   */\n      dup3\n        /* \"#utility.yul\":3293:3310   */\n      and\n        /* \"#utility.yul\":3283:3310   */\n      swap2\n      pop\n        /* \"#utility.yul\":3251:3312   */\n    tag_420:\n        /* \"#utility.yul\":3358:3360   */\n      0x20\n        /* \"#utility.yul\":3350:3356   */\n      dup3\n        /* \"#utility.yul\":3347:3361   */\n      lt\n        /* \"#utility.yul\":3327:3345   */\n      dup2\n        /* \"#utility.yul\":3324:3362   */\n      sub\n        /* \"#utility.yul\":3321:3482   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":3404:3414   */\n      0x4e487b71\n        /* \"#utility.yul\":3399:3402   */\n      0xe0\n        /* \"#utility.yul\":3395:3415   */\n      shl\n        /* \"#utility.yul\":3392:3393   */\n      0x00\n        /* \"#utility.yul\":3385:3416   */\n      mstore\n        /* \"#utility.yul\":3439:3443   */\n      0x22\n        /* \"#utility.yul\":3436:3437   */\n      0x04\n        /* \"#utility.yul\":3429:3444   */\n      mstore\n        /* \"#utility.yul\":3467:3471   */\n      0x24\n        /* \"#utility.yul\":3464:3465   */\n      0x00\n        /* \"#utility.yul\":3457:3472   */\n      revert\n        /* \"#utility.yul\":3321:3482   */\n    tag_421:\n      pop\n        /* \"#utility.yul\":3108:3488   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3493:3620   */\n    tag_390:\n        /* \"#utility.yul\":3554:3564   */\n      0x4e487b71\n        /* \"#utility.yul\":3549:3552   */\n      0xe0\n        /* \"#utility.yul\":3545:3565   */\n      shl\n        /* \"#utility.yul\":3542:3543   */\n      0x00\n        /* \"#utility.yul\":3535:3566   */\n      mstore\n        /* \"#utility.yul\":3585:3589   */\n      0x11\n        /* \"#utility.yul\":3582:3583   */\n      0x04\n        /* \"#utility.yul\":3575:3590   */\n      mstore\n        /* \"#utility.yul\":3609:3613   */\n      0x24\n        /* \"#utility.yul\":3606:3607   */\n      0x00\n        /* \"#utility.yul\":3599:3614   */\n      revert\n        /* \"#utility.yul\":3625:3753   */\n    tag_216:\n        /* \"#utility.yul\":3692:3701   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3713:3724   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3710:3747   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":3727:3745   */\n      tag_209\n      tag_390\n      jump\t// in\n        /* \"#utility.yul\":3758:3975   */\n    tag_218:\n        /* \"#utility.yul\":3798:3799   */\n      0x00\n        /* \"#utility.yul\":3824:3825   */\n      dup3\n        /* \"#utility.yul\":3814:3946   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":3868:3878   */\n      0x4e487b71\n        /* \"#utility.yul\":3863:3866   */\n      0xe0\n        /* \"#utility.yul\":3859:3879   */\n      shl\n        /* \"#utility.yul\":3856:3857   */\n      0x00\n        /* \"#utility.yul\":3849:3880   */\n      mstore\n        /* \"#utility.yul\":3903:3907   */\n      0x12\n        /* \"#utility.yul\":3900:3901   */\n      0x04\n        /* \"#utility.yul\":3893:3908   */\n      mstore\n        /* \"#utility.yul\":3931:3935   */\n      0x24\n        /* \"#utility.yul\":3928:3929   */\n      0x00\n        /* \"#utility.yul\":3921:3936   */\n      revert\n        /* \"#utility.yul\":3814:3946   */\n    tag_427:\n      pop\n        /* \"#utility.yul\":3960:3969   */\n      div\n      swap1\n        /* \"#utility.yul\":3758:3975   */\n      jump\t// out\n        /* \"#utility.yul\":3980:4148   */\n    tag_220:\n        /* \"#utility.yul\":4053:4062   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4084:4093   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4101:4116   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4095:4117   */\n      dup5\n      eq\n        /* \"#utility.yul\":4081:4118   */\n      or\n        /* \"#utility.yul\":4071:4142   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":4122:4140   */\n      tag_209\n      tag_390\n      jump\t// in\n        /* \"#utility.yul\":4905:5030   */\n    tag_248:\n        /* \"#utility.yul\":4970:4979   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4991:5001   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4988:5024   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":5004:5022   */\n      tag_209\n      tag_390\n      jump\t// in\n        /* \"#utility.yul\":5736:6111   */\n    tag_391:\n        /* \"#utility.yul\":5824:5825   */\n      0x01\n        /* \"#utility.yul\":5842:5847   */\n      dup2\n        /* \"#utility.yul\":5856:6105   */\n    tag_439:\n        /* \"#utility.yul\":5877:5878   */\n      0x01\n        /* \"#utility.yul\":5867:5875   */\n      dup5\n        /* \"#utility.yul\":5864:5879   */\n      gt\n        /* \"#utility.yul\":5856:6105   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":5927:5931   */\n      dup1\n        /* \"#utility.yul\":5922:5925   */\n      dup6\n        /* \"#utility.yul\":5918:5932   */\n      div\n        /* \"#utility.yul\":5912:5916   */\n      dup2\n        /* \"#utility.yul\":5909:5933   */\n      gt\n        /* \"#utility.yul\":5906:5956   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":5936:5954   */\n      tag_443\n      tag_390\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":5986:5987   */\n      0x01\n        /* \"#utility.yul\":5976:5984   */\n      dup5\n        /* \"#utility.yul\":5972:5988   */\n      and\n        /* \"#utility.yul\":5969:6018   */\n      iszero\n      tag_444\n      jumpi\n        /* \"#utility.yul\":6000:6016   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":5969:6018   */\n    tag_444:\n        /* \"#utility.yul\":6083:6084   */\n      0x01\n        /* \"#utility.yul\":6079:6095   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":6039:6054   */\n      dup1\n      mul\n        /* \"#utility.yul\":5856:6105   */\n      jump(tag_439)\n    tag_441:\n        /* \"#utility.yul\":5736:6111   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:7018   */\n    tag_392:\n        /* \"#utility.yul\":6165:6170   */\n      0x00\n        /* \"#utility.yul\":6195:6203   */\n      dup3\n        /* \"#utility.yul\":6185:6265   */\n      tag_446\n      jumpi\n      pop\n        /* \"#utility.yul\":6236:6237   */\n      0x01\n        /* \"#utility.yul\":6250:6255   */\n      jump(tag_209)\n        /* \"#utility.yul\":6185:6265   */\n    tag_446:\n        /* \"#utility.yul\":6284:6288   */\n      dup2\n        /* \"#utility.yul\":6274:6350   */\n      tag_447\n      jumpi\n      pop\n        /* \"#utility.yul\":6321:6322   */\n      0x00\n        /* \"#utility.yul\":6335:6340   */\n      jump(tag_209)\n        /* \"#utility.yul\":6274:6350   */\n    tag_447:\n        /* \"#utility.yul\":6366:6370   */\n      dup2\n        /* \"#utility.yul\":6384:6385   */\n      0x01\n        /* \"#utility.yul\":6379:6438   */\n      dup2\n      eq\n      tag_449\n      jumpi\n        /* \"#utility.yul\":6452:6453   */\n      0x02\n        /* \"#utility.yul\":6447:6621   */\n      dup2\n      eq\n      tag_450\n      jumpi\n        /* \"#utility.yul\":6359:6621   */\n      jump(tag_448)\n        /* \"#utility.yul\":6379:6438   */\n    tag_449:\n        /* \"#utility.yul\":6409:6410   */\n      0x01\n        /* \"#utility.yul\":6400:6410   */\n      swap2\n      pop\n        /* \"#utility.yul\":6423:6428   */\n      pop\n      jump(tag_209)\n        /* \"#utility.yul\":6447:6621   */\n    tag_450:\n        /* \"#utility.yul\":6484:6487   */\n      0xff\n        /* \"#utility.yul\":6474:6482   */\n      dup5\n        /* \"#utility.yul\":6471:6488   */\n      gt\n        /* \"#utility.yul\":6468:6511   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":6491:6509   */\n      tag_452\n      tag_390\n      jump\t// in\n    tag_452:\n      pop\n      pop\n        /* \"#utility.yul\":6547:6548   */\n      0x01\n        /* \"#utility.yul\":6533:6549   */\n      dup3\n      shl\n        /* \"#utility.yul\":6606:6611   */\n      jump(tag_209)\n        /* \"#utility.yul\":6359:6621   */\n    tag_448:\n      pop\n        /* \"#utility.yul\":6705:6707   */\n      0x20\n        /* \"#utility.yul\":6695:6703   */\n      dup4\n        /* \"#utility.yul\":6692:6708   */\n      lt\n        /* \"#utility.yul\":6686:6689   */\n      0x0133\n        /* \"#utility.yul\":6680:6684   */\n      dup4\n        /* \"#utility.yul\":6677:6690   */\n      lt\n        /* \"#utility.yul\":6673:6709   */\n      and\n        /* \"#utility.yul\":6667:6669   */\n      0x4e\n        /* \"#utility.yul\":6657:6665   */\n      dup5\n        /* \"#utility.yul\":6654:6670   */\n      lt\n        /* \"#utility.yul\":6649:6651   */\n      0x0b\n        /* \"#utility.yul\":6643:6647   */\n      dup5\n        /* \"#utility.yul\":6640:6652   */\n      lt\n        /* \"#utility.yul\":6636:6671   */\n      and\n        /* \"#utility.yul\":6633:6710   */\n      or\n        /* \"#utility.yul\":6630:6833   */\n      iszero\n      tag_453\n      jumpi\n      pop\n        /* \"#utility.yul\":6742:6761   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":6818:6823   */\n      jump(tag_209)\n        /* \"#utility.yul\":6630:6833   */\n    tag_453:\n        /* \"#utility.yul\":6865:6907   */\n      tag_454\n      not(0x00)\n        /* \"#utility.yul\":6890:6898   */\n      dup5\n        /* \"#utility.yul\":6884:6888   */\n      dup5\n        /* \"#utility.yul\":6865:6907   */\n      tag_391\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":6943:6949   */\n      dup1\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6935:6941   */\n      not\n        /* \"#utility.yul\":6931:6950   */\n      div\n        /* \"#utility.yul\":6922:6929   */\n      dup3\n        /* \"#utility.yul\":6919:6951   */\n      gt\n        /* \"#utility.yul\":6916:6974   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":6954:6972   */\n      tag_456\n      tag_390\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6992:7012   */\n      mul\n      swap4\n        /* \"#utility.yul\":6116:7018   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7163   */\n    tag_264:\n        /* \"#utility.yul\":7081:7086   */\n      0x00\n        /* \"#utility.yul\":7110:7157   */\n      tag_222\n        /* \"#utility.yul\":7151:7155   */\n      0xff\n        /* \"#utility.yul\":7141:7149   */\n      dup5\n        /* \"#utility.yul\":7137:7156   */\n      and\n        /* \"#utility.yul\":7131:7135   */\n      dup4\n        /* \"#utility.yul\":7110:7157   */\n      tag_392\n      jump\t// in\n        /* \"#utility.yul\":9523:9654   */\n    tag_310:\n        /* \"#utility.yul\":9583:9588   */\n      0x00\n        /* \"#utility.yul\":9612:9648   */\n      tag_222\n        /* \"#utility.yul\":9639:9647   */\n      dup4\n        /* \"#utility.yul\":9633:9637   */\n      dup4\n        /* \"#utility.yul\":9612:9648   */\n      tag_392\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220934754968edc707e4b911e06fbe7b31fccbf6781ba1af40e599e46f8d48c1b6b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1079": {
									"entryPoint": null,
									"id": 1079,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 348,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 267,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 404,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 864,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6122:7",
										"nodeType": "YulBlock",
										"src": "0:6122:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "180:692:7",
													"nodeType": "YulBlock",
													"src": "180:692:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "227:16:7",
																"nodeType": "YulBlock",
																"src": "227:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "236:1:7",
																					"nodeType": "YulLiteral",
																					"src": "236:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "239:1:7",
																					"nodeType": "YulLiteral",
																					"src": "239:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "229:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "229:6:7"
																			},
																			"nativeSrc": "229:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "229:12:7"
																		},
																		"nativeSrc": "229:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "229:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "201:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "201:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "210:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "210:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "197:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "197:3:7"
																		},
																		"nativeSrc": "197:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "197:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "222:3:7",
																		"nodeType": "YulLiteral",
																		"src": "222:3:7",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "193:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "193:3:7"
																},
																"nativeSrc": "193:33:7",
																"nodeType": "YulFunctionCall",
																"src": "193:33:7"
															},
															"nativeSrc": "190:53:7",
															"nodeType": "YulIf",
															"src": "190:53:7"
														},
														{
															"nativeSrc": "252:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "252:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "271:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "271:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "265:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "265:5:7"
																},
																"nativeSrc": "265:16:7",
																"nodeType": "YulFunctionCall",
																"src": "265:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "256:5:7",
																	"nodeType": "YulTypedName",
																	"src": "256:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:16:7",
																"nodeType": "YulBlock",
																"src": "344:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "353:1:7",
																					"nodeType": "YulLiteral",
																					"src": "353:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "356:1:7",
																					"nodeType": "YulLiteral",
																					"src": "356:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "346:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "346:6:7"
																			},
																			"nativeSrc": "346:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "346:12:7"
																		},
																		"nativeSrc": "346:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "346:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "303:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "303:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "314:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "314:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "329:3:7",
																										"nodeType": "YulLiteral",
																										"src": "329:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "334:1:7",
																										"nodeType": "YulLiteral",
																										"src": "334:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "325:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "325:3:7"
																								},
																								"nativeSrc": "325:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "325:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "338:1:7",
																								"nodeType": "YulLiteral",
																								"src": "338:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "321:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "321:3:7"
																						},
																						"nativeSrc": "321:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "321:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "310:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "310:3:7"
																				},
																				"nativeSrc": "310:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "310:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "300:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "300:2:7"
																		},
																		"nativeSrc": "300:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "300:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "293:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "293:6:7"
																},
																"nativeSrc": "293:50:7",
																"nodeType": "YulFunctionCall",
																"src": "293:50:7"
															},
															"nativeSrc": "290:70:7",
															"nodeType": "YulIf",
															"src": "290:70:7"
														},
														{
															"nativeSrc": "369:15:7",
															"nodeType": "YulAssignment",
															"src": "369:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "379:5:7",
																"nodeType": "YulIdentifier",
																"src": "379:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "369:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "369:6:7"
																}
															]
														},
														{
															"nativeSrc": "393:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "393:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "408:1:7",
																"nodeType": "YulLiteral",
																"src": "408:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "397:7:7",
																	"nodeType": "YulTypedName",
																	"src": "397:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "418:36:7",
															"nodeType": "YulAssignment",
															"src": "418:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "439:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "439:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "450:2:7",
																				"nodeType": "YulLiteral",
																				"src": "450:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "435:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "435:3:7"
																		},
																		"nativeSrc": "435:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "435:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "429:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "429:5:7"
																},
																"nativeSrc": "429:25:7",
																"nodeType": "YulFunctionCall",
																"src": "429:25:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "418:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "418:7:7"
																}
															]
														},
														{
															"nativeSrc": "463:17:7",
															"nodeType": "YulAssignment",
															"src": "463:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "473:7:7",
																"nodeType": "YulIdentifier",
																"src": "473:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "463:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "463:6:7"
																}
															]
														},
														{
															"nativeSrc": "489:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "489:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "504:1:7",
																"nodeType": "YulLiteral",
																"src": "504:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "493:7:7",
																	"nodeType": "YulTypedName",
																	"src": "493:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "514:36:7",
															"nodeType": "YulAssignment",
															"src": "514:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "535:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "535:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "546:2:7",
																				"nodeType": "YulLiteral",
																				"src": "546:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "531:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "531:3:7"
																		},
																		"nativeSrc": "531:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "531:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "525:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "525:5:7"
																},
																"nativeSrc": "525:25:7",
																"nodeType": "YulFunctionCall",
																"src": "525:25:7"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "514:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "514:7:7"
																}
															]
														},
														{
															"nativeSrc": "559:17:7",
															"nodeType": "YulAssignment",
															"src": "559:17:7",
															"value": {
																"name": "value_2",
																"nativeSrc": "569:7:7",
																"nodeType": "YulIdentifier",
																"src": "569:7:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "559:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "559:6:7"
																}
															]
														},
														{
															"nativeSrc": "585:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "585:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "600:1:7",
																"nodeType": "YulLiteral",
																"src": "600:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "589:7:7",
																	"nodeType": "YulTypedName",
																	"src": "589:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "610:36:7",
															"nodeType": "YulAssignment",
															"src": "610:36:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "631:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "631:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "642:2:7",
																				"nodeType": "YulLiteral",
																				"src": "642:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "627:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:7"
																		},
																		"nativeSrc": "627:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "627:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "621:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "621:5:7"
																},
																"nativeSrc": "621:25:7",
																"nodeType": "YulFunctionCall",
																"src": "621:25:7"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "610:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "610:7:7"
																}
															]
														},
														{
															"nativeSrc": "655:17:7",
															"nodeType": "YulAssignment",
															"src": "655:17:7",
															"value": {
																"name": "value_3",
																"nativeSrc": "665:7:7",
																"nodeType": "YulIdentifier",
																"src": "665:7:7"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "655:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:7"
																}
															]
														},
														{
															"nativeSrc": "681:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "681:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "696:1:7",
																"nodeType": "YulLiteral",
																"src": "696:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "685:7:7",
																	"nodeType": "YulTypedName",
																	"src": "685:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "706:37:7",
															"nodeType": "YulAssignment",
															"src": "706:37:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "727:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "727:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "738:3:7",
																				"nodeType": "YulLiteral",
																				"src": "738:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "723:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "723:3:7"
																		},
																		"nativeSrc": "723:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "723:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "717:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "717:5:7"
																},
																"nativeSrc": "717:26:7",
																"nodeType": "YulFunctionCall",
																"src": "717:26:7"
															},
															"variableNames": [
																{
																	"name": "value_4",
																	"nativeSrc": "706:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "706:7:7"
																}
															]
														},
														{
															"nativeSrc": "752:17:7",
															"nodeType": "YulAssignment",
															"src": "752:17:7",
															"value": {
																"name": "value_4",
																"nativeSrc": "762:7:7",
																"nodeType": "YulIdentifier",
																"src": "762:7:7"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "752:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "752:6:7"
																}
															]
														},
														{
															"nativeSrc": "778:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "778:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "793:1:7",
																"nodeType": "YulLiteral",
																"src": "793:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "782:7:7",
																	"nodeType": "YulTypedName",
																	"src": "782:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "803:37:7",
															"nodeType": "YulAssignment",
															"src": "803:37:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "824:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "824:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "835:3:7",
																				"nodeType": "YulLiteral",
																				"src": "835:3:7",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "820:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "820:3:7"
																		},
																		"nativeSrc": "820:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "820:19:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "814:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "814:5:7"
																},
																"nativeSrc": "814:26:7",
																"nodeType": "YulFunctionCall",
																"src": "814:26:7"
															},
															"variableNames": [
																{
																	"name": "value_5",
																	"nativeSrc": "803:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "803:7:7"
																}
															]
														},
														{
															"nativeSrc": "849:17:7",
															"nodeType": "YulAssignment",
															"src": "849:17:7",
															"value": {
																"name": "value_5",
																"nativeSrc": "859:7:7",
																"nodeType": "YulIdentifier",
																"src": "859:7:7"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "849:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "849:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "14:858:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "106:9:7",
														"nodeType": "YulTypedName",
														"src": "106:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "117:7:7",
														"nodeType": "YulTypedName",
														"src": "117:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "129:6:7",
														"nodeType": "YulTypedName",
														"src": "129:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "137:6:7",
														"nodeType": "YulTypedName",
														"src": "137:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "145:6:7",
														"nodeType": "YulTypedName",
														"src": "145:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "153:6:7",
														"nodeType": "YulTypedName",
														"src": "153:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "161:6:7",
														"nodeType": "YulTypedName",
														"src": "161:6:7",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "169:6:7",
														"nodeType": "YulTypedName",
														"src": "169:6:7",
														"type": ""
													}
												],
												"src": "14:858:7"
											},
											{
												"body": {
													"nativeSrc": "909:95:7",
													"nodeType": "YulBlock",
													"src": "909:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "926:1:7",
																		"nodeType": "YulLiteral",
																		"src": "926:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "933:3:7",
																				"nodeType": "YulLiteral",
																				"src": "933:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "938:10:7",
																				"nodeType": "YulLiteral",
																				"src": "938:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "929:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "929:3:7"
																		},
																		"nativeSrc": "929:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "929:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "919:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "919:6:7"
																},
																"nativeSrc": "919:31:7",
																"nodeType": "YulFunctionCall",
																"src": "919:31:7"
															},
															"nativeSrc": "919:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "919:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "966:1:7",
																		"nodeType": "YulLiteral",
																		"src": "966:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "969:4:7",
																		"nodeType": "YulLiteral",
																		"src": "969:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "959:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "959:6:7"
																},
																"nativeSrc": "959:15:7",
																"nodeType": "YulFunctionCall",
																"src": "959:15:7"
															},
															"nativeSrc": "959:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "959:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "990:1:7",
																		"nodeType": "YulLiteral",
																		"src": "990:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "993:4:7",
																		"nodeType": "YulLiteral",
																		"src": "993:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "983:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "983:6:7"
																},
																"nativeSrc": "983:15:7",
																"nodeType": "YulFunctionCall",
																"src": "983:15:7"
															},
															"nativeSrc": "983:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "983:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "877:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "877:127:7"
											},
											{
												"body": {
													"nativeSrc": "1064:325:7",
													"nodeType": "YulBlock",
													"src": "1064:325:7",
													"statements": [
														{
															"nativeSrc": "1074:22:7",
															"nodeType": "YulAssignment",
															"src": "1074:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1088:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1088:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1091:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1091:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1084:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1084:3:7"
																},
																"nativeSrc": "1084:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1084:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:7"
																}
															]
														},
														{
															"nativeSrc": "1105:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1105:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1135:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1135:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1141:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1141:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1131:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1131:3:7"
																},
																"nativeSrc": "1131:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1109:18:7",
																	"nodeType": "YulTypedName",
																	"src": "1109:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1182:31:7",
																"nodeType": "YulBlock",
																"src": "1182:31:7",
																"statements": [
																	{
																		"nativeSrc": "1184:27:7",
																		"nodeType": "YulAssignment",
																		"src": "1184:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1198:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1198:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1206:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1206:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1194:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1194:3:7"
																			},
																			"nativeSrc": "1194:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1194:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1184:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1184:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1162:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1162:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:7"
																},
																"nativeSrc": "1155:26:7",
																"nodeType": "YulFunctionCall",
																"src": "1155:26:7"
															},
															"nativeSrc": "1152:61:7",
															"nodeType": "YulIf",
															"src": "1152:61:7"
														},
														{
															"body": {
																"nativeSrc": "1272:111:7",
																"nodeType": "YulBlock",
																"src": "1272:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1293:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1293:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1300:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1300:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1305:10:7",
																							"nodeType": "YulLiteral",
																							"src": "1305:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1296:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1296:3:7"
																					},
																					"nativeSrc": "1296:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1296:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1286:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1286:6:7"
																			},
																			"nativeSrc": "1286:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1286:31:7"
																		},
																		"nativeSrc": "1286:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1286:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1337:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1337:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1340:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1340:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1330:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1330:6:7"
																			},
																			"nativeSrc": "1330:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1330:15:7"
																		},
																		"nativeSrc": "1330:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1330:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1365:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1365:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1368:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1368:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1358:6:7"
																			},
																			"nativeSrc": "1358:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1358:15:7"
																		},
																		"nativeSrc": "1358:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1358:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1228:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "1228:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1251:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1251:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1259:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1259:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1248:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1248:2:7"
																		},
																		"nativeSrc": "1248:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1248:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1225:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1225:2:7"
																},
																"nativeSrc": "1225:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1225:38:7"
															},
															"nativeSrc": "1222:161:7",
															"nodeType": "YulIf",
															"src": "1222:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1009:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1044:4:7",
														"nodeType": "YulTypedName",
														"src": "1044:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1053:6:7",
														"nodeType": "YulTypedName",
														"src": "1053:6:7",
														"type": ""
													}
												],
												"src": "1009:380:7"
											},
											{
												"body": {
													"nativeSrc": "1450:65:7",
													"nodeType": "YulBlock",
													"src": "1450:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1467:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1470:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1470:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1460:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1460:6:7"
																},
																"nativeSrc": "1460:14:7",
																"nodeType": "YulFunctionCall",
																"src": "1460:14:7"
															},
															"nativeSrc": "1460:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "1460:14:7"
														},
														{
															"nativeSrc": "1483:26:7",
															"nodeType": "YulAssignment",
															"src": "1483:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1501:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1501:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1504:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1504:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1491:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "1491:9:7"
																},
																"nativeSrc": "1491:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1491:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1483:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1483:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1394:121:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1433:3:7",
														"nodeType": "YulTypedName",
														"src": "1433:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1441:4:7",
														"nodeType": "YulTypedName",
														"src": "1441:4:7",
														"type": ""
													}
												],
												"src": "1394:121:7"
											},
											{
												"body": {
													"nativeSrc": "1601:437:7",
													"nodeType": "YulBlock",
													"src": "1601:437:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1634:398:7",
																"nodeType": "YulBlock",
																"src": "1634:398:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1655:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1655:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1658:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1648:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1648:6:7"
																			},
																			"nativeSrc": "1648:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1648:16:7"
																		},
																		"nativeSrc": "1648:16:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1648:16:7"
																	},
																	{
																		"nativeSrc": "1677:30:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1677:30:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1699:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1699:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1702:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1702:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1689:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1689:9:7"
																			},
																			"nativeSrc": "1689:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1689:18:7"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1681:4:7",
																				"nodeType": "YulTypedName",
																				"src": "1681:4:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1720:57:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1720:57:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1743:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1743:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1753:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1753:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1760:10:7",
																									"nodeType": "YulIdentifier",
																									"src": "1760:10:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1772:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1772:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1756:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1756:3:7"
																							},
																							"nativeSrc": "1756:19:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1756:19:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1749:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1749:3:7"
																					},
																					"nativeSrc": "1749:27:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1749:27:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1739:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1739:3:7"
																			},
																			"nativeSrc": "1739:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1739:38:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1724:11:7",
																				"nodeType": "YulTypedName",
																				"src": "1724:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1814:23:7",
																			"nodeType": "YulBlock",
																			"src": "1814:23:7",
																			"statements": [
																				{
																					"nativeSrc": "1816:19:7",
																					"nodeType": "YulAssignment",
																					"src": "1816:19:7",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1831:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "1831:4:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1816:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "1816:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1796:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "1796:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1808:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1808:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1793:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1793:2:7"
																			},
																			"nativeSrc": "1793:20:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1793:20:7"
																		},
																		"nativeSrc": "1790:47:7",
																		"nodeType": "YulIf",
																		"src": "1790:47:7"
																	},
																	{
																		"nativeSrc": "1850:41:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1850:41:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1864:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "1864:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1874:1:7",
																							"nodeType": "YulLiteral",
																							"src": "1874:1:7",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1881:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1881:3:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1886:2:7",
																									"nodeType": "YulLiteral",
																									"src": "1886:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1877:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "1877:3:7"
																							},
																							"nativeSrc": "1877:12:7",
																							"nodeType": "YulFunctionCall",
																							"src": "1877:12:7"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1870:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1870:3:7"
																					},
																					"nativeSrc": "1870:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1870:20:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1860:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1860:3:7"
																			},
																			"nativeSrc": "1860:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1860:31:7"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "1854:2:7",
																				"nodeType": "YulTypedName",
																				"src": "1854:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1904:24:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1904:24:7",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1917:11:7",
																			"nodeType": "YulIdentifier",
																			"src": "1917:11:7"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1908:5:7",
																				"nodeType": "YulTypedName",
																				"src": "1908:5:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2002:20:7",
																			"nodeType": "YulBlock",
																			"src": "2002:20:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2011:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2011:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2018:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2018:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2004:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2004:6:7"
																						},
																						"nativeSrc": "2004:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2004:16:7"
																					},
																					"nativeSrc": "2004:16:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "2004:16:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1952:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "1952:5:7"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1959:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1959:2:7"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1949:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1949:2:7"
																			},
																			"nativeSrc": "1949:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1949:13:7"
																		},
																		"nativeSrc": "1941:81:7",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1963:26:7",
																			"nodeType": "YulBlock",
																			"src": "1963:26:7",
																			"statements": [
																				{
																					"nativeSrc": "1965:22:7",
																					"nodeType": "YulAssignment",
																					"src": "1965:22:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1978:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "1978:5:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1985:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1985:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1974:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1974:3:7"
																						},
																						"nativeSrc": "1974:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1974:13:7"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1965:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "1965:5:7"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1945:3:7",
																			"nodeType": "YulBlock",
																			"src": "1945:3:7",
																			"statements": []
																		},
																		"src": "1941:81:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1617:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1617:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1622:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1622:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1614:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1614:2:7"
																},
																"nativeSrc": "1614:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1614:11:7"
															},
															"nativeSrc": "1611:421:7",
															"nodeType": "YulIf",
															"src": "1611:421:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1520:518:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1573:5:7",
														"nodeType": "YulTypedName",
														"src": "1573:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1580:3:7",
														"nodeType": "YulTypedName",
														"src": "1580:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1585:10:7",
														"nodeType": "YulTypedName",
														"src": "1585:10:7",
														"type": ""
													}
												],
												"src": "1520:518:7"
											},
											{
												"body": {
													"nativeSrc": "2128:81:7",
													"nodeType": "YulBlock",
													"src": "2128:81:7",
													"statements": [
														{
															"nativeSrc": "2138:65:7",
															"nodeType": "YulAssignment",
															"src": "2138:65:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2153:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "2153:4:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2171:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2171:1:7",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2174:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "2174:3:7"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2167:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2167:3:7"
																								},
																								"nativeSrc": "2167:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2167:11:7"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2184:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2184:1:7",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2180:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2180:3:7"
																								},
																								"nativeSrc": "2180:6:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2180:6:7"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2163:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2163:3:7"
																						},
																						"nativeSrc": "2163:24:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2163:24:7"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2159:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2159:3:7"
																				},
																				"nativeSrc": "2159:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2159:29:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2149:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:7"
																		},
																		"nativeSrc": "2149:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2149:40:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2195:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2195:1:7",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2198:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2198:3:7"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2191:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2191:3:7"
																		},
																		"nativeSrc": "2191:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2191:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2146:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2146:2:7"
																},
																"nativeSrc": "2146:57:7",
																"nodeType": "YulFunctionCall",
																"src": "2146:57:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2138:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2138:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2043:166:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2105:4:7",
														"nodeType": "YulTypedName",
														"src": "2105:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2111:3:7",
														"nodeType": "YulTypedName",
														"src": "2111:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2119:4:7",
														"nodeType": "YulTypedName",
														"src": "2119:4:7",
														"type": ""
													}
												],
												"src": "2043:166:7"
											},
											{
												"body": {
													"nativeSrc": "2310:1203:7",
													"nodeType": "YulBlock",
													"src": "2310:1203:7",
													"statements": [
														{
															"nativeSrc": "2320:24:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2320:24:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2340:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2340:3:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2334:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2334:5:7"
																},
																"nativeSrc": "2334:10:7",
																"nodeType": "YulFunctionCall",
																"src": "2334:10:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2324:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2324:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2387:22:7",
																"nodeType": "YulBlock",
																"src": "2387:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2389:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2389:16:7"
																			},
																			"nativeSrc": "2389:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2389:18:7"
																		},
																		"nativeSrc": "2389:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2389:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2359:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2359:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2375:2:7",
																						"nodeType": "YulLiteral",
																						"src": "2375:2:7",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2379:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2379:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2371:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2371:3:7"
																				},
																				"nativeSrc": "2371:10:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2371:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2383:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2383:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2367:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2367:3:7"
																		},
																		"nativeSrc": "2367:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:18:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2356:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2356:2:7"
																},
																"nativeSrc": "2356:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2356:30:7"
															},
															"nativeSrc": "2353:56:7",
															"nodeType": "YulIf",
															"src": "2353:56:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2500:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "2500:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2494:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "2494:5:7"
																				},
																				"nativeSrc": "2494:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2494:11:7"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2468:25:7",
																			"nodeType": "YulIdentifier",
																			"src": "2468:25:7"
																		},
																		"nativeSrc": "2468:38:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2468:38:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2508:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2508:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2418:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:7"
																},
																"nativeSrc": "2418:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2418:97:7"
															},
															"nativeSrc": "2418:97:7",
															"nodeType": "YulExpressionStatement",
															"src": "2418:97:7"
														},
														{
															"nativeSrc": "2524:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2524:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2541:1:7",
																"nodeType": "YulLiteral",
																"src": "2541:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2528:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2528:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2551:17:7",
															"nodeType": "YulAssignment",
															"src": "2551:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2564:4:7",
																"nodeType": "YulLiteral",
																"src": "2564:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2551:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2551:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "2614:642:7",
																		"nodeType": "YulBlock",
																		"src": "2614:642:7",
																		"statements": [
																			{
																				"nativeSrc": "2628:35:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2628:35:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2647:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2647:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2659:2:7",
																									"nodeType": "YulLiteral",
																									"src": "2659:2:7",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2655:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "2655:3:7"
																							},
																							"nativeSrc": "2655:7:7",
																							"nodeType": "YulFunctionCall",
																							"src": "2655:7:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2643:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:7"
																					},
																					"nativeSrc": "2643:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2632:7:7",
																						"nodeType": "YulTypedName",
																						"src": "2632:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2676:49:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2676:49:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2720:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "2720:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2690:29:7",
																						"nodeType": "YulIdentifier",
																						"src": "2690:29:7"
																					},
																					"nativeSrc": "2690:35:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2690:35:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2680:6:7",
																						"nodeType": "YulTypedName",
																						"src": "2680:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2738:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2738:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2747:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2747:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2742:1:7",
																						"nodeType": "YulTypedName",
																						"src": "2742:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2818:165:7",
																					"nodeType": "YulBlock",
																					"src": "2818:165:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2843:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2843:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2861:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "2861:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2866:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "2866:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2857:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "2857:3:7"
																												},
																												"nativeSrc": "2857:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "2857:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2851:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "2851:5:7"
																										},
																										"nativeSrc": "2851:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "2851:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2836:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2836:6:7"
																								},
																								"nativeSrc": "2836:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2836:42:7"
																							},
																							"nativeSrc": "2836:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "2836:42:7"
																						},
																						{
																							"nativeSrc": "2895:24:7",
																							"nodeType": "YulAssignment",
																							"src": "2895:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2909:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "2909:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2917:1:7",
																										"nodeType": "YulLiteral",
																										"src": "2917:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2905:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2905:3:7"
																								},
																								"nativeSrc": "2905:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2905:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2895:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "2895:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2936:33:7",
																							"nodeType": "YulAssignment",
																							"src": "2936:33:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2953:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "2953:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2964:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2964:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2949:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2949:3:7"
																								},
																								"nativeSrc": "2949:20:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2949:20:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2936:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "2936:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2772:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "2772:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2775:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "2775:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2769:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2769:2:7"
																					},
																					"nativeSrc": "2769:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2769:14:7"
																				},
																				"nativeSrc": "2761:222:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2784:21:7",
																					"nodeType": "YulBlock",
																					"src": "2784:21:7",
																					"statements": [
																						{
																							"nativeSrc": "2786:17:7",
																							"nodeType": "YulAssignment",
																							"src": "2786:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2795:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "2795:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2798:4:7",
																										"nodeType": "YulLiteral",
																										"src": "2798:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2791:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "2791:3:7"
																								},
																								"nativeSrc": "2791:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "2791:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2786:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "2786:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2765:3:7",
																					"nodeType": "YulBlock",
																					"src": "2765:3:7",
																					"statements": []
																				},
																				"src": "2761:222:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "3031:166:7",
																					"nodeType": "YulBlock",
																					"src": "3031:166:7",
																					"statements": [
																						{
																							"nativeSrc": "3049:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3049:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3076:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3076:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3081:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3081:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3072:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3072:3:7"
																										},
																										"nativeSrc": "3072:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3072:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3066:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3066:5:7"
																								},
																								"nativeSrc": "3066:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3066:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3053:9:7",
																									"nodeType": "YulTypedName",
																									"src": "3053:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3116:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "3116:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3128:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3128:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3155:1:7",
																																				"nodeType": "YulLiteral",
																																				"src": "3155:1:7",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3158:6:7",
																																				"nodeType": "YulIdentifier",
																																				"src": "3158:6:7"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3151:3:7",
																																			"nodeType": "YulIdentifier",
																																			"src": "3151:3:7"
																																		},
																																		"nativeSrc": "3151:14:7",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3151:14:7"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3167:3:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3167:3:7",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3147:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3147:3:7"
																																},
																																"nativeSrc": "3147:24:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3147:24:7"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3177:1:7",
																																		"nodeType": "YulLiteral",
																																		"src": "3177:1:7",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3173:3:7",
																																	"nodeType": "YulIdentifier",
																																	"src": "3173:3:7"
																																},
																																"nativeSrc": "3173:6:7",
																																"nodeType": "YulFunctionCall",
																																"src": "3173:6:7"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3143:3:7",
																															"nodeType": "YulIdentifier",
																															"src": "3143:3:7"
																														},
																														"nativeSrc": "3143:37:7",
																														"nodeType": "YulFunctionCall",
																														"src": "3143:37:7"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3139:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "3139:3:7"
																												},
																												"nativeSrc": "3139:42:7",
																												"nodeType": "YulFunctionCall",
																												"src": "3139:42:7"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3124:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3124:3:7"
																										},
																										"nativeSrc": "3124:58:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3124:58:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3109:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3109:6:7"
																								},
																								"nativeSrc": "3109:74:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3109:74:7"
																							},
																							"nativeSrc": "3109:74:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "3109:74:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3002:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "3002:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3011:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "3011:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2999:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2999:2:7"
																					},
																					"nativeSrc": "2999:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "2999:19:7"
																				},
																				"nativeSrc": "2996:201:7",
																				"nodeType": "YulIf",
																				"src": "2996:201:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3217:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3217:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3231:1:7",
																											"nodeType": "YulLiteral",
																											"src": "3231:1:7",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3234:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "3234:6:7"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3227:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "3227:3:7"
																									},
																									"nativeSrc": "3227:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "3227:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3243:1:7",
																									"nodeType": "YulLiteral",
																									"src": "3243:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3223:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "3223:3:7"
																							},
																							"nativeSrc": "3223:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3223:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3210:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3210:6:7"
																					},
																					"nativeSrc": "3210:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3210:36:7"
																				},
																				"nativeSrc": "3210:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3210:36:7"
																			}
																		]
																	},
																	"nativeSrc": "2607:649:7",
																	"nodeType": "YulCase",
																	"src": "2607:649:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2612:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2612:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3273:234:7",
																		"nodeType": "YulBlock",
																		"src": "3273:234:7",
																		"statements": [
																			{
																				"nativeSrc": "3287:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3287:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3300:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3300:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3291:5:7",
																						"nodeType": "YulTypedName",
																						"src": "3291:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3336:67:7",
																					"nodeType": "YulBlock",
																					"src": "3336:67:7",
																					"statements": [
																						{
																							"nativeSrc": "3354:35:7",
																							"nodeType": "YulAssignment",
																							"src": "3354:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3373:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "3373:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3378:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "3378:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3369:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "3369:3:7"
																										},
																										"nativeSrc": "3369:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "3369:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3363:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3363:5:7"
																								},
																								"nativeSrc": "3363:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "3363:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3354:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3354:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3317:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3317:6:7"
																				},
																				"nativeSrc": "3314:89:7",
																				"nodeType": "YulIf",
																				"src": "3314:89:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3423:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "3423:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3482:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "3482:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3489:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "3489:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3429:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "3429:52:7"
																							},
																							"nativeSrc": "3429:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "3429:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3416:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3416:6:7"
																					},
																					"nativeSrc": "3416:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3416:81:7"
																				},
																				"nativeSrc": "3416:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "3416:81:7"
																			}
																		]
																	},
																	"nativeSrc": "3265:242:7",
																	"nodeType": "YulCase",
																	"src": "3265:242:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2587:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2587:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2595:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2595:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2584:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2584:2:7"
																},
																"nativeSrc": "2584:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2584:14:7"
															},
															"nativeSrc": "2577:930:7",
															"nodeType": "YulSwitch",
															"src": "2577:930:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2214:1299:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2295:4:7",
														"nodeType": "YulTypedName",
														"src": "2295:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2301:3:7",
														"nodeType": "YulTypedName",
														"src": "2301:3:7",
														"type": ""
													}
												],
												"src": "2214:1299:7"
											},
											{
												"body": {
													"nativeSrc": "3619:102:7",
													"nodeType": "YulBlock",
													"src": "3619:102:7",
													"statements": [
														{
															"nativeSrc": "3629:26:7",
															"nodeType": "YulAssignment",
															"src": "3629:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3641:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3641:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3652:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3652:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3637:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3637:3:7"
																},
																"nativeSrc": "3637:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3637:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3629:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3629:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3671:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3671:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3686:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3686:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3702:3:7",
																								"nodeType": "YulLiteral",
																								"src": "3702:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3707:1:7",
																								"nodeType": "YulLiteral",
																								"src": "3707:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3698:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "3698:3:7"
																						},
																						"nativeSrc": "3698:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "3698:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3711:1:7",
																						"nodeType": "YulLiteral",
																						"src": "3711:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3694:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3694:3:7"
																				},
																				"nativeSrc": "3694:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3694:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3682:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3682:3:7"
																		},
																		"nativeSrc": "3682:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3682:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3664:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3664:6:7"
																},
																"nativeSrc": "3664:51:7",
																"nodeType": "YulFunctionCall",
																"src": "3664:51:7"
															},
															"nativeSrc": "3664:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "3664:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3518:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3588:9:7",
														"nodeType": "YulTypedName",
														"src": "3588:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3599:6:7",
														"nodeType": "YulTypedName",
														"src": "3599:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3610:4:7",
														"nodeType": "YulTypedName",
														"src": "3610:4:7",
														"type": ""
													}
												],
												"src": "3518:203:7"
											},
											{
												"body": {
													"nativeSrc": "3758:95:7",
													"nodeType": "YulBlock",
													"src": "3758:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3775:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3775:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3782:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3782:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3787:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3787:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3778:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3778:3:7"
																		},
																		"nativeSrc": "3778:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3778:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3768:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3768:6:7"
																},
																"nativeSrc": "3768:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3768:31:7"
															},
															"nativeSrc": "3768:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3768:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3815:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3815:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3818:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3818:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3808:6:7"
																},
																"nativeSrc": "3808:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3808:15:7"
															},
															"nativeSrc": "3808:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3808:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3842:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3842:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3832:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3832:6:7"
																},
																"nativeSrc": "3832:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3832:15:7"
															},
															"nativeSrc": "3832:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3832:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3726:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3726:127:7"
											},
											{
												"body": {
													"nativeSrc": "3927:306:7",
													"nodeType": "YulBlock",
													"src": "3927:306:7",
													"statements": [
														{
															"nativeSrc": "3937:10:7",
															"nodeType": "YulAssignment",
															"src": "3937:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3946:1:7",
																"nodeType": "YulLiteral",
																"src": "3946:1:7",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "3937:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3937:5:7"
																}
															]
														},
														{
															"nativeSrc": "3956:13:7",
															"nodeType": "YulAssignment",
															"src": "3956:13:7",
															"value": {
																"name": "_base",
																"nativeSrc": "3964:5:7",
																"nodeType": "YulIdentifier",
																"src": "3964:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "3956:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3956:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4014:213:7",
																"nodeType": "YulBlock",
																"src": "4014:213:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "4056:22:7",
																			"nodeType": "YulBlock",
																			"src": "4056:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4058:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "4058:16:7"
																						},
																						"nativeSrc": "4058:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4058:18:7"
																					},
																					"nativeSrc": "4058:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "4058:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4034:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4034:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "4044:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4044:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "4049:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "4049:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4040:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4040:3:7"
																					},
																					"nativeSrc": "4040:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4040:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4031:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4031:2:7"
																			},
																			"nativeSrc": "4031:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4031:24:7"
																		},
																		"nativeSrc": "4028:50:7",
																		"nodeType": "YulIf",
																		"src": "4028:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "4111:29:7",
																			"nodeType": "YulBlock",
																			"src": "4111:29:7",
																			"statements": [
																				{
																					"nativeSrc": "4113:25:7",
																					"nodeType": "YulAssignment",
																					"src": "4113:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "4126:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "4126:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "4133:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "4133:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "4122:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4122:3:7"
																						},
																						"nativeSrc": "4122:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4122:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "4113:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "4113:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "4098:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4098:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4108:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4108:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4094:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4094:3:7"
																			},
																			"nativeSrc": "4094:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:16:7"
																		},
																		"nativeSrc": "4091:49:7",
																		"nodeType": "YulIf",
																		"src": "4091:49:7"
																	},
																	{
																		"nativeSrc": "4153:23:7",
																		"nodeType": "YulAssignment",
																		"src": "4153:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4165:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4165:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "4171:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4171:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "4161:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4161:3:7"
																			},
																			"nativeSrc": "4161:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4161:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "4153:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4153:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4189:28:7",
																		"nodeType": "YulAssignment",
																		"src": "4189:28:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4205:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4205:1:7",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4208:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4208:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "4201:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4201:3:7"
																			},
																			"nativeSrc": "4201:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4201:16:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4189:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "4189:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3989:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3989:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3999:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3999:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3986:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3986:2:7"
																},
																"nativeSrc": "3986:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3986:15:7"
															},
															"nativeSrc": "3978:249:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4002:3:7",
																"nodeType": "YulBlock",
																"src": "4002:3:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3982:3:7",
																"nodeType": "YulBlock",
																"src": "3982:3:7",
																"statements": []
															},
															"src": "3978:249:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "3858:375:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "3886:5:7",
														"nodeType": "YulTypedName",
														"src": "3886:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3893:8:7",
														"nodeType": "YulTypedName",
														"src": "3893:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "3903:3:7",
														"nodeType": "YulTypedName",
														"src": "3903:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3911:5:7",
														"nodeType": "YulTypedName",
														"src": "3911:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "3918:4:7",
														"nodeType": "YulTypedName",
														"src": "3918:4:7",
														"type": ""
													}
												],
												"src": "3858:375:7"
											},
											{
												"body": {
													"nativeSrc": "4297:843:7",
													"nodeType": "YulBlock",
													"src": "4297:843:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4335:52:7",
																"nodeType": "YulBlock",
																"src": "4335:52:7",
																"statements": [
																	{
																		"nativeSrc": "4349:10:7",
																		"nodeType": "YulAssignment",
																		"src": "4349:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4358:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4358:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4349:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4349:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4372:5:7",
																		"nodeType": "YulLeave",
																		"src": "4372:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4317:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "4317:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4310:6:7"
																},
																"nativeSrc": "4310:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4310:16:7"
															},
															"nativeSrc": "4307:80:7",
															"nodeType": "YulIf",
															"src": "4307:80:7"
														},
														{
															"body": {
																"nativeSrc": "4420:52:7",
																"nodeType": "YulBlock",
																"src": "4420:52:7",
																"statements": [
																	{
																		"nativeSrc": "4434:10:7",
																		"nodeType": "YulAssignment",
																		"src": "4434:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4443:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4443:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4434:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4434:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4457:5:7",
																		"nodeType": "YulLeave",
																		"src": "4457:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4406:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4406:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4399:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4399:6:7"
																},
																"nativeSrc": "4399:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4399:12:7"
															},
															"nativeSrc": "4396:76:7",
															"nodeType": "YulIf",
															"src": "4396:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4508:52:7",
																		"nodeType": "YulBlock",
																		"src": "4508:52:7",
																		"statements": [
																			{
																				"nativeSrc": "4522:10:7",
																				"nodeType": "YulAssignment",
																				"src": "4522:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4531:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4531:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4522:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4522:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4545:5:7",
																				"nodeType": "YulLeave",
																				"src": "4545:5:7"
																			}
																		]
																	},
																	"nativeSrc": "4501:59:7",
																	"nodeType": "YulCase",
																	"src": "4501:59:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4506:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4506:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4576:167:7",
																		"nodeType": "YulBlock",
																		"src": "4576:167:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4611:22:7",
																					"nodeType": "YulBlock",
																					"src": "4611:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4613:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "4613:16:7"
																								},
																								"nativeSrc": "4613:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "4613:18:7"
																							},
																							"nativeSrc": "4613:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "4613:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4596:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4596:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4606:3:7",
																							"nodeType": "YulLiteral",
																							"src": "4606:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4593:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4593:2:7"
																					},
																					"nativeSrc": "4593:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4593:17:7"
																				},
																				"nativeSrc": "4590:43:7",
																				"nodeType": "YulIf",
																				"src": "4590:43:7"
																			},
																			{
																				"nativeSrc": "4646:25:7",
																				"nodeType": "YulAssignment",
																				"src": "4646:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4659:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4659:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4669:1:7",
																							"nodeType": "YulLiteral",
																							"src": "4669:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4655:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4655:3:7"
																					},
																					"nativeSrc": "4655:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4655:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4646:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4646:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4684:11:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4684:11:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4694:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4694:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "4688:2:7",
																						"nodeType": "YulTypedName",
																						"src": "4688:2:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4708:7:7",
																				"nodeType": "YulAssignment",
																				"src": "4708:7:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4714:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4714:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "4708:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "4708:2:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4728:5:7",
																				"nodeType": "YulLeave",
																				"src": "4728:5:7"
																			}
																		]
																	},
																	"nativeSrc": "4569:174:7",
																	"nodeType": "YulCase",
																	"src": "4569:174:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4574:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4574:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4488:4:7",
																"nodeType": "YulIdentifier",
																"src": "4488:4:7"
															},
															"nativeSrc": "4481:262:7",
															"nodeType": "YulSwitch",
															"src": "4481:262:7"
														},
														{
															"body": {
																"nativeSrc": "4841:114:7",
																"nodeType": "YulBlock",
																"src": "4841:114:7",
																"statements": [
																	{
																		"nativeSrc": "4855:28:7",
																		"nodeType": "YulAssignment",
																		"src": "4855:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4868:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "4868:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4874:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4874:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "4864:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4864:3:7"
																			},
																			"nativeSrc": "4864:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4864:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4855:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4855:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4896:11:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4896:11:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4906:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4906:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "4900:2:7",
																				"nodeType": "YulTypedName",
																				"src": "4900:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4920:7:7",
																		"nodeType": "YulAssignment",
																		"src": "4920:7:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4926:1:7",
																			"nodeType": "YulLiteral",
																			"src": "4926:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "4920:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4920:2:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4940:5:7",
																		"nodeType": "YulLeave",
																		"src": "4940:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4765:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "4765:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4771:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4771:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4762:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4762:2:7"
																				},
																				"nativeSrc": "4762:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4779:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4779:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4789:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4789:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4776:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4776:2:7"
																				},
																				"nativeSrc": "4776:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4776:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4758:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4758:3:7"
																		},
																		"nativeSrc": "4758:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4758:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "4802:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "4802:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4808:3:7",
																						"nodeType": "YulLiteral",
																						"src": "4808:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4799:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4799:2:7"
																				},
																				"nativeSrc": "4799:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4799:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "4817:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4817:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4827:2:7",
																						"nodeType": "YulLiteral",
																						"src": "4827:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4814:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4814:2:7"
																				},
																				"nativeSrc": "4814:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4814:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4795:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4795:3:7"
																		},
																		"nativeSrc": "4795:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4795:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4755:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4755:2:7"
																},
																"nativeSrc": "4755:77:7",
																"nodeType": "YulFunctionCall",
																"src": "4755:77:7"
															},
															"nativeSrc": "4752:203:7",
															"nodeType": "YulIf",
															"src": "4752:203:7"
														},
														{
															"nativeSrc": "4964:65:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4964:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5006:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5006:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5012:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5012:8:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5026:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5026:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5022:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5022:3:7"
																		},
																		"nativeSrc": "5022:6:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5022:6:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "4987:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "4987:18:7"
																},
																"nativeSrc": "4987:42:7",
																"nodeType": "YulFunctionCall",
																"src": "4987:42:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "4968:7:7",
																	"nodeType": "YulTypedName",
																	"src": "4968:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "4977:6:7",
																	"nodeType": "YulTypedName",
																	"src": "4977:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5074:22:7",
																"nodeType": "YulBlock",
																"src": "5074:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5076:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5076:16:7"
																			},
																			"nativeSrc": "5076:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5076:18:7"
																		},
																		"nativeSrc": "5076:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5076:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5044:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5044:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5061:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5061:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5057:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5057:3:7"
																				},
																				"nativeSrc": "5057:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5057:6:7"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "5065:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5065:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "5053:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5053:3:7"
																		},
																		"nativeSrc": "5053:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5053:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5041:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5041:2:7"
																},
																"nativeSrc": "5041:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5041:32:7"
															},
															"nativeSrc": "5038:58:7",
															"nodeType": "YulIf",
															"src": "5038:58:7"
														},
														{
															"nativeSrc": "5105:29:7",
															"nodeType": "YulAssignment",
															"src": "5105:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5118:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "5118:7:7"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "5127:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5127:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5114:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5114:3:7"
																},
																"nativeSrc": "5114:20:7",
																"nodeType": "YulFunctionCall",
																"src": "5114:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5105:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5105:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "4238:902:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4268:4:7",
														"nodeType": "YulTypedName",
														"src": "4268:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4274:8:7",
														"nodeType": "YulTypedName",
														"src": "4274:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4287:5:7",
														"nodeType": "YulTypedName",
														"src": "4287:5:7",
														"type": ""
													}
												],
												"src": "4238:902:7"
											},
											{
												"body": {
													"nativeSrc": "5213:72:7",
													"nodeType": "YulBlock",
													"src": "5213:72:7",
													"statements": [
														{
															"nativeSrc": "5223:56:7",
															"nodeType": "YulAssignment",
															"src": "5223:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5253:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5253:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "5263:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "5263:8:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5273:4:7",
																				"nodeType": "YulLiteral",
																				"src": "5273:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5259:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:7"
																		},
																		"nativeSrc": "5259:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5259:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "5232:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "5232:20:7"
																},
																"nativeSrc": "5232:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5232:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5223:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5223:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "5145:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5184:4:7",
														"nodeType": "YulTypedName",
														"src": "5184:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5190:8:7",
														"nodeType": "YulTypedName",
														"src": "5190:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5203:5:7",
														"nodeType": "YulTypedName",
														"src": "5203:5:7",
														"type": ""
													}
												],
												"src": "5145:140:7"
											},
											{
												"body": {
													"nativeSrc": "5342:116:7",
													"nodeType": "YulBlock",
													"src": "5342:116:7",
													"statements": [
														{
															"nativeSrc": "5352:20:7",
															"nodeType": "YulAssignment",
															"src": "5352:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5367:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5367:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5370:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5370:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5363:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5363:3:7"
																},
																"nativeSrc": "5363:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5363:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5352:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5352:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5430:22:7",
																"nodeType": "YulBlock",
																"src": "5430:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5432:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5432:16:7"
																			},
																			"nativeSrc": "5432:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5432:18:7"
																		},
																		"nativeSrc": "5432:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5432:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5401:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "5401:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5394:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "5394:6:7"
																				},
																				"nativeSrc": "5394:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5394:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5408:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "5408:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5415:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "5415:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5424:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "5424:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5411:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5411:3:7"
																						},
																						"nativeSrc": "5411:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5411:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5405:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "5405:2:7"
																				},
																				"nativeSrc": "5405:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5405:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5391:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "5391:2:7"
																		},
																		"nativeSrc": "5391:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5391:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5384:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5384:6:7"
																},
																"nativeSrc": "5384:45:7",
																"nodeType": "YulFunctionCall",
																"src": "5384:45:7"
															},
															"nativeSrc": "5381:71:7",
															"nodeType": "YulIf",
															"src": "5381:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5290:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5321:1:7",
														"nodeType": "YulTypedName",
														"src": "5321:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5324:1:7",
														"nodeType": "YulTypedName",
														"src": "5324:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5330:7:7",
														"nodeType": "YulTypedName",
														"src": "5330:7:7",
														"type": ""
													}
												],
												"src": "5290:168:7"
											},
											{
												"body": {
													"nativeSrc": "5511:77:7",
													"nodeType": "YulBlock",
													"src": "5511:77:7",
													"statements": [
														{
															"nativeSrc": "5521:16:7",
															"nodeType": "YulAssignment",
															"src": "5521:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5532:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5532:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5535:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5535:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5528:3:7"
																},
																"nativeSrc": "5528:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5528:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5521:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5560:22:7",
																"nodeType": "YulBlock",
																"src": "5560:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5562:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5562:16:7"
																			},
																			"nativeSrc": "5562:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5562:18:7"
																		},
																		"nativeSrc": "5562:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5562:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5552:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5552:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5555:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5555:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5549:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5549:2:7"
																},
																"nativeSrc": "5549:10:7",
																"nodeType": "YulFunctionCall",
																"src": "5549:10:7"
															},
															"nativeSrc": "5546:36:7",
															"nodeType": "YulIf",
															"src": "5546:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5463:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5494:1:7",
														"nodeType": "YulTypedName",
														"src": "5494:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5497:1:7",
														"nodeType": "YulTypedName",
														"src": "5497:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5503:3:7",
														"nodeType": "YulTypedName",
														"src": "5503:3:7",
														"type": ""
													}
												],
												"src": "5463:125:7"
											},
											{
												"body": {
													"nativeSrc": "5750:188:7",
													"nodeType": "YulBlock",
													"src": "5750:188:7",
													"statements": [
														{
															"nativeSrc": "5760:26:7",
															"nodeType": "YulAssignment",
															"src": "5760:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5772:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5772:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5783:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5783:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5768:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5768:3:7"
																},
																"nativeSrc": "5768:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5768:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5760:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5760:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5802:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5802:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5817:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5817:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5833:3:7",
																								"nodeType": "YulLiteral",
																								"src": "5833:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5838:1:7",
																								"nodeType": "YulLiteral",
																								"src": "5838:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5829:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5829:3:7"
																						},
																						"nativeSrc": "5829:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5829:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5842:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5842:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5825:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5825:3:7"
																				},
																				"nativeSrc": "5825:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5825:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5813:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5813:3:7"
																		},
																		"nativeSrc": "5813:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5813:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5795:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5795:6:7"
																},
																"nativeSrc": "5795:51:7",
																"nodeType": "YulFunctionCall",
																"src": "5795:51:7"
															},
															"nativeSrc": "5795:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "5795:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5866:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5866:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5877:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5877:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5862:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:7"
																		},
																		"nativeSrc": "5862:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5862:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5882:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5882:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5855:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:7"
																},
																"nativeSrc": "5855:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5855:34:7"
															},
															"nativeSrc": "5855:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5855:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5909:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5909:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5920:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5920:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5905:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:7"
																		},
																		"nativeSrc": "5905:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5905:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5925:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5925:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5898:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:7"
																},
																"nativeSrc": "5898:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5898:34:7"
															},
															"nativeSrc": "5898:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5898:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "5593:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5703:9:7",
														"nodeType": "YulTypedName",
														"src": "5703:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5714:6:7",
														"nodeType": "YulTypedName",
														"src": "5714:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5722:6:7",
														"nodeType": "YulTypedName",
														"src": "5722:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5730:6:7",
														"nodeType": "YulTypedName",
														"src": "5730:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5741:4:7",
														"nodeType": "YulTypedName",
														"src": "5741:4:7",
														"type": ""
													}
												],
												"src": "5593:345:7"
											},
											{
												"body": {
													"nativeSrc": "6044:76:7",
													"nodeType": "YulBlock",
													"src": "6044:76:7",
													"statements": [
														{
															"nativeSrc": "6054:26:7",
															"nodeType": "YulAssignment",
															"src": "6054:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6066:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6066:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6077:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6062:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:7"
																},
																"nativeSrc": "6062:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6062:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6054:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6054:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6096:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6096:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "6107:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6107:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6089:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6089:6:7"
																},
																"nativeSrc": "6089:25:7",
																"nodeType": "YulFunctionCall",
																"src": "6089:25:7"
															},
															"nativeSrc": "6089:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "6089:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5943:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6013:9:7",
														"nodeType": "YulTypedName",
														"src": "6013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6024:6:7",
														"nodeType": "YulTypedName",
														"src": "6024:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6035:4:7",
														"nodeType": "YulTypedName",
														"src": "6035:4:7",
														"type": ""
													}
												],
												"src": "5943:177:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let value_1 := 0\n        value_1 := mload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 64))\n        value2 := value_2\n        let value_3 := 0\n        value_3 := mload(add(headStart, 96))\n        value3 := value_3\n        let value_4 := 0\n        value_4 := mload(add(headStart, 128))\n        value4 := value_4\n        let value_5 := 0\n        value_5 := mload(add(headStart, 160))\n        value5 := value_5\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611c30380380611c3083398101604081905261002e916102ba565b856040518060400160405280600b81526020016a2730ba3ab932aa37b5b2b760a91b81525060405180604001604052806003815260200162272a2960e91b815250816003908161007e91906103ac565b50600461008b82826103ac565b5050506001600160a01b0381166100bc57604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b6100c58161010b565b506100e5306100d66012600a61055f565b6100e09088610574565b61015c565b600893909355600a91909155600955600d5550506005805460ff60a01b1916905561059e565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166101855760405163ec442f0560e01b81525f60048201526024016100b3565b6101905f8383610194565b5050565b6001600160a01b0383166101be578060025f8282546101b3919061058b565b9091555061022e9050565b6001600160a01b0383165f90815260208190526040902054818110156102105760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100b3565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661024a57600280548290039055610268565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516102ad91815260200190565b60405180910390a3505050565b5f805f805f8060c087890312156102cf575f80fd5b86516001600160a01b03811681146102e5575f80fd5b6020880151604089015160608a015160808b015160a0909b0151939c929b509099909850965090945092505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061033c57607f821691505b60208210810361035a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156103a757805f5260205f20601f840160051c810160208510156103855750805b601f840160051c820191505b818110156103a4575f8155600101610391565b50505b505050565b81516001600160401b038111156103c5576103c5610314565b6103d9816103d38454610328565b84610360565b6020601f82116001811461040b575f83156103f45750848201515b5f19600385901b1c1916600184901b1784556103a4565b5f84815260208120601f198516915b8281101561043a578785015182556020948501946001909201910161041a565b508482101561045757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156104b55780850481111561049957610499610466565b60018416156104a757908102905b60019390931c92800261047e565b935093915050565b5f826104cb57506001610559565b816104d757505f610559565b81600181146104ed57600281146104f757610513565b6001915050610559565b60ff84111561050857610508610466565b50506001821b610559565b5060208310610133831016604e8410600b8410161715610536575081810a610559565b6105425f19848461047a565b805f190482111561055557610555610466565b0290505b92915050565b5f61056d60ff8416836104bd565b9392505050565b808202811582820484141761055957610559610466565b8082018082111561055957610559610466565b611685806105ab5f395ff3fe6080604052600436106101fc575f3560e01c80638265324d11610113578063cce29ea71161009d578063dd62ed3e1161006d578063dd62ed3e1461058a578063f2fde38b146105ce578063f8102e68146105ed578063f993185514610602578063f9a81af71461062d575f80fd5b8063cce29ea71461052e578063cec297a014610543578063d0febe4c1461056e578063d348b40914610576575f80fd5b80639b19251a116100e35780639b19251a1461047a5780639ca423b3146104a8578063a09c4cf4146104dc578063a5ce413b146104fb578063a9059cbb1461050f575f80fd5b80638265324d146103eb5780638da5cb5b1461040a5780638f0794fe1461043b57806395d89b4114610466575f80fd5b806330f72cd41161019457806370a082311161016457806370a0823114610359578063715018a61461038d5780637165d19b146103a35780637547c7a3146103b85780637c613b2f146103d7575f80fd5b806330f72cd4146102f4578063313ce567146103145780634f3fc2df1461032f578063518ab2a814610344575f80fd5b80630d505541116101cf5780630d5055411461028d57806318160ddd146102ac5780631d0806ae146102c057806323b872dd146102d5575f80fd5b806303e293a31461020057806306d65af31461022857806306fdde031461023d578063095ea7b31461025e575b5f80fd5b34801561020b575f80fd5b5061021560095481565b6040519081526020015b60405180910390f35b348015610233575f80fd5b5061021560065481565b348015610248575f80fd5b5061025161064c565b60405161021f9190611378565b348015610269575f80fd5b5061027d6102783660046113c8565b6106dc565b604051901515815260200161021f565b348015610298575f80fd5b506102156102a73660046113f0565b6106f5565b3480156102b7575f80fd5b50600254610215565b3480156102cb575f80fd5b5061021560085481565b3480156102e0575f80fd5b5061027d6102ef366004611409565b61076f565b3480156102ff575f80fd5b5060055461027d90600160a01b900460ff1681565b34801561031f575f80fd5b506040516012815260200161021f565b34801561033a575f80fd5b50610215600d5481565b34801561034f575f80fd5b50610215600b5481565b348015610364575f80fd5b506102156103733660046113f0565b6001600160a01b03165f9081526020819052604090205490565b348015610398575f80fd5b506103a1610792565b005b3480156103ae575f80fd5b50610215600a5481565b3480156103c3575f80fd5b506103a16103d2366004611443565b6107a5565b3480156103e2575f80fd5b506103a16108d5565b3480156103f6575f80fd5b506102156104053660046113f0565b6109d2565b348015610415575f80fd5b506005546001600160a01b03165b6040516001600160a01b03909116815260200161021f565b348015610446575f80fd5b506102156104553660046113f0565b600f6020525f908152604090205481565b348015610471575f80fd5b50610251610a0d565b348015610485575f80fd5b5061027d6104943660046113f0565b60106020525f908152604090205460ff1681565b3480156104b3575f80fd5b506104236104c23660046113f0565b60116020525f90815260409020546001600160a01b031681565b3480156104e7575f80fd5b506103a16104f63660046113f0565b610a1c565b348015610506575f80fd5b506103a1610b93565b34801561051a575f80fd5b5061027d6105293660046113c8565b610ccb565b348015610539575f80fd5b5061021560075481565b34801561054e575f80fd5b5061021561055d3660046113f0565b60126020525f908152604090205481565b6103a1610cd8565b348015610581575f80fd5b50610215610e56565b348015610595575f80fd5b506102156105a436600461145a565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156105d9575f80fd5b506103a16105e83660046113f0565b610f19565b3480156105f8575f80fd5b50610215600c5481565b34801561060d575f80fd5b5061021561061c3660046113f0565b600e6020525f908152604090205481565b348015610638575f80fd5b506103a161064736600461148b565b610f56565b60606003805461065b906114ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610687906114ab565b80156106d25780601f106106a9576101008083540402835291602001916106d2565b820191905f5260205f20905b8154815290600101906020018083116106b557829003601f168201915b5050505050905090565b5f336106e9818585610fdf565b60019150505b92915050565b6001600160a01b0381165f908152600f6020526040812054819062093a809061071e90426114f7565b610728919061150a565b600d546001600160a01b0385165f908152600e6020526040902054919250606491839161075491611529565b61075e9190611529565b610768919061150a565b9392505050565b5f3361077c858285610ff1565b61078785858561106d565b506001949350505050565b61079a6110ca565b6107a35f6110f7565b565b5f81116108035760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b60648201526084015b60405180910390fd5b335f908152602081905260409020548111156108595760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016107fa565b61086433308361106d565b335f908152600e602052604081208054839290610882908490611540565b9091555050335f818152600f602052604090819020429055517fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef906108ca9084815260200190565b60405180910390a250565b600554600160a01b900460ff1615156001146109335760405162461bcd60e51b815260206004820152601760248201527f50726573616c65206e6f7420737461727465642079657400000000000000000060448201526064016107fa565b5f61093d336109d2565b90505f81116109855760405162461bcd60e51b81526020600482015260146024820152734e6f207265776172647320617661696c61626c6560601b60448201526064016107fa565b61098f3382611148565b335f8181526012602052604080822091909155517ff0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d906108ca9084815260200190565b5f6109df6012600a611636565b6001600160a01b0383165f90815260126020526040902054610a03906101f4611529565b6106ef9190611529565b60606004805461065b906114ab565b335f9081526010602052604090205460ff1615610a715760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481dda1a5d195b1a5cdd1959606a1b60448201526064016107fa565b6001600160a01b0381163303610ac15760405162461bcd60e51b815260206004820152601560248201527421b0b73737ba103932b332b9103cb7bab939b2b63360591b60448201526064016107fa565b335f908152601060205260409020805460ff191660011790556001600160a01b03811615801590610b0957506001600160a01b0381165f9081526010602052604090205460ff165b15610b5b57335f90815260116020908152604080832080546001600160a01b0319166001600160a01b038616908117909155835260129091528120805460019290610b55908490611540565b90915550505b6040516001600160a01b0382169033907f4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457905f90a350565b335f908152600e602052604090205480610be35760405162461bcd60e51b81526020600482015260116024820152702737903a37b5b2b7399039ba30b5b2b21760791b60448201526064016107fa565b335f908152600f6020526040902054610bff906224ea00611540565b421015610c4e5760405162461bcd60e51b815260206004820152601b60248201527f556e7374616b65206f6e6c792061667465722034207765656b732e000000000060448201526064016107fa565b5f610c58336106f5565b335f818152600e60209081526040808320839055600f909152812055909150610c8c903090610c878486611540565b61106d565b604080518381526020810183905233917f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336910160405180910390a25050565b5f336106e981858561106d565b600654421015610d1d5760405162461bcd60e51b815260206004820152601060248201526f29b0b632903737ba1030b1ba34bb329760811b60448201526064016107fa565b5f3411610d6c5760405162461bcd60e51b815260206004820152601c60248201527f4d7573742073656e642045544820746f2062757920746f6b656e732e0000000060448201526064016107fa565b5f610d75610e56565b90505f81610d856012600a611644565b610d8f9034611529565b610d99919061150a565b305f90815260208190526040902054909150811115610dfa5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e0000000060448201526064016107fa565b610e0530338361106d565b80600b5f828254610e169190611540565b9091555050604051818152339030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b5f426006541015610ea95760405162461bcd60e51b815260206004820152601860248201527f5072652d73616c65206e6f74207374617274656420796574000000000000000060448201526064016107fa565b600754421115610eba575060095490565b5f62093a8060065442610ecd91906114f7565b610ed7919061150a565b90505f600c5482600854600954610eee91906114f7565b610ef89190611529565b610f02919061150a565b905080600854610f129190611540565b9250505090565b610f216110ca565b6001600160a01b038116610f4a57604051631e4fbdf760e01b81525f60048201526024016107fa565b610f53816110f7565b50565b610f5e6110ca565b6006829055610f708162093a80611529565b600654610f7d9190611540565b6007819055600c8290556005805460ff60a01b1916600160a01b1790556006546040517f3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d92610fd3928252602082015260400190565b60405180910390a15050565b610fec8383836001611180565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015611067578181101561105957604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107fa565b61106784848484035f611180565b50505050565b6001600160a01b03831661109657604051634b637e8f60e11b81525f60048201526024016107fa565b6001600160a01b0382166110bf5760405163ec442f0560e01b81525f60048201526024016107fa565b610fec838383611252565b6005546001600160a01b031633146107a35760405163118cdaa760e01b81523360048201526024016107fa565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166111715760405163ec442f0560e01b81525f60048201526024016107fa565b61117c5f8383611252565b5050565b6001600160a01b0384166111a95760405163e602df0560e01b81525f60048201526024016107fa565b6001600160a01b0383166111d257604051634a1406b160e11b81525f60048201526024016107fa565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561106757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161124491815260200190565b60405180910390a350505050565b6001600160a01b03831661127c578060025f8282546112719190611540565b909155506112ec9050565b6001600160a01b0383165f90815260208190526040902054818110156112ce5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107fa565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661130857600280548290039055611326565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161136b91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146113c3575f80fd5b919050565b5f80604083850312156113d9575f80fd5b6113e2836113ad565b946020939093013593505050565b5f60208284031215611400575f80fd5b610768826113ad565b5f805f6060848603121561141b575f80fd5b611424846113ad565b9250611432602085016113ad565b929592945050506040919091013590565b5f60208284031215611453575f80fd5b5035919050565b5f806040838503121561146b575f80fd5b611474836113ad565b9150611482602084016113ad565b90509250929050565b5f806040838503121561149c575f80fd5b50508035926020909101359150565b600181811c908216806114bf57607f821691505b6020821081036114dd57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106ef576106ef6114e3565b5f8261152457634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176106ef576106ef6114e3565b808201808211156106ef576106ef6114e3565b6001815b600184111561158e57808504811115611572576115726114e3565b600184161561158057908102905b60019390931c928002611557565b935093915050565b5f826115a4575060016106ef565b816115b057505f6106ef565b81600181146115c657600281146115d0576115ec565b60019150506106ef565b60ff8411156115e1576115e16114e3565b50506001821b6106ef565b5060208310610133831016604e8410600b841016171561160f575081810a6106ef565b61161b5f198484611553565b805f190482111561162e5761162e6114e3565b029392505050565b5f61076860ff841683611596565b5f610768838361159656fea2646970667358221220934754968edc707e4b911e06fbe7b31fccbf6781ba1af40e599e46f8d48c1b6b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1C30 CODESIZE SUB DUP1 PUSH2 0x1C30 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x2BA JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH11 0x2730BA3AB932AA37B5B2B7 PUSH1 0xA9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x272A29 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x3AC JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x8B DUP3 DUP3 PUSH2 0x3AC JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC5 DUP2 PUSH2 0x10B JUMP JUMPDEST POP PUSH2 0xE5 ADDRESS PUSH2 0xD6 PUSH1 0x12 PUSH1 0xA PUSH2 0x55F JUMP JUMPDEST PUSH2 0xE0 SWAP1 DUP9 PUSH2 0x574 JUMP JUMPDEST PUSH2 0x15C JUMP JUMPDEST PUSH1 0x8 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xA SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 SSTORE PUSH1 0xD SSTORE POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH2 0x59E JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x185 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH2 0x190 PUSH0 DUP4 DUP4 PUSH2 0x194 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1BE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x58B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x22E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x210 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x24A JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x268 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2CF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP9 ADD MLOAD PUSH1 0x40 DUP10 ADD MLOAD PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD PUSH1 0xA0 SWAP1 SWAP12 ADD MLOAD SWAP4 SWAP13 SWAP3 SWAP12 POP SWAP1 SWAP10 SWAP1 SWAP9 POP SWAP7 POP SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x33C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x35A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3A7 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x385 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A4 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x391 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x3C5 JUMPI PUSH2 0x3C5 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x3D9 DUP2 PUSH2 0x3D3 DUP5 SLOAD PUSH2 0x328 JUMP JUMPDEST DUP5 PUSH2 0x360 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x40B JUMPI PUSH0 DUP4 ISZERO PUSH2 0x3F4 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x3A4 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x43A JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x41A JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x457 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x4B5 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x499 JUMPI PUSH2 0x499 PUSH2 0x466 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x4A7 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x47E JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x4CB JUMPI POP PUSH1 0x1 PUSH2 0x559 JUMP JUMPDEST DUP2 PUSH2 0x4D7 JUMPI POP PUSH0 PUSH2 0x559 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4ED JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x4F7 JUMPI PUSH2 0x513 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x559 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x508 JUMPI PUSH2 0x508 PUSH2 0x466 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x559 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x536 JUMPI POP DUP2 DUP2 EXP PUSH2 0x559 JUMP JUMPDEST PUSH2 0x542 PUSH0 NOT DUP5 DUP5 PUSH2 0x47A JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x555 JUMPI PUSH2 0x555 PUSH2 0x466 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x56D PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x4BD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x559 JUMPI PUSH2 0x559 PUSH2 0x466 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x559 JUMPI PUSH2 0x559 PUSH2 0x466 JUMP JUMPDEST PUSH2 0x1685 DUP1 PUSH2 0x5AB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8265324D GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xCCE29EA7 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xF8102E68 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF9A81AF7 EQ PUSH2 0x62D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCCE29EA7 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xCEC297A0 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xD348B409 EQ PUSH2 0x576 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B19251A GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x9CA423B3 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA09C4CF4 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x50F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8265324D EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x8F0794FE EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30F72CD4 GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x7165D19B EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x7C613B2F EQ PUSH2 0x3D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30F72CD4 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x4F3FC2DF EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD505541 GT PUSH2 0x1CF JUMPI DUP1 PUSH4 0xD505541 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E293A3 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6D65AF3 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x215 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x27D SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x792 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x8D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0xA0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x494 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0x4C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x4F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xB93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0xCCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0xCD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0xE56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x5E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0xF19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x638 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x647 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x65B SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x687 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6E9 DUP2 DUP6 DUP6 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH3 0x93A80 SWAP1 PUSH2 0x71E SWAP1 TIMESTAMP PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0x64 SWAP2 DUP4 SWAP2 PUSH2 0x754 SWAP2 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x77C DUP6 DUP3 DUP6 PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0x787 DUP6 DUP6 DUP6 PUSH2 0x106D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x79A PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x7A3 PUSH0 PUSH2 0x10F7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x864 CALLER ADDRESS DUP4 PUSH2 0x106D JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x882 SWAP1 DUP5 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF SWAP1 PUSH2 0x8CA SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726573616C65206E6F74207374617274656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH0 PUSH2 0x93D CALLER PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x985 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F207265776172647320617661696C61626C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x98F CALLER DUP3 PUSH2 0x1148 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xF0BC0A70FE19EF2D8DC1E1948B338A1184184FB1EA3AC836F24065828816D68D SWAP1 PUSH2 0x8CA SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9DF PUSH1 0x12 PUSH1 0xA PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA03 SWAP1 PUSH2 0x1F4 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x65B SWAP1 PUSH2 0x14AB JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481DDA1A5D195B1A5CDD1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x21B0B73737BA103932B332B9103CB7BAB939B2B633 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB09 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xB5B JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xB55 SWAP1 DUP5 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER SWAP1 PUSH32 0x4BC18AA4B0095C9A3B5CDF42D2322D5A145591B04045988A995A5DA426075457 SWAP1 PUSH0 SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737903A37B5B2B7399039BA30B5B2B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBFF SWAP1 PUSH3 0x24EA00 PUSH2 0x1540 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xC4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B65206F6E6C792061667465722034207765656B732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH0 PUSH2 0xC58 CALLER PUSH2 0x6F5 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE SWAP1 SWAP2 POP PUSH2 0xC8C SWAP1 ADDRESS SWAP1 PUSH2 0xC87 DUP5 DUP7 PUSH2 0x1540 JUMP JUMPDEST PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6E9 DUP2 DUP6 DUP6 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x29B0B632903737BA1030B1BA34BB3297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E732E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH0 PUSH2 0xD75 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0xD85 PUSH1 0x12 PUSH1 0xA PUSH2 0x1644 JUMP JUMPDEST PUSH2 0xD8F SWAP1 CALLVALUE PUSH2 0x1529 JUMP JUMPDEST PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0xE05 ADDRESS CALLER DUP4 PUSH2 0x106D JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 ADDRESS SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 TIMESTAMP PUSH1 0x6 SLOAD LT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072652D73616C65206E6F742073746172746564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xEBA JUMPI POP PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH3 0x93A80 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC SLOAD DUP3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 SLOAD PUSH2 0xF12 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF21 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF4A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0xF53 DUP2 PUSH2 0x10F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF5E PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH2 0xF70 DUP2 PUSH3 0x93A80 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x3844853BE672B18D859394AA37E05615B95B78E66B4DC37DCA98D1DB1B05EA7D SWAP3 PUSH2 0xFD3 SWAP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xFEC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1180 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x1067 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1059 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x1067 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1180 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0xFEC DUP4 DUP4 DUP4 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1171 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x117C PUSH0 DUP4 DUP4 PUSH2 0x1252 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1067 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1244 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x127C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1271 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12EC SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1308 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x136B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E2 DUP4 PUSH2 0x13AD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1400 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x768 DUP3 PUSH2 0x13AD JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x141B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1424 DUP5 PUSH2 0x13AD JUMP JUMPDEST SWAP3 POP PUSH2 0x1432 PUSH1 0x20 DUP6 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1474 DUP4 PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1482 PUSH1 0x20 DUP5 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x14E3 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1524 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x14E3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x158E JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1572 PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1580 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x1557 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15A4 JUMPI POP PUSH1 0x1 PUSH2 0x6EF JUMP JUMPDEST DUP2 PUSH2 0x15B0 JUMPI POP PUSH0 PUSH2 0x6EF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15C6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15D0 JUMPI PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6EF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15E1 JUMPI PUSH2 0x15E1 PUSH2 0x14E3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6EF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x160F JUMPI POP DUP2 DUP2 EXP PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x161B PUSH0 NOT DUP5 DUP5 PUSH2 0x1553 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x162E JUMPI PUSH2 0x162E PUSH2 0x14E3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x768 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1596 JUMP JUMPDEST PUSH0 PUSH2 0x768 DUP4 DUP4 PUSH2 0x1596 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SELFBALANCE SLOAD SWAP7 DUP15 0xDC PUSH17 0x7E4B911E06FBE7B31FCCBF6781BA1AF40E MSIZE SWAP15 CHAINID 0xF8 0xD4 DUP13 SHL PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "174:5720:6:-:0;;;1323:529;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1541:12;1601:113:2;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1601:113:2;;;1675:5;1667;:13;;;;;;:::i;:::-;-1:-1:-1;1690:7:2;:17;1700:7;1690;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3664:51:7;3637:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1572:52:6::2;1586:4;1607:16;2780:2:2::0;1607::6::2;:16;:::i;:::-;1593:30;::::0;:11;:30:::2;:::i;:::-;1572:5;:52::i;:::-;1635:12;:28:::0;;;;1674:18:::2;:40:::0;;;;1725:16:::2;:36:::0;1772:17:::2;:38:::0;-1:-1:-1;;1821:15:6::2;:23:::0;;-1:-1:-1;;;;1821:23:6::2;::::0;;174:5720;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:2:-;-1:-1:-1;;;;;7528:21:2;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:2;;7601:1;7572:32;;;3664:51:7;3637:18;;7572:32:2;3518:203:7;7524:91:2;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;5813:32:7;;6386:50:2;;;5795:51:7;5862:18;;;5855:34;;;5905:18;;;5898:34;;;5768:18;;6386:50:2;5593:345:7;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;6089::7;;6077:2;6062:18;;5943:177;7083:25:2;;;;;;;;6008:1107;;;:::o;14:858:7:-;129:6;137;145;153;161;169;222:3;210:9;201:7;197:23;193:33;190:53;;;239:1;236;229:12;190:53;265:16;;-1:-1:-1;;;;;310:31:7;;300:42;;290:70;;356:1;353;346:12;290:70;450:2;435:18;;429:25;546:2;531:18;;525:25;642:2;627:18;;621:25;738:3;723:19;;717:26;835:3;820:19;;;814:26;379:5;;429:25;;-1:-1:-1;525:25:7;;621;;-1:-1:-1;717:26:7;-1:-1:-1;814:26:7;;-1:-1:-1;14:858:7;-1:-1:-1;;;14:858:7:o;877:127::-;938:10;933:3;929:20;926:1;919:31;969:4;966:1;959:15;993:4;990:1;983:15;1009:380;1088:1;1084:12;;;;1131;;;1152:61;;1206:4;1198:6;1194:17;1184:27;;1152:61;1259:2;1251:6;1248:14;1228:18;1225:38;1222:161;;1305:10;1300:3;1296:20;1293:1;1286:31;1340:4;1337:1;1330:15;1368:4;1365:1;1358:15;1222:161;;1009:380;;;:::o;1520:518::-;1622:2;1617:3;1614:11;1611:421;;;1658:5;1655:1;1648:16;1702:4;1699:1;1689:18;1772:2;1760:10;1756:19;1753:1;1749:27;1743:4;1739:38;1808:4;1796:10;1793:20;1790:47;;;-1:-1:-1;1831:4:7;1790:47;1886:2;1881:3;1877:12;1874:1;1870:20;1864:4;1860:31;1850:41;;1941:81;1959:2;1952:5;1949:13;1941:81;;;2018:1;2004:16;;1985:1;1974:13;1941:81;;;1945:3;;1611:421;1520:518;;;:::o;2214:1299::-;2334:10;;-1:-1:-1;;;;;2356:30:7;;2353:56;;;2389:18;;:::i;:::-;2418:97;2508:6;2468:38;2500:4;2494:11;2468:38;:::i;:::-;2462:4;2418:97;:::i;:::-;2564:4;2595:2;2584:14;;2612:1;2607:649;;;;3300:1;3317:6;3314:89;;;-1:-1:-1;3369:19:7;;;3363:26;3314:89;-1:-1:-1;;2171:1:7;2167:11;;;2163:24;2159:29;2149:40;2195:1;2191:11;;;2146:57;3416:81;;2577:930;;2607:649;1467:1;1460:14;;;1504:4;1491:18;;-1:-1:-1;;2643:20:7;;;2761:222;2775:7;2772:1;2769:14;2761:222;;;2857:19;;;2851:26;2836:42;;2964:4;2949:20;;;;2917:1;2905:14;;;;2791:12;2761:222;;;2765:3;3011:6;3002:7;2999:19;2996:201;;;3072:19;;;3066:26;-1:-1:-1;;3155:1:7;3151:14;;;3167:3;3147:24;3143:37;3139:42;3124:58;3109:74;;2996:201;-1:-1:-1;;;;3243:1:7;3227:14;;;3223:22;3210:36;;-1:-1:-1;2214:1299:7:o;3726:127::-;3787:10;3782:3;3778:20;3775:1;3768:31;3818:4;3815:1;3808:15;3842:4;3839:1;3832:15;3858:375;3946:1;3964:5;3978:249;3999:1;3989:8;3986:15;3978:249;;;4049:4;4044:3;4040:14;4034:4;4031:24;4028:50;;;4058:18;;:::i;:::-;4108:1;4098:8;4094:16;4091:49;;;4122:16;;;;4091:49;4205:1;4201:16;;;;;4161:15;;3978:249;;;3858:375;;;;;;:::o;4238:902::-;4287:5;4317:8;4307:80;;-1:-1:-1;4358:1:7;4372:5;;4307:80;4406:4;4396:76;;-1:-1:-1;4443:1:7;4457:5;;4396:76;4488:4;4506:1;4501:59;;;;4574:1;4569:174;;;;4481:262;;4501:59;4531:1;4522:10;;4545:5;;;4569:174;4606:3;4596:8;4593:17;4590:43;;;4613:18;;:::i;:::-;-1:-1:-1;;4669:1:7;4655:16;;4728:5;;4481:262;;4827:2;4817:8;4814:16;4808:3;4802:4;4799:13;4795:36;4789:2;4779:8;4776:16;4771:2;4765:4;4762:12;4758:35;4755:77;4752:203;;;-1:-1:-1;4864:19:7;;;4940:5;;4752:203;4987:42;-1:-1:-1;;5012:8:7;5006:4;4987:42;:::i;:::-;5065:6;5061:1;5057:6;5053:19;5044:7;5041:32;5038:58;;;5076:18;;:::i;:::-;5114:20;;-1:-1:-1;4238:902:7;;;;;:::o;5145:140::-;5203:5;5232:47;5273:4;5263:8;5259:19;5253:4;5232:47;:::i;:::-;5223:56;5145:140;-1:-1:-1;;;5145:140:7:o;5290:168::-;5363:9;;;5394;;5411:15;;;5405:22;;5391:37;5381:71;;5432:18;;:::i;5463:125::-;5528:9;;;5549:10;;;5546:36;;;5562:18;;:::i;5943:177::-;174:5720:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 4063,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 4480,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 4298,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 4424,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 4081,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 4343,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4205,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4690,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1756,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buyTokens_1366": {
									"entryPoint": 3288,
									"id": 1366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculatePrice_1288": {
									"entryPoint": 3670,
									"id": 1288,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@calculateReferralReward_1159": {
									"entryPoint": 2514,
									"id": 1159,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@calculateStakingReward_1522": {
									"entryPoint": 1781,
									"id": 1522,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialPrice_949": {
									"entryPoint": null,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintReferralReward_1203": {
									"entryPoint": 2261,
									"id": 1203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 1612,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@preSaleEndTime_947": {
									"entryPoint": null,
									"id": 947,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleStartTime_945": {
									"entryPoint": null,
									"id": 945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@preSaleWeeksInWeeks_957": {
									"entryPoint": null,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleIsActive_943": {
									"entryPoint": null,
									"id": 943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referralCounts_979": {
									"entryPoint": null,
									"id": 979,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@referrals_975": {
									"entryPoint": null,
									"id": 975,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@regularSalePrice_951": {
									"entryPoint": null,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1938,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@signUpForWhitelist_1140": {
									"entryPoint": 2588,
									"id": 1140,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeTokens_1420": {
									"entryPoint": 1957,
									"id": 1420,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakedAmount_963": {
									"entryPoint": null,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingRewardRate_959": {
									"entryPoint": null,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingTimestamp_967": {
									"entryPoint": null,
									"id": 967,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPreSale_1240": {
									"entryPoint": 3926,
									"id": 1240,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2573,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokensSold_955": {
									"entryPoint": null,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 1903,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3865,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 3275,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unstakeTokens_1491": {
									"entryPoint": 2963,
									"id": 1491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weeklyIncreaseRate_953": {
									"entryPoint": null,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whitelist_971": {
									"entryPoint": null,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 5700,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 5686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10716:7",
										"nodeType": "YulBlock",
										"src": "0:10716:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:7",
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nativeSrc": "125:26:7",
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nativeSrc": "133:18:7",
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nativeSrc": "160:25:7",
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nativeSrc": "160:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:7",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:7",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:7",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "317:297:7",
													"nodeType": "YulBlock",
													"src": "317:297:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:7",
																		"nodeType": "YulLiteral",
																		"src": "345:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "327:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:7"
																},
																"nativeSrc": "327:21:7",
																"nodeType": "YulFunctionCall",
																"src": "327:21:7"
															},
															"nativeSrc": "327:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "327:21:7"
														},
														{
															"nativeSrc": "357:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "357:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "377:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "377:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "371:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "371:5:7"
																},
																"nativeSrc": "371:13:7",
																"nodeType": "YulFunctionCall",
																"src": "371:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "361:6:7",
																	"nodeType": "YulTypedName",
																	"src": "361:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "404:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "404:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "415:2:7",
																				"nodeType": "YulLiteral",
																				"src": "415:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "400:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "400:3:7"
																		},
																		"nativeSrc": "400:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "400:18:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "420:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "420:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "393:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:7"
																},
																"nativeSrc": "393:34:7",
																"nodeType": "YulFunctionCall",
																"src": "393:34:7"
															},
															"nativeSrc": "393:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "393:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "446:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "446:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "457:2:7",
																				"nodeType": "YulLiteral",
																				"src": "457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "442:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "442:3:7"
																		},
																		"nativeSrc": "442:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "442:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "466:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "466:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "474:2:7",
																				"nodeType": "YulLiteral",
																				"src": "474:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "462:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "462:3:7"
																		},
																		"nativeSrc": "462:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "462:15:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "479:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "479:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "436:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "436:5:7"
																},
																"nativeSrc": "436:50:7",
																"nodeType": "YulFunctionCall",
																"src": "436:50:7"
															},
															"nativeSrc": "436:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "436:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "510:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "510:9:7"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "521:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "521:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "506:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "506:3:7"
																				},
																				"nativeSrc": "506:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "506:22:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "530:2:7",
																				"nodeType": "YulLiteral",
																				"src": "530:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "502:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "502:3:7"
																		},
																		"nativeSrc": "502:31:7",
																		"nodeType": "YulFunctionCall",
																		"src": "502:31:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "535:1:7",
																		"nodeType": "YulLiteral",
																		"src": "535:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "495:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "495:6:7"
																},
																"nativeSrc": "495:42:7",
																"nodeType": "YulFunctionCall",
																"src": "495:42:7"
															},
															"nativeSrc": "495:42:7",
															"nodeType": "YulExpressionStatement",
															"src": "495:42:7"
														},
														{
															"nativeSrc": "546:62:7",
															"nodeType": "YulAssignment",
															"src": "546:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "562:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "562:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "581:6:7",
																								"nodeType": "YulIdentifier",
																								"src": "581:6:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "589:2:7",
																								"nodeType": "YulLiteral",
																								"src": "589:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "577:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "577:3:7"
																						},
																						"nativeSrc": "577:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "577:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "598:2:7",
																								"nodeType": "YulLiteral",
																								"src": "598:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "594:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "594:3:7"
																						},
																						"nativeSrc": "594:7:7",
																						"nodeType": "YulFunctionCall",
																						"src": "594:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "573:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "573:3:7"
																				},
																				"nativeSrc": "573:29:7",
																				"nodeType": "YulFunctionCall",
																				"src": "573:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "558:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:7"
																		},
																		"nativeSrc": "558:45:7",
																		"nodeType": "YulFunctionCall",
																		"src": "558:45:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "605:2:7",
																		"nodeType": "YulLiteral",
																		"src": "605:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "554:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "554:3:7"
																},
																"nativeSrc": "554:54:7",
																"nodeType": "YulFunctionCall",
																"src": "554:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "546:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "546:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "196:418:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "286:9:7",
														"nodeType": "YulTypedName",
														"src": "286:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "297:6:7",
														"nodeType": "YulTypedName",
														"src": "297:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "308:4:7",
														"nodeType": "YulTypedName",
														"src": "308:4:7",
														"type": ""
													}
												],
												"src": "196:418:7"
											},
											{
												"body": {
													"nativeSrc": "668:124:7",
													"nodeType": "YulBlock",
													"src": "668:124:7",
													"statements": [
														{
															"nativeSrc": "678:29:7",
															"nodeType": "YulAssignment",
															"src": "678:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "700:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "700:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "687:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "687:12:7"
																},
																"nativeSrc": "687:20:7",
																"nodeType": "YulFunctionCall",
																"src": "687:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "678:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "678:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "770:16:7",
																"nodeType": "YulBlock",
																"src": "770:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "779:1:7",
																					"nodeType": "YulLiteral",
																					"src": "779:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "782:1:7",
																					"nodeType": "YulLiteral",
																					"src": "782:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "772:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "772:6:7"
																			},
																			"nativeSrc": "772:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "772:12:7"
																		},
																		"nativeSrc": "772:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "772:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "729:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "729:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "740:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "740:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "755:3:7",
																										"nodeType": "YulLiteral",
																										"src": "755:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "760:1:7",
																										"nodeType": "YulLiteral",
																										"src": "760:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "751:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "751:3:7"
																								},
																								"nativeSrc": "751:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "751:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "764:1:7",
																								"nodeType": "YulLiteral",
																								"src": "764:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "747:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "747:3:7"
																						},
																						"nativeSrc": "747:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "747:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "736:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "736:3:7"
																				},
																				"nativeSrc": "736:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "736:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "726:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "726:2:7"
																		},
																		"nativeSrc": "726:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "726:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "719:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:7"
																},
																"nativeSrc": "719:50:7",
																"nodeType": "YulFunctionCall",
																"src": "719:50:7"
															},
															"nativeSrc": "716:70:7",
															"nodeType": "YulIf",
															"src": "716:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "619:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "647:6:7",
														"nodeType": "YulTypedName",
														"src": "647:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "658:5:7",
														"nodeType": "YulTypedName",
														"src": "658:5:7",
														"type": ""
													}
												],
												"src": "619:173:7"
											},
											{
												"body": {
													"nativeSrc": "884:213:7",
													"nodeType": "YulBlock",
													"src": "884:213:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "930:16:7",
																"nodeType": "YulBlock",
																"src": "930:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "939:1:7",
																					"nodeType": "YulLiteral",
																					"src": "939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "942:1:7",
																					"nodeType": "YulLiteral",
																					"src": "942:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "932:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "932:6:7"
																			},
																			"nativeSrc": "932:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "932:12:7"
																		},
																		"nativeSrc": "932:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "932:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "905:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "905:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "914:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "914:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "901:3:7"
																		},
																		"nativeSrc": "901:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "901:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "926:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "897:3:7"
																},
																"nativeSrc": "897:32:7",
																"nodeType": "YulFunctionCall",
																"src": "897:32:7"
															},
															"nativeSrc": "894:52:7",
															"nodeType": "YulIf",
															"src": "894:52:7"
														},
														{
															"nativeSrc": "955:39:7",
															"nodeType": "YulAssignment",
															"src": "955:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "984:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "984:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "965:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "965:18:7"
																},
																"nativeSrc": "965:29:7",
																"nodeType": "YulFunctionCall",
																"src": "965:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:7"
																}
															]
														},
														{
															"nativeSrc": "1003:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1003:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1016:1:7",
																"nodeType": "YulLiteral",
																"src": "1016:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1007:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1007:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1026:41:7",
															"nodeType": "YulAssignment",
															"src": "1026:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1052:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1052:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1063:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1063:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1048:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1048:3:7"
																		},
																		"nativeSrc": "1048:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1048:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1035:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1035:12:7"
																},
																"nativeSrc": "1035:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1035:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1026:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1026:5:7"
																}
															]
														},
														{
															"nativeSrc": "1076:15:7",
															"nodeType": "YulAssignment",
															"src": "1076:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1086:5:7",
																"nodeType": "YulIdentifier",
																"src": "1086:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1076:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1076:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "797:300:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "842:9:7",
														"nodeType": "YulTypedName",
														"src": "842:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "853:7:7",
														"nodeType": "YulTypedName",
														"src": "853:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "865:6:7",
														"nodeType": "YulTypedName",
														"src": "865:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "873:6:7",
														"nodeType": "YulTypedName",
														"src": "873:6:7",
														"type": ""
													}
												],
												"src": "797:300:7"
											},
											{
												"body": {
													"nativeSrc": "1197:92:7",
													"nodeType": "YulBlock",
													"src": "1197:92:7",
													"statements": [
														{
															"nativeSrc": "1207:26:7",
															"nodeType": "YulAssignment",
															"src": "1207:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1219:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1230:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1230:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:7"
																},
																"nativeSrc": "1215:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1215:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1207:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1207:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1249:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1274:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1274:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1267:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1267:6:7"
																				},
																				"nativeSrc": "1267:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1267:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1260:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1260:6:7"
																		},
																		"nativeSrc": "1260:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1260:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1242:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:7"
																},
																"nativeSrc": "1242:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1242:41:7"
															},
															"nativeSrc": "1242:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1242:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1102:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1166:9:7",
														"nodeType": "YulTypedName",
														"src": "1166:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1177:6:7",
														"nodeType": "YulTypedName",
														"src": "1177:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1188:4:7",
														"nodeType": "YulTypedName",
														"src": "1188:4:7",
														"type": ""
													}
												],
												"src": "1102:187:7"
											},
											{
												"body": {
													"nativeSrc": "1364:116:7",
													"nodeType": "YulBlock",
													"src": "1364:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1410:16:7",
																"nodeType": "YulBlock",
																"src": "1410:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1419:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1419:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1422:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1422:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1412:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:7"
																			},
																			"nativeSrc": "1412:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1412:12:7"
																		},
																		"nativeSrc": "1412:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1412:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1385:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1385:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1394:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1394:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1381:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1381:3:7"
																		},
																		"nativeSrc": "1381:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1381:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1406:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1406:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1377:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1377:3:7"
																},
																"nativeSrc": "1377:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1377:32:7"
															},
															"nativeSrc": "1374:52:7",
															"nodeType": "YulIf",
															"src": "1374:52:7"
														},
														{
															"nativeSrc": "1435:39:7",
															"nodeType": "YulAssignment",
															"src": "1435:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1464:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1464:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1445:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1445:18:7"
																},
																"nativeSrc": "1445:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1445:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1435:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1435:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1294:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1330:9:7",
														"nodeType": "YulTypedName",
														"src": "1330:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1341:7:7",
														"nodeType": "YulTypedName",
														"src": "1341:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1353:6:7",
														"nodeType": "YulTypedName",
														"src": "1353:6:7",
														"type": ""
													}
												],
												"src": "1294:186:7"
											},
											{
												"body": {
													"nativeSrc": "1589:270:7",
													"nodeType": "YulBlock",
													"src": "1589:270:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1635:16:7",
																"nodeType": "YulBlock",
																"src": "1635:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1644:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1644:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1647:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1637:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:7"
																			},
																			"nativeSrc": "1637:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1637:12:7"
																		},
																		"nativeSrc": "1637:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1610:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1610:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1619:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1619:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:7"
																		},
																		"nativeSrc": "1606:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1606:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1631:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1631:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1602:3:7"
																},
																"nativeSrc": "1602:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1602:32:7"
															},
															"nativeSrc": "1599:52:7",
															"nodeType": "YulIf",
															"src": "1599:52:7"
														},
														{
															"nativeSrc": "1660:39:7",
															"nodeType": "YulAssignment",
															"src": "1660:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1689:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1670:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1670:18:7"
																},
																"nativeSrc": "1670:29:7",
																"nodeType": "YulFunctionCall",
																"src": "1670:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1660:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:7"
																}
															]
														},
														{
															"nativeSrc": "1708:48:7",
															"nodeType": "YulAssignment",
															"src": "1708:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1741:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1752:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1752:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1737:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:7"
																		},
																		"nativeSrc": "1737:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1737:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1718:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "1718:18:7"
																},
																"nativeSrc": "1718:38:7",
																"nodeType": "YulFunctionCall",
																"src": "1718:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1708:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:7"
																}
															]
														},
														{
															"nativeSrc": "1765:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1765:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1778:1:7",
																"nodeType": "YulLiteral",
																"src": "1778:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1769:5:7",
																	"nodeType": "YulTypedName",
																	"src": "1769:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1788:41:7",
															"nodeType": "YulAssignment",
															"src": "1788:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1814:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1814:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1825:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1825:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1810:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1810:3:7"
																		},
																		"nativeSrc": "1810:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1810:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1797:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1797:12:7"
																},
																"nativeSrc": "1797:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1797:32:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1788:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1788:5:7"
																}
															]
														},
														{
															"nativeSrc": "1838:15:7",
															"nodeType": "YulAssignment",
															"src": "1838:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "1848:5:7",
																"nodeType": "YulIdentifier",
																"src": "1848:5:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1838:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1838:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1485:374:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1539:9:7",
														"nodeType": "YulTypedName",
														"src": "1539:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1550:7:7",
														"nodeType": "YulTypedName",
														"src": "1550:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1562:6:7",
														"nodeType": "YulTypedName",
														"src": "1562:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1570:6:7",
														"nodeType": "YulTypedName",
														"src": "1570:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1578:6:7",
														"nodeType": "YulTypedName",
														"src": "1578:6:7",
														"type": ""
													}
												],
												"src": "1485:374:7"
											},
											{
												"body": {
													"nativeSrc": "1961:87:7",
													"nodeType": "YulBlock",
													"src": "1961:87:7",
													"statements": [
														{
															"nativeSrc": "1971:26:7",
															"nodeType": "YulAssignment",
															"src": "1971:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1983:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1983:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1994:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1994:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1979:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1979:3:7"
																},
																"nativeSrc": "1979:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1979:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1971:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1971:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2013:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2013:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2028:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2028:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2036:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2036:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2024:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2024:3:7"
																		},
																		"nativeSrc": "2024:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2024:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2006:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2006:6:7"
																},
																"nativeSrc": "2006:36:7",
																"nodeType": "YulFunctionCall",
																"src": "2006:36:7"
															},
															"nativeSrc": "2006:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "2006:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1864:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1930:9:7",
														"nodeType": "YulTypedName",
														"src": "1930:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1941:6:7",
														"nodeType": "YulTypedName",
														"src": "1941:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1952:4:7",
														"nodeType": "YulTypedName",
														"src": "1952:4:7",
														"type": ""
													}
												],
												"src": "1864:184:7"
											},
											{
												"body": {
													"nativeSrc": "2123:156:7",
													"nodeType": "YulBlock",
													"src": "2123:156:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2169:16:7",
																"nodeType": "YulBlock",
																"src": "2169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2178:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2181:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2171:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:7"
																			},
																			"nativeSrc": "2171:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2171:12:7"
																		},
																		"nativeSrc": "2171:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2144:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2144:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2153:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2140:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2140:3:7"
																		},
																		"nativeSrc": "2140:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2140:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2165:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2165:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2136:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2136:3:7"
																},
																"nativeSrc": "2136:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2136:32:7"
															},
															"nativeSrc": "2133:52:7",
															"nodeType": "YulIf",
															"src": "2133:52:7"
														},
														{
															"nativeSrc": "2194:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2194:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2207:1:7",
																"nodeType": "YulLiteral",
																"src": "2207:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2198:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2198:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2217:32:7",
															"nodeType": "YulAssignment",
															"src": "2217:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2239:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2239:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2226:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2226:12:7"
																},
																"nativeSrc": "2226:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2226:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2217:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2217:5:7"
																}
															]
														},
														{
															"nativeSrc": "2258:15:7",
															"nodeType": "YulAssignment",
															"src": "2258:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2268:5:7",
																"nodeType": "YulIdentifier",
																"src": "2268:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2258:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2258:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2053:226:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2089:9:7",
														"nodeType": "YulTypedName",
														"src": "2089:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2100:7:7",
														"nodeType": "YulTypedName",
														"src": "2100:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2112:6:7",
														"nodeType": "YulTypedName",
														"src": "2112:6:7",
														"type": ""
													}
												],
												"src": "2053:226:7"
											},
											{
												"body": {
													"nativeSrc": "2385:102:7",
													"nodeType": "YulBlock",
													"src": "2385:102:7",
													"statements": [
														{
															"nativeSrc": "2395:26:7",
															"nodeType": "YulAssignment",
															"src": "2395:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2407:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2403:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:7"
																},
																"nativeSrc": "2403:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2403:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2395:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2437:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2452:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2468:3:7",
																								"nodeType": "YulLiteral",
																								"src": "2468:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2473:1:7",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2464:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "2464:3:7"
																						},
																						"nativeSrc": "2464:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2464:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2477:1:7",
																						"nodeType": "YulLiteral",
																						"src": "2477:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2460:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:7"
																				},
																				"nativeSrc": "2460:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2460:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2448:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:7"
																		},
																		"nativeSrc": "2448:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2430:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:7"
																},
																"nativeSrc": "2430:51:7",
																"nodeType": "YulFunctionCall",
																"src": "2430:51:7"
															},
															"nativeSrc": "2430:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "2430:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2284:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2354:9:7",
														"nodeType": "YulTypedName",
														"src": "2354:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2365:6:7",
														"nodeType": "YulTypedName",
														"src": "2365:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2376:4:7",
														"nodeType": "YulTypedName",
														"src": "2376:4:7",
														"type": ""
													}
												],
												"src": "2284:203:7"
											},
											{
												"body": {
													"nativeSrc": "2579:173:7",
													"nodeType": "YulBlock",
													"src": "2579:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2625:16:7",
																"nodeType": "YulBlock",
																"src": "2625:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2637:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2637:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2627:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:7"
																			},
																			"nativeSrc": "2627:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2627:12:7"
																		},
																		"nativeSrc": "2627:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2627:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2600:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2600:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2596:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2596:3:7"
																		},
																		"nativeSrc": "2596:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2596:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2621:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2592:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2592:3:7"
																},
																"nativeSrc": "2592:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2592:32:7"
															},
															"nativeSrc": "2589:52:7",
															"nodeType": "YulIf",
															"src": "2589:52:7"
														},
														{
															"nativeSrc": "2650:39:7",
															"nodeType": "YulAssignment",
															"src": "2650:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2679:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2660:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2660:18:7"
																},
																"nativeSrc": "2660:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2660:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2650:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:7"
																}
															]
														},
														{
															"nativeSrc": "2698:48:7",
															"nodeType": "YulAssignment",
															"src": "2698:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2731:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2731:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2742:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2727:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:7"
																		},
																		"nativeSrc": "2727:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2727:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2708:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2708:18:7"
																},
																"nativeSrc": "2708:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2708:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2698:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2492:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2537:9:7",
														"nodeType": "YulTypedName",
														"src": "2537:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2548:7:7",
														"nodeType": "YulTypedName",
														"src": "2548:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2560:6:7",
														"nodeType": "YulTypedName",
														"src": "2560:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2568:6:7",
														"nodeType": "YulTypedName",
														"src": "2568:6:7",
														"type": ""
													}
												],
												"src": "2492:260:7"
											},
											{
												"body": {
													"nativeSrc": "2844:259:7",
													"nodeType": "YulBlock",
													"src": "2844:259:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2890:16:7",
																"nodeType": "YulBlock",
																"src": "2890:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2899:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2899:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2902:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2902:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2892:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2892:6:7"
																			},
																			"nativeSrc": "2892:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:12:7"
																		},
																		"nativeSrc": "2892:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2892:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2865:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2865:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2874:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2874:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2861:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2861:3:7"
																		},
																		"nativeSrc": "2861:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2861:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2886:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2886:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2857:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2857:3:7"
																},
																"nativeSrc": "2857:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2857:32:7"
															},
															"nativeSrc": "2854:52:7",
															"nodeType": "YulIf",
															"src": "2854:52:7"
														},
														{
															"nativeSrc": "2915:14:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2915:14:7",
															"value": {
																"kind": "number",
																"nativeSrc": "2928:1:7",
																"nodeType": "YulLiteral",
																"src": "2928:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2919:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2919:5:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2938:32:7",
															"nodeType": "YulAssignment",
															"src": "2938:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2960:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2960:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2947:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2947:12:7"
																},
																"nativeSrc": "2947:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2947:23:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2938:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2938:5:7"
																}
															]
														},
														{
															"nativeSrc": "2979:15:7",
															"nodeType": "YulAssignment",
															"src": "2979:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2989:5:7",
																"nodeType": "YulIdentifier",
																"src": "2989:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2979:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2979:6:7"
																}
															]
														},
														{
															"nativeSrc": "3003:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3003:16:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3018:1:7",
																"nodeType": "YulLiteral",
																"src": "3018:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3007:7:7",
																	"nodeType": "YulTypedName",
																	"src": "3007:7:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3028:43:7",
															"nodeType": "YulAssignment",
															"src": "3028:43:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3056:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3067:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3067:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3052:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3052:3:7"
																		},
																		"nativeSrc": "3052:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3052:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3039:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3039:12:7"
																},
																"nativeSrc": "3039:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3039:32:7"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3028:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "3028:7:7"
																}
															]
														},
														{
															"nativeSrc": "3080:17:7",
															"nodeType": "YulAssignment",
															"src": "3080:17:7",
															"value": {
																"name": "value_1",
																"nativeSrc": "3090:7:7",
																"nodeType": "YulIdentifier",
																"src": "3090:7:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3080:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3080:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2757:346:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2802:9:7",
														"nodeType": "YulTypedName",
														"src": "2802:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2813:7:7",
														"nodeType": "YulTypedName",
														"src": "2813:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2825:6:7",
														"nodeType": "YulTypedName",
														"src": "2825:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2833:6:7",
														"nodeType": "YulTypedName",
														"src": "2833:6:7",
														"type": ""
													}
												],
												"src": "2757:346:7"
											},
											{
												"body": {
													"nativeSrc": "3163:325:7",
													"nodeType": "YulBlock",
													"src": "3163:325:7",
													"statements": [
														{
															"nativeSrc": "3173:22:7",
															"nodeType": "YulAssignment",
															"src": "3173:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3187:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3187:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3190:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3190:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3183:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3183:3:7"
																},
																"nativeSrc": "3183:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3183:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3173:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:7"
																}
															]
														},
														{
															"nativeSrc": "3204:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3204:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3234:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3234:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3240:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3240:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3230:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:7"
																},
																"nativeSrc": "3230:12:7",
																"nodeType": "YulFunctionCall",
																"src": "3230:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3208:18:7",
																	"nodeType": "YulTypedName",
																	"src": "3208:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3281:31:7",
																"nodeType": "YulBlock",
																"src": "3281:31:7",
																"statements": [
																	{
																		"nativeSrc": "3283:27:7",
																		"nodeType": "YulAssignment",
																		"src": "3283:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3297:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "3297:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3305:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3305:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3293:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "3293:3:7"
																			},
																			"nativeSrc": "3293:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3293:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3283:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3283:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3261:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "3261:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3254:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:7"
																},
																"nativeSrc": "3254:26:7",
																"nodeType": "YulFunctionCall",
																"src": "3254:26:7"
															},
															"nativeSrc": "3251:61:7",
															"nodeType": "YulIf",
															"src": "3251:61:7"
														},
														{
															"body": {
																"nativeSrc": "3371:111:7",
																"nodeType": "YulBlock",
																"src": "3371:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3392:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3392:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3399:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3399:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3404:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3404:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3395:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3395:3:7"
																					},
																					"nativeSrc": "3395:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3395:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3385:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3385:6:7"
																			},
																			"nativeSrc": "3385:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3385:31:7"
																		},
																		"nativeSrc": "3385:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3385:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3436:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3436:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3439:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3439:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3429:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3429:6:7"
																			},
																			"nativeSrc": "3429:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3429:15:7"
																		},
																		"nativeSrc": "3429:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3429:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3464:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3464:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3467:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3467:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3457:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3457:6:7"
																			},
																			"nativeSrc": "3457:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3457:15:7"
																		},
																		"nativeSrc": "3457:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3457:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3327:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "3327:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3350:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3350:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3358:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3358:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3347:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "3347:2:7"
																		},
																		"nativeSrc": "3347:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3347:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3324:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3324:2:7"
																},
																"nativeSrc": "3324:38:7",
																"nodeType": "YulFunctionCall",
																"src": "3324:38:7"
															},
															"nativeSrc": "3321:161:7",
															"nodeType": "YulIf",
															"src": "3321:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3108:380:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3143:4:7",
														"nodeType": "YulTypedName",
														"src": "3143:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3152:6:7",
														"nodeType": "YulTypedName",
														"src": "3152:6:7",
														"type": ""
													}
												],
												"src": "3108:380:7"
											},
											{
												"body": {
													"nativeSrc": "3525:95:7",
													"nodeType": "YulBlock",
													"src": "3525:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3542:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3542:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3549:3:7",
																				"nodeType": "YulLiteral",
																				"src": "3549:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3554:10:7",
																				"nodeType": "YulLiteral",
																				"src": "3554:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3545:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:7"
																		},
																		"nativeSrc": "3545:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3545:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3535:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3535:6:7"
																},
																"nativeSrc": "3535:31:7",
																"nodeType": "YulFunctionCall",
																"src": "3535:31:7"
															},
															"nativeSrc": "3535:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "3535:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3582:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3582:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3585:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3585:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3575:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3575:6:7"
																},
																"nativeSrc": "3575:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3575:15:7"
															},
															"nativeSrc": "3575:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3575:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3606:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3606:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3609:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3609:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3599:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3599:6:7"
																},
																"nativeSrc": "3599:15:7",
																"nodeType": "YulFunctionCall",
																"src": "3599:15:7"
															},
															"nativeSrc": "3599:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "3599:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3493:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "3493:127:7"
											},
											{
												"body": {
													"nativeSrc": "3674:79:7",
													"nodeType": "YulBlock",
													"src": "3674:79:7",
													"statements": [
														{
															"nativeSrc": "3684:17:7",
															"nodeType": "YulAssignment",
															"src": "3684:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3696:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3696:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3699:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3699:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3692:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3692:3:7"
																},
																"nativeSrc": "3692:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3692:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3684:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3684:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3725:22:7",
																"nodeType": "YulBlock",
																"src": "3725:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3727:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "3727:16:7"
																			},
																			"nativeSrc": "3727:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3727:18:7"
																		},
																		"nativeSrc": "3727:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3727:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3716:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3716:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3722:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3722:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3713:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3713:2:7"
																},
																"nativeSrc": "3713:11:7",
																"nodeType": "YulFunctionCall",
																"src": "3713:11:7"
															},
															"nativeSrc": "3710:37:7",
															"nodeType": "YulIf",
															"src": "3710:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3625:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3656:1:7",
														"nodeType": "YulTypedName",
														"src": "3656:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3659:1:7",
														"nodeType": "YulTypedName",
														"src": "3659:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3665:4:7",
														"nodeType": "YulTypedName",
														"src": "3665:4:7",
														"type": ""
													}
												],
												"src": "3625:128:7"
											},
											{
												"body": {
													"nativeSrc": "3804:171:7",
													"nodeType": "YulBlock",
													"src": "3804:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3835:111:7",
																"nodeType": "YulBlock",
																"src": "3835:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3856:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3856:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3863:3:7",
																							"nodeType": "YulLiteral",
																							"src": "3863:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3868:10:7",
																							"nodeType": "YulLiteral",
																							"src": "3868:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3859:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "3859:3:7"
																					},
																					"nativeSrc": "3859:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "3859:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3849:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3849:6:7"
																			},
																			"nativeSrc": "3849:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3849:31:7"
																		},
																		"nativeSrc": "3849:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3849:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3900:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3900:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3903:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3903:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3893:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:7"
																			},
																			"nativeSrc": "3893:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3893:15:7"
																		},
																		"nativeSrc": "3893:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3893:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3928:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3928:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3931:4:7",
																					"nodeType": "YulLiteral",
																					"src": "3931:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3921:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3921:6:7"
																			},
																			"nativeSrc": "3921:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3921:15:7"
																		},
																		"nativeSrc": "3921:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3921:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3824:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3824:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3817:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3817:6:7"
																},
																"nativeSrc": "3817:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3817:9:7"
															},
															"nativeSrc": "3814:132:7",
															"nodeType": "YulIf",
															"src": "3814:132:7"
														},
														{
															"nativeSrc": "3955:14:7",
															"nodeType": "YulAssignment",
															"src": "3955:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3964:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3964:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3967:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "3967:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3960:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3960:3:7"
																},
																"nativeSrc": "3960:9:7",
																"nodeType": "YulFunctionCall",
																"src": "3960:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3955:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "3955:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "3758:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3789:1:7",
														"nodeType": "YulTypedName",
														"src": "3789:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3792:1:7",
														"nodeType": "YulTypedName",
														"src": "3792:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "3798:1:7",
														"nodeType": "YulTypedName",
														"src": "3798:1:7",
														"type": ""
													}
												],
												"src": "3758:217:7"
											},
											{
												"body": {
													"nativeSrc": "4032:116:7",
													"nodeType": "YulBlock",
													"src": "4032:116:7",
													"statements": [
														{
															"nativeSrc": "4042:20:7",
															"nodeType": "YulAssignment",
															"src": "4042:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4057:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4057:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4060:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4060:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4053:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4053:3:7"
																},
																"nativeSrc": "4053:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4053:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4042:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4042:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4120:22:7",
																"nodeType": "YulBlock",
																"src": "4120:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4122:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4122:16:7"
																			},
																			"nativeSrc": "4122:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4122:18:7"
																		},
																		"nativeSrc": "4122:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4122:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4091:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "4091:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4084:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4084:6:7"
																				},
																				"nativeSrc": "4084:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4084:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4098:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "4098:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4105:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "4105:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4114:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "4114:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4101:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4101:3:7"
																						},
																						"nativeSrc": "4101:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4101:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4095:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4095:2:7"
																				},
																				"nativeSrc": "4095:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4095:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4081:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4081:2:7"
																		},
																		"nativeSrc": "4081:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4081:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4074:6:7"
																},
																"nativeSrc": "4074:45:7",
																"nodeType": "YulFunctionCall",
																"src": "4074:45:7"
															},
															"nativeSrc": "4071:71:7",
															"nodeType": "YulIf",
															"src": "4071:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3980:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4011:1:7",
														"nodeType": "YulTypedName",
														"src": "4011:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4014:1:7",
														"nodeType": "YulTypedName",
														"src": "4014:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4020:7:7",
														"nodeType": "YulTypedName",
														"src": "4020:7:7",
														"type": ""
													}
												],
												"src": "3980:168:7"
											},
											{
												"body": {
													"nativeSrc": "4327:223:7",
													"nodeType": "YulBlock",
													"src": "4327:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4344:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4344:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4355:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4337:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:7"
																},
																"nativeSrc": "4337:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4337:21:7"
															},
															"nativeSrc": "4337:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4337:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4378:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4378:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4389:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4389:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4374:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4374:3:7"
																		},
																		"nativeSrc": "4374:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4374:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4394:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4394:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4367:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4367:6:7"
																},
																"nativeSrc": "4367:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4367:30:7"
															},
															"nativeSrc": "4367:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4367:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4417:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4417:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4428:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4428:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4413:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4413:3:7"
																		},
																		"nativeSrc": "4413:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4413:18:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "4433:34:7",
																		"nodeType": "YulLiteral",
																		"src": "4433:34:7",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4406:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4406:6:7"
																},
																"nativeSrc": "4406:62:7",
																"nodeType": "YulFunctionCall",
																"src": "4406:62:7"
															},
															"nativeSrc": "4406:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "4406:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4488:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4488:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4499:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4499:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4484:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4484:3:7"
																		},
																		"nativeSrc": "4484:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4484:18:7"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "4504:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4504:3:7",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4477:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4477:6:7"
																},
																"nativeSrc": "4477:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4477:31:7"
															},
															"nativeSrc": "4477:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4477:31:7"
														},
														{
															"nativeSrc": "4517:27:7",
															"nodeType": "YulAssignment",
															"src": "4517:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4529:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4529:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4540:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4540:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4525:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:7"
																},
																"nativeSrc": "4525:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4525:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4517:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4517:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4153:397:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4304:9:7",
														"nodeType": "YulTypedName",
														"src": "4304:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4318:4:7",
														"nodeType": "YulTypedName",
														"src": "4318:4:7",
														"type": ""
													}
												],
												"src": "4153:397:7"
											},
											{
												"body": {
													"nativeSrc": "4729:171:7",
													"nodeType": "YulBlock",
													"src": "4729:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4746:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4746:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4757:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4757:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4739:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4739:6:7"
																},
																"nativeSrc": "4739:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4739:21:7"
															},
															"nativeSrc": "4739:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4739:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4780:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4780:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4791:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4791:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4776:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4776:3:7"
																		},
																		"nativeSrc": "4776:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4776:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4796:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4796:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4769:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4769:6:7"
																},
																"nativeSrc": "4769:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4769:30:7"
															},
															"nativeSrc": "4769:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4769:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4819:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4830:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4830:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4815:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4815:3:7"
																		},
																		"nativeSrc": "4815:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4815:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e63652e",
																		"kind": "string",
																		"nativeSrc": "4835:23:7",
																		"nodeType": "YulLiteral",
																		"src": "4835:23:7",
																		"type": "",
																		"value": "Insufficient balance."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4808:6:7"
																},
																"nativeSrc": "4808:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4808:51:7"
															},
															"nativeSrc": "4808:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4808:51:7"
														},
														{
															"nativeSrc": "4868:26:7",
															"nodeType": "YulAssignment",
															"src": "4868:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4880:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4880:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4891:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4891:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4876:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4876:3:7"
																},
																"nativeSrc": "4876:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4876:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4868:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4868:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4555:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4706:9:7",
														"nodeType": "YulTypedName",
														"src": "4706:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4720:4:7",
														"nodeType": "YulTypedName",
														"src": "4720:4:7",
														"type": ""
													}
												],
												"src": "4555:345:7"
											},
											{
												"body": {
													"nativeSrc": "4953:77:7",
													"nodeType": "YulBlock",
													"src": "4953:77:7",
													"statements": [
														{
															"nativeSrc": "4963:16:7",
															"nodeType": "YulAssignment",
															"src": "4963:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4974:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4974:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4977:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4977:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4970:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4970:3:7"
																},
																"nativeSrc": "4970:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4970:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4963:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4963:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5002:22:7",
																"nodeType": "YulBlock",
																"src": "5002:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5004:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5004:16:7"
																			},
																			"nativeSrc": "5004:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5004:18:7"
																		},
																		"nativeSrc": "5004:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5004:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4994:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4994:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4997:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4997:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4991:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4991:2:7"
																},
																"nativeSrc": "4991:10:7",
																"nodeType": "YulFunctionCall",
																"src": "4991:10:7"
															},
															"nativeSrc": "4988:36:7",
															"nodeType": "YulIf",
															"src": "4988:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4905:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4936:1:7",
														"nodeType": "YulTypedName",
														"src": "4936:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4939:1:7",
														"nodeType": "YulTypedName",
														"src": "4939:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4945:3:7",
														"nodeType": "YulTypedName",
														"src": "4945:3:7",
														"type": ""
													}
												],
												"src": "4905:125:7"
											},
											{
												"body": {
													"nativeSrc": "5209:173:7",
													"nodeType": "YulBlock",
													"src": "5209:173:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5226:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5226:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5237:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5237:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5219:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5219:6:7"
																},
																"nativeSrc": "5219:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5219:21:7"
															},
															"nativeSrc": "5219:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5219:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5260:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5260:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5271:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5271:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5256:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5256:3:7"
																		},
																		"nativeSrc": "5256:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5256:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5276:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5276:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5249:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5249:6:7"
																},
																"nativeSrc": "5249:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5249:30:7"
															},
															"nativeSrc": "5249:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5249:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5299:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5299:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5310:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5310:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5295:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5295:3:7"
																		},
																		"nativeSrc": "5295:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5295:18:7"
																	},
																	{
																		"hexValue": "50726573616c65206e6f74207374617274656420796574",
																		"kind": "string",
																		"nativeSrc": "5315:25:7",
																		"nodeType": "YulLiteral",
																		"src": "5315:25:7",
																		"type": "",
																		"value": "Presale not started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5288:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5288:6:7"
																},
																"nativeSrc": "5288:53:7",
																"nodeType": "YulFunctionCall",
																"src": "5288:53:7"
															},
															"nativeSrc": "5288:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "5288:53:7"
														},
														{
															"nativeSrc": "5350:26:7",
															"nodeType": "YulAssignment",
															"src": "5350:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5362:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5362:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5373:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5373:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5358:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5358:3:7"
																},
																"nativeSrc": "5358:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5358:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5350:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5350:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5035:347:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5186:9:7",
														"nodeType": "YulTypedName",
														"src": "5186:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5200:4:7",
														"nodeType": "YulTypedName",
														"src": "5200:4:7",
														"type": ""
													}
												],
												"src": "5035:347:7"
											},
											{
												"body": {
													"nativeSrc": "5561:170:7",
													"nodeType": "YulBlock",
													"src": "5561:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5578:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5578:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5589:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5571:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5571:6:7"
																},
																"nativeSrc": "5571:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5571:21:7"
															},
															"nativeSrc": "5571:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5571:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5612:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5612:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5623:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5623:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5608:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5608:3:7"
																		},
																		"nativeSrc": "5608:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5608:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5628:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5628:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5601:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5601:6:7"
																},
																"nativeSrc": "5601:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5601:30:7"
															},
															"nativeSrc": "5601:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5601:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5651:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5651:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5662:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5662:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5647:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5647:3:7"
																		},
																		"nativeSrc": "5647:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5647:18:7"
																	},
																	{
																		"hexValue": "4e6f207265776172647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "5667:22:7",
																		"nodeType": "YulLiteral",
																		"src": "5667:22:7",
																		"type": "",
																		"value": "No rewards available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5640:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5640:6:7"
																},
																"nativeSrc": "5640:50:7",
																"nodeType": "YulFunctionCall",
																"src": "5640:50:7"
															},
															"nativeSrc": "5640:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "5640:50:7"
														},
														{
															"nativeSrc": "5699:26:7",
															"nodeType": "YulAssignment",
															"src": "5699:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5711:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5711:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5722:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5722:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5707:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5707:3:7"
																},
																"nativeSrc": "5707:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5707:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5699:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5699:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5387:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5538:9:7",
														"nodeType": "YulTypedName",
														"src": "5538:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5552:4:7",
														"nodeType": "YulTypedName",
														"src": "5552:4:7",
														"type": ""
													}
												],
												"src": "5387:344:7"
											},
											{
												"body": {
													"nativeSrc": "5805:306:7",
													"nodeType": "YulBlock",
													"src": "5805:306:7",
													"statements": [
														{
															"nativeSrc": "5815:10:7",
															"nodeType": "YulAssignment",
															"src": "5815:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5824:1:7",
																"nodeType": "YulLiteral",
																"src": "5824:1:7",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5815:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "5815:5:7"
																}
															]
														},
														{
															"nativeSrc": "5834:13:7",
															"nodeType": "YulAssignment",
															"src": "5834:13:7",
															"value": {
																"name": "_base",
																"nativeSrc": "5842:5:7",
																"nodeType": "YulIdentifier",
																"src": "5842:5:7"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5834:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5834:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5892:213:7",
																"nodeType": "YulBlock",
																"src": "5892:213:7",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5934:22:7",
																			"nodeType": "YulBlock",
																			"src": "5934:22:7",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5936:16:7",
																							"nodeType": "YulIdentifier",
																							"src": "5936:16:7"
																						},
																						"nativeSrc": "5936:18:7",
																						"nodeType": "YulFunctionCall",
																						"src": "5936:18:7"
																					},
																					"nativeSrc": "5936:18:7",
																					"nodeType": "YulExpressionStatement",
																					"src": "5936:18:7"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5912:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "5912:4:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5922:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "5922:3:7"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5927:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5927:4:7"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5918:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5918:3:7"
																					},
																					"nativeSrc": "5918:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5918:14:7"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5909:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "5909:2:7"
																			},
																			"nativeSrc": "5909:24:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5909:24:7"
																		},
																		"nativeSrc": "5906:50:7",
																		"nodeType": "YulIf",
																		"src": "5906:50:7"
																	},
																	{
																		"body": {
																			"nativeSrc": "5989:29:7",
																			"nodeType": "YulBlock",
																			"src": "5989:29:7",
																			"statements": [
																				{
																					"nativeSrc": "5991:25:7",
																					"nodeType": "YulAssignment",
																					"src": "5991:25:7",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6004:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "6004:5:7"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6011:4:7",
																								"nodeType": "YulIdentifier",
																								"src": "6011:4:7"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6000:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6000:3:7"
																						},
																						"nativeSrc": "6000:16:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6000:16:7"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "5991:5:7",
																							"nodeType": "YulIdentifier",
																							"src": "5991:5:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5976:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "5976:8:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5986:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5986:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5972:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5972:3:7"
																			},
																			"nativeSrc": "5972:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5972:16:7"
																		},
																		"nativeSrc": "5969:49:7",
																		"nodeType": "YulIf",
																		"src": "5969:49:7"
																	},
																	{
																		"nativeSrc": "6031:23:7",
																		"nodeType": "YulAssignment",
																		"src": "6031:23:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6043:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6043:4:7"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6049:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6049:4:7"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6039:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6039:3:7"
																			},
																			"nativeSrc": "6039:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6039:15:7"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6031:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6031:4:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6067:28:7",
																		"nodeType": "YulAssignment",
																		"src": "6067:28:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6083:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6083:1:7",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "6086:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6086:8:7"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "6079:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6079:3:7"
																			},
																			"nativeSrc": "6079:16:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6079:16:7"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6067:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "6067:8:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5867:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "5867:8:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5877:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5877:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5864:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5864:2:7"
																},
																"nativeSrc": "5864:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5864:15:7"
															},
															"nativeSrc": "5856:249:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5880:3:7",
																"nodeType": "YulBlock",
																"src": "5880:3:7",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5860:3:7",
																"nodeType": "YulBlock",
																"src": "5860:3:7",
																"statements": []
															},
															"src": "5856:249:7"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5736:375:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "5764:5:7",
														"nodeType": "YulTypedName",
														"src": "5764:5:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5771:8:7",
														"nodeType": "YulTypedName",
														"src": "5771:8:7",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5781:3:7",
														"nodeType": "YulTypedName",
														"src": "5781:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5789:5:7",
														"nodeType": "YulTypedName",
														"src": "5789:5:7",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5796:4:7",
														"nodeType": "YulTypedName",
														"src": "5796:4:7",
														"type": ""
													}
												],
												"src": "5736:375:7"
											},
											{
												"body": {
													"nativeSrc": "6175:843:7",
													"nodeType": "YulBlock",
													"src": "6175:843:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6213:52:7",
																"nodeType": "YulBlock",
																"src": "6213:52:7",
																"statements": [
																	{
																		"nativeSrc": "6227:10:7",
																		"nodeType": "YulAssignment",
																		"src": "6227:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6236:1:7",
																			"nodeType": "YulLiteral",
																			"src": "6236:1:7",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6227:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6227:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6250:5:7",
																		"nodeType": "YulLeave",
																		"src": "6250:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6195:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "6195:8:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6188:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6188:6:7"
																},
																"nativeSrc": "6188:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6188:16:7"
															},
															"nativeSrc": "6185:80:7",
															"nodeType": "YulIf",
															"src": "6185:80:7"
														},
														{
															"body": {
																"nativeSrc": "6298:52:7",
																"nodeType": "YulBlock",
																"src": "6298:52:7",
																"statements": [
																	{
																		"nativeSrc": "6312:10:7",
																		"nodeType": "YulAssignment",
																		"src": "6312:10:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6321:1:7",
																			"nodeType": "YulLiteral",
																			"src": "6321:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6312:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6312:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6335:5:7",
																		"nodeType": "YulLeave",
																		"src": "6335:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6284:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6284:4:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6277:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6277:6:7"
																},
																"nativeSrc": "6277:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6277:12:7"
															},
															"nativeSrc": "6274:76:7",
															"nodeType": "YulIf",
															"src": "6274:76:7"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6386:52:7",
																		"nodeType": "YulBlock",
																		"src": "6386:52:7",
																		"statements": [
																			{
																				"nativeSrc": "6400:10:7",
																				"nodeType": "YulAssignment",
																				"src": "6400:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6409:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6409:1:7",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6400:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6400:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6423:5:7",
																				"nodeType": "YulLeave",
																				"src": "6423:5:7"
																			}
																		]
																	},
																	"nativeSrc": "6379:59:7",
																	"nodeType": "YulCase",
																	"src": "6379:59:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6384:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6384:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6454:167:7",
																		"nodeType": "YulBlock",
																		"src": "6454:167:7",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6489:22:7",
																					"nodeType": "YulBlock",
																					"src": "6489:22:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6491:16:7",
																									"nodeType": "YulIdentifier",
																									"src": "6491:16:7"
																								},
																								"nativeSrc": "6491:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6491:18:7"
																							},
																							"nativeSrc": "6491:18:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6491:18:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6474:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "6474:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6484:3:7",
																							"nodeType": "YulLiteral",
																							"src": "6484:3:7",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6471:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6471:2:7"
																					},
																					"nativeSrc": "6471:17:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6471:17:7"
																				},
																				"nativeSrc": "6468:43:7",
																				"nodeType": "YulIf",
																				"src": "6468:43:7"
																			},
																			{
																				"nativeSrc": "6524:25:7",
																				"nodeType": "YulAssignment",
																				"src": "6524:25:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6537:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "6537:8:7"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6547:1:7",
																							"nodeType": "YulLiteral",
																							"src": "6547:1:7",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6533:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6533:3:7"
																					},
																					"nativeSrc": "6533:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6533:16:7"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6524:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "6524:5:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6562:11:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6562:11:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6572:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6572:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "6566:2:7",
																						"nodeType": "YulTypedName",
																						"src": "6566:2:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6586:7:7",
																				"nodeType": "YulAssignment",
																				"src": "6586:7:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6592:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6592:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "6586:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6586:2:7"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6606:5:7",
																				"nodeType": "YulLeave",
																				"src": "6606:5:7"
																			}
																		]
																	},
																	"nativeSrc": "6447:174:7",
																	"nodeType": "YulCase",
																	"src": "6447:174:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6452:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6452:1:7",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6366:4:7",
																"nodeType": "YulIdentifier",
																"src": "6366:4:7"
															},
															"nativeSrc": "6359:262:7",
															"nodeType": "YulSwitch",
															"src": "6359:262:7"
														},
														{
															"body": {
																"nativeSrc": "6719:114:7",
																"nodeType": "YulBlock",
																"src": "6719:114:7",
																"statements": [
																	{
																		"nativeSrc": "6733:28:7",
																		"nodeType": "YulAssignment",
																		"src": "6733:28:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6746:4:7",
																					"nodeType": "YulIdentifier",
																					"src": "6746:4:7"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "6752:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "6752:8:7"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "6742:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6742:3:7"
																			},
																			"nativeSrc": "6742:19:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6742:19:7"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6733:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6733:5:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6774:11:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6774:11:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6784:1:7",
																			"nodeType": "YulLiteral",
																			"src": "6784:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "6778:2:7",
																				"nodeType": "YulTypedName",
																				"src": "6778:2:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6798:7:7",
																		"nodeType": "YulAssignment",
																		"src": "6798:7:7",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6804:1:7",
																			"nodeType": "YulLiteral",
																			"src": "6804:1:7",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "6798:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6798:2:7"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6818:5:7",
																		"nodeType": "YulLeave",
																		"src": "6818:5:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6643:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6643:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6649:2:7",
																						"nodeType": "YulLiteral",
																						"src": "6649:2:7",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6640:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "6640:2:7"
																				},
																				"nativeSrc": "6640:12:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6640:12:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6657:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "6657:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6667:2:7",
																						"nodeType": "YulLiteral",
																						"src": "6667:2:7",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6654:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "6654:2:7"
																				},
																				"nativeSrc": "6654:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6654:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6636:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6636:3:7"
																		},
																		"nativeSrc": "6636:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6636:35:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6680:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "6680:4:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6686:3:7",
																						"nodeType": "YulLiteral",
																						"src": "6686:3:7",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6677:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "6677:2:7"
																				},
																				"nativeSrc": "6677:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6677:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6695:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "6695:8:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6705:2:7",
																						"nodeType": "YulLiteral",
																						"src": "6705:2:7",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6692:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "6692:2:7"
																				},
																				"nativeSrc": "6692:16:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6692:16:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6673:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6673:3:7"
																		},
																		"nativeSrc": "6673:36:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6673:36:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6633:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6633:2:7"
																},
																"nativeSrc": "6633:77:7",
																"nodeType": "YulFunctionCall",
																"src": "6633:77:7"
															},
															"nativeSrc": "6630:203:7",
															"nodeType": "YulIf",
															"src": "6630:203:7"
														},
														{
															"nativeSrc": "6842:65:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6842:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6884:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6884:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "6890:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "6890:8:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6904:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6904:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6900:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6900:3:7"
																		},
																		"nativeSrc": "6900:6:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6900:6:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "6865:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6865:18:7"
																},
																"nativeSrc": "6865:42:7",
																"nodeType": "YulFunctionCall",
																"src": "6865:42:7"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "6846:7:7",
																	"nodeType": "YulTypedName",
																	"src": "6846:7:7",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "6855:6:7",
																	"nodeType": "YulTypedName",
																	"src": "6855:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6952:22:7",
																"nodeType": "YulBlock",
																"src": "6952:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6954:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6954:16:7"
																			},
																			"nativeSrc": "6954:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6954:18:7"
																		},
																		"nativeSrc": "6954:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6954:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6922:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6922:7:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6939:1:7",
																						"nodeType": "YulLiteral",
																						"src": "6939:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6935:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6935:3:7"
																				},
																				"nativeSrc": "6935:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6935:6:7"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "6943:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6943:6:7"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6931:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6931:3:7"
																		},
																		"nativeSrc": "6931:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6931:19:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6919:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6919:2:7"
																},
																"nativeSrc": "6919:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6919:32:7"
															},
															"nativeSrc": "6916:58:7",
															"nodeType": "YulIf",
															"src": "6916:58:7"
														},
														{
															"nativeSrc": "6983:29:7",
															"nodeType": "YulAssignment",
															"src": "6983:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "6996:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "6996:7:7"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "7005:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7005:6:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6992:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6992:3:7"
																},
																"nativeSrc": "6992:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6992:20:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "6983:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6983:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6116:902:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6146:4:7",
														"nodeType": "YulTypedName",
														"src": "6146:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6152:8:7",
														"nodeType": "YulTypedName",
														"src": "6152:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6165:5:7",
														"nodeType": "YulTypedName",
														"src": "6165:5:7",
														"type": ""
													}
												],
												"src": "6116:902:7"
											},
											{
												"body": {
													"nativeSrc": "7091:72:7",
													"nodeType": "YulBlock",
													"src": "7091:72:7",
													"statements": [
														{
															"nativeSrc": "7101:56:7",
															"nodeType": "YulAssignment",
															"src": "7101:56:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7131:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7131:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7141:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "7141:8:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7151:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7151:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7137:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7137:3:7"
																		},
																		"nativeSrc": "7137:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7137:19:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7110:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "7110:20:7"
																},
																"nativeSrc": "7110:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7110:47:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7101:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7101:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "7023:140:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7062:4:7",
														"nodeType": "YulTypedName",
														"src": "7062:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7068:8:7",
														"nodeType": "YulTypedName",
														"src": "7068:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7081:5:7",
														"nodeType": "YulTypedName",
														"src": "7081:5:7",
														"type": ""
													}
												],
												"src": "7023:140:7"
											},
											{
												"body": {
													"nativeSrc": "7342:169:7",
													"nodeType": "YulBlock",
													"src": "7342:169:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7359:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7359:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7370:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7370:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7352:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7352:6:7"
																},
																"nativeSrc": "7352:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7352:21:7"
															},
															"nativeSrc": "7352:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7352:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7393:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7393:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7404:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7404:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7389:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7389:3:7"
																		},
																		"nativeSrc": "7389:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7389:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7409:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7409:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7382:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7382:6:7"
																},
																"nativeSrc": "7382:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7382:30:7"
															},
															"nativeSrc": "7382:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7382:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7432:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7432:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7443:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7443:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7428:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7428:3:7"
																		},
																		"nativeSrc": "7428:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7428:18:7"
																	},
																	{
																		"hexValue": "416c72656164792077686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "7448:21:7",
																		"nodeType": "YulLiteral",
																		"src": "7448:21:7",
																		"type": "",
																		"value": "Already whitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7421:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7421:6:7"
																},
																"nativeSrc": "7421:49:7",
																"nodeType": "YulFunctionCall",
																"src": "7421:49:7"
															},
															"nativeSrc": "7421:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "7421:49:7"
														},
														{
															"nativeSrc": "7479:26:7",
															"nodeType": "YulAssignment",
															"src": "7479:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7491:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7491:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7502:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7502:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7487:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7487:3:7"
																},
																"nativeSrc": "7487:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7487:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7479:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7479:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7168:343:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7319:9:7",
														"nodeType": "YulTypedName",
														"src": "7319:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7333:4:7",
														"nodeType": "YulTypedName",
														"src": "7333:4:7",
														"type": ""
													}
												],
												"src": "7168:343:7"
											},
											{
												"body": {
													"nativeSrc": "7690:171:7",
													"nodeType": "YulBlock",
													"src": "7690:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7707:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7707:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7718:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7718:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7700:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7700:6:7"
																},
																"nativeSrc": "7700:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7700:21:7"
															},
															"nativeSrc": "7700:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7700:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7741:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7741:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7752:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7752:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7737:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7737:3:7"
																		},
																		"nativeSrc": "7737:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7737:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7757:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7757:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7730:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7730:6:7"
																},
																"nativeSrc": "7730:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7730:30:7"
															},
															"nativeSrc": "7730:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "7730:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7780:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7780:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7791:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7791:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7776:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7776:3:7"
																		},
																		"nativeSrc": "7776:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7776:18:7"
																	},
																	{
																		"hexValue": "43616e6e6f7420726566657220796f757273656c66",
																		"kind": "string",
																		"nativeSrc": "7796:23:7",
																		"nodeType": "YulLiteral",
																		"src": "7796:23:7",
																		"type": "",
																		"value": "Cannot refer yourself"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7769:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:7"
																},
																"nativeSrc": "7769:51:7",
																"nodeType": "YulFunctionCall",
																"src": "7769:51:7"
															},
															"nativeSrc": "7769:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "7769:51:7"
														},
														{
															"nativeSrc": "7829:26:7",
															"nodeType": "YulAssignment",
															"src": "7829:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7841:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7841:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7852:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7852:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7837:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7837:3:7"
																},
																"nativeSrc": "7837:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7837:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7829:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7829:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7516:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7667:9:7",
														"nodeType": "YulTypedName",
														"src": "7667:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7681:4:7",
														"nodeType": "YulTypedName",
														"src": "7681:4:7",
														"type": ""
													}
												],
												"src": "7516:345:7"
											},
											{
												"body": {
													"nativeSrc": "8040:167:7",
													"nodeType": "YulBlock",
													"src": "8040:167:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8057:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8057:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8068:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8068:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8050:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8050:6:7"
																},
																"nativeSrc": "8050:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8050:21:7"
															},
															"nativeSrc": "8050:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8050:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8091:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8091:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8102:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8102:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8087:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8087:3:7"
																		},
																		"nativeSrc": "8087:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8087:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8107:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8107:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8080:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8080:6:7"
																},
																"nativeSrc": "8080:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8080:30:7"
															},
															"nativeSrc": "8080:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8080:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8130:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8130:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8141:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8141:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8126:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8126:3:7"
																		},
																		"nativeSrc": "8126:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8126:18:7"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73207374616b65642e",
																		"kind": "string",
																		"nativeSrc": "8146:19:7",
																		"nodeType": "YulLiteral",
																		"src": "8146:19:7",
																		"type": "",
																		"value": "No tokens staked."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8119:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8119:6:7"
																},
																"nativeSrc": "8119:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8119:47:7"
															},
															"nativeSrc": "8119:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8119:47:7"
														},
														{
															"nativeSrc": "8175:26:7",
															"nodeType": "YulAssignment",
															"src": "8175:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8187:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8187:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8198:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8198:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8183:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8183:3:7"
																},
																"nativeSrc": "8183:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8183:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8175:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8175:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7866:341:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8017:9:7",
														"nodeType": "YulTypedName",
														"src": "8017:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8031:4:7",
														"nodeType": "YulTypedName",
														"src": "8031:4:7",
														"type": ""
													}
												],
												"src": "7866:341:7"
											},
											{
												"body": {
													"nativeSrc": "8386:177:7",
													"nodeType": "YulBlock",
													"src": "8386:177:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8403:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8403:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8414:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8414:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8396:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8396:6:7"
																},
																"nativeSrc": "8396:21:7",
																"nodeType": "YulFunctionCall",
																"src": "8396:21:7"
															},
															"nativeSrc": "8396:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "8396:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8437:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8437:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8448:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8448:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8433:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8433:3:7"
																		},
																		"nativeSrc": "8433:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8433:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8453:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8453:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8426:6:7"
																},
																"nativeSrc": "8426:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8426:30:7"
															},
															"nativeSrc": "8426:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8426:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8476:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8476:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8487:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8487:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8472:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8472:3:7"
																		},
																		"nativeSrc": "8472:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8472:18:7"
																	},
																	{
																		"hexValue": "556e7374616b65206f6e6c792061667465722034207765656b732e",
																		"kind": "string",
																		"nativeSrc": "8492:29:7",
																		"nodeType": "YulLiteral",
																		"src": "8492:29:7",
																		"type": "",
																		"value": "Unstake only after 4 weeks."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8465:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8465:6:7"
																},
																"nativeSrc": "8465:57:7",
																"nodeType": "YulFunctionCall",
																"src": "8465:57:7"
															},
															"nativeSrc": "8465:57:7",
															"nodeType": "YulExpressionStatement",
															"src": "8465:57:7"
														},
														{
															"nativeSrc": "8531:26:7",
															"nodeType": "YulAssignment",
															"src": "8531:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8543:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8543:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8554:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8554:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8539:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8539:3:7"
																},
																"nativeSrc": "8539:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8539:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8531:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8531:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8212:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8363:9:7",
														"nodeType": "YulTypedName",
														"src": "8363:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8377:4:7",
														"nodeType": "YulTypedName",
														"src": "8377:4:7",
														"type": ""
													}
												],
												"src": "8212:351:7"
											},
											{
												"body": {
													"nativeSrc": "8697:119:7",
													"nodeType": "YulBlock",
													"src": "8697:119:7",
													"statements": [
														{
															"nativeSrc": "8707:26:7",
															"nodeType": "YulAssignment",
															"src": "8707:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8719:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8719:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8730:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8730:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8715:3:7"
																},
																"nativeSrc": "8715:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8715:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8707:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8707:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8749:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8749:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8760:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8760:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8742:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8742:6:7"
																},
																"nativeSrc": "8742:25:7",
																"nodeType": "YulFunctionCall",
																"src": "8742:25:7"
															},
															"nativeSrc": "8742:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "8742:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8787:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8787:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8798:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8798:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8783:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8783:3:7"
																		},
																		"nativeSrc": "8783:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8783:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8803:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8803:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8776:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8776:6:7"
																},
																"nativeSrc": "8776:34:7",
																"nodeType": "YulFunctionCall",
																"src": "8776:34:7"
															},
															"nativeSrc": "8776:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "8776:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8568:248:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8658:9:7",
														"nodeType": "YulTypedName",
														"src": "8658:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8669:6:7",
														"nodeType": "YulTypedName",
														"src": "8669:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8677:6:7",
														"nodeType": "YulTypedName",
														"src": "8677:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8688:4:7",
														"nodeType": "YulTypedName",
														"src": "8688:4:7",
														"type": ""
													}
												],
												"src": "8568:248:7"
											},
											{
												"body": {
													"nativeSrc": "8995:166:7",
													"nodeType": "YulBlock",
													"src": "8995:166:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9012:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9012:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9023:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9023:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9005:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9005:6:7"
																},
																"nativeSrc": "9005:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9005:21:7"
															},
															"nativeSrc": "9005:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9005:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9046:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9046:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9057:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9057:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9042:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:7"
																		},
																		"nativeSrc": "9042:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9042:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9062:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9062:2:7",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9035:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9035:6:7"
																},
																"nativeSrc": "9035:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9035:30:7"
															},
															"nativeSrc": "9035:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9035:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9085:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9085:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9096:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9096:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9081:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9081:3:7"
																		},
																		"nativeSrc": "9081:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9081:18:7"
																	},
																	{
																		"hexValue": "53616c65206e6f74206163746976652e",
																		"kind": "string",
																		"nativeSrc": "9101:18:7",
																		"nodeType": "YulLiteral",
																		"src": "9101:18:7",
																		"type": "",
																		"value": "Sale not active."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9074:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9074:6:7"
																},
																"nativeSrc": "9074:46:7",
																"nodeType": "YulFunctionCall",
																"src": "9074:46:7"
															},
															"nativeSrc": "9074:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "9074:46:7"
														},
														{
															"nativeSrc": "9129:26:7",
															"nodeType": "YulAssignment",
															"src": "9129:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9141:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9141:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9152:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9152:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9137:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9137:3:7"
																},
																"nativeSrc": "9137:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9137:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9129:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9129:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8821:340:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8972:9:7",
														"nodeType": "YulTypedName",
														"src": "8972:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8986:4:7",
														"nodeType": "YulTypedName",
														"src": "8986:4:7",
														"type": ""
													}
												],
												"src": "8821:340:7"
											},
											{
												"body": {
													"nativeSrc": "9340:178:7",
													"nodeType": "YulBlock",
													"src": "9340:178:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9357:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9357:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9368:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9368:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9350:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9350:6:7"
																},
																"nativeSrc": "9350:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9350:21:7"
															},
															"nativeSrc": "9350:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9350:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9391:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9391:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9402:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9402:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9387:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9387:3:7"
																		},
																		"nativeSrc": "9387:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9387:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9407:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9407:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9380:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9380:6:7"
																},
																"nativeSrc": "9380:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9380:30:7"
															},
															"nativeSrc": "9380:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9380:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9430:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9430:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9441:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9441:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9426:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9426:3:7"
																		},
																		"nativeSrc": "9426:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9426:18:7"
																	},
																	{
																		"hexValue": "4d7573742073656e642045544820746f2062757920746f6b656e732e",
																		"kind": "string",
																		"nativeSrc": "9446:30:7",
																		"nodeType": "YulLiteral",
																		"src": "9446:30:7",
																		"type": "",
																		"value": "Must send ETH to buy tokens."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9419:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9419:6:7"
																},
																"nativeSrc": "9419:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9419:58:7"
															},
															"nativeSrc": "9419:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9419:58:7"
														},
														{
															"nativeSrc": "9486:26:7",
															"nodeType": "YulAssignment",
															"src": "9486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9509:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9494:3:7"
																},
																"nativeSrc": "9494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9486:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9166:352:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9317:9:7",
														"nodeType": "YulTypedName",
														"src": "9317:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9331:4:7",
														"nodeType": "YulTypedName",
														"src": "9331:4:7",
														"type": ""
													}
												],
												"src": "9166:352:7"
											},
											{
												"body": {
													"nativeSrc": "9593:61:7",
													"nodeType": "YulBlock",
													"src": "9593:61:7",
													"statements": [
														{
															"nativeSrc": "9603:45:7",
															"nodeType": "YulAssignment",
															"src": "9603:45:7",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9633:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9633:4:7"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9639:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "9639:8:7"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9612:20:7",
																	"nodeType": "YulIdentifier",
																	"src": "9612:20:7"
																},
																"nativeSrc": "9612:36:7",
																"nodeType": "YulFunctionCall",
																"src": "9612:36:7"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9603:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9603:5:7"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "9523:131:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9564:4:7",
														"nodeType": "YulTypedName",
														"src": "9564:4:7",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9570:8:7",
														"nodeType": "YulTypedName",
														"src": "9570:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9583:5:7",
														"nodeType": "YulTypedName",
														"src": "9583:5:7",
														"type": ""
													}
												],
												"src": "9523:131:7"
											},
											{
												"body": {
													"nativeSrc": "9833:178:7",
													"nodeType": "YulBlock",
													"src": "9833:178:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9850:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9850:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9861:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9861:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9843:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9843:6:7"
																},
																"nativeSrc": "9843:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9843:21:7"
															},
															"nativeSrc": "9843:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9843:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9884:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9884:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9895:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9895:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9880:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9880:3:7"
																		},
																		"nativeSrc": "9880:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9880:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9900:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9900:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9873:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9873:6:7"
																},
																"nativeSrc": "9873:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9873:30:7"
															},
															"nativeSrc": "9873:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "9873:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9923:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9923:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9934:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9934:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9919:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9919:3:7"
																		},
																		"nativeSrc": "9919:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9919:18:7"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e",
																		"kind": "string",
																		"nativeSrc": "9939:30:7",
																		"nodeType": "YulLiteral",
																		"src": "9939:30:7",
																		"type": "",
																		"value": "Not enough tokens available."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9912:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9912:6:7"
																},
																"nativeSrc": "9912:58:7",
																"nodeType": "YulFunctionCall",
																"src": "9912:58:7"
															},
															"nativeSrc": "9912:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "9912:58:7"
														},
														{
															"nativeSrc": "9979:26:7",
															"nodeType": "YulAssignment",
															"src": "9979:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9991:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9991:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10002:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10002:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9987:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9987:3:7"
																},
																"nativeSrc": "9987:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9987:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9979:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9979:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9659:352:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9810:9:7",
														"nodeType": "YulTypedName",
														"src": "9810:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9824:4:7",
														"nodeType": "YulTypedName",
														"src": "9824:4:7",
														"type": ""
													}
												],
												"src": "9659:352:7"
											},
											{
												"body": {
													"nativeSrc": "10190:174:7",
													"nodeType": "YulBlock",
													"src": "10190:174:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10207:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10207:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10218:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10218:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10200:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10200:6:7"
																},
																"nativeSrc": "10200:21:7",
																"nodeType": "YulFunctionCall",
																"src": "10200:21:7"
															},
															"nativeSrc": "10200:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "10200:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10241:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10241:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10252:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10252:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10237:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10237:3:7"
																		},
																		"nativeSrc": "10237:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10237:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10257:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10257:2:7",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10230:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10230:6:7"
																},
																"nativeSrc": "10230:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10230:30:7"
															},
															"nativeSrc": "10230:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10230:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10280:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10280:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10291:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10291:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10276:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10276:3:7"
																		},
																		"nativeSrc": "10276:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10276:18:7"
																	},
																	{
																		"hexValue": "5072652d73616c65206e6f74207374617274656420796574",
																		"kind": "string",
																		"nativeSrc": "10296:26:7",
																		"nodeType": "YulLiteral",
																		"src": "10296:26:7",
																		"type": "",
																		"value": "Pre-sale not started yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10269:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10269:6:7"
																},
																"nativeSrc": "10269:54:7",
																"nodeType": "YulFunctionCall",
																"src": "10269:54:7"
															},
															"nativeSrc": "10269:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "10269:54:7"
														},
														{
															"nativeSrc": "10332:26:7",
															"nodeType": "YulAssignment",
															"src": "10332:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10344:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10344:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10355:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10355:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10340:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10340:3:7"
																},
																"nativeSrc": "10340:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10340:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10332:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10332:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10016:348:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10167:9:7",
														"nodeType": "YulTypedName",
														"src": "10167:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10181:4:7",
														"nodeType": "YulTypedName",
														"src": "10181:4:7",
														"type": ""
													}
												],
												"src": "10016:348:7"
											},
											{
												"body": {
													"nativeSrc": "10526:188:7",
													"nodeType": "YulBlock",
													"src": "10526:188:7",
													"statements": [
														{
															"nativeSrc": "10536:26:7",
															"nodeType": "YulAssignment",
															"src": "10536:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10548:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10548:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10559:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10559:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10544:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10544:3:7"
																},
																"nativeSrc": "10544:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10544:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10536:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10536:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10578:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10578:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10593:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10593:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10609:3:7",
																								"nodeType": "YulLiteral",
																								"src": "10609:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10614:1:7",
																								"nodeType": "YulLiteral",
																								"src": "10614:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10605:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "10605:3:7"
																						},
																						"nativeSrc": "10605:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "10605:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10618:1:7",
																						"nodeType": "YulLiteral",
																						"src": "10618:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10601:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10601:3:7"
																				},
																				"nativeSrc": "10601:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10601:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10589:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10589:3:7"
																		},
																		"nativeSrc": "10589:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10589:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10571:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10571:6:7"
																},
																"nativeSrc": "10571:51:7",
																"nodeType": "YulFunctionCall",
																"src": "10571:51:7"
															},
															"nativeSrc": "10571:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "10571:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10642:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10642:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10653:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10653:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10638:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10638:3:7"
																		},
																		"nativeSrc": "10638:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10638:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10658:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10658:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10631:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10631:6:7"
																},
																"nativeSrc": "10631:34:7",
																"nodeType": "YulFunctionCall",
																"src": "10631:34:7"
															},
															"nativeSrc": "10631:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "10631:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10685:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10685:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10696:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10696:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10681:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10681:3:7"
																		},
																		"nativeSrc": "10681:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10681:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10701:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10701:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10674:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10674:6:7"
																},
																"nativeSrc": "10674:34:7",
																"nodeType": "YulFunctionCall",
																"src": "10674:34:7"
															},
															"nativeSrc": "10674:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "10674:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10369:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10479:9:7",
														"nodeType": "YulTypedName",
														"src": "10479:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10490:6:7",
														"nodeType": "YulTypedName",
														"src": "10490:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10498:6:7",
														"nodeType": "YulTypedName",
														"src": "10498:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10506:6:7",
														"nodeType": "YulTypedName",
														"src": "10506:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10517:4:7",
														"nodeType": "YulTypedName",
														"src": "10517:4:7",
														"type": ""
													}
												],
												"src": "10369:345:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Amount must be greater than zero\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Insufficient balance.\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Presale not started yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"No rewards available\")\n        tail := add(headStart, 96)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Already whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Cannot refer yourself\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No tokens staked.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Unstake only after 4 weeks.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Sale not active.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Must send ETH to buy tokens.\")\n        tail := add(headStart, 96)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function abi_encode_tuple_t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Not enough tokens available.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Pre-sale not started yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101fc575f3560e01c80638265324d11610113578063cce29ea71161009d578063dd62ed3e1161006d578063dd62ed3e1461058a578063f2fde38b146105ce578063f8102e68146105ed578063f993185514610602578063f9a81af71461062d575f80fd5b8063cce29ea71461052e578063cec297a014610543578063d0febe4c1461056e578063d348b40914610576575f80fd5b80639b19251a116100e35780639b19251a1461047a5780639ca423b3146104a8578063a09c4cf4146104dc578063a5ce413b146104fb578063a9059cbb1461050f575f80fd5b80638265324d146103eb5780638da5cb5b1461040a5780638f0794fe1461043b57806395d89b4114610466575f80fd5b806330f72cd41161019457806370a082311161016457806370a0823114610359578063715018a61461038d5780637165d19b146103a35780637547c7a3146103b85780637c613b2f146103d7575f80fd5b806330f72cd4146102f4578063313ce567146103145780634f3fc2df1461032f578063518ab2a814610344575f80fd5b80630d505541116101cf5780630d5055411461028d57806318160ddd146102ac5780631d0806ae146102c057806323b872dd146102d5575f80fd5b806303e293a31461020057806306d65af31461022857806306fdde031461023d578063095ea7b31461025e575b5f80fd5b34801561020b575f80fd5b5061021560095481565b6040519081526020015b60405180910390f35b348015610233575f80fd5b5061021560065481565b348015610248575f80fd5b5061025161064c565b60405161021f9190611378565b348015610269575f80fd5b5061027d6102783660046113c8565b6106dc565b604051901515815260200161021f565b348015610298575f80fd5b506102156102a73660046113f0565b6106f5565b3480156102b7575f80fd5b50600254610215565b3480156102cb575f80fd5b5061021560085481565b3480156102e0575f80fd5b5061027d6102ef366004611409565b61076f565b3480156102ff575f80fd5b5060055461027d90600160a01b900460ff1681565b34801561031f575f80fd5b506040516012815260200161021f565b34801561033a575f80fd5b50610215600d5481565b34801561034f575f80fd5b50610215600b5481565b348015610364575f80fd5b506102156103733660046113f0565b6001600160a01b03165f9081526020819052604090205490565b348015610398575f80fd5b506103a1610792565b005b3480156103ae575f80fd5b50610215600a5481565b3480156103c3575f80fd5b506103a16103d2366004611443565b6107a5565b3480156103e2575f80fd5b506103a16108d5565b3480156103f6575f80fd5b506102156104053660046113f0565b6109d2565b348015610415575f80fd5b506005546001600160a01b03165b6040516001600160a01b03909116815260200161021f565b348015610446575f80fd5b506102156104553660046113f0565b600f6020525f908152604090205481565b348015610471575f80fd5b50610251610a0d565b348015610485575f80fd5b5061027d6104943660046113f0565b60106020525f908152604090205460ff1681565b3480156104b3575f80fd5b506104236104c23660046113f0565b60116020525f90815260409020546001600160a01b031681565b3480156104e7575f80fd5b506103a16104f63660046113f0565b610a1c565b348015610506575f80fd5b506103a1610b93565b34801561051a575f80fd5b5061027d6105293660046113c8565b610ccb565b348015610539575f80fd5b5061021560075481565b34801561054e575f80fd5b5061021561055d3660046113f0565b60126020525f908152604090205481565b6103a1610cd8565b348015610581575f80fd5b50610215610e56565b348015610595575f80fd5b506102156105a436600461145a565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b3480156105d9575f80fd5b506103a16105e83660046113f0565b610f19565b3480156105f8575f80fd5b50610215600c5481565b34801561060d575f80fd5b5061021561061c3660046113f0565b600e6020525f908152604090205481565b348015610638575f80fd5b506103a161064736600461148b565b610f56565b60606003805461065b906114ab565b80601f0160208091040260200160405190810160405280929190818152602001828054610687906114ab565b80156106d25780601f106106a9576101008083540402835291602001916106d2565b820191905f5260205f20905b8154815290600101906020018083116106b557829003601f168201915b5050505050905090565b5f336106e9818585610fdf565b60019150505b92915050565b6001600160a01b0381165f908152600f6020526040812054819062093a809061071e90426114f7565b610728919061150a565b600d546001600160a01b0385165f908152600e6020526040902054919250606491839161075491611529565b61075e9190611529565b610768919061150a565b9392505050565b5f3361077c858285610ff1565b61078785858561106d565b506001949350505050565b61079a6110ca565b6107a35f6110f7565b565b5f81116108035760405162461bcd60e51b815260206004820152602160248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f6044820152601760f91b60648201526084015b60405180910390fd5b335f908152602081905260409020548111156108595760405162461bcd60e51b815260206004820152601560248201527424b739bab33334b1b4b2b73a103130b630b731b29760591b60448201526064016107fa565b61086433308361106d565b335f908152600e602052604081208054839290610882908490611540565b9091555050335f818152600f602052604090819020429055517fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef906108ca9084815260200190565b60405180910390a250565b600554600160a01b900460ff1615156001146109335760405162461bcd60e51b815260206004820152601760248201527f50726573616c65206e6f7420737461727465642079657400000000000000000060448201526064016107fa565b5f61093d336109d2565b90505f81116109855760405162461bcd60e51b81526020600482015260146024820152734e6f207265776172647320617661696c61626c6560601b60448201526064016107fa565b61098f3382611148565b335f8181526012602052604080822091909155517ff0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d906108ca9084815260200190565b5f6109df6012600a611636565b6001600160a01b0383165f90815260126020526040902054610a03906101f4611529565b6106ef9190611529565b60606004805461065b906114ab565b335f9081526010602052604090205460ff1615610a715760405162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481dda1a5d195b1a5cdd1959606a1b60448201526064016107fa565b6001600160a01b0381163303610ac15760405162461bcd60e51b815260206004820152601560248201527421b0b73737ba103932b332b9103cb7bab939b2b63360591b60448201526064016107fa565b335f908152601060205260409020805460ff191660011790556001600160a01b03811615801590610b0957506001600160a01b0381165f9081526010602052604090205460ff165b15610b5b57335f90815260116020908152604080832080546001600160a01b0319166001600160a01b038616908117909155835260129091528120805460019290610b55908490611540565b90915550505b6040516001600160a01b0382169033907f4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457905f90a350565b335f908152600e602052604090205480610be35760405162461bcd60e51b81526020600482015260116024820152702737903a37b5b2b7399039ba30b5b2b21760791b60448201526064016107fa565b335f908152600f6020526040902054610bff906224ea00611540565b421015610c4e5760405162461bcd60e51b815260206004820152601b60248201527f556e7374616b65206f6e6c792061667465722034207765656b732e000000000060448201526064016107fa565b5f610c58336106f5565b335f818152600e60209081526040808320839055600f909152812055909150610c8c903090610c878486611540565b61106d565b604080518381526020810183905233917f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336910160405180910390a25050565b5f336106e981858561106d565b600654421015610d1d5760405162461bcd60e51b815260206004820152601060248201526f29b0b632903737ba1030b1ba34bb329760811b60448201526064016107fa565b5f3411610d6c5760405162461bcd60e51b815260206004820152601c60248201527f4d7573742073656e642045544820746f2062757920746f6b656e732e0000000060448201526064016107fa565b5f610d75610e56565b90505f81610d856012600a611644565b610d8f9034611529565b610d99919061150a565b305f90815260208190526040902054909150811115610dfa5760405162461bcd60e51b815260206004820152601c60248201527f4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e0000000060448201526064016107fa565b610e0530338361106d565b80600b5f828254610e169190611540565b9091555050604051818152339030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b5f426006541015610ea95760405162461bcd60e51b815260206004820152601860248201527f5072652d73616c65206e6f74207374617274656420796574000000000000000060448201526064016107fa565b600754421115610eba575060095490565b5f62093a8060065442610ecd91906114f7565b610ed7919061150a565b90505f600c5482600854600954610eee91906114f7565b610ef89190611529565b610f02919061150a565b905080600854610f129190611540565b9250505090565b610f216110ca565b6001600160a01b038116610f4a57604051631e4fbdf760e01b81525f60048201526024016107fa565b610f53816110f7565b50565b610f5e6110ca565b6006829055610f708162093a80611529565b600654610f7d9190611540565b6007819055600c8290556005805460ff60a01b1916600160a01b1790556006546040517f3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d92610fd3928252602082015260400190565b60405180910390a15050565b610fec8383836001611180565b505050565b6001600160a01b038381165f908152600160209081526040808320938616835292905220545f19811015611067578181101561105957604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016107fa565b61106784848484035f611180565b50505050565b6001600160a01b03831661109657604051634b637e8f60e11b81525f60048201526024016107fa565b6001600160a01b0382166110bf5760405163ec442f0560e01b81525f60048201526024016107fa565b610fec838383611252565b6005546001600160a01b031633146107a35760405163118cdaa760e01b81523360048201526024016107fa565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b0382166111715760405163ec442f0560e01b81525f60048201526024016107fa565b61117c5f8383611252565b5050565b6001600160a01b0384166111a95760405163e602df0560e01b81525f60048201526024016107fa565b6001600160a01b0383166111d257604051634a1406b160e11b81525f60048201526024016107fa565b6001600160a01b038085165f908152600160209081526040808320938716835292905220829055801561106757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161124491815260200190565b60405180910390a350505050565b6001600160a01b03831661127c578060025f8282546112719190611540565b909155506112ec9050565b6001600160a01b0383165f90815260208190526040902054818110156112ce5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016107fa565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b03821661130857600280548290039055611326565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161136b91815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146113c3575f80fd5b919050565b5f80604083850312156113d9575f80fd5b6113e2836113ad565b946020939093013593505050565b5f60208284031215611400575f80fd5b610768826113ad565b5f805f6060848603121561141b575f80fd5b611424846113ad565b9250611432602085016113ad565b929592945050506040919091013590565b5f60208284031215611453575f80fd5b5035919050565b5f806040838503121561146b575f80fd5b611474836113ad565b9150611482602084016113ad565b90509250929050565b5f806040838503121561149c575f80fd5b50508035926020909101359150565b600181811c908216806114bf57607f821691505b6020821081036114dd57634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156106ef576106ef6114e3565b5f8261152457634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176106ef576106ef6114e3565b808201808211156106ef576106ef6114e3565b6001815b600184111561158e57808504811115611572576115726114e3565b600184161561158057908102905b60019390931c928002611557565b935093915050565b5f826115a4575060016106ef565b816115b057505f6106ef565b81600181146115c657600281146115d0576115ec565b60019150506106ef565b60ff8411156115e1576115e16114e3565b50506001821b6106ef565b5060208310610133831016604e8410600b841016171561160f575081810a6106ef565b61161b5f198484611553565b805f190482111561162e5761162e6114e3565b029392505050565b5f61076860ff841683611596565b5f610768838361159656fea2646970667358221220934754968edc707e4b911e06fbe7b31fccbf6781ba1af40e599e46f8d48c1b6b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8265324D GT PUSH2 0x113 JUMPI DUP1 PUSH4 0xCCE29EA7 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xF8102E68 EQ PUSH2 0x5ED JUMPI DUP1 PUSH4 0xF9931855 EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF9A81AF7 EQ PUSH2 0x62D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCCE29EA7 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0xCEC297A0 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xD0FEBE4C EQ PUSH2 0x56E JUMPI DUP1 PUSH4 0xD348B409 EQ PUSH2 0x576 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B19251A GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0x9CA423B3 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xA09C4CF4 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x4FB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x50F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8265324D EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x8F0794FE EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x466 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30F72CD4 GT PUSH2 0x194 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0x7165D19B EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x7C613B2F EQ PUSH2 0x3D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30F72CD4 EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x4F3FC2DF EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x518AB2A8 EQ PUSH2 0x344 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD505541 GT PUSH2 0x1CF JUMPI DUP1 PUSH4 0xD505541 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x1D0806AE EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E293A3 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x6D65AF3 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x25E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x248 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1378 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x269 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x6DC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x215 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x76F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH2 0x27D SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x373 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x792 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x3D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x7A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x8D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0x9D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x415 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x471 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 PUSH2 0xA0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x494 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x423 PUSH2 0x4C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x4F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0xA1C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0xB93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0xCCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x539 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3A1 PUSH2 0xCD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x581 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0xE56 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x595 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x5A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x5E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH2 0xF19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x61C CALLDATASIZE PUSH1 0x4 PUSH2 0x13F0 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x638 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x647 CALLDATASIZE PUSH1 0x4 PUSH2 0x148B JUMP JUMPDEST PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x65B SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x687 SWAP1 PUSH2 0x14AB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6E9 DUP2 DUP6 DUP6 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH3 0x93A80 SWAP1 PUSH2 0x71E SWAP1 TIMESTAMP PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0x728 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH1 0x64 SWAP2 DUP4 SWAP2 PUSH2 0x754 SWAP2 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x75E SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x768 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x77C DUP6 DUP3 DUP6 PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0x787 DUP6 DUP6 DUP6 PUSH2 0x106D JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x79A PUSH2 0x10CA JUMP JUMPDEST PUSH2 0x7A3 PUSH0 PUSH2 0x10F7 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x859 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B739BAB33334B1B4B2B73A103130B630B731B297 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x864 CALLER ADDRESS DUP4 PUSH2 0x106D JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x882 SWAP1 DUP5 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE MLOAD PUSH32 0xB539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF SWAP1 PUSH2 0x8CA SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x933 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726573616C65206E6F74207374617274656420796574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH0 PUSH2 0x93D CALLER PUSH2 0x9D2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x985 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F207265776172647320617661696C61626C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x98F CALLER DUP3 PUSH2 0x1148 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0xF0BC0A70FE19EF2D8DC1E1948B338A1184184FB1EA3AC836F24065828816D68D SWAP1 PUSH2 0x8CA SWAP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x9DF PUSH1 0x12 PUSH1 0xA PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA03 SWAP1 PUSH2 0x1F4 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0x6EF SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x65B SWAP1 PUSH2 0x14AB JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105B1C9958591E481DDA1A5D195B1A5CDD1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER SUB PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x21B0B73737BA103932B332B9103CB7BAB939B2B633 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0xB09 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xB5B JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xB55 SWAP1 DUP5 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 CALLER SWAP1 PUSH32 0x4BC18AA4B0095C9A3B5CDF42D2322D5A145591B04045988A995A5DA426075457 SWAP1 PUSH0 SWAP1 LOG3 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0xBE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x2737903A37B5B2B7399039BA30B5B2B217 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xBFF SWAP1 PUSH3 0x24EA00 PUSH2 0x1540 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xC4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E7374616B65206F6E6C792061667465722034207765656B732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH0 PUSH2 0xC58 CALLER PUSH2 0x6F5 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE SWAP1 SWAP2 POP PUSH2 0xC8C SWAP1 ADDRESS SWAP1 PUSH2 0xC87 DUP5 DUP7 PUSH2 0x1540 JUMP JUMPDEST PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x6E9 DUP2 DUP6 DUP6 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x29B0B632903737BA1030B1BA34BB3297 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xD6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D7573742073656E642045544820746F2062757920746F6B656E732E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH0 PUSH2 0xD75 PUSH2 0xE56 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH2 0xD85 PUSH1 0x12 PUSH1 0xA PUSH2 0x1644 JUMP JUMPDEST PUSH2 0xD8F SWAP1 CALLVALUE PUSH2 0x1529 JUMP JUMPDEST PUSH2 0xD99 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST ADDRESS PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 GT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0xE05 ADDRESS CALLER DUP4 PUSH2 0x106D JUMP JUMPDEST DUP1 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 ADDRESS SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 TIMESTAMP PUSH1 0x6 SLOAD LT ISZERO PUSH2 0xEA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072652D73616C65206E6F742073746172746564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP GT ISZERO PUSH2 0xEBA JUMPI POP PUSH1 0x9 SLOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH3 0x93A80 PUSH1 0x6 SLOAD TIMESTAMP PUSH2 0xECD SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xC SLOAD DUP3 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x14F7 JUMP JUMPDEST PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x1529 JUMP JUMPDEST PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x150A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 SLOAD PUSH2 0xF12 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xF21 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF4A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0xF53 DUP2 PUSH2 0x10F7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xF5E PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x6 DUP3 SWAP1 SSTORE PUSH2 0xF70 DUP2 PUSH3 0x93A80 PUSH2 0x1529 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0xF7D SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0xC DUP3 SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH32 0x3844853BE672B18D859394AA37E05615B95B78E66B4DC37DCA98D1DB1B05EA7D SWAP3 PUSH2 0xFD3 SWAP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xFEC DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1180 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 LT ISZERO PUSH2 0x1067 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1059 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x1067 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1180 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x10BF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0xFEC DUP4 DUP4 DUP4 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1171 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x117C PUSH0 DUP4 DUP4 PUSH2 0x1252 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x11A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x11D2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x1067 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1244 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x127C JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1271 SWAP2 SWAP1 PUSH2 0x1540 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x12EC SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x12CE JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1308 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x136B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E2 DUP4 PUSH2 0x13AD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1400 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x768 DUP3 PUSH2 0x13AD JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x141B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1424 DUP5 PUSH2 0x13AD JUMP JUMPDEST SWAP3 POP PUSH2 0x1432 PUSH1 0x20 DUP6 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x146B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1474 DUP4 PUSH2 0x13AD JUMP JUMPDEST SWAP2 POP PUSH2 0x1482 PUSH1 0x20 DUP5 ADD PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x14BF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x14DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x14E3 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1524 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x14E3 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EF PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x158E JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x1572 JUMPI PUSH2 0x1572 PUSH2 0x14E3 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x1580 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x1557 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x15A4 JUMPI POP PUSH1 0x1 PUSH2 0x6EF JUMP JUMPDEST DUP2 PUSH2 0x15B0 JUMPI POP PUSH0 PUSH2 0x6EF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15C6 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15D0 JUMPI PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x6EF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15E1 JUMPI PUSH2 0x15E1 PUSH2 0x14E3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x6EF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x160F JUMPI POP DUP2 DUP2 EXP PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x161B PUSH0 NOT DUP5 DUP5 PUSH2 0x1553 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x162E JUMPI PUSH2 0x162E PUSH2 0x14E3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x768 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1596 JUMP JUMPDEST PUSH0 PUSH2 0x768 DUP4 DUP4 PUSH2 0x1596 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 SELFBALANCE SLOAD SWAP7 DUP15 0xDC PUSH17 0x7E4B911E06FBE7B31FCCBF6781BA1AF40E MSIZE SWAP15 CHAINID 0xF8 0xD4 DUP13 SHL PUSH12 0x64736F6C634300081A003300 ",
							"sourceMap": "174:5720:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;363:31;;;;;;;;;;;;;;;;;;;160:25:7;;;148:2;133:18;363:31:6;;;;;;;;255;;;;;;;;;;;;;;;;1779:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3998:186::-;;;;;;;;;;-1:-1:-1;3998:186:2;;;;;:::i;:::-;;:::i;:::-;;;1267:14:7;;1260:22;1242:41;;1230:2;1215:18;3998:186:2;1102:187:7;5640:247:6;;;;;;;;;;-1:-1:-1;5640:247:6;;;;;:::i;:::-;;:::i;2849:97:2:-;;;;;;;;;;-1:-1:-1;2927:12:2;;2849:97;;329:27:6;;;;;;;;;;;;;;;;4776:244:2;;;;;;;;;;-1:-1:-1;4776:244:2;;;;;:::i;:::-;;:::i;221:27:6:-;;;;;;;;;;-1:-1:-1;221:27:6;;;;-1:-1:-1;;;221:27:6;;;;;;2707:82:2;;;;;;;;;;-1:-1:-1;2707:82:2;;2780:2;2006:36:7;;1994:2;1979:18;2707:82:2;1864:184:7;514:32:6;;;;;;;;;;;;;;;;441:25;;;;;;;;;;;;;;;;3004:116:2;;;;;;;;;;-1:-1:-1;3004:116:2;;;;;:::i;:::-;-1:-1:-1;;;;;3095:18:2;3069:7;3095:18;;;;;;;;;;;;3004:116;2293:101:0;;;;;;;;;;;;;:::i;:::-;;401:33:6;;;;;;;;;;;;;;;;4689:404;;;;;;;;;;-1:-1:-1;4689:404:6;;;;;:::i;:::-;;:::i;2522:416::-;;;;;;;;;;;;;:::i;2360:156::-;;;;;;;;;;-1:-1:-1;2360:156:6;;;;;:::i;:::-;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1710:6:0;;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;2448:32:7;;;2430:51;;2418:2;2403:18;1638:85:0;2284:203:7;607:51:6;;;;;;;;;;-1:-1:-1;607:51:6;;;;;:::i;:::-;;;;;;;;;;;;;;1981:93:2;;;;;;;;;;;;;:::i;665:41:6:-;;;;;;;;;;-1:-1:-1;665:41:6;;;;;:::i;:::-;;;;;;;;;;;;;;;;713:44;;;;;;;;;;-1:-1:-1;713:44:6;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;713:44:6;;;1867:481;;;;;;;;;;-1:-1:-1;1867:481:6;;;;;:::i;:::-;;:::i;5101:531::-;;;;;;;;;;;;;:::i;3315:178:2:-;;;;;;;;;;-1:-1:-1;3315:178:2;;;;;:::i;:::-;;:::i;293:29:6:-;;;;;;;;;;;;;;;;764:49;;;;;;;;;;-1:-1:-1;764:49:6;;;;;:::i;:::-;;;;;;;;;;;;;;4074:605;;;:::i;3510:487::-;;;;;;;;;;;;;:::i;3551:140:2:-;;;;;;;;;;-1:-1:-1;3551:140:2;;;;;:::i;:::-;-1:-1:-1;;;;;3657:18:2;;;3631:7;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3551:140;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;473:34:6:-;;;;;;;;;;;;;;;;553:47;;;;;;;;;;-1:-1:-1;553:47:6;;;;;:::i;:::-;;;;;;;;;;;;;;3063:438;;;;;;;;;;-1:-1:-1;3063:438:6;;;;;:::i;:::-;;:::i;1779:89:2:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;735:10:5;4125:31:2;735:10:5;4141:7:2;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;;:::o;5640:247:6:-;-1:-1:-1;;;;;5768:22:6;;5707:7;5768:22;;;:16;:22;;;;;;5707:7;;5794;;5750:40;;:15;:40;:::i;:::-;5749:52;;;;:::i;:::-;5841:17;;-1:-1:-1;;;;;5820:18:6;;;;;;:12;:18;;;;;;5727:74;;-1:-1:-1;5876:3:6;;5727:74;;5820:38;;;:::i;:::-;:52;;;;:::i;:::-;5819:60;;;;:::i;:::-;5812:67;5640:247;-1:-1:-1;;;5640:247:6:o;4776:244:2:-;4863:4;735:10:5;4919:37:2;4935:4;735:10:5;4950:5:2;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;-1:-1:-1;5009:4:2;;4776:244;-1:-1:-1;;;;4776:244:2:o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4689:404:6:-;4763:1;4754:6;:10;4746:56;;;;-1:-1:-1;;;4746:56:6;;4355:2:7;4746:56:6;;;4337:21:7;4394:2;4374:18;;;4367:30;4433:34;4413:18;;;4406:62;-1:-1:-1;;;4484:18:7;;;4477:31;4525:19;;4746:56:6;;;;;;;;;4831:10;3069:7:2;3095:18;;;;;;;;;;;4846:6:6;-1:-1:-1;4821:31:6;4813:65;;;;-1:-1:-1;;;4813:65:6;;4757:2:7;4813:65:6;;;4739:21:7;4796:2;4776:18;;;4769:30;-1:-1:-1;;;4815:18:7;;;4808:51;4876:18;;4813:65:6;4555:345:7;4813:65:6;4891:44;4901:10;4921:4;4928:6;4891:9;:44::i;:::-;4959:10;4946:24;;;;:12;:24;;;;;:34;;4974:6;;4946:24;:34;;4974:6;;4946:34;:::i;:::-;;;;-1:-1:-1;;5008:10:6;4991:28;;;;:16;:28;;;;;;;5022:15;4991:46;;5053:32;;;;;5078:6;160:25:7;;148:2;133:18;;14:177;5053:32:6;;;;;;;;4689:404;:::o;2522:416::-;2584:15;;-1:-1:-1;;;2584:15:6;;;;:21;;2601:4;2584:21;2576:56;;;;-1:-1:-1;;;2576:56:6;;5237:2:7;2576:56:6;;;5219:21:7;5276:2;5256:18;;;5249:30;5315:25;5295:18;;;5288:53;5358:18;;2576:56:6;5035:347:7;2576:56:6;2647:20;2670:35;2694:10;2670:23;:35::i;:::-;2647:58;;2743:1;2728:12;:16;2720:49;;;;-1:-1:-1;;;2720:49:6;;5589:2:7;2720:49:6;;;5571:21:7;5628:2;5608:18;;;5601:30;-1:-1:-1;;;5647:18:7;;;5640:50;5707:18;;2720:49:6;5387:344:7;2720:49:6;2784:31;2790:10;2802:12;2784:5;:31::i;:::-;2845:10;2859:1;2830:26;;;:14;:26;;;;;;:30;;;;2880:46;;;;;2913:12;160:25:7;;148:2;133:18;;14:177;2360:156:6;2432:7;2492:16;2780:2:2;2492::6;:16;:::i;:::-;-1:-1:-1;;;;;2459:24:6;;;;;;:14;:24;;;;;;:30;;2486:3;2459:30;:::i;:::-;:49;;;;:::i;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;1867:481:6:-;1952:10;1942:21;;;;:9;:21;;;;;;;;1941:22;1933:54;;;;-1:-1:-1;;;1933:54:6;;7370:2:7;1933:54:6;;;7352:21:7;7409:2;7389:18;;;7382:30;-1:-1:-1;;;7428:18:7;;;7421:49;7487:18;;1933:54:6;7168:343:7;1933:54:6;-1:-1:-1;;;;;2006:22:6;;:10;:22;1998:56;;;;-1:-1:-1;;;1998:56:6;;7718:2:7;1998:56:6;;;7700:21:7;7757:2;7737:18;;;7730:30;-1:-1:-1;;;7776:18:7;;;7769:51;7837:18;;1998:56:6;7516:345:7;1998:56:6;2085:10;2075:21;;;;:9;:21;;;;;:28;;-1:-1:-1;;2075:28:6;2099:4;2075:28;;;-1:-1:-1;;;;;2128:22:6;;;;;;:45;;-1:-1:-1;;;;;;2154:19:6;;;;;;:9;:19;;;;;;;;2128:45;2124:154;;;2200:10;2190:21;;;;:9;:21;;;;;;;;:32;;-1:-1:-1;;;;;;2190:32:6;-1:-1:-1;;;;;2190:32:6;;;;;;;;2237:24;;:14;:24;;;;;:29;;-1:-1:-1;;2190:21:6;2237:29;;-1:-1:-1;;2237:29:6;:::i;:::-;;;;-1:-1:-1;;2124:154:6;2303:37;;-1:-1:-1;;;;;2303:37:6;;;2319:10;;2303:37;;;;;1867:481;:::o;5101:531::-;5176:10;5146:14;5163:24;;;:12;:24;;;;;;5206:10;5198:40;;;;-1:-1:-1;;;5198:40:6;;8068:2:7;5198:40:6;;;8050:21:7;8107:2;8087:18;;;8080:30;-1:-1:-1;;;8126:18:7;;;8119:47;8183:18;;5198:40:6;7866:341:7;5198:40:6;5293:10;5276:28;;;;:16;:28;;;;;;:38;;5307:7;5276:38;:::i;:::-;5257:15;:57;;5249:97;;;;-1:-1:-1;;;5249:97:6;;8414:2:7;5249:97:6;;;8396:21:7;8453:2;8433:18;;;8426:30;8492:29;8472:18;;;8465:57;8539:18;;5249:97:6;8212:351:7;5249:97:6;5367:14;5384:34;5407:10;5384:22;:34::i;:::-;5442:10;5456:1;5429:24;;;:12;:24;;;;;;;;:28;;;5468:16;:28;;;;;:32;5367:51;;-1:-1:-1;5513:53:6;;5531:4;;5550:15;5367:51;5550:6;:15;:::i;:::-;5513:9;:53::i;:::-;5582:42;;;8742:25:7;;;8798:2;8783:18;;8776:34;;;5597:10:6;;5582:42;;8715:18:7;5582:42:6;;;;;;;5135:497;;5101:531::o;3315:178:2:-;3384:4;735:10:5;3438:27:2;735:10:5;3455:2:2;3459:5;3438:9;:27::i;4074:605:6:-;4146:16;;4127:15;:35;;4119:64;;;;-1:-1:-1;;;4119:64:6;;9023:2:7;4119:64:6;;;9005:21:7;9062:2;9042:18;;;9035:30;-1:-1:-1;;;9081:18:7;;;9074:46;9137:18;;4119:64:6;8821:340:7;4119:64:6;4210:1;4198:9;:13;4190:54;;;;-1:-1:-1;;;4190:54:6;;9368:2:7;4190:54:6;;;9350:21:7;9407:2;9387:18;;;9380:30;9446;9426:18;;;9419:58;9494:18;;4190:54:6;9166:352:7;4190:54:6;4253:20;4276:16;:14;:16::i;:::-;4253:39;-1:-1:-1;4337:19:6;4253:39;4372:25;2780:2:2;4372::6;:25;:::i;:::-;4360:37;;:9;:37;:::i;:::-;4359:54;;;;:::i;:::-;4446:4;3069:7:2;3095:18;;;;;;;;;;;4337:76:6;;-1:-1:-1;4337:76:6;-1:-1:-1;4428:39:6;4420:80;;;;-1:-1:-1;;;4420:80:6;;9861:2:7;4420:80:6;;;9843:21:7;9900:2;9880:18;;;9873:30;9939;9919:18;;;9912:58;9987:18;;4420:80:6;9659:352:7;4420:80:6;4509:49;4527:4;4534:10;4546:11;4509:9;:49::i;:::-;4579:11;4565:10;;:25;;;;;;;:::i;:::-;;;;-1:-1:-1;;4604:48:6;;160:25:7;;;4628:10:6;;4621:4;;4604:48;;148:2:7;133:18;4604:48:6;;;;;;;4112:567;;4074:605::o;3510:487::-;3557:7;3604:15;3585:16;;:34;;3577:70;;;;-1:-1:-1;;;3577:70:6;;10218:2:7;3577:70:6;;;10200:21:7;10257:2;10237:18;;;10230:30;10296:26;10276:18;;;10269:54;10340:18;;3577:70:6;10016:348:7;3577:70:6;3681:14;;3663:15;:32;3658:89;;;-1:-1:-1;3719:16:6;;;3510:487::o;3658:89::-;3767:20;3829:7;3809:16;;3791:15;:34;;;;:::i;:::-;3790:46;;;;:::i;:::-;3767:69;;3847:21;3924:19;;3908:12;3892;;3873:16;;:31;;;;:::i;:::-;3872:48;;;;:::i;:::-;3871:72;;;;:::i;:::-;3847:96;;3976:13;3961:12;;:28;;;;:::i;:::-;3954:35;;;;3510:487;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2430:51:7::0;2403:18;;2672:31:0::1;2284:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;3063:438:6:-;1531:13:0;:11;:13::i;:::-;3247:16:6::1;:29:::0;;;3324:24:::1;:14:::0;3341:7:::1;3324:24;:::i;:::-;3304:16;;:45;;;;:::i;:::-;3287:14;:62:::0;;;3360:19:::1;:36:::0;;;3407:15:::1;:22:::0;;-1:-1:-1;;;;3407:22:6::1;-1:-1:-1::0;;;3407:22:6::1;::::0;;3460:16:::1;::::0;3445:48:::1;::::0;::::1;::::0;::::1;::::0;8742:25:7;;8798:2;8783:18;;8776:34;8730:2;8715:18;;8568:248;3445:48:6::1;;;;;;;;3063:438:::0;;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;-1:-1:-1;;;;;3657:18:2;;;10514:24;3657:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10580:36:2;;10576:309;;;10655:5;10636:16;:24;10632:130;;;10687:60;;-1:-1:-1;;;10687:60:2;;-1:-1:-1;;;;;10589:32:7;;10687:60:2;;;10571:51:7;10638:18;;;10631:34;;;10681:18;;;10674:34;;;10544:18;;10687:60:2;10369:345:7;10632:130:2;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10504:387;10415:476;;;:::o;5393:300::-;-1:-1:-1;;;;;5476:18:2;;5472:86;;5517:30;;-1:-1:-1;;;5517:30:2;;5544:1;5517:30;;;2430:51:7;2403:18;;5517:30:2;2284:203:7;5472:86:2;-1:-1:-1;;;;;5571:16:2;;5567:86;;5610:32;;-1:-1:-1;;;5610:32:2;;5639:1;5610:32;;;2430:51:7;2403:18;;5610:32:2;2284:203:7;5567:86:2;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2430:51:7;2403:18;;1901:40:0;2284:203:7;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7458:208:2:-;-1:-1:-1;;;;;7528:21:2;;7524:91;;7572:32;;-1:-1:-1;;;7572:32:2;;7601:1;7572:32;;;2430:51:7;2403:18;;7572:32:2;2284:203:7;7524:91:2;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;-1:-1:-1;;;;;9813:19:2;;9809:89;;9855:32;;-1:-1:-1;;;9855:32:2;;9884:1;9855:32;;;2430:51:7;2403:18;;9855:32:2;2284:203:7;9809:89:2;-1:-1:-1;;;;;9911:21:2;;9907:90;;9955:31;;-1:-1:-1;;;9955:31:2;;9983:1;9955:31;;;2430:51:7;2403:18;;9955:31:2;2284:203:7;9907:90:2;-1:-1:-1;;;;;10006:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10051:76;;;;10101:7;-1:-1:-1;;;;;10085:31:2;10094:5;-1:-1:-1;;;;;10085:31:2;;10110:5;10085:31;;;;160:25:7;;148:2;133:18;;14:177;10085:31:2;;;;;;;;9701:432;;;;:::o;6008:1107::-;-1:-1:-1;;;;;6097:18:2;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6093:540:2;;-1:-1:-1;6093:540:2;;-1:-1:-1;;;;;6307:15:2;;6285:19;6307:15;;;;;;;;;;;6340:19;;;6336:115;;;6386:50;;-1:-1:-1;;;6386:50:2;;-1:-1:-1;;;;;10589:32:7;;6386:50:2;;;10571:51:7;10638:18;;;10631:34;;;10681:18;;;10674:34;;;10544:18;;6386:50:2;10369:345:7;6336:115:2;-1:-1:-1;;;;;6571:15:2;;:9;:15;;;;;;;;;;6589:19;;;;6571:37;;6093:540;-1:-1:-1;;;;;6647:16:2;;6643:425;;6810:12;:21;;;;;;;6643:425;;;-1:-1:-1;;;;;7021:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6643:425;7098:2;-1:-1:-1;;;;;7083:25:2;7092:4;-1:-1:-1;;;;;7083:25:2;;7102:5;7083:25;;;;160::7;;148:2;133:18;;14:177;7083:25:2;;;;;;;;6008:1107;;;:::o;196:418:7:-;345:2;334:9;327:21;308:4;377:6;371:13;420:6;415:2;404:9;400:18;393:34;479:6;474:2;466:6;462:15;457:2;446:9;442:18;436:50;535:1;530:2;521:6;510:9;506:22;502:31;495:42;605:2;598;594:7;589:2;581:6;577:15;573:29;562:9;558:45;554:54;546:62;;;196:418;;;;:::o;619:173::-;687:20;;-1:-1:-1;;;;;736:31:7;;726:42;;716:70;;782:1;779;772:12;716:70;619:173;;;:::o;797:300::-;865:6;873;926:2;914:9;905:7;901:23;897:32;894:52;;;942:1;939;932:12;894:52;965:29;984:9;965:29;:::i;:::-;955:39;1063:2;1048:18;;;;1035:32;;-1:-1:-1;;;797:300:7:o;1294:186::-;1353:6;1406:2;1394:9;1385:7;1381:23;1377:32;1374:52;;;1422:1;1419;1412:12;1374:52;1445:29;1464:9;1445:29;:::i;1485:374::-;1562:6;1570;1578;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;1670:29;1689:9;1670:29;:::i;:::-;1660:39;;1718:38;1752:2;1741:9;1737:18;1718:38;:::i;:::-;1485:374;;1708:48;;-1:-1:-1;;;1825:2:7;1810:18;;;;1797:32;;1485:374::o;2053:226::-;2112:6;2165:2;2153:9;2144:7;2140:23;2136:32;2133:52;;;2181:1;2178;2171:12;2133:52;-1:-1:-1;2226:23:7;;2053:226;-1:-1:-1;2053:226:7:o;2492:260::-;2560:6;2568;2621:2;2609:9;2600:7;2596:23;2592:32;2589:52;;;2637:1;2634;2627:12;2589:52;2660:29;2679:9;2660:29;:::i;:::-;2650:39;;2708:38;2742:2;2731:9;2727:18;2708:38;:::i;:::-;2698:48;;2492:260;;;;;:::o;2757:346::-;2825:6;2833;2886:2;2874:9;2865:7;2861:23;2857:32;2854:52;;;2902:1;2899;2892:12;2854:52;-1:-1:-1;;2947:23:7;;;3067:2;3052:18;;;3039:32;;-1:-1:-1;2757:346:7:o;3108:380::-;3187:1;3183:12;;;;3230;;;3251:61;;3305:4;3297:6;3293:17;3283:27;;3251:61;3358:2;3350:6;3347:14;3327:18;3324:38;3321:161;;3404:10;3399:3;3395:20;3392:1;3385:31;3439:4;3436:1;3429:15;3467:4;3464:1;3457:15;3321:161;;3108:380;;;:::o;3493:127::-;3554:10;3549:3;3545:20;3542:1;3535:31;3585:4;3582:1;3575:15;3609:4;3606:1;3599:15;3625:128;3692:9;;;3713:11;;;3710:37;;;3727:18;;:::i;3758:217::-;3798:1;3824;3814:132;;3868:10;3863:3;3859:20;3856:1;3849:31;3903:4;3900:1;3893:15;3931:4;3928:1;3921:15;3814:132;-1:-1:-1;3960:9:7;;3758:217::o;3980:168::-;4053:9;;;4084;;4101:15;;;4095:22;;4081:37;4071:71;;4122:18;;:::i;4905:125::-;4970:9;;;4991:10;;;4988:36;;;5004:18;;:::i;5736:375::-;5824:1;5842:5;5856:249;5877:1;5867:8;5864:15;5856:249;;;5927:4;5922:3;5918:14;5912:4;5909:24;5906:50;;;5936:18;;:::i;:::-;5986:1;5976:8;5972:16;5969:49;;;6000:16;;;;5969:49;6083:1;6079:16;;;;;6039:15;;5856:249;;;5736:375;;;;;;:::o;6116:902::-;6165:5;6195:8;6185:80;;-1:-1:-1;6236:1:7;6250:5;;6185:80;6284:4;6274:76;;-1:-1:-1;6321:1:7;6335:5;;6274:76;6366:4;6384:1;6379:59;;;;6452:1;6447:174;;;;6359:262;;6379:59;6409:1;6400:10;;6423:5;;;6447:174;6484:3;6474:8;6471:17;6468:43;;;6491:18;;:::i;:::-;-1:-1:-1;;6547:1:7;6533:16;;6606:5;;6359:262;;6705:2;6695:8;6692:16;6686:3;6680:4;6677:13;6673:36;6667:2;6657:8;6654:16;6649:2;6643:4;6640:12;6636:35;6633:77;6630:203;;;-1:-1:-1;6742:19:7;;;6818:5;;6630:203;6865:42;-1:-1:-1;;6890:8:7;6884:4;6865:42;:::i;:::-;6943:6;6939:1;6935:6;6931:19;6922:7;6919:32;6916:58;;;6954:18;;:::i;:::-;6992:20;;6116:902;-1:-1:-1;;;6116:902:7:o;7023:140::-;7081:5;7110:47;7151:4;7141:8;7137:19;7131:4;7110:47;:::i;9523:131::-;9583:5;9612:36;9639:8;9633:4;9612:36;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1153000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24825",
								"balanceOf(address)": "2571",
								"buyTokens()": "infinite",
								"calculatePrice()": "infinite",
								"calculateReferralReward(address)": "infinite",
								"calculateStakingReward(address)": "infinite",
								"decimals()": "244",
								"initialPrice()": "2373",
								"mintReferralReward()": "infinite",
								"name()": "infinite",
								"owner()": "2387",
								"preSaleEndTime()": "2328",
								"preSaleStartTime()": "2352",
								"preSaleWeeksInWeeks()": "2371",
								"presaleIsActive()": "2372",
								"referralCounts(address)": "2572",
								"referrals(address)": "2622",
								"regularSalePrice()": "2330",
								"renounceOwnership()": "infinite",
								"signUpForWhitelist(address)": "79424",
								"stakeTokens(uint256)": "101353",
								"stakedAmount(address)": "2615",
								"stakingRewardRate()": "2373",
								"stakingTimestamp(address)": "2595",
								"startPreSale(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"tokensSold()": "2395",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51349",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28399",
								"unstakeTokens()": "infinite",
								"weeklyIncreaseRate()": "2372",
								"whitelist(address)": "2573"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 5894,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1323,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1323,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1541,
									"end": 1553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "2730BA3AB932AA37B5B2B7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "272A29"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3664,
									"end": 3715,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3655,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3637,
									"end": 3655,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1572,
									"end": 1624,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1586,
									"end": 1590,
									"modifierDepth": 2,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1623,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 2780,
									"end": 2782,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1607,
									"end": 1609,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1607,
									"end": 1623,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1607,
									"end": 1623,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1607,
									"end": 1623,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1607,
									"end": 1623,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1623,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1593,
									"end": 1623,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1604,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1623,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1593,
									"end": 1623,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1593,
									"end": 1623,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 1593,
									"end": 1623,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1577,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 1572,
									"end": 1624,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1572,
									"end": 1624,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1572,
									"end": 1624,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1647,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1635,
									"end": 1663,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1663,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1663,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1635,
									"end": 1663,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1692,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1674,
									"end": 1714,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1714,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1714,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1674,
									"end": 1714,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1725,
									"end": 1741,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1725,
									"end": 1761,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1772,
									"end": 1789,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "D"
								},
								{
									"begin": 1772,
									"end": 1810,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1821,
									"end": 1836,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1821,
									"end": 1844,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1844,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1821,
									"end": 1844,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1844,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1844,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 3664,
									"end": 3715,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3637,
									"end": 3655,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3637,
									"end": 3655,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 3518,
									"end": 3721,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5813,
									"end": 5845,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5813,
									"end": 5845,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 5795,
									"end": 5846,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5862,
									"end": 5880,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5855,
									"end": 5889,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5905,
									"end": 5923,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5898,
									"end": 5932,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5898,
									"end": 5932,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5898,
									"end": 5932,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 5768,
									"end": 5786,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 5768,
									"end": 5786,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 5593,
									"end": 5938,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6089,
									"end": 6114,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6089,
									"end": 6114,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6077,
									"end": 6079,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6062,
									"end": 6080,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6062,
									"end": 6080,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5943,
									"end": 6120,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 872,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 872,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 129,
									"end": 135,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 145,
									"end": 151,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 153,
									"end": 159,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 161,
									"end": 167,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 175,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 222,
									"end": 225,
									"name": "PUSH",
									"source": 7,
									"value": "C0"
								},
								{
									"begin": 210,
									"end": 219,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 201,
									"end": 208,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 197,
									"end": 220,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 193,
									"end": 226,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 190,
									"end": 243,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 190,
									"end": 243,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 190,
									"end": 243,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 239,
									"end": 240,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 237,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 229,
									"end": 241,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 190,
									"end": 243,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 190,
									"end": 243,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 265,
									"end": 281,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 265,
									"end": 281,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 310,
									"end": 341,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 310,
									"end": 341,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 300,
									"end": 342,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 300,
									"end": 342,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 290,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 290,
									"end": 360,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 356,
									"end": 357,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 353,
									"end": 354,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 346,
									"end": 358,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 290,
									"end": 360,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 290,
									"end": 360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 450,
									"end": 452,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 453,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 435,
									"end": 453,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 429,
									"end": 454,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 546,
									"end": 548,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 531,
									"end": 549,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 531,
									"end": 549,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 525,
									"end": 550,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 642,
									"end": 644,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 627,
									"end": 645,
									"name": "DUP11",
									"source": 7
								},
								{
									"begin": 627,
									"end": 645,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 621,
									"end": 646,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 738,
									"end": 741,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 723,
									"end": 742,
									"name": "DUP12",
									"source": 7
								},
								{
									"begin": 723,
									"end": 742,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 717,
									"end": 743,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 835,
									"end": 838,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 820,
									"end": 839,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 820,
									"end": 839,
									"name": "SWAP12",
									"source": 7
								},
								{
									"begin": 820,
									"end": 839,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 814,
									"end": 840,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 379,
									"end": 384,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 379,
									"end": 384,
									"name": "SWAP13",
									"source": 7
								},
								{
									"begin": 429,
									"end": 454,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 429,
									"end": 454,
									"name": "SWAP12",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 525,
									"end": 550,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 525,
									"end": 550,
									"name": "SWAP10",
									"source": 7
								},
								{
									"begin": 621,
									"end": 646,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 621,
									"end": 646,
									"name": "SWAP9",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 717,
									"end": 743,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 814,
									"end": 840,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 814,
									"end": 840,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 872,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 872,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 877,
									"end": 1004,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 877,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 938,
									"end": 948,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 933,
									"end": 936,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 929,
									"end": 949,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 926,
									"end": 927,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 919,
									"end": 950,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 969,
									"end": 973,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 966,
									"end": 967,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 959,
									"end": 974,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 993,
									"end": 997,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 990,
									"end": 991,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 983,
									"end": 998,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1088,
									"end": 1089,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1084,
									"end": 1096,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1096,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1096,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1084,
									"end": 1096,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1152,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1152,
									"end": 1213,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1206,
									"end": 1210,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1198,
									"end": 1204,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1194,
									"end": 1211,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1184,
									"end": 1211,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1184,
									"end": 1211,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1152,
									"end": 1213,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1152,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1259,
									"end": 1261,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1257,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1248,
									"end": 1262,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1228,
									"end": 1246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1225,
									"end": 1263,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1305,
									"end": 1315,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1300,
									"end": 1303,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1296,
									"end": 1316,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1293,
									"end": 1294,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1286,
									"end": 1317,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1340,
									"end": 1344,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1337,
									"end": 1338,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 1345,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1368,
									"end": 1372,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1373,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1222,
									"end": 1383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1009,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1624,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1617,
									"end": 1620,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1614,
									"end": 1625,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1658,
									"end": 1663,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1655,
									"end": 1656,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1648,
									"end": 1664,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1702,
									"end": 1706,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1689,
									"end": 1707,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 1772,
									"end": 1774,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1760,
									"end": 1770,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1756,
									"end": 1775,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1753,
									"end": 1754,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1749,
									"end": 1776,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1743,
									"end": 1747,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1739,
									"end": 1777,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1808,
									"end": 1812,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1796,
									"end": 1806,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1793,
									"end": 1813,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1831,
									"end": 1835,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 1790,
									"end": 1837,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1886,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1881,
									"end": 1884,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1877,
									"end": 1889,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1874,
									"end": 1875,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1870,
									"end": 1890,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1864,
									"end": 1868,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1860,
									"end": 1891,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1891,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1850,
									"end": 1891,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1959,
									"end": 1961,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1952,
									"end": 1957,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1949,
									"end": 1962,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2018,
									"end": 2019,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2004,
									"end": 2020,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2004,
									"end": 2020,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1985,
									"end": 1986,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1974,
									"end": 1987,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 1941,
									"end": 2022,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 1948,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1945,
									"end": 1948,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 1611,
									"end": 2032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 2038,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2214,
									"end": 3513,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 2214,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2356,
									"end": 2386,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2356,
									"end": 2386,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2409,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2353,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2353,
									"end": 2409,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 2389,
									"end": 2407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 2389,
									"end": 2407,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2508,
									"end": 2514,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2500,
									"end": 2504,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2494,
									"end": 2505,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2506,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 2468,
									"end": 2506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2468,
									"end": 2506,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 2468,
									"end": 2506,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2515,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 2418,
									"end": 2515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2515,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 2418,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2564,
									"end": 2568,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2595,
									"end": 2597,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2584,
									"end": 2598,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2584,
									"end": 2598,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 2612,
									"end": 2613,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3300,
									"end": 3301,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3317,
									"end": 3323,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3369,
									"end": 3388,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3388,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3369,
									"end": 3388,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3363,
									"end": 3389,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "tag",
									"source": 7,
									"value": "77"
								},
								{
									"begin": 3314,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2171,
									"end": 2172,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2167,
									"end": 2178,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2163,
									"end": 2187,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 2159,
									"end": 2188,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 2149,
									"end": 2189,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2196,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2191,
									"end": 2202,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2191,
									"end": 2202,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2191,
									"end": 2202,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2146,
									"end": 2203,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3497,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3416,
									"end": 3497,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2577,
									"end": 3507,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 2577,
									"end": 3507,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 2607,
									"end": 3256,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1460,
									"end": 1474,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1474,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1460,
									"end": 1474,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1504,
									"end": 1508,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1491,
									"end": 1509,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1491,
									"end": 1509,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2643,
									"end": 2663,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2663,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2643,
									"end": 2663,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2775,
									"end": 2782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2772,
									"end": 2773,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2769,
									"end": 2783,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2876,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2876,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2857,
									"end": 2876,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2851,
									"end": 2877,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2836,
									"end": 2878,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2836,
									"end": 2878,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2964,
									"end": 2968,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 2969,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 2917,
									"end": 2918,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2905,
									"end": 2919,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2905,
									"end": 2919,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2905,
									"end": 2919,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2905,
									"end": 2919,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2791,
									"end": 2803,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 2761,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2765,
									"end": 2768,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3011,
									"end": 3017,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3002,
									"end": 3009,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3018,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3091,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3091,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3091,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3066,
									"end": 3092,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3155,
									"end": 3156,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 3151,
									"end": 3165,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3165,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3151,
									"end": 3165,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3167,
									"end": 3170,
									"name": "PUSH",
									"source": 7,
									"value": "F8"
								},
								{
									"begin": 3147,
									"end": 3171,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3143,
									"end": 3180,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 3139,
									"end": 3181,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3124,
									"end": 3182,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3183,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3183,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 2996,
									"end": 3197,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3243,
									"end": 3244,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3227,
									"end": 3241,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3241,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3241,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3223,
									"end": 3245,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3210,
									"end": 3246,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3210,
									"end": 3246,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2214,
									"end": 3513,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3726,
									"end": 3853,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3726,
									"end": 3853,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3787,
									"end": 3797,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 3782,
									"end": 3785,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 3778,
									"end": 3798,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 3775,
									"end": 3776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3799,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3818,
									"end": 3822,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 3815,
									"end": 3816,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3808,
									"end": 3823,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3839,
									"end": 3840,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3832,
									"end": 3847,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3946,
									"end": 3947,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3964,
									"end": 3969,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3999,
									"end": 4000,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3989,
									"end": 3997,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3986,
									"end": 4001,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4049,
									"end": 4053,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4044,
									"end": 4047,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4040,
									"end": 4054,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 4034,
									"end": 4038,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4031,
									"end": 4055,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4078,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4078,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4028,
									"end": 4078,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4058,
									"end": 4076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4058,
									"end": 4076,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 4058,
									"end": 4076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4058,
									"end": 4076,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 4058,
									"end": 4076,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4108,
									"end": 4109,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4098,
									"end": 4106,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4094,
									"end": 4110,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4138,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4138,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4138,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4122,
									"end": 4138,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 4091,
									"end": 4140,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4205,
									"end": 4206,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4201,
									"end": 4217,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4161,
									"end": 4176,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4161,
									"end": 4176,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 3978,
									"end": 4227,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3858,
									"end": 4233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4287,
									"end": 4292,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4317,
									"end": 4325,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4307,
									"end": 4387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4307,
									"end": 4387,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4358,
									"end": 4359,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4307,
									"end": 4387,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 4307,
									"end": 4387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4406,
									"end": 4410,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4472,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4396,
									"end": 4472,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4443,
									"end": 4444,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4457,
									"end": 4462,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4457,
									"end": 4462,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4396,
									"end": 4472,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 4396,
									"end": 4472,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4488,
									"end": 4492,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4506,
									"end": 4507,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4574,
									"end": 4575,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 4501,
									"end": 4560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4531,
									"end": 4532,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4522,
									"end": 4532,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4522,
									"end": 4532,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4545,
									"end": 4550,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4545,
									"end": 4550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4545,
									"end": 4550,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 4569,
									"end": 4743,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4606,
									"end": 4609,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 4596,
									"end": 4604,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4593,
									"end": 4610,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4590,
									"end": 4633,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4590,
									"end": 4633,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4590,
									"end": 4633,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 4613,
									"end": 4631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "tag",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 4613,
									"end": 4631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4669,
									"end": 4670,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4655,
									"end": 4671,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4655,
									"end": 4671,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 4728,
									"end": 4733,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4728,
									"end": 4733,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4481,
									"end": 4743,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4827,
									"end": 4829,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4817,
									"end": 4825,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4814,
									"end": 4830,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4808,
									"end": 4811,
									"name": "PUSH",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4802,
									"end": 4806,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4799,
									"end": 4812,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4795,
									"end": 4831,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4791,
									"name": "PUSH",
									"source": 7,
									"value": "4E"
								},
								{
									"begin": 4779,
									"end": 4787,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4776,
									"end": 4792,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4771,
									"end": 4773,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4762,
									"end": 4774,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4758,
									"end": 4793,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4755,
									"end": 4832,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4864,
									"end": 4883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4883,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4883,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 4940,
									"end": 4945,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4940,
									"end": 4945,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "tag",
									"source": 7,
									"value": "101"
								},
								{
									"begin": 4752,
									"end": 4955,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5029,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "102"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 5012,
									"end": 5020,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5006,
									"end": 5010,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5029,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 4987,
									"end": 5029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5029,
									"name": "tag",
									"source": 7,
									"value": "102"
								},
								{
									"begin": 4987,
									"end": 5029,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5065,
									"end": 5071,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5061,
									"end": 5062,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5057,
									"end": 5063,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5053,
									"end": 5072,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5044,
									"end": 5051,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5041,
									"end": 5073,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5038,
									"end": 5096,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5038,
									"end": 5096,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5038,
									"end": 5096,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5076,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5076,
									"end": 5094,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5076,
									"end": 5094,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5076,
									"end": 5094,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 5076,
									"end": 5094,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5114,
									"end": 5134,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5114,
									"end": 5134,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "tag",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4238,
									"end": 5140,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5285,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 5145,
									"end": 5285,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5203,
									"end": 5208,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5232,
									"end": 5279,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 5273,
									"end": 5277,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 5263,
									"end": 5271,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5259,
									"end": 5278,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5253,
									"end": 5257,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5232,
									"end": 5279,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 5232,
									"end": 5279,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5232,
									"end": 5279,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 5232,
									"end": 5279,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5223,
									"end": 5279,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5285,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5145,
									"end": 5285,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5290,
									"end": 5458,
									"name": "tag",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 5290,
									"end": 5458,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5372,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5372,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5363,
									"end": 5372,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5394,
									"end": 5403,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5394,
									"end": 5403,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5411,
									"end": 5426,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5411,
									"end": 5426,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5411,
									"end": 5426,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 5405,
									"end": 5427,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5405,
									"end": 5427,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5391,
									"end": 5428,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5381,
									"end": 5452,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5381,
									"end": 5452,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5432,
									"end": 5450,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5432,
									"end": 5450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5463,
									"end": 5588,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 5463,
									"end": 5588,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5537,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5537,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5528,
									"end": 5537,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5549,
									"end": 5559,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5549,
									"end": 5559,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5549,
									"end": 5559,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5546,
									"end": 5582,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5546,
									"end": 5582,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5546,
									"end": 5582,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5562,
									"end": 5580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "93"
								},
								{
									"begin": 5562,
									"end": 5580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5562,
									"end": 5580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5943,
									"end": 6120,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 5943,
									"end": 6120,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 5894,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220934754968edc707e4b911e06fbe7b31fccbf6781ba1af40e599e46f8d48c1b6b64736f6c634300081a0033",
									".code": [
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "8265324D"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "CCE29EA7"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "F8102E68"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "F9931855"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "F9A81AF7"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "CCE29EA7"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "CEC297A0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "D0FEBE4C"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "D348B409"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "9B19251A"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "9B19251A"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "9CA423B3"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "A09C4CF4"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "A5CE413B"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "8265324D"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "8F0794FE"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "30F72CD4"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "7165D19B"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "7547C7A3"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "7C613B2F"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "30F72CD4"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "4F3FC2DF"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "518AB2A8"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "D505541"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "D505541"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "1D0806AE"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "3E293A3"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "6D65AF3"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 174,
											"end": 5894,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 363,
											"end": 394,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 363,
											"end": 394,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 363,
											"end": 394,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 255,
											"end": 286,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 255,
											"end": 286,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1267,
											"end": 1281,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1267,
											"end": 1281,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1283,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1283,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1102,
											"end": 1289,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 5640,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5640,
											"end": 5887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 329,
											"end": 356,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 329,
											"end": 356,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 221,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 221,
											"end": 248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 221,
											"end": 248,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 221,
											"end": 248,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2006,
											"end": 2042,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 1996,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1979,
											"end": 1997,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1864,
											"end": 2048,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 514,
											"end": 546,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 514,
											"end": 546,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 514,
											"end": 546,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 441,
											"end": 466,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 441,
											"end": 466,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 401,
											"end": 434,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 401,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4689,
											"end": 5093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4689,
											"end": 5093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2522,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2360,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2360,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 607,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 607,
											"end": 658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 607,
											"end": 658,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 665,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 665,
											"end": 706,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 665,
											"end": 706,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 713,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 713,
											"end": 757,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 713,
											"end": 757,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 1867,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1867,
											"end": 2348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5101,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 293,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 293,
											"end": 322,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 293,
											"end": 322,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 764,
											"end": 813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 764,
											"end": 813,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4074,
											"end": 4679,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 4074,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4074,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 4074,
											"end": 4679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4074,
											"end": 4679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3510,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 473,
											"end": 507,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 473,
											"end": 507,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 473,
											"end": 507,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 553,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 553,
											"end": 600,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3063,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3063,
											"end": 3501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5714,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5784,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5768,
											"end": 5790,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5707,
											"end": 5714,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5794,
											"end": 5801,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 5794,
											"end": 5801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5750,
											"end": 5790,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5765,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 5750,
											"end": 5790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5750,
											"end": 5790,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 5750,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5749,
											"end": 5801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5801,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5749,
											"end": 5801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5749,
											"end": 5801,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5749,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5841,
											"end": 5858,
											"name": "PUSH",
											"source": 6,
											"value": "D"
										},
										{
											"begin": 5841,
											"end": 5858,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5832,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5838,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5801,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5876,
											"end": 5879,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5876,
											"end": 5879,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5801,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5727,
											"end": 5801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5820,
											"end": 5858,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5820,
											"end": 5858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5858,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5820,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 5820,
											"end": 5872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 5820,
											"end": 5872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5820,
											"end": 5872,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 5820,
											"end": 5872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5819,
											"end": 5879,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 5819,
											"end": 5879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5879,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 5819,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5812,
											"end": 5879,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5640,
											"end": 5887,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5640,
											"end": 5887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4760,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4754,
											"end": 4764,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4355,
											"end": 4357,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4358,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4394,
											"end": 4396,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4367,
											"end": 4397,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4467,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 4413,
											"end": 4431,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4413,
											"end": 4431,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4413,
											"end": 4431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 4468,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4508,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4544,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4525,
											"end": 4544,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4746,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4831,
											"end": 4841,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 4852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4821,
											"end": 4852,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4739,
											"end": 4760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4796,
											"end": 4798,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B739BAB33334B1B4B2B73A103130B630B731B297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4808,
											"end": 4859,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4876,
											"end": 4894,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4555,
											"end": 4900,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4813,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4901,
											"end": 4911,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4921,
											"end": 4925,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4934,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4891,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4891,
											"end": 4935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4891,
											"end": 4935,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4959,
											"end": 4969,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4958,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4946,
											"end": 4980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4946,
											"end": 4980,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5018,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5007,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5019,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5022,
											"end": 5037,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4991,
											"end": 5037,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "PUSH",
											"source": 6,
											"value": "B539CA1E5C8D398DDF1C41C30166F33404941683BE4683319B57669A93DAD4EF"
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5078,
											"end": 5084,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5053,
											"end": 5085,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2522,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2584,
											"end": 2599,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2605,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2601,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2584,
											"end": 2605,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5219,
											"end": 5240,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5276,
											"end": 5278,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5274,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5279,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5315,
											"end": 5340,
											"name": "PUSH",
											"source": 7,
											"value": "50726573616C65206E6F74207374617274656420796574000000000000000000"
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5295,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5288,
											"end": 5341,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5358,
											"end": 5376,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5035,
											"end": 5382,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2576,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2667,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2694,
											"end": 2704,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2670,
											"end": 2705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2670,
											"end": 2705,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 2670,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2744,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2744,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5589,
											"end": 5591,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5571,
											"end": 5592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5628,
											"end": 5630,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5608,
											"end": 5626,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5601,
											"end": 5631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F207265776172647320617661696C61626C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5647,
											"end": 5665,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5647,
											"end": 5665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5647,
											"end": 5665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5690,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5707,
											"end": 5725,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5707,
											"end": 5725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 5387,
											"end": 5731,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2720,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2802,
											"end": 2814,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 2784,
											"end": 2815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2784,
											"end": 2815,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 2784,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2855,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2859,
											"end": 2860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2844,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2856,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2860,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2860,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "F0BC0A70FE19EF2D8DC1E1948B338A1184184FB1EA3AC836F24065828816D68D"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2913,
											"end": 2925,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2360,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 2492,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2483,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2459,
											"end": 2489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2489,
											"name": "PUSH",
											"source": 6,
											"value": "1F4"
										},
										{
											"begin": 2459,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2459,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2489,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 2459,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2459,
											"end": 2508,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2508,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2459,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 2459,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1962,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1951,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1941,
											"end": 1963,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7370,
											"end": 7372,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7352,
											"end": 7373,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7409,
											"end": 7411,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 7389,
											"end": 7407,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7389,
											"end": 7407,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7389,
											"end": 7407,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7382,
											"end": 7412,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481DDA1A5D195B1A5CDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7428,
											"end": 7446,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7428,
											"end": 7446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7428,
											"end": 7446,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7421,
											"end": 7470,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7487,
											"end": 7505,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7487,
											"end": 7505,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7168,
											"end": 7511,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 1933,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2016,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7720,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7700,
											"end": 7721,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7759,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 7737,
											"end": 7755,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7737,
											"end": 7755,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7737,
											"end": 7755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7730,
											"end": 7760,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21B0B73737BA103932B332B9103CB7BAB939B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7776,
											"end": 7794,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 7776,
											"end": 7794,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7776,
											"end": 7794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7769,
											"end": 7820,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 7837,
											"end": 7855,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7516,
											"end": 7861,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 1998,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2085,
											"end": 2095,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2084,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2096,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2103,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2103,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2099,
											"end": 2103,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2075,
											"end": 2103,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2075,
											"end": 2103,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2150,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2128,
											"end": 2173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2163,
											"name": "PUSH",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2154,
											"end": 2173,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2128,
											"end": 2173,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2128,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2124,
											"end": 2278,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2124,
											"end": 2278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2124,
											"end": 2278,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2210,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2190,
											"end": 2222,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2251,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2261,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2190,
											"end": 2211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2237,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2237,
											"end": 2266,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2124,
											"end": 2278,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 2124,
											"end": 2278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2329,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2329,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "PUSH",
											"source": 6,
											"value": "4BC18AA4B0095C9A3B5CDF42D2322D5A145591B04045988A995A5DA426075457"
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2340,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1867,
											"end": 2348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5101,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5176,
											"end": 5186,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5146,
											"end": 5160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5175,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5163,
											"end": 5187,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5206,
											"end": 5216,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8068,
											"end": 8070,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8050,
											"end": 8071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8107,
											"end": 8109,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8087,
											"end": 8105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8080,
											"end": 8110,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737903A37B5B2B7399039BA30B5B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8126,
											"end": 8144,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8126,
											"end": 8144,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8126,
											"end": 8144,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8166,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 7866,
											"end": 8207,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5198,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5293,
											"end": 5303,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5304,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 5276,
											"end": 5314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5314,
											"name": "PUSH",
											"source": 6,
											"value": "24EA00"
										},
										{
											"begin": 5276,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 5276,
											"end": 5314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5276,
											"end": 5314,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 5276,
											"end": 5314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5257,
											"end": 5272,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5257,
											"end": 5314,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5257,
											"end": 5314,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8414,
											"end": 8416,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8396,
											"end": 8417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8453,
											"end": 8455,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 8433,
											"end": 8451,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8433,
											"end": 8451,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8433,
											"end": 8451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8426,
											"end": 8456,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8492,
											"end": 8521,
											"name": "PUSH",
											"source": 7,
											"value": "556E7374616B65206F6E6C792061667465722034207765656B732E0000000000"
										},
										{
											"begin": 8472,
											"end": 8490,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 8472,
											"end": 8490,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8472,
											"end": 8490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8465,
											"end": 8522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 8539,
											"end": 8557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8212,
											"end": 8563,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5249,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5381,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5407,
											"end": 5417,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5384,
											"end": 5406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 5384,
											"end": 5418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5384,
											"end": 5418,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5442,
											"end": 5452,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5457,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5441,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5453,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5457,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5429,
											"end": 5457,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5484,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5496,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5468,
											"end": 5500,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5418,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5367,
											"end": 5418,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5513,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5513,
											"end": 5566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5535,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5535,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 5367,
											"end": 5418,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5556,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 5550,
											"end": 5565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5565,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 5550,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 5513,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5566,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 5513,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8742,
											"end": 8767,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 8767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 8767,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8798,
											"end": 8800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8783,
											"end": 8801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 8801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8810,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8810,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8810,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5597,
											"end": 5607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "PUSH",
											"source": 6,
											"value": "6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336"
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5624,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5101,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4074,
											"end": 4679,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4074,
											"end": 4679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4162,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4146,
											"end": 4162,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4162,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4127,
											"end": 4162,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9023,
											"end": 9025,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9005,
											"end": 9026,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9062,
											"end": 9064,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9042,
											"end": 9060,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9042,
											"end": 9060,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9042,
											"end": 9060,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9035,
											"end": 9065,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29B0B632903737BA1030B1BA34BB3297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9081,
											"end": 9099,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9074,
											"end": 9120,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9137,
											"end": 9155,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9137,
											"end": 9155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 8821,
											"end": 9161,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "tag",
											"source": 6,
											"value": "301"
										},
										{
											"begin": 4119,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4198,
											"end": 4211,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9368,
											"end": 9370,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9350,
											"end": 9371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9407,
											"end": 9409,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9380,
											"end": 9410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9446,
											"end": 9476,
											"name": "PUSH",
											"source": 7,
											"value": "4D7573742073656E642045544820746F2062757920746F6B656E732E00000000"
										},
										{
											"begin": 9426,
											"end": 9444,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9426,
											"end": 9444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9444,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9419,
											"end": 9477,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9494,
											"end": 9512,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9494,
											"end": 9512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9166,
											"end": 9518,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 4190,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 4276,
											"end": 4290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 4276,
											"end": 4292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 4276,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4253,
											"end": 4292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4337,
											"end": 4356,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4372,
											"end": 4374,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 4372,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 4372,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4372,
											"end": 4397,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 4372,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4360,
											"end": 4397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4369,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4360,
											"end": 4397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4360,
											"end": 4397,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 4360,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 4359,
											"end": 4413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4359,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4359,
											"end": 4413,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 4359,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4446,
											"end": 4450,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4337,
											"end": 4413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4337,
											"end": 4413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4337,
											"end": 4413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4428,
											"end": 4467,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9861,
											"end": 9863,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9843,
											"end": 9864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9900,
											"end": 9902,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 9880,
											"end": 9898,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9880,
											"end": 9898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9880,
											"end": 9898,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9873,
											"end": 9903,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9939,
											"end": 9969,
											"name": "PUSH",
											"source": 7,
											"value": "4E6F7420656E6F75676820746F6B656E7320617661696C61626C652E00000000"
										},
										{
											"begin": 9919,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9919,
											"end": 9937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9919,
											"end": 9937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9912,
											"end": 9970,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9659,
											"end": 10011,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 4420,
											"end": 4500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4534,
											"end": 4544,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4546,
											"end": 4557,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4509,
											"end": 4558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4509,
											"end": 4558,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 4509,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 4565,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4565,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4565,
											"end": 4590,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 4638,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4628,
											"end": 4638,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4625,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4621,
											"end": 4625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4604,
											"end": 4652,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4074,
											"end": 4679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3604,
											"end": 3619,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3601,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3585,
											"end": 3601,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3619,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3585,
											"end": 3619,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10218,
											"end": 10220,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10221,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10257,
											"end": 10259,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 10237,
											"end": 10255,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10237,
											"end": 10255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10237,
											"end": 10255,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10230,
											"end": 10260,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10296,
											"end": 10322,
											"name": "PUSH",
											"source": 7,
											"value": "5072652D73616C65206E6F742073746172746564207965740000000000000000"
										},
										{
											"begin": 10276,
											"end": 10294,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10276,
											"end": 10294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10276,
											"end": 10294,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10269,
											"end": 10323,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10340,
											"end": 10358,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10340,
											"end": 10358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 10016,
											"end": 10364,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3577,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3695,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3681,
											"end": 3695,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3678,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3663,
											"end": 3695,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3747,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3658,
											"end": 3747,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3735,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3719,
											"end": 3735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3747,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3658,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3836,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3806,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3791,
											"end": 3825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3791,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3825,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3791,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3790,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3790,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3767,
											"end": 3836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3868,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 3920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3892,
											"end": 3904,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3892,
											"end": 3904,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3889,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3873,
											"end": 3889,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 3873,
											"end": 3904,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 3873,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3904,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 3873,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3872,
											"end": 3920,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3920,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3872,
											"end": 3920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3872,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 3871,
											"end": 3943,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3871,
											"end": 3943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3943,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 3871,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3943,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3976,
											"end": 3989,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 3973,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3961,
											"end": 3973,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3961,
											"end": 3989,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 3989,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 3989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3961,
											"end": 3989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3961,
											"end": 3989,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3961,
											"end": 3989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3989,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3954,
											"end": 3989,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3510,
											"end": 3997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3247,
											"end": 3263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3247,
											"end": 3276,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3276,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3324,
											"end": 3348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 3324,
											"end": 3338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3341,
											"end": 3348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "93A80"
										},
										{
											"begin": 3324,
											"end": 3348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3324,
											"end": 3348,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3324,
											"end": 3348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 3324,
											"end": 3348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3320,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3304,
											"end": 3320,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 3304,
											"end": 3349,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 3304,
											"end": 3349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3304,
											"end": 3349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 3304,
											"end": 3349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3287,
											"end": 3349,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3349,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3287,
											"end": 3349,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3379,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3396,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3407,
											"end": 3429,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3407,
											"end": 3429,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3476,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3493,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3844853BE672B18D859394AA37E05615B95B78E66B4DC37DCA98D1DB1B05EA7D"
										},
										{
											"begin": 3445,
											"end": 3493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 3445,
											"end": 3493,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8742,
											"end": 8767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8742,
											"end": 8767,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8798,
											"end": 8800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8783,
											"end": 8801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8783,
											"end": 8801,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8776,
											"end": 8810,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8568,
											"end": 8816,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3493,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3063,
											"end": 3501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10589,
											"end": 10621,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10589,
											"end": 10621,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10571,
											"end": 10622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 10665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 10665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 10665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10699,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10681,
											"end": 10699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10674,
											"end": 10708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10674,
											"end": 10708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10674,
											"end": 10708,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10369,
											"end": 10714,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "356"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "358"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 2,
											"value": "370"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "354"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "379"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "382"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "381"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10589,
											"end": 10621,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10589,
											"end": 10621,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10571,
											"end": 10622,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10638,
											"end": 10656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 10665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 10665,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10631,
											"end": 10665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10699,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 10681,
											"end": 10699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10681,
											"end": 10699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10674,
											"end": 10708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10674,
											"end": 10708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10674,
											"end": 10708,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10369,
											"end": 10714,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "384"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "383"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "386"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "387"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "388"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 196,
											"end": 614,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 196,
											"end": 614,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 327,
											"end": 348,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 377,
											"end": 383,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 420,
											"end": 426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 404,
											"end": 413,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 400,
											"end": 418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 427,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 479,
											"end": 485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 472,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 462,
											"end": 477,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 442,
											"end": 460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 436,
											"end": 486,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 530,
											"end": 532,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 506,
											"end": 528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 495,
											"end": 537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 605,
											"end": 607,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 589,
											"end": 591,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 581,
											"end": 587,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 577,
											"end": 592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 573,
											"end": 602,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 562,
											"end": 571,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 558,
											"end": 603,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 554,
											"end": 608,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 546,
											"end": 608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 619,
											"end": 792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 687,
											"end": 707,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 687,
											"end": 707,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 736,
											"end": 767,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 736,
											"end": 767,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 726,
											"end": 768,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 726,
											"end": 768,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 716,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 716,
											"end": 786,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 782,
											"end": 783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 780,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 772,
											"end": 784,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 716,
											"end": 786,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 716,
											"end": 786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 619,
											"end": 792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 797,
											"end": 1097,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 797,
											"end": 1097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 865,
											"end": 871,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 879,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 926,
											"end": 928,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 914,
											"end": 923,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 905,
											"end": 912,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 901,
											"end": 924,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 897,
											"end": 929,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 946,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 894,
											"end": 946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 942,
											"end": 943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 932,
											"end": 944,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 946,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 894,
											"end": 946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 965,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 965,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 965,
											"end": 994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 965,
											"end": 994,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 965,
											"end": 994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 955,
											"end": 994,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1065,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1067,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1035,
											"end": 1067,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 797,
											"end": 1097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1294,
											"end": 1480,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1294,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1406,
											"end": 1408,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1394,
											"end": 1403,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1392,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1381,
											"end": 1404,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1377,
											"end": 1409,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1422,
											"end": 1423,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1424,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 1374,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1464,
											"end": 1473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 1445,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1562,
											"end": 1568,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1633,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1619,
											"end": 1628,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1610,
											"end": 1617,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1629,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1634,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1644,
											"end": 1645,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 1599,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 1689,
											"end": 1698,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 1670,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 1670,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 1752,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1755,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 1718,
											"end": 1756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 1718,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1708,
											"end": 1756,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1829,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1485,
											"end": 1859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2279,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2053,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2167,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2144,
											"end": 2151,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2163,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2168,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 2133,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2226,
											"end": 2249,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2226,
											"end": 2249,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2053,
											"end": 2279,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2053,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2596,
											"end": 2619,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2592,
											"end": 2624,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2660,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2731,
											"end": 2740,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 2708,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2492,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 3103,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 2757,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2888,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2874,
											"end": 2883,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2884,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2889,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2904,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2854,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2947,
											"end": 2970,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2970,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2970,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3067,
											"end": 3069,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3052,
											"end": 3070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3071,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3039,
											"end": 3071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2757,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3488,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 3108,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3187,
											"end": 3188,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 3183,
											"end": 3195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3242,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 3251,
											"end": 3312,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3309,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 3297,
											"end": 3303,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3293,
											"end": 3310,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3310,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3312,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 3251,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3360,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3356,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3347,
											"end": 3361,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3327,
											"end": 3345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3324,
											"end": 3362,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3321,
											"end": 3482,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3399,
											"end": 3402,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3395,
											"end": 3415,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3385,
											"end": 3416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3439,
											"end": 3443,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3429,
											"end": 3444,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3467,
											"end": 3471,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3464,
											"end": 3465,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3457,
											"end": 3472,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3482,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3321,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3321,
											"end": 3482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 3493,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3549,
											"end": 3552,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3545,
											"end": 3565,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3543,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3535,
											"end": 3566,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3585,
											"end": 3589,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3575,
											"end": 3590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3609,
											"end": 3613,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3606,
											"end": 3607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3614,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3625,
											"end": 3753,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 3625,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3724,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3724,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3747,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3710,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3710,
											"end": 3747,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 3727,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3975,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3758,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3825,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3814,
											"end": 3946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3868,
											"end": 3878,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 3863,
											"end": 3866,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3859,
											"end": 3879,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3856,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3880,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3903,
											"end": 3907,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3893,
											"end": 3908,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3931,
											"end": 3935,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3928,
											"end": 3929,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3936,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3814,
											"end": 3946,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3814,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3960,
											"end": 3969,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3960,
											"end": 3969,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3980,
											"end": 4148,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 3980,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4062,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4062,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4053,
											"end": 4062,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4093,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4101,
											"end": 4116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4101,
											"end": 4116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4101,
											"end": 4116,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4117,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4095,
											"end": 4117,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4071,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4071,
											"end": 4142,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4122,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4122,
											"end": 4140,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 4122,
											"end": 4140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4905,
											"end": 5030,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4905,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5001,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4991,
											"end": 5001,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5024,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 4988,
											"end": 5024,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5004,
											"end": 5022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 6111,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 5736,
											"end": 6111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5824,
											"end": 5825,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5842,
											"end": 5847,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 6105,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 5856,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5877,
											"end": 5878,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5867,
											"end": 5875,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5864,
											"end": 5879,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 6105,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 5856,
											"end": 6105,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5927,
											"end": 5931,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5922,
											"end": 5925,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5932,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5909,
											"end": 5933,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5906,
											"end": 5956,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5906,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 5906,
											"end": 5956,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 5936,
											"end": 5954,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5936,
											"end": 5954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5936,
											"end": 5954,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 5936,
											"end": 5954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5986,
											"end": 5987,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5976,
											"end": 5984,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5988,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 6018,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 6018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 5969,
											"end": 6018,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6016,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6016,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6016,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5969,
											"end": 6018,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 5969,
											"end": 6018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6083,
											"end": 6084,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6079,
											"end": 6095,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6095,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6095,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 6079,
											"end": 6095,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6054,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6039,
											"end": 6054,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 5856,
											"end": 6105,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 6105,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 5856,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 6111,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 6111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 6111,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 6111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 6111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 6111,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5736,
											"end": 6111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 7018,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6116,
											"end": 7018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6165,
											"end": 6170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6195,
											"end": 6203,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 6185,
											"end": 6265,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6236,
											"end": 6237,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6265,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 6185,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6284,
											"end": 6288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 6274,
											"end": 6350,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6321,
											"end": 6322,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6274,
											"end": 6350,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 6274,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6370,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6385,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6379,
											"end": 6438,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6438,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 6379,
											"end": 6438,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6452,
											"end": 6453,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6447,
											"end": 6621,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6621,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 6447,
											"end": 6621,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 6359,
											"end": 6621,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6379,
											"end": 6438,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 6379,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6409,
											"end": 6410,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6410,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6400,
											"end": 6410,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6428,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6423,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6423,
											"end": 6428,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6447,
											"end": 6621,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 6447,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6484,
											"end": 6487,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6474,
											"end": 6482,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6471,
											"end": 6488,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6511,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6468,
											"end": 6511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6468,
											"end": 6511,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6491,
											"end": 6509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 6491,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6533,
											"end": 6549,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6533,
											"end": 6549,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6606,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6606,
											"end": 6611,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6621,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 6359,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6705,
											"end": 6707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6695,
											"end": 6703,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6692,
											"end": 6708,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6686,
											"end": 6689,
											"name": "PUSH",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 6680,
											"end": 6684,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6677,
											"end": 6690,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6673,
											"end": 6709,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6667,
											"end": 6669,
											"name": "PUSH",
											"source": 7,
											"value": "4E"
										},
										{
											"begin": 6657,
											"end": 6665,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6654,
											"end": 6670,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 6643,
											"end": 6647,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6640,
											"end": 6652,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6633,
											"end": 6710,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6630,
											"end": 6833,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6630,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 6630,
											"end": 6833,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6742,
											"end": 6761,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 6818,
											"end": 6823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6818,
											"end": 6823,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6630,
											"end": 6833,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 6630,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6865,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6890,
											"end": 6898,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6888,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6865,
											"end": 6907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6865,
											"end": 6907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6865,
											"end": 6907,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 6865,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6943,
											"end": 6949,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6941,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6931,
											"end": 6950,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6919,
											"end": 6951,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6916,
											"end": 6974,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6916,
											"end": 6974,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6916,
											"end": 6974,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6954,
											"end": 6972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 6954,
											"end": 6972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6992,
											"end": 7012,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6992,
											"end": 7012,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6116,
											"end": 7018,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6116,
											"end": 7018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7023,
											"end": 7163,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 7023,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7086,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7110,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 7151,
											"end": 7155,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7141,
											"end": 7149,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7137,
											"end": 7156,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7135,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7110,
											"end": 7157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 7110,
											"end": 7157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9523,
											"end": 9654,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 9523,
											"end": 9654,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9583,
											"end": 9588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9612,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 9639,
											"end": 9647,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9633,
											"end": 9637,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9612,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 9612,
											"end": 9648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SimpleToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"buyTokens()": "d0febe4c",
							"calculatePrice()": "d348b409",
							"calculateReferralReward(address)": "8265324d",
							"calculateStakingReward(address)": "0d505541",
							"decimals()": "313ce567",
							"initialPrice()": "1d0806ae",
							"mintReferralReward()": "7c613b2f",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"preSaleEndTime()": "cce29ea7",
							"preSaleStartTime()": "06d65af3",
							"preSaleWeeksInWeeks()": "f8102e68",
							"presaleIsActive()": "30f72cd4",
							"referralCounts(address)": "cec297a0",
							"referrals(address)": "9ca423b3",
							"regularSalePrice()": "03e293a3",
							"renounceOwnership()": "715018a6",
							"signUpForWhitelist(address)": "a09c4cf4",
							"stakeTokens(uint256)": "7547c7a3",
							"stakedAmount(address)": "f9931855",
							"stakingRewardRate()": "4f3fc2df",
							"stakingTimestamp(address)": "8f0794fe",
							"startPreSale(uint256,uint256)": "f9a81af7",
							"symbol()": "95d89b41",
							"tokensSold()": "518ab2a8",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unstakeTokens()": "a5ce413b",
							"weeklyIncreaseRate()": "7165d19b",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_initialPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weeklyIncreaseRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_regularSalePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"PreSaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"PreSaleStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardAmount\",\"type\":\"uint256\"}],\"name\":\"ReferralRewardMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"UserWhitelisted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculatePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"}],\"name\":\"calculateReferralReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"calculateStakingReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintReferralReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleWeeksInWeeks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleIsActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referralCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"referrals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regularSalePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"}],\"name\":\"signUpForWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakingTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_durationWeeks\",\"type\":\"uint256\"}],\"name\":\"startPreSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weeklyIncreaseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startPreSale(uint256,uint256)\":{\"params\":{\"_durationWeeks\":\"Duration of the pre-sale in weeks\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyTokens()\":{\"notice\":\"Buy tokens during the presale or regular sale.\"},\"startPreSale(uint256,uint256)\":{\"notice\":\"Start the pre-sale\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleToken.sol\":\"TokenPreSale\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SimpleToken.sol\":{\"keccak256\":\"0x6d867c393c4630c65b7a4e0e9c94d583d3f7e4bd109c559720d12a59d7b33691\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c718a27c24d7ce9701b70508c65ad47e5b4a07f94b4902c1f5f33df13bc33240\",\"dweb:/ipfs/Qmdk1S8gQKkEESRZ557EFFYyRy8haoCDT3zs1iAnPb9jft\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 943,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "presaleIsActive",
								"offset": 20,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 945,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "preSaleStartTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 947,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "preSaleEndTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 949,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "initialPrice",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 951,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "regularSalePrice",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 953,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "weeklyIncreaseRate",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 955,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "tokensSold",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 957,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "preSaleWeeksInWeeks",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 959,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingRewardRate",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 963,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakedAmount",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 967,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "stakingTimestamp",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 971,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "whitelist",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 975,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "referrals",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 979,
								"contract": "contracts/SimpleToken.sol:TokenPreSale",
								"label": "referralCounts",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"buyTokens()": {
								"notice": "Buy tokens during the presale or regular sale."
							},
							"startPreSale(uint256,uint256)": {
								"notice": "Start the pre-sale"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/SimpleToken.sol": {
				"ast": {
					"absolutePath": "contracts/SimpleToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						],
						"TokenPreSale": [
							1523
						]
					},
					"id": 1524,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1524,
							"sourceUnit": 800,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1524,
							"sourceUnit": 148,
							"src": "118:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 938,
										"name": "ERC20",
										"nameLocations": [
											"199:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "199:5:6"
									},
									"id": 939,
									"nodeType": "InheritanceSpecifier",
									"src": "199:5:6"
								},
								{
									"baseName": {
										"id": 940,
										"name": "Ownable",
										"nameLocations": [
											"206:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "206:7:6"
									},
									"id": 941,
									"nodeType": "InheritanceSpecifier",
									"src": "206:7:6"
								}
							],
							"canonicalName": "TokenPreSale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1523,
							"linearizedBaseContracts": [
								1523,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "TokenPreSale",
							"nameLocation": "183:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "30f72cd4",
									"id": 943,
									"mutability": "mutable",
									"name": "presaleIsActive",
									"nameLocation": "233:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "221:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 942,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "221:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06d65af3",
									"id": 945,
									"mutability": "mutable",
									"name": "preSaleStartTime",
									"nameLocation": "270:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "255:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 944,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "255:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cce29ea7",
									"id": 947,
									"mutability": "mutable",
									"name": "preSaleEndTime",
									"nameLocation": "308:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "293:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 946,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "293:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d0806ae",
									"id": 949,
									"mutability": "mutable",
									"name": "initialPrice",
									"nameLocation": "344:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "329:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 948,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "329:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "03e293a3",
									"id": 951,
									"mutability": "mutable",
									"name": "regularSalePrice",
									"nameLocation": "378:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "363:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 950,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "363:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7165d19b",
									"id": 953,
									"mutability": "mutable",
									"name": "weeklyIncreaseRate",
									"nameLocation": "416:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "401:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 952,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "401:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "518ab2a8",
									"id": 955,
									"mutability": "mutable",
									"name": "tokensSold",
									"nameLocation": "456:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "441:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 954,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "441:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f8102e68",
									"id": 957,
									"mutability": "mutable",
									"name": "preSaleWeeksInWeeks",
									"nameLocation": "488:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "473:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "473:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4f3fc2df",
									"id": 959,
									"mutability": "mutable",
									"name": "stakingRewardRate",
									"nameLocation": "529:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "514:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "514:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9931855",
									"id": 963,
									"mutability": "mutable",
									"name": "stakedAmount",
									"nameLocation": "588:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "553:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 962,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 960,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "561:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "553:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 961,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "572:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f0794fe",
									"id": 967,
									"mutability": "mutable",
									"name": "stakingTimestamp",
									"nameLocation": "642:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "607:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 966,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 964,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "615:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "607:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 965,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "626:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 971,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "697:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "665:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 970,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 968,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "673:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "665:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 969,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "684:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ca423b3",
									"id": 975,
									"mutability": "mutable",
									"name": "referrals",
									"nameLocation": "748:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "713:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 974,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 972,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "721:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "713:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 973,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "732:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cec297a0",
									"id": 979,
									"mutability": "mutable",
									"name": "referralCounts",
									"nameLocation": "799:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1523,
									"src": "764:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 978,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 976,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "772:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "764:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 977,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "783:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4bc18aa4b0095c9a3b5cdf42d2322d5a145591b04045988a995a5da426075457",
									"id": 985,
									"name": "UserWhitelisted",
									"nameLocation": "830:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "862:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "846:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "846:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "884:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "868:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:48:6"
									},
									"src": "824:70:6"
								},
								{
									"anonymous": false,
									"eventSelector": "f0bc0a70fe19ef2d8dc1e1948b338a1184184fb1ea3ac836f24065828816d68d",
									"id": 991,
									"name": "ReferralRewardMinted",
									"nameLocation": "906:20:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "943:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "927:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "961:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "953:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:48:6"
									},
									"src": "900:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "b539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef",
									"id": 997,
									"name": "TokensStaked",
									"nameLocation": "991:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1020:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1004:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1034:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1026:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:38:6"
									},
									"src": "985:57:6"
								},
								{
									"anonymous": false,
									"eventSelector": "6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336",
									"id": 1005,
									"name": "TokensUnstaked",
									"nameLocation": "1054:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1085:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1069:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1099:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1091:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1115:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "1107:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:54:6"
									},
									"src": "1048:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 1013,
									"name": "TokensPurchased",
									"nameLocation": "1135:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1167:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1151:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1182:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1174:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"indexed": false,
												"mutability": "mutable",
												"name": "cost",
												"nameLocation": "1198:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1190:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1190:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:53:6"
									},
									"src": "1129:75:6"
								},
								{
									"anonymous": false,
									"eventSelector": "3844853be672b18d859394aa37e05615b95b78e66b4dc37dca98d1db1b05ea7d",
									"id": 1019,
									"name": "PreSaleStarted",
									"nameLocation": "1216:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1239:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1231:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1231:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1258:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "1250:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1230:36:6"
									},
									"src": "1210:57:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e4e5d76599bd74efd04c1863d19fbf494d72c23a3276b9a5916804bfaa8b6e79",
									"id": 1023,
									"name": "PreSaleEnded",
									"nameLocation": "1279:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"indexed": false,
												"mutability": "mutable",
												"name": "endTime",
												"nameLocation": "1300:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "1292:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1291:17:6"
									},
									"src": "1273:36:6"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "1561:291:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1048,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1586:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1578:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1046,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1578:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1578:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1050,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1027,
																"src": "1593:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1607:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1052,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1613:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1613:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1607:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1593:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1045,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1572:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1572:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1057,
												"nodeType": "ExpressionStatement",
												"src": "1572:52:6"
											},
											{
												"expression": {
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1058,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "1635:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1059,
														"name": "_initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "1650:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1635:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "1635:28:6"
											},
											{
												"expression": {
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1062,
														"name": "weeklyIncreaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1674:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1063,
														"name": "_weeklyIncreaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "1695:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1674:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1674:40:6"
											},
											{
												"expression": {
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1066,
														"name": "regularSalePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "1725:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1067,
														"name": "_regularSalePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "1744:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1725:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "1725:36:6"
											},
											{
												"expression": {
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1070,
														"name": "stakingRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "1772:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1071,
														"name": "_stakingRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1035,
														"src": "1792:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1772:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "1772:38:6"
											},
											{
												"expression": {
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1074,
														"name": "presaleIsActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "1821:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1839:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1821:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "1821:23:6"
											}
										]
									},
									"id": 1079,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4e6174757265546f6b656e",
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1501:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d5ee8fd3c5f6584b265d5b0813f0e0aba2b11e4095f7ca2f0c140668f3acc419",
														"typeString": "literal_string \"NatureToken\""
													},
													"value": "NatureToken"
												},
												{
													"hexValue": "4e5452",
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1516:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_694d85ce3f345a420974bcb998758484b397dcf49ebe818a3483badd3fd4fecd",
														"typeString": "literal_string \"NTR\""
													},
													"value": "NTR"
												}
											],
											"id": 1040,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1037,
												"name": "ERC20",
												"nameLocations": [
													"1495:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1495:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1495:27:6"
										},
										{
											"arguments": [
												{
													"id": 1042,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1025,
													"src": "1541:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1043,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1041,
												"name": "Ownable",
												"nameLocations": [
													"1533:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1533:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1533:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1343:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1335:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "1365:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1357:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1357:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "_initialPrice",
												"nameLocation": "1386:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1378:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "_weeklyIncreaseRate",
												"nameLocation": "1409:19:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1401:27:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "_regularSalePrice",
												"nameLocation": "1438:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1430:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1430:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "_stakingRewardRate",
												"nameLocation": "1465:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "1457:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1334:150:6"
									},
									"returnParameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1561:0:6"
									},
									"scope": 1523,
									"src": "1323:529:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "1922:426:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1941:22:6",
															"subExpression": {
																"baseExpression": {
																	"id": 1085,
																	"name": "whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "1942:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1088,
																"indexExpression": {
																	"expression": {
																		"id": 1086,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1952:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1956:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1952:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1942:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c72656164792077686974656c6973746564",
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1965:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																"typeString": "literal_string \"Already whitelisted\""
															},
															"value": "Already whitelisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
																"typeString": "literal_string \"Already whitelisted\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1933:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1933:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "1933:54:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1094,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2006:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2010:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2006:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1096,
																"name": "referral",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "2020:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420726566657220796f757273656c66",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															},
															"value": "Cannot refer yourself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_218413e24d7817fa46f780a765a55d181a2663121ab3737af6e2eca3f387ed51",
																"typeString": "literal_string \"Cannot refer yourself\""
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "1998:56:6"
											},
											{
												"expression": {
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1101,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "2075:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1104,
														"indexExpression": {
															"expression": {
																"id": 1102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2085:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2089:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2085:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2075:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2099:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2075:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "2075:28:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1108,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "2128:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2148:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2140:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1109,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2140:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2140:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2128:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"baseExpression": {
															"id": 1114,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "2154:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1116,
														"indexExpression": {
															"id": 1115,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "2164:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2154:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2128:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1132,
												"nodeType": "IfStatement",
												"src": "2124:154:6",
												"trueBody": {
													"id": 1131,
													"nodeType": "Block",
													"src": "2175:103:6",
													"statements": [
														{
															"expression": {
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1118,
																		"name": "referrals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 975,
																		"src": "2190:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																			"typeString": "mapping(address => address)"
																		}
																	},
																	"id": 1121,
																	"indexExpression": {
																		"expression": {
																			"id": 1119,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2200:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2204:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2200:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2190:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1122,
																	"name": "referral",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "2214:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2190:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1124,
															"nodeType": "ExpressionStatement",
															"src": "2190:32:6"
														},
														{
															"expression": {
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1125,
																		"name": "referralCounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "2237:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1127,
																	"indexExpression": {
																		"id": 1126,
																		"name": "referral",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "2252:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2237:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2265:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2237:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "2237:29:6"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1134,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2319:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2323:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2319:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1136,
															"name": "referral",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "2331:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1133,
														"name": "UserWhitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "2303:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1138,
												"nodeType": "EmitStatement",
												"src": "2298:42:6"
											}
										]
									},
									"functionSelector": "a09c4cf4",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signUpForWhitelist",
									"nameLocation": "1876:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "1903:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1895:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1894:18:6"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:0:6"
									},
									"scope": 1523,
									"src": "1867:481:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2441:75:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1147,
																"name": "referralCounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 979,
																"src": "2459:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1149,
															"indexExpression": {
																"id": 1148,
																"name": "referrer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "2474:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2459:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "353030",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2486:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														"src": "2459:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2492:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1153,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "2498:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2498:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "2492:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2459:49:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1146,
												"id": 1157,
												"nodeType": "Return",
												"src": "2452:56:6"
											}
										]
									},
									"functionSelector": "8265324d",
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReferralReward",
									"nameLocation": "2369:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "2401:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2393:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:18:6"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2432:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2431:9:6"
									},
									"scope": 1523,
									"src": "2360:156:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "2561:377:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1163,
																"name": "presaleIsActive",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "2584:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2601:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2584:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65206e6f74207374617274656420796574",
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2606:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f",
																"typeString": "literal_string \"Presale not started yet\""
															},
															"value": "Presale not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a69daac55d8db000fd874f5f76fa44daafef21c30d5fd1b5a03aadff5cdfc62f",
																"typeString": "literal_string \"Presale not started yet\""
															}
														],
														"id": 1162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2576:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2576:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "2576:56:6"
											},
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "2655:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "2647:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1175,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1172,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2694:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2698:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2694:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1171,
														"name": "calculateReferralReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "2670:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2670:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2647:58:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1177,
																"name": "rewardAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "2728:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2743:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2728:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320617661696c61626c65",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2746:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															},
															"value": "No rewards available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															}
														],
														"id": 1176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2720:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2720:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "2720:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1184,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2790:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2794:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2790:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "2802:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1183,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2784:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2784:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "2784:31:6"
											},
											{
												"expression": {
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1189,
															"name": "referralCounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "2830:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1192,
														"indexExpression": {
															"expression": {
																"id": 1190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2845:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2849:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2845:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2830:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2859:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2830:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "2830:30:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1197,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2901:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2905:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2901:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1199,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "2913:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1196,
														"name": "ReferralRewardMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 991,
														"src": "2880:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2880:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "EmitStatement",
												"src": "2875:51:6"
											}
										]
									},
									"functionSelector": "7c613b2f",
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintReferralReward",
									"nameLocation": "2531:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2549:2:6"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2561:0:6"
									},
									"scope": 1523,
									"src": "2522:416:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1239,
										"nodeType": "Block",
										"src": "3148:353:6",
										"statements": [
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1213,
														"name": "preSaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "3247:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1214,
														"name": "_startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "3266:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3247:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "3247:29:6"
											},
											{
												"expression": {
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1217,
														"name": "preSaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "3287:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1218,
															"name": "preSaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3304:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1219,
																		"name": "_durationWeeks",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "3324:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3341:7:6",
																		"subdenomination": "weeks",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_604800_by_1",
																			"typeString": "int_const 604800"
																		},
																		"value": "1"
																	},
																	"src": "3324:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1222,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3323:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3304:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3287:62:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "3287:62:6"
											},
											{
												"expression": {
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1226,
														"name": "preSaleWeeksInWeeks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3360:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1227,
														"name": "_durationWeeks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "3382:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3360:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "3360:36:6"
											},
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1230,
														"name": "presaleIsActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "3407:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3425:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3407:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "3407:22:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1235,
															"name": "preSaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "3460:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1236,
															"name": "preSaleEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "3478:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1234,
														"name": "PreSaleStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "3445:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3445:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "EmitStatement",
												"src": "3440:53:6"
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "2946:111:6",
										"text": " @notice Start the pre-sale\n @param _durationWeeks Duration of the pre-sale in weeks"
									},
									"functionSelector": "f9a81af7",
									"id": 1240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1210,
												"name": "onlyOwner",
												"nameLocations": [
													"3138:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3138:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3138:9:6"
										}
									],
									"name": "startPreSale",
									"nameLocation": "3072:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_startTime",
												"nameLocation": "3093:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "3085:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3085:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "_durationWeeks",
												"nameLocation": "3113:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "3105:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3084:44:6"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3148:0:6"
									},
									"scope": 1523,
									"src": "3063:438:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "3566:431:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1246,
																"name": "preSaleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "3585:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1247,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3604:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3610:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3604:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3585:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072652d73616c65206e6f74207374617274656420796574",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3620:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82",
																"typeString": "literal_string \"Pre-sale not started yet\""
															},
															"value": "Pre-sale not started yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd96d2e26503bb0de5edb62cf76d4698ffe5bd7b7a7f7da5027cddfc25c5ed82",
																"typeString": "literal_string \"Pre-sale not started yet\""
															}
														],
														"id": 1245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3577:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3577:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "3577:70:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1253,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3663:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3669:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3663:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1255,
														"name": "preSaleEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "3681:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3663:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1260,
												"nodeType": "IfStatement",
												"src": "3658:89:6",
												"trueBody": {
													"id": 1259,
													"nodeType": "Block",
													"src": "3697:50:6",
													"statements": [
														{
															"expression": {
																"id": 1257,
																"name": "regularSalePrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "3719:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1244,
															"id": 1258,
															"nodeType": "Return",
															"src": "3712:23:6"
														}
													]
												}
											},
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "weeksElapsed",
														"nameLocation": "3775:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1287,
														"src": "3767:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3767:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1263,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3791:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3797:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3791:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1265,
																	"name": "preSaleStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 945,
																	"src": "3809:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3791:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1267,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3790:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3829:7:6",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "1"
													},
													"src": "3790:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3767:69:6"
											},
											{
												"assignments": [
													1272
												],
												"declarations": [
													{
														"constant": false,
														"id": 1272,
														"mutability": "mutable",
														"name": "priceIncrease",
														"nameLocation": "3855:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1287,
														"src": "3847:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1271,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3847:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1275,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1273,
																				"name": "regularSalePrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 951,
																				"src": "3873:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1274,
																				"name": "initialPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 949,
																				"src": "3892:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3873:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1276,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3872:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1277,
																	"name": "weeksElapsed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "3908:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3872:48:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1279,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3871:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1280,
														"name": "preSaleWeeksInWeeks",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3924:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3871:72:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:96:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1283,
														"name": "initialPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "3961:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1284,
														"name": "priceIncrease",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3976:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3961:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1286,
												"nodeType": "Return",
												"src": "3954:35:6"
											}
										]
									},
									"functionSelector": "d348b409",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePrice",
									"nameLocation": "3519:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:2:6"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "3557:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3557:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3556:9:6"
									},
									"scope": 1523,
									"src": "3510:487:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "4112:567:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1293,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4127:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4133:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4127:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1295,
																"name": "preSaleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "4146:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4127:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53616c65206e6f74206163746976652e",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4164:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd",
																"typeString": "literal_string \"Sale not active.\""
															},
															"value": "Sale not active."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_320ca9ab72a35519bbc8b5873959d0db86e8bef67b21390649d1ea4fc97479fd",
																"typeString": "literal_string \"Sale not active.\""
															}
														],
														"id": 1292,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4119:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "4119:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1301,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4198:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4202:5:6",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4198:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4210:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4198:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742073656e642045544820746f2062757920746f6b656e732e",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4213:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76",
																"typeString": "literal_string \"Must send ETH to buy tokens.\""
															},
															"value": "Must send ETH to buy tokens."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23d60e945fa370db8474797fa42a3cd81862ed96e8b023a0ea874ae96f92fc76",
																"typeString": "literal_string \"Must send ETH to buy tokens.\""
															}
														],
														"id": 1300,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4190:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4190:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "4190:54:6"
											},
											{
												"assignments": [
													1309
												],
												"declarations": [
													{
														"constant": false,
														"id": 1309,
														"mutability": "mutable",
														"name": "currentPrice",
														"nameLocation": "4261:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1365,
														"src": "4253:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1308,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4253:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1310,
														"name": "calculatePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "4276:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4253:39:6"
											},
											{
												"assignments": [
													1314
												],
												"declarations": [
													{
														"constant": false,
														"id": 1314,
														"mutability": "mutable",
														"name": "tokensToBuy",
														"nameLocation": "4345:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1365,
														"src": "4337:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4337:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1328,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1315,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4360:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1316,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4364:5:6",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "4360:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4372:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1320,
																					"name": "decimals",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 363,
																					"src": "4386:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																						"typeString": "function () view returns (uint8)"
																					}
																				},
																				"id": 1321,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4386:10:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			],
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4378:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1318,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "4378:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4378:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4372:25:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4360:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1325,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4359:39:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1326,
														"name": "currentPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "4401:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4359:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4337:76:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1333,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4446:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																					"typeString": "contract TokenPreSale"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																					"typeString": "contract TokenPreSale"
																				}
																			],
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4438:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1331,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4438:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4438:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1330,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "4428:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1335,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4428:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1336,
																"name": "tokensToBuy",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "4456:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4428:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320617661696c61626c652e",
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4469:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																"typeString": "literal_string \"Not enough tokens available.\""
															},
															"value": "Not enough tokens available."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c5fc59fb887abaa73495a2571327740b47269757d965c80185503f648aa6d7",
																"typeString": "literal_string \"Not enough tokens available.\""
															}
														],
														"id": 1329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4420:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1340,
												"nodeType": "ExpressionStatement",
												"src": "4420:80:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1344,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4527:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4519:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1342,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4519:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4519:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1346,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4534:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4538:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4534:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "4546:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1341,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4509:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4509:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "4509:49:6"
											},
											{
												"expression": {
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1351,
														"name": "tokensSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "4565:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1352,
														"name": "tokensToBuy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "4579:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4565:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "4565:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1358,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4621:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4613:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1356,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4613:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4613:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1360,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4628:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4632:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4628:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1362,
															"name": "tokensToBuy",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "4640:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1355,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "4604:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4604:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1364,
												"nodeType": "EmitStatement",
												"src": "4599:53:6"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "4005:67:6",
										"text": " @notice Buy tokens during the presale or regular sale."
									},
									"functionSelector": "d0febe4c",
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "4083:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4092:2:6"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4112:0:6"
									},
									"scope": 1523,
									"src": "4074:605:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "4735:358:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1372,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "4754:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4763:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4754:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f2e",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4766:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
																"typeString": "literal_string \"Amount must be greater than zero.\""
															},
															"value": "Amount must be greater than zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_589780fdaac943d73bde148f4b0fd3e83692efc7fc17ad3217c393187982f13a",
																"typeString": "literal_string \"Amount must be greater than zero.\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4746:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:56:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "4746:56:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1380,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4831:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4835:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4831:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1379,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "4821:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:21:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1383,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "4846:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4821:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e63652e",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4854:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															},
															"value": "Insufficient balance."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7572e40391d07d4b91d51e72cb8caa5f33f56b2b616c219ac11e2b95b18edce9",
																"typeString": "literal_string \"Insufficient balance.\""
															}
														],
														"id": 1378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4813:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4813:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "4813:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1389,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4901:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4905:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4901:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1393,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4921:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4913:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1391,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4913:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4913:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1395,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "4928:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1388,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4891:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4891:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "4891:44:6"
											},
											{
												"expression": {
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1398,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "4946:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1401,
														"indexExpression": {
															"expression": {
																"id": 1399,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4959:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4963:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4959:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4946:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1402,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "4974:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4946:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "4946:34:6"
											},
											{
												"expression": {
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1405,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "4991:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1408,
														"indexExpression": {
															"expression": {
																"id": 1406,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5008:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5012:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5008:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4991:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1409,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5028:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5022:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4991:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "4991:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1414,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5066:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5070:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5066:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1416,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "5078:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1413,
														"name": "TokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "5053:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5053:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "EmitStatement",
												"src": "5048:37:6"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeTokens",
									"nameLocation": "4698:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4718:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "4710:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4710:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4709:16:6"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4735:0:6"
									},
									"scope": 1523,
									"src": "4689:404:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "5135:497:6",
										"statements": [
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "5154:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1490,
														"src": "5146:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1423,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5146:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1429,
												"initialValue": {
													"baseExpression": {
														"id": 1425,
														"name": "stakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "5163:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1428,
													"indexExpression": {
														"expression": {
															"id": 1426,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5176:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5180:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5176:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5163:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5146:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "5206:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5215:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5206:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73207374616b65642e",
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5218:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
																"typeString": "literal_string \"No tokens staked.\""
															},
															"value": "No tokens staked."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_365536250f99788f936d49966e981df01b0e105731e868ee8d76041fac1210b4",
																"typeString": "literal_string \"No tokens staked.\""
															}
														],
														"id": 1430,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5198:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5198:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "5198:40:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1438,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5257:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5263:9:6",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5257:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1440,
																		"name": "stakingTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "5276:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1443,
																	"indexExpression": {
																		"expression": {
																			"id": 1441,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5293:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5297:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5293:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5276:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5307:7:6",
																	"subdenomination": "weeks",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2419200_by_1",
																		"typeString": "int_const 2419200"
																	},
																	"value": "4"
																},
																"src": "5276:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5257:57:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e7374616b65206f6e6c792061667465722034207765656b732e",
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5316:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254",
																"typeString": "literal_string \"Unstake only after 4 weeks.\""
															},
															"value": "Unstake only after 4 weeks."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_88a06aeb1ddf079af0f09813e3c0a21d0be789b97ce895e6b2fef895a65d7254",
																"typeString": "literal_string \"Unstake only after 4 weeks.\""
															}
														],
														"id": 1437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5249:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5249:97:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "5249:97:6"
											},
											{
												"assignments": [
													1451
												],
												"declarations": [
													{
														"constant": false,
														"id": 1451,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5375:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1490,
														"src": "5367:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1450,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5367:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1456,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1453,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5407:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5411:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5407:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1452,
														"name": "calculateStakingReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "5384:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5367:51:6"
											},
											{
												"expression": {
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1457,
															"name": "stakedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5429:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1460,
														"indexExpression": {
															"expression": {
																"id": 1458,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5442:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5446:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5442:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5429:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5456:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5429:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "5429:28:6"
											},
											{
												"expression": {
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1464,
															"name": "stakingTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "5468:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1467,
														"indexExpression": {
															"expression": {
																"id": 1465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5485:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5489:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5485:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5468:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5499:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5468:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "5468:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1474,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5531:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenPreSale_$1523",
																		"typeString": "contract TokenPreSale"
																	}
																],
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5523:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1472,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5523:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5523:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5538:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5542:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5538:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1478,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "5550:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1479,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "5559:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5550:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1471,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5513:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5513:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "ExpressionStatement",
												"src": "5513:53:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1484,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5597:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5601:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5597:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1486,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "5609:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1487,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1451,
															"src": "5617:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1483,
														"name": "TokensUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1005,
														"src": "5582:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5582:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "EmitStatement",
												"src": "5577:47:6"
											}
										]
									},
									"functionSelector": "a5ce413b",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstakeTokens",
									"nameLocation": "5110:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5123:2:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5135:0:6"
									},
									"scope": 1523,
									"src": "5101:531:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1521,
										"nodeType": "Block",
										"src": "5716:171:6",
										"statements": [
											{
												"assignments": [
													1499
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "weeksStaked",
														"nameLocation": "5735:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1521,
														"src": "5727:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1498,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5727:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1509,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1500,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5750:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5756:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5750:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1502,
																		"name": "stakingTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "5768:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1504,
																	"indexExpression": {
																		"id": 1503,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "5785:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5768:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5750:40:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1506,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5749:42:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5794:7:6",
														"subdenomination": "weeks",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_604800_by_1",
															"typeString": "int_const 604800"
														},
														"value": "1"
													},
													"src": "5749:52:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5727:74:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 1510,
																			"name": "stakedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 963,
																			"src": "5820:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1512,
																		"indexExpression": {
																			"id": 1511,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1493,
																			"src": "5833:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5820:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1513,
																		"name": "stakingRewardRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "5841:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5820:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1515,
																	"name": "weeksStaked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1499,
																	"src": "5861:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5820:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1517,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5819:54:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5876:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "5819:60:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1497,
												"id": 1520,
												"nodeType": "Return",
												"src": "5812:67:6"
											}
										]
									},
									"functionSelector": "0d505541",
									"id": 1522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingReward",
									"nameLocation": "5649:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5680:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "5672:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5671:14:6"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1522,
												"src": "5707:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5707:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5706:9:6"
									},
									"scope": 1523,
									"src": "5640:247:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1524,
							"src": "174:5720:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								985,
								991,
								997,
								1005,
								1013,
								1019,
								1023
							]
						}
					],
					"src": "33:5863:6"
				},
				"id": 6
			}
		}
	}
}